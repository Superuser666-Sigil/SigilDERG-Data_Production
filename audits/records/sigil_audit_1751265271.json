[
  {
    "execution_id": "exec-056ecc5c-49d7342c-1751265229",
    "timestamp": "2025-06-30T06:33:49.421345+00:00",
    "sacred_chain": {
      "input_data": "wgpu",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'wgpu' -> 'wgpu'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "wgpu",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/wgpu",
            "title": "wgpu v25.0.2",
            "content": {
              "raw_markdown": "#  wgpu v25.0.2\nCross-platform, safe, pure-rust graphics API \n  * [ #graphics ](https://crates.io/keywords/graphics)\n\n\n  * [ Readme ](https://crates.io/crates/wgpu)\n  * [ 54 Versions ](https://crates.io/crates/wgpu/versions)\n  * [ Dependencies ](https://crates.io/crates/wgpu/dependencies)\n  * [ Dependents ](https://crates.io/crates/wgpu/reverse_dependencies)\n\n\n## Metadata\nabout 1 month ago \nv1.84.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n185 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add wgpu\nOr add the following line to your Cargo.toml:\nwgpu = \"25.0.2\"\n## Homepage\n[ wgpu.rs ](https://wgpu.rs/)\n## Repository\n[ github.com/gfx-rs/wgpu ](https://github.com/gfx-rs/wgpu)\n## Owners\n[ Report crate ](https://crates.io/support?crate=wgpu&inquire=crate-violation)\n### Stats Overview\n9,311,596 Downloads all time\n54 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  wgpu v25.0.2\nCross-platform, safe, pure-rust graphics API \n  *  #graphics \u27e81\u27e9\n\n\n  *  Readme \u27e82\u27e9\n  *  54 Versions \u27e83\u27e9\n  *  Dependencies \u27e84\u27e9\n  *  Dependents \u27e85\u27e9\n\n\n## Metadata\nabout 1 month ago \nv1.84.0 \n MIT \u27e86\u27e9 OR  Apache-2.0 \u27e87\u27e9\n185 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add wgpu\nOr add the following line to your Cargo.toml:\nwgpu = \"25.0.2\"\n## Homepage\n wgpu.rs \u27e88\u27e9\n## Repository\n github.com/gfx-rs/wgpu \u27e89\u27e9\n## Owners\n Report crate \u27e810\u27e9\n### Stats Overview\n9,311,596 Downloads all time\n54 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/graphics:  #graphics \n\u27e82\u27e9 https://crates.io/crates/wgpu:  Readme \n\u27e83\u27e9 https://crates.io/crates/wgpu/versions:  54 Versions \n\u27e84\u27e9 https://crates.io/crates/wgpu/dependencies:  Dependencies \n\u27e85\u27e9 https://crates.io/crates/wgpu/reverse_dependencies:  Dependents \n\u27e86\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e87\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e88\u27e9 https://wgpu.rs/:  wgpu.rs \n\u27e89\u27e9 https://github.com/gfx-rs/wgpu:  github.com/gfx-rs/wgpu \n\u27e810\u27e9 https://crates.io/support?crate=wgpu&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1045,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119019.0108992"
          },
          "docs_rs": {
            "url": "https://docs.rs/wgpu",
            "title": "Crate wgpuCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\n[Settings](https://docs.rs/wgpu/latest/settings.html)\n[Help](https://docs.rs/wgpu/latest/help.html)\nSummary[Source](https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126)\nExpand description\nA cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).\nTo start using the API, create an [`Instance`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\").\n### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-flags)Feature flags\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#backends)Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#conditional-backends)Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use with[ANGLE](https://github.com/google/angle).\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with [MoltenVK](https://github.com/KhronosGroup/MoltenVK).\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#shading-language-support)Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization)Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#external-libraries)External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from [Microsoft\u2019s GitHub](https://github.com/Microsoft/DirectXShaderCompiler)). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#other)Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-aliases)Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports[\u00a7](https://docs.rs/wgpu/latest/wgpu/#reexports)\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules[\u00a7](https://docs.rs/wgpu/latest/wgpu/#modules)\n\n[custom](https://docs.rs/wgpu/latest/wgpu/custom/index.html \"mod wgpu::custom\")`custom`\n    Provides wrappers custom backend implementations\n\n[util](https://docs.rs/wgpu/latest/wgpu/util/index.html \"mod wgpu::util\")\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros[\u00a7](https://docs.rs/wgpu/latest/wgpu/#macros)\n\n[include_spirv](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html \"macro wgpu::include_spirv\")`spirv`\n    Macro to load a SPIR-V module statically.\n\n[include_spirv_raw](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html \"macro wgpu::include_spirv_raw\")\n    Macro to load raw SPIR-V data statically, for use with [`Features::SPIRV_SHADER_PASSTHROUGH`](https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH \"associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH\").\n\n[include_wgsl](https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html \"macro wgpu::include_wgsl\")\n    Load WGSL source code from a file at compile time.\n\n[vertex_attr_array](https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html \"macro wgpu::vertex_attr_array\")\n    Macro to produce an array of [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\").\n## Structs[\u00a7](https://docs.rs/wgpu/latest/wgpu/#structs)\n\n[Adapter](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\")\n    Handle to a physical graphics and/or compute device.\n\n[AdapterInfo](https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html \"struct wgpu::AdapterInfo\")\n    Information about an adapter.\n\n[AllocatorReport](https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html \"struct wgpu::AllocatorReport\")\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\n[BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html \"struct wgpu::BackendOptions\")\n    Options that are passed to a given backend.\n\n[Backends](https://docs.rs/wgpu/latest/wgpu/struct.Backends.html \"struct wgpu::Backends\")\n    Represents the backends that wgpu will use.\n\n[BindGroup](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\")\n    Handle to a binding group.\n\n[BindGroupDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\")\n    Describes a group of bindings and the resources to be bound.\n\n[BindGroupEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html \"struct wgpu::BindGroupEntry\")\n    An element of a [`BindGroupDescriptor`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\"), consisting of a bindable resource and the slot to bind it to.\n\n[BindGroupLayout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\")\n    Handle to a binding group layout.\n\n[BindGroupLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html \"struct wgpu::BindGroupLayoutDescriptor\")\n    Describes a [`BindGroupLayout`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\").\n\n[BindGroupLayoutEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\")\n    Describes a single binding inside a bind group.\n\n[Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\")\n    Bottom Level Acceleration Structure (BLAS).\n\n[BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\")\n    Builds the given sets of geometry into the given [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\")\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\n[BlendComponent](https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html \"struct wgpu::BlendComponent\")\n    Describes a blend component of a [`BlendState`](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\").\n\n[BlendState](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\")\n    Describe the blend state of a render pipeline, within [`ColorTargetState`](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\").\n\n[Buffer](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\")\n    Handle to a GPU-accessible buffer.\n\n[BufferAsyncError](https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html \"struct wgpu::BufferAsyncError\")\n    Error occurred when trying to async map a buffer.\n\n[BufferBinding](https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html \"struct wgpu::BufferBinding\")\n    Describes the segment of a buffer to bind.\n\n[BufferSlice](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html \"struct wgpu::BufferSlice\")\n    A slice of a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\"), to be mapped, used for vertex or index data, or the like.\n\n[BufferTransition](https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html \"struct wgpu::BufferTransition\")\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\n[BufferUsages](https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html \"struct wgpu::BufferUsages\")\n    Different ways that you can use a buffer.\n\n[BufferUses](https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html \"struct wgpu::BufferUses\")\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[BufferView](https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html \"struct wgpu::BufferView\")\n    A read-only view of a mapped buffer\u2019s bytes.\n\n[BufferViewMut](https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html \"struct wgpu::BufferViewMut\")\n    A write-only view of a mapped buffer\u2019s bytes.\n\n[Color](https://docs.rs/wgpu/latest/wgpu/struct.Color.html \"struct wgpu::Color\")\n    RGBA double precision color.\n\n[ColorTargetState](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\")\n    Describes the color state of a render pipeline.\n\n[ColorWrites](https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html \"struct wgpu::ColorWrites\")\n    Color write mask. Disabled color channels will not be written to.\n\n[CommandBuffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html \"struct wgpu::CommandBuffer\")\n    Handle to a command buffer on the GPU.\n\n[CommandBufferDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html \"struct wgpu::CommandBufferDescriptor\")\n    Describes a [`CommandBuffer`](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html).\n\n[CommandEncoder](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\")\n    Encodes a series of GPU operations.\n\n[CompilationInfo](https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html \"struct wgpu::CompilationInfo\")\n    Compilation information for a shader module.\n\n[CompilationMessage](https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html \"struct wgpu::CompilationMessage\")\n    A single message from the shader compilation process.\n\n[ComputePass](https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html \"struct wgpu::ComputePass\")\n    In-progress recording of a compute pass.\n\n[ComputePassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html \"struct wgpu::ComputePassDescriptor\")\n    Describes the attachments of a compute pass.\n\n[ComputePassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html \"struct wgpu::ComputePassTimestampWrites\")\n    Describes the timestamp writes of a compute pass.\n\n[ComputePipeline](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")\n    Handle to a compute pipeline.\n\n[ComputePipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html \"struct wgpu::ComputePipelineDescriptor\")\n    Describes a compute pipeline.\n\n[ContextBlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html \"struct wgpu::ContextBlasBuildEntry\")\n    Context version see [BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\").\n\n[ContextBlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html \"struct wgpu::ContextBlasTriangleGeometry\")\n    Context version of [BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\").\n\n[CopyExternalImageDestInfo](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\")\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\n[CoreCounters](https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html \"struct wgpu::CoreCounters\")\n    `wgpu-core`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[CreateSurfaceError](https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html \"struct wgpu::CreateSurfaceError\")\n    [`Instance::create_surface()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface \"method wgpu::Instance::create_surface\") or a related function failed.\n\n[DepthBiasState](https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html \"struct wgpu::DepthBiasState\")\n    Describes the biasing setting for the depth target.\n\n[DepthStencilState](https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html \"struct wgpu::DepthStencilState\")\n    Describes the depth/stencil state in a render pipeline.\n\n[Device](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\")\n    Open connection to a graphics and/or compute device.\n\n[DownlevelCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html \"struct wgpu::DownlevelCapabilities\")\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\n[DownlevelFlags](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html \"struct wgpu::DownlevelFlags\")\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\n[DownlevelLimits](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html \"struct wgpu::DownlevelLimits\")\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\n[Dx12BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html \"struct wgpu::Dx12BackendOptions\")\n    Configuration for the DX12 backend.\n\n[Extent3d](https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html \"struct wgpu::Extent3d\")\n    Extent of a texture related operation.\n\n[Features](https://docs.rs/wgpu/latest/wgpu/struct.Features.html \"struct wgpu::Features\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html \"struct wgpu::FeaturesWGPU\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWebGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html \"struct wgpu::FeaturesWebGPU\")\n    Features that are not guaranteed to be supported.\n\n[FragmentState](https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html \"struct wgpu::FragmentState\")\n    Describes the fragment processing in a render pipeline.\n\n[GlBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html \"struct wgpu::GlBackendOptions\")\n    Configuration for the OpenGL/OpenGLES backend.\n\n[HalCounters](https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html \"struct wgpu::HalCounters\")\n    `wgpu-hal`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[ImageSubresourceRange](https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html \"struct wgpu::ImageSubresourceRange\")\n    Subresource range within an image\n\n[Instance](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\")\n    Context for all other wgpu objects. Instance of wgpu.\n\n[InstanceDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html \"struct wgpu::InstanceDescriptor\")\n    Options for creating an instance.\n\n[InstanceFlags](https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html \"struct wgpu::InstanceFlags\")\n    Instance debugging flags.\n\n[InternalCounters](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\")\n    All internal counters, exposed for debugging purposes.\n\n[Limits](https://docs.rs/wgpu/latest/wgpu/struct.Limits.html \"struct wgpu::Limits\")\n    Represents the sets of limits an adapter/device supports.\n\n[MultisampleState](https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html \"struct wgpu::MultisampleState\")\n    Describes the multi-sampling state of a render pipeline.\n\n[NoopBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html \"struct wgpu::NoopBackendOptions\")\n    Configuration for the noop backend.\n\n[Operations](https://docs.rs/wgpu/latest/wgpu/struct.Operations.html \"struct wgpu::Operations\")\n    Pair of load and store operations for an attachment aspect.\n\n[Origin2d](https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html \"struct wgpu::Origin2d\")\n    Origin of a copy from a 2D image.\n\n[Origin3d](https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html \"struct wgpu::Origin3d\")\n    Origin of a copy to/from a texture.\n\n[PipelineCache](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html \"struct wgpu::PipelineCache\")\n    Handle to a pipeline cache, which is used to accelerate creating [`RenderPipeline`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")s and [`ComputePipeline`](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")s in subsequent executions\n\n[PipelineCacheDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html \"struct wgpu::PipelineCacheDescriptor\")\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\n[PipelineCompilationOptions](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html \"struct wgpu::PipelineCompilationOptions\")\n    Advanced options for use when a pipeline is compiled\n\n[PipelineLayout](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\")\n    Handle to a pipeline layout.\n\n[PipelineLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html \"struct wgpu::PipelineLayoutDescriptor\")\n    Describes a [`PipelineLayout`](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\").\n\n[PipelineStatisticsTypes](https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html \"struct wgpu::PipelineStatisticsTypes\")\n    Flags for which pipeline data should be recorded in a query.\n\n[PresentationTimestamp](https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html \"struct wgpu::PresentationTimestamp\")\n    Nanosecond timestamp used by the presentation engine.\n\n[PrimitiveState](https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html \"struct wgpu::PrimitiveState\")\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\n[PushConstantRange](https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html \"struct wgpu::PushConstantRange\")\n    A range of push constant memory to pass to a shader stage.\n\n[QuerySet](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\")\n    Handle to a query set.\n\n[Queue](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html \"struct wgpu::Queue\")\n    Handle to a command queue on a device.\n\n[QueueWriteBufferView](https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html \"struct wgpu::QueueWriteBufferView\")\n    A write-only view into a staging buffer.\n\n[RenderBundle](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\")\n    Pre-prepared reusable bundle of GPU operations.\n\n[RenderBundleDepthStencil](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html \"struct wgpu::RenderBundleDepthStencil\")\n    Describes the depth/stencil attachment for render bundles.\n\n[RenderBundleEncoder](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\")\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\n[RenderBundleEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html \"struct wgpu::RenderBundleEncoderDescriptor\")\n    Describes a [`RenderBundleEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\").\n\n[RenderPass](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\")\n    In-progress recording of a render pass: a list of render commands in a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[RenderPassColorAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html \"struct wgpu::RenderPassColorAttachment\")\n    Describes a color attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDepthStencilAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html \"struct wgpu::RenderPassDepthStencilAttachment\")\n    Describes a depth/stencil attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html \"struct wgpu::RenderPassDescriptor\")\n    Describes the attachments of a render pass.\n\n[RenderPassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html \"struct wgpu::RenderPassTimestampWrites\")\n    Describes the timestamp writes of a render pass.\n\n[RenderPipeline](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")\n    Handle to a rendering (graphics) pipeline.\n\n[RenderPipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html \"struct wgpu::RenderPipelineDescriptor\")\n    Describes a render (graphics) pipeline.\n\n[RequestAdapterOptionsBase](https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html \"struct wgpu::RequestAdapterOptionsBase\")\n    Options for requesting adapter.\n\n[RequestDeviceError](https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html \"struct wgpu::RequestDeviceError\")\n    Requesting a device from an [`Adapter`](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\") failed.\n\n[Sampler](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\")\n    Handle to a sampler.\n\n[ShaderModule](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html \"struct wgpu::ShaderModule\")\n    Handle to a compiled shader module.\n\n[ShaderModuleDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html \"struct wgpu::ShaderModuleDescriptor\")\n    Descriptor for use with [`Device::create_shader_module`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module \"method wgpu::Device::create_shader_module\").\n\n[ShaderRuntimeChecks](https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html \"struct wgpu::ShaderRuntimeChecks\")\n    Describes how shader bound checks should be performed.\n\n[ShaderStages](https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html \"struct wgpu::ShaderStages\")\n    Describes the shader stages that a binding will be visible from.\n\n[SourceLocation](https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html \"struct wgpu::SourceLocation\")\n    A human-readable representation for a span, tailored for text source.\n\n[StencilFaceState](https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html \"struct wgpu::StencilFaceState\")\n    Describes stencil state in a render pipeline.\n\n[StencilState](https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html \"struct wgpu::StencilState\")\n    State of the stencil operation (fixed-pipeline stage).\n\n[SubmissionIndex](https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html \"struct wgpu::SubmissionIndex\")\n    Identifier for a particular call to [`Queue::submit`](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit \"method wgpu::Queue::submit\"). Can be used as part of an argument to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to block for a particular submission to finish.\n\n[Surface](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\")\n    Handle to a presentable surface.\n\n[SurfaceCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html \"struct wgpu::SurfaceCapabilities\")\n    Defines the capabilities of a given surface and adapter.\n\n[SurfaceTexture](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html \"struct wgpu::SurfaceTexture\")\n    Surface texture that can be rendered to. Result of a successful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[TexelCopyBufferInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\")\n    Layout of a texture in a buffer\u2019s memory.\n\n[TexelCopyTextureInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[Texture](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\")\n    Handle to a texture on the GPU.\n\n[TextureFormatFeatureFlags](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html \"struct wgpu::TextureFormatFeatureFlags\")\n    Feature flags for a texture format.\n\n[TextureFormatFeatures](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html \"struct wgpu::TextureFormatFeatures\")\n    Features supported by a given texture format\n\n[TextureTransition](https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html \"struct wgpu::TextureTransition\")\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\n[TextureUsages](https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html \"struct wgpu::TextureUsages\")\n    Different ways that you can use a texture.\n\n[TextureUses](https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html \"struct wgpu::TextureUses\")\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[TextureView](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\")\n    Handle to a texture view.\n\n[Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\")\n    Top Level Acceleration Structure (TLAS).\n\n[TlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\")\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See [`TlasPackage`](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\") for the safe version.\n\n[TlasInstance](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")\n    Safe instance for a [Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\").\n\n[TlasPackage](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\")\n    The safe version of [`TlasBuildEntry`](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\"), containing [`TlasInstance`](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")s instead of a raw buffer.\n\n[VertexAttribute](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\")\n    Vertex inputs (attributes) to shaders.\n\n[VertexBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html \"struct wgpu::VertexBufferLayout\")\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\n[VertexState](https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html \"struct wgpu::VertexState\")\n    Describes the vertex processing in a render pipeline.\n\n[WgslLanguageFeatures](https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html \"struct wgpu::WgslLanguageFeatures\")\n    WGSL language extensions.\n## Enums[\u00a7](https://docs.rs/wgpu/latest/wgpu/#enums)\n\n[AddressMode](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html \"enum wgpu::AddressMode\")\n    How edges should be handled in texture addressing.\n\n[AstcBlock](https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html \"enum wgpu::AstcBlock\")\n    ASTC block dimensions\n\n[AstcChannel](https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html \"enum wgpu::AstcChannel\")\n    ASTC RGBA channel\n\n[Backend](https://docs.rs/wgpu/latest/wgpu/enum.Backend.html \"enum wgpu::Backend\")\n    Backends supported by wgpu.\n\n[BindingResource](https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html \"enum wgpu::BindingResource\")\n    Resource to be bound by a [`BindGroup`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\") for use with a pipeline.\n\n[BindingType](https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html \"enum wgpu::BindingType\")\n    Type of a binding in a [bind group layout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\").\n\n[BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\")\n    Contains the sets of geometry that go into a [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlendFactor](https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html \"enum wgpu::BlendFactor\")\n    Alpha blend factor.\n\n[BlendOperation](https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html \"enum wgpu::BlendOperation\")\n    Alpha blend operation.\n\n[BufferBindingType](https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html \"enum wgpu::BufferBindingType\")\n    Specific type of a buffer binding.\n\n[CompareFunction](https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html \"enum wgpu::CompareFunction\")\n    Comparison function used for depth and stencil operations.\n\n[CompilationMessageType](https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html \"enum wgpu::CompilationMessageType\")\n    The type of a compilation message.\n\n[CompositeAlphaMode](https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html \"enum wgpu::CompositeAlphaMode\")\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\n[ContextBlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html \"enum wgpu::ContextBlasGeometries\")\n    Context version of [BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\").\n\n[DeviceLostReason](https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html \"enum wgpu::DeviceLostReason\")\n    Reason for \u201close the device\u201d.\n\n[DeviceType](https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html \"enum wgpu::DeviceType\")\n    Supported physical device types.\n\n[Dx12Compiler](https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html \"enum wgpu::Dx12Compiler\")\n    Selects which DX12 shader compiler to use.\n\n[DxcShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html \"enum wgpu::DxcShaderModel\")\n    DXC shader model.\n\n[Error](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")\n    Errors resulting from usage of GPU APIs.\n\n[ErrorFilter](https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html \"enum wgpu::ErrorFilter\")\n    Kinds of [`Error`](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")s a [`Device::push_error_scope()`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope \"method wgpu::Device::push_error_scope\") may be configured to catch.\n\n[Face](https://docs.rs/wgpu/latest/wgpu/enum.Face.html \"enum wgpu::Face\")\n    Face of a vertex.\n\n[FilterMode](https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html \"enum wgpu::FilterMode\")\n    Texel mixing mode when sampling between texels.\n\n[FrontFace](https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html \"enum wgpu::FrontFace\")\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\n[GlFenceBehavior](https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html \"enum wgpu::GlFenceBehavior\")\n    Dictate the behavior of fences in OpenGL.\n\n[Gles3MinorVersion](https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html \"enum wgpu::Gles3MinorVersion\")\n    Selects which OpenGL ES 3 minor version to request.\n\n[IndexFormat](https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html \"enum wgpu::IndexFormat\")\n    Format of indices used with pipeline.\n\n[LoadOp](https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html \"enum wgpu::LoadOp\")\n    Operation to perform to the output attachment at the start of a render pass.\n\n[MaintainBase](https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html \"enum wgpu::MaintainBase\")\n    Passed to `Device::poll` to control how and if it should block.\n\n[MapMode](https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html \"enum wgpu::MapMode\")\n    Type of buffer mapping.\n\n[MemoryHints](https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html \"enum wgpu::MemoryHints\")\n    Hints to the device about the memory allocation strategy.\n\n[PollError](https://docs.rs/wgpu/latest/wgpu/enum.PollError.html \"enum wgpu::PollError\")\n    Error states after a device poll\n\n[PollStatus](https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html \"enum wgpu::PollStatus\")\n    Status of device poll operation.\n\n[PolygonMode](https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html \"enum wgpu::PolygonMode\")\n    Type of drawing mode for polygons\n\n[PowerPreference](https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html \"enum wgpu::PowerPreference\")\n    Power Preference when choosing a physical adapter.\n\n[PredefinedColorSpace](https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html \"enum wgpu::PredefinedColorSpace\")\n    Color spaces supported on the web.\n\n[PresentMode](https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html \"enum wgpu::PresentMode\")\n    Timing and queueing with which frames are actually displayed to the user.\n\n[PrimitiveTopology](https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html \"enum wgpu::PrimitiveTopology\")\n    Primitive type the input mesh is composed of.\n\n[QueryType](https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html \"enum wgpu::QueryType\")\n    Type of query contained in a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html).\n\n[RequestAdapterError](https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html \"enum wgpu::RequestAdapterError\")\n    Error when [`Instance::request_adapter()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter) fails.\n\n[SamplerBindingType](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html \"enum wgpu::SamplerBindingType\")\n    Specific type of a sampler binding.\n\n[SamplerBorderColor](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html \"enum wgpu::SamplerBorderColor\")\n    Color variation to use when sampler addressing mode is [`AddressMode::ClampToBorder`](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder \"variant wgpu::AddressMode::ClampToBorder\")\n\n[ShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html \"enum wgpu::ShaderModel\")\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\n[ShaderSource](https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html \"enum wgpu::ShaderSource\")\n    Source of a shader module.\n\n[StencilOperation](https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html \"enum wgpu::StencilOperation\")\n    Operation to perform on the stencil value.\n\n[StorageTextureAccess](https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html \"enum wgpu::StorageTextureAccess\")\n    Specific type of a sample in a texture binding.\n\n[StoreOp](https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html \"enum wgpu::StoreOp\")\n    Operation to perform to the output attachment at the end of a render pass.\n\n[SurfaceError](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html \"enum wgpu::SurfaceError\")\n    Result of an unsuccessful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[SurfaceStatus](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html \"enum wgpu::SurfaceStatus\")\n    Status of the received surface image.\n\n[SurfaceTarget](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\n[SurfaceTargetUnsafe](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html \"enum wgpu::SurfaceTargetUnsafe\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\n[TextureAspect](https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html \"enum wgpu::TextureAspect\")\n    Selects a subset of the data a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html) holds.\n\n[TextureDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html \"enum wgpu::TextureDimension\")\n    Dimensionality of a texture.\n\n[TextureFormat](https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html \"enum wgpu::TextureFormat\")\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\n[TextureSampleType](https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html \"enum wgpu::TextureSampleType\")\n    Specific type of a sample in a texture binding.\n\n[TextureViewDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html \"enum wgpu::TextureViewDimension\")\n    Dimensions of a particular texture view.\n\n[Trace](https://docs.rs/wgpu/latest/wgpu/enum.Trace.html \"enum wgpu::Trace\")\n    Controls API call tracing and specifies where the trace is written.\n\n[VertexFormat](https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html \"enum wgpu::VertexFormat\")\n    Vertex Format for a [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\") (input).\n\n[VertexStepMode](https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html \"enum wgpu::VertexStepMode\")\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants[\u00a7](https://docs.rs/wgpu/latest/wgpu/#constants)\n\n[COPY_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html \"constant wgpu::COPY_BUFFER_ALIGNMENT\")\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\n[COPY_BYTES_PER_ROW_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html \"constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT\")\n    Buffer-to-texture copies must have [`bytes_per_row`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row \"field wgpu::TexelCopyBufferLayout::bytes_per_row\") aligned to this number.\n\n[MAP_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html \"constant wgpu::MAP_ALIGNMENT\")\n    Minimum alignment of buffer mappings.\n\n[PUSH_CONSTANT_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html \"constant wgpu::PUSH_CONSTANT_ALIGNMENT\")\n    Ranges of [writes to push constant storage](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants) must be at least this aligned.\n\n[QUERY_RESOLVE_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html \"constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT\")\n    An [offset into the query resolve buffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set) has to be aligned to this.\n\n[QUERY_SET_MAX_QUERIES](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html \"constant wgpu::QUERY_SET_MAX_QUERIES\")\n    Maximum queries in a [`QuerySetDescriptor`](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html \"struct wgpu_types::QuerySetDescriptor\").\n\n[QUERY_SIZE](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html \"constant wgpu::QUERY_SIZE\")\n    Size in bytes of a single piece of [query](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html) data.\n\n[VERTEX_STRIDE_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html \"constant wgpu::VERTEX_STRIDE_ALIGNMENT\")\n    [Vertex buffer strides](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride) have to be a multiple of this number.\n## Traits[\u00a7](https://docs.rs/wgpu/latest/wgpu/#traits)\n\n[UncapturedErrorHandler](https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html \"trait wgpu::UncapturedErrorHandler\")\n    Type for the callback of uncaptured error handler\n\n[WasmNotSend](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html \"trait wgpu::WasmNotSend\")\n\n\n[WasmNotSendSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html \"trait wgpu::WasmNotSendSync\")\n\n\n[WasmNotSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html \"trait wgpu::WasmNotSync\")\n\n\n[WindowHandle](https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html \"trait wgpu::WindowHandle\")\n    Super trait for window handles as used in [`SurfaceTarget`](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\").\n## Type Aliases[\u00a7](https://docs.rs/wgpu/latest/wgpu/#types)\n\n[AccelerationStructureFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html \"type wgpu::AccelerationStructureFlags\")\n    Flags for an acceleration structure.\n\n[AccelerationStructureGeometryFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html \"type wgpu::AccelerationStructureGeometryFlags\")\n    Flags for a geometry inside a bottom level acceleration structure.\n\n[AccelerationStructureUpdateMode](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html \"type wgpu::AccelerationStructureUpdateMode\")\n    Update mode for acceleration structure builds.\n\n[BlasGeometrySizeDescriptors](https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html \"type wgpu::BlasGeometrySizeDescriptors\")\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\n[BlasTriangleGeometrySizeDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html \"type wgpu::BlasTriangleGeometrySizeDescriptor\")\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\n[BufferAddress](https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html \"type wgpu::BufferAddress\")\n    Integral type used for [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html) offsets and sizes.\n\n[BufferDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html \"type wgpu::BufferDescriptor\")\n    Describes a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\").\n\n[BufferSize](https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html \"type wgpu::BufferSize\")\n    Integral type used for [`BufferSlice`](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html) sizes.\n\n[CommandEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html \"type wgpu::CommandEncoderDescriptor\")\n    Describes a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[CreateBlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html \"type wgpu::CreateBlasDescriptor\")\n    Descriptor to create bottom level acceleration structures.\n\n[CreateTlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html \"type wgpu::CreateTlasDescriptor\")\n    Descriptor to create top level acceleration structures.\n\n[DeviceDescriptor](https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html \"type wgpu::DeviceDescriptor\")\n    Describes a [`Device`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\").\n\n[DynamicOffset](https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html \"type wgpu::DynamicOffset\")\n    Integral type used for [dynamic bind group offsets](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group).\n\n[ErrorSource](https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html \"type wgpu::ErrorSource\")\n    Lower level source of the error.\n\n[ImageCopyBuffer](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html \"type wgpu::ImageCopyBuffer\")Deprecated\n    Old name for a [`TexelCopyBufferInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\").\n\n[ImageCopyTexture](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html \"type wgpu::ImageCopyTexture\")Deprecated\n    Old name for a [`TexelCopyTextureInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\").\n\n[ImageCopyTextureTagged](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html \"type wgpu::ImageCopyTextureTagged\")Deprecated\n    Old name for a [`CopyExternalImageDestInfo`](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\").\n\n[ImageDataLayout](https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html \"type wgpu::ImageDataLayout\")Deprecated\n    Old name for a [`TexelCopyBufferLayout`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\").\n\n[Label](https://docs.rs/wgpu/latest/wgpu/type.Label.html \"type wgpu::Label\")\n    Object debugging label.\n\n[PollType](https://docs.rs/wgpu/latest/wgpu/type.PollType.html \"type wgpu::PollType\")\n    Passed to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to control how and if it should block.\n\n[QuerySetDescriptor](https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html \"type wgpu::QuerySetDescriptor\")\n    Describes a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\").\n\n[RenderBundleDescriptor](https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html \"type wgpu::RenderBundleDescriptor\")\n    Describes a [`RenderBundle`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\").\n\n[RequestAdapterOptions](https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html \"type wgpu::RequestAdapterOptions\")\n    Additional information required when requesting an adapter.\n\n[SamplerDescriptor](https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html \"type wgpu::SamplerDescriptor\")\n    Describes a [`Sampler`](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\").\n\n[ShaderLocation](https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html \"type wgpu::ShaderLocation\")\n    Integral type used for binding locations in shaders.\n\n[ShaderModuleDescriptorMsl](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html \"type wgpu::ShaderModuleDescriptorMsl\")\n    Descriptor for a shader module given by Metal MSL source.\n\n[ShaderModuleDescriptorPassthrough](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html \"type wgpu::ShaderModuleDescriptorPassthrough\")\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with [`Device::create_shader_module_passthrough`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough \"method wgpu::Device::create_shader_module_passthrough\").\n\n[ShaderModuleDescriptorSpirV](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html \"type wgpu::ShaderModuleDescriptorSpirV\")\n    Descriptor for a shader module given by SPIR-V binary.\n\n[SurfaceConfiguration](https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html \"type wgpu::SurfaceConfiguration\")\n    Describes a [`Surface`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\").\n\n[TexelCopyBufferInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html \"type wgpu::TexelCopyBufferInfo\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyTextureInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html \"type wgpu::TexelCopyTextureInfo\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[TextureDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html \"type wgpu::TextureDescriptor\")\n    Describes a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\").\n\n[TextureViewDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html \"type wgpu::TextureViewDescriptor\")\n    Describes a [`TextureView`](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\").\n",
              "markdown_with_citations": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA cross-platform graphics and compute library based on WebGPU\u27e84\u27e9.\nTo start using the API, create an `Instance`\u27e85\u27e9.\n### \u00a7\u27e86\u27e9Feature flags\n#### \u00a7\u27e87\u27e9Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### \u00a7\u27e88\u27e9Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use withANGLE\u27e89\u27e9.\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with MoltenVK\u27e810\u27e9.\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### \u00a7\u27e811\u27e9Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### \u00a7\u27e812\u27e9Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### \u00a7\u27e813\u27e9External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from Microsoft\u2019s GitHub\u27e814\u27e9). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### \u00a7\u27e815\u27e9Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### \u00a7\u27e816\u27e9Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports\u00a7\u27e817\u27e9\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules\u00a7\u27e818\u27e9\n\ncustom\u27e819\u27e9`custom`\n    Provides wrappers custom backend implementations\n\nutil\u27e820\u27e9\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros\u00a7\u27e821\u27e9\n\ninclude_spirv\u27e822\u27e9`spirv`\n    Macro to load a SPIR-V module statically.\n\ninclude_spirv_raw\u27e823\u27e9\n    Macro to load raw SPIR-V data statically, for use with `Features::SPIRV_SHADER_PASSTHROUGH`\u27e824\u27e9.\n\ninclude_wgsl\u27e825\u27e9\n    Load WGSL source code from a file at compile time.\n\nvertex_attr_array\u27e826\u27e9\n    Macro to produce an array of `VertexAttribute`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAdapter\u27e829\u27e9\n    Handle to a physical graphics and/or compute device.\n\nAdapterInfo\u27e830\u27e9\n    Information about an adapter.\n\nAllocatorReport\u27e831\u27e9\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\nBackendOptions\u27e832\u27e9\n    Options that are passed to a given backend.\n\nBackends\u27e833\u27e9\n    Represents the backends that wgpu will use.\n\nBindGroup\u27e834\u27e9\n    Handle to a binding group.\n\nBindGroupDescriptor\u27e835\u27e9\n    Describes a group of bindings and the resources to be bound.\n\nBindGroupEntry\u27e836\u27e9\n    An element of a `BindGroupDescriptor`\u27e835\u27e9, consisting of a bindable resource and the slot to bind it to.\n\nBindGroupLayout\u27e837\u27e9\n    Handle to a binding group layout.\n\nBindGroupLayoutDescriptor\u27e838\u27e9\n    Describes a `BindGroupLayout`\u27e837\u27e9.\n\nBindGroupLayoutEntry\u27e839\u27e9\n    Describes a single binding inside a bind group.\n\nBlas\u27e840\u27e9\n    Bottom Level Acceleration Structure (BLAS).\n\nBlasBuildEntry\u27e841\u27e9\n    Builds the given sets of geometry into the given Blas\u27e840\u27e9.\n\nBlasTriangleGeometry\u27e842\u27e9\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\nBlendComponent\u27e843\u27e9\n    Describes a blend component of a `BlendState`\u27e844\u27e9.\n\nBlendState\u27e844\u27e9\n    Describe the blend state of a render pipeline, within `ColorTargetState`\u27e845\u27e9.\n\nBuffer\u27e846\u27e9\n    Handle to a GPU-accessible buffer.\n\nBufferAsyncError\u27e847\u27e9\n    Error occurred when trying to async map a buffer.\n\nBufferBinding\u27e848\u27e9\n    Describes the segment of a buffer to bind.\n\nBufferSlice\u27e849\u27e9\n    A slice of a `Buffer`\u27e846\u27e9, to be mapped, used for vertex or index data, or the like.\n\nBufferTransition\u27e850\u27e9\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\nBufferUsages\u27e851\u27e9\n    Different ways that you can use a buffer.\n\nBufferUses\u27e852\u27e9\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\nBufferView\u27e853\u27e9\n    A read-only view of a mapped buffer\u2019s bytes.\n\nBufferViewMut\u27e854\u27e9\n    A write-only view of a mapped buffer\u2019s bytes.\n\nColor\u27e855\u27e9\n    RGBA double precision color.\n\nColorTargetState\u27e845\u27e9\n    Describes the color state of a render pipeline.\n\nColorWrites\u27e856\u27e9\n    Color write mask. Disabled color channels will not be written to.\n\nCommandBuffer\u27e857\u27e9\n    Handle to a command buffer on the GPU.\n\nCommandBufferDescriptor\u27e858\u27e9\n    Describes a `CommandBuffer`\u27e857\u27e9.\n\nCommandEncoder\u27e859\u27e9\n    Encodes a series of GPU operations.\n\nCompilationInfo\u27e860\u27e9\n    Compilation information for a shader module.\n\nCompilationMessage\u27e861\u27e9\n    A single message from the shader compilation process.\n\nComputePass\u27e862\u27e9\n    In-progress recording of a compute pass.\n\nComputePassDescriptor\u27e863\u27e9\n    Describes the attachments of a compute pass.\n\nComputePassTimestampWrites\u27e864\u27e9\n    Describes the timestamp writes of a compute pass.\n\nComputePipeline\u27e865\u27e9\n    Handle to a compute pipeline.\n\nComputePipelineDescriptor\u27e866\u27e9\n    Describes a compute pipeline.\n\nContextBlasBuildEntry\u27e867\u27e9\n    Context version see BlasBuildEntry\u27e841\u27e9.\n\nContextBlasTriangleGeometry\u27e868\u27e9\n    Context version of BlasTriangleGeometry\u27e842\u27e9.\n\nCopyExternalImageDestInfo\u27e869\u27e9\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\nCoreCounters\u27e870\u27e9\n    `wgpu-core`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nCreateSurfaceError\u27e872\u27e9\n    `Instance::create_surface()`\u27e873\u27e9 or a related function failed.\n\nDepthBiasState\u27e874\u27e9\n    Describes the biasing setting for the depth target.\n\nDepthStencilState\u27e875\u27e9\n    Describes the depth/stencil state in a render pipeline.\n\nDevice\u27e876\u27e9\n    Open connection to a graphics and/or compute device.\n\nDownlevelCapabilities\u27e877\u27e9\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\nDownlevelFlags\u27e878\u27e9\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\nDownlevelLimits\u27e879\u27e9\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\nDx12BackendOptions\u27e880\u27e9\n    Configuration for the DX12 backend.\n\nExtent3d\u27e881\u27e9\n    Extent of a texture related operation.\n\nFeatures\u27e882\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWGPU\u27e883\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWebGPU\u27e884\u27e9\n    Features that are not guaranteed to be supported.\n\nFragmentState\u27e885\u27e9\n    Describes the fragment processing in a render pipeline.\n\nGlBackendOptions\u27e886\u27e9\n    Configuration for the OpenGL/OpenGLES backend.\n\nHalCounters\u27e887\u27e9\n    `wgpu-hal`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nImageSubresourceRange\u27e888\u27e9\n    Subresource range within an image\n\nInstance\u27e85\u27e9\n    Context for all other wgpu objects. Instance of wgpu.\n\nInstanceDescriptor\u27e889\u27e9\n    Options for creating an instance.\n\nInstanceFlags\u27e890\u27e9\n    Instance debugging flags.\n\nInternalCounters\u27e871\u27e9\n    All internal counters, exposed for debugging purposes.\n\nLimits\u27e891\u27e9\n    Represents the sets of limits an adapter/device supports.\n\nMultisampleState\u27e892\u27e9\n    Describes the multi-sampling state of a render pipeline.\n\nNoopBackendOptions\u27e893\u27e9\n    Configuration for the noop backend.\n\nOperations\u27e894\u27e9\n    Pair of load and store operations for an attachment aspect.\n\nOrigin2d\u27e895\u27e9\n    Origin of a copy from a 2D image.\n\nOrigin3d\u27e896\u27e9\n    Origin of a copy to/from a texture.\n\nPipelineCache\u27e897\u27e9\n    Handle to a pipeline cache, which is used to accelerate creating `RenderPipeline`\u27e898\u27e9s and `ComputePipeline`\u27e865\u27e9s in subsequent executions\n\nPipelineCacheDescriptor\u27e899\u27e9\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\nPipelineCompilationOptions\u27e8100\u27e9\n    Advanced options for use when a pipeline is compiled\n\nPipelineLayout\u27e8101\u27e9\n    Handle to a pipeline layout.\n\nPipelineLayoutDescriptor\u27e8102\u27e9\n    Describes a `PipelineLayout`\u27e8101\u27e9.\n\nPipelineStatisticsTypes\u27e8103\u27e9\n    Flags for which pipeline data should be recorded in a query.\n\nPresentationTimestamp\u27e8104\u27e9\n    Nanosecond timestamp used by the presentation engine.\n\nPrimitiveState\u27e8105\u27e9\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\nPushConstantRange\u27e8106\u27e9\n    A range of push constant memory to pass to a shader stage.\n\nQuerySet\u27e8107\u27e9\n    Handle to a query set.\n\nQueue\u27e8108\u27e9\n    Handle to a command queue on a device.\n\nQueueWriteBufferView\u27e8109\u27e9\n    A write-only view into a staging buffer.\n\nRenderBundle\u27e8110\u27e9\n    Pre-prepared reusable bundle of GPU operations.\n\nRenderBundleDepthStencil\u27e8111\u27e9\n    Describes the depth/stencil attachment for render bundles.\n\nRenderBundleEncoder\u27e8112\u27e9\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\nRenderBundleEncoderDescriptor\u27e8113\u27e9\n    Describes a `RenderBundleEncoder`\u27e8112\u27e9.\n\nRenderPass\u27e8114\u27e9\n    In-progress recording of a render pass: a list of render commands in a `CommandEncoder`\u27e859\u27e9.\n\nRenderPassColorAttachment\u27e8115\u27e9\n    Describes a color attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDepthStencilAttachment\u27e8116\u27e9\n    Describes a depth/stencil attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDescriptor\u27e8117\u27e9\n    Describes the attachments of a render pass.\n\nRenderPassTimestampWrites\u27e8118\u27e9\n    Describes the timestamp writes of a render pass.\n\nRenderPipeline\u27e898\u27e9\n    Handle to a rendering (graphics) pipeline.\n\nRenderPipelineDescriptor\u27e8119\u27e9\n    Describes a render (graphics) pipeline.\n\nRequestAdapterOptionsBase\u27e8120\u27e9\n    Options for requesting adapter.\n\nRequestDeviceError\u27e8121\u27e9\n    Requesting a device from an `Adapter`\u27e829\u27e9 failed.\n\nSampler\u27e8122\u27e9\n    Handle to a sampler.\n\nShaderModule\u27e8123\u27e9\n    Handle to a compiled shader module.\n\nShaderModuleDescriptor\u27e8124\u27e9\n    Descriptor for use with `Device::create_shader_module`\u27e8125\u27e9.\n\nShaderRuntimeChecks\u27e8126\u27e9\n    Describes how shader bound checks should be performed.\n\nShaderStages\u27e8127\u27e9\n    Describes the shader stages that a binding will be visible from.\n\nSourceLocation\u27e8128\u27e9\n    A human-readable representation for a span, tailored for text source.\n\nStencilFaceState\u27e8129\u27e9\n    Describes stencil state in a render pipeline.\n\nStencilState\u27e8130\u27e9\n    State of the stencil operation (fixed-pipeline stage).\n\nSubmissionIndex\u27e8131\u27e9\n    Identifier for a particular call to `Queue::submit`\u27e8132\u27e9. Can be used as part of an argument to `Device::poll`\u27e8133\u27e9 to block for a particular submission to finish.\n\nSurface\u27e8134\u27e9\n    Handle to a presentable surface.\n\nSurfaceCapabilities\u27e8135\u27e9\n    Defines the capabilities of a given surface and adapter.\n\nSurfaceTexture\u27e8136\u27e9\n    Surface texture that can be rendered to. Result of a successful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nTexelCopyBufferInfoBase\u27e8138\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyBufferLayout\u27e8139\u27e9\n    Layout of a texture in a buffer\u2019s memory.\n\nTexelCopyTextureInfoBase\u27e8140\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTexture\u27e8141\u27e9\n    Handle to a texture on the GPU.\n\nTextureFormatFeatureFlags\u27e8142\u27e9\n    Feature flags for a texture format.\n\nTextureFormatFeatures\u27e8143\u27e9\n    Features supported by a given texture format\n\nTextureTransition\u27e8144\u27e9\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\nTextureUsages\u27e8145\u27e9\n    Different ways that you can use a texture.\n\nTextureUses\u27e8146\u27e9\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\nTextureView\u27e8147\u27e9\n    Handle to a texture view.\n\nTlas\u27e8148\u27e9\n    Top Level Acceleration Structure (TLAS).\n\nTlasBuildEntry\u27e8149\u27e9\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See `TlasPackage`\u27e8150\u27e9 for the safe version.\n\nTlasInstance\u27e8151\u27e9\n    Safe instance for a Tlas\u27e8148\u27e9.\n\nTlasPackage\u27e8150\u27e9\n    The safe version of `TlasBuildEntry`\u27e8149\u27e9, containing `TlasInstance`\u27e8151\u27e9s instead of a raw buffer.\n\nVertexAttribute\u27e827\u27e9\n    Vertex inputs (attributes) to shaders.\n\nVertexBufferLayout\u27e8152\u27e9\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\nVertexState\u27e8153\u27e9\n    Describes the vertex processing in a render pipeline.\n\nWgslLanguageFeatures\u27e8154\u27e9\n    WGSL language extensions.\n## Enums\u00a7\u27e8155\u27e9\n\nAddressMode\u27e8156\u27e9\n    How edges should be handled in texture addressing.\n\nAstcBlock\u27e8157\u27e9\n    ASTC block dimensions\n\nAstcChannel\u27e8158\u27e9\n    ASTC RGBA channel\n\nBackend\u27e8159\u27e9\n    Backends supported by wgpu.\n\nBindingResource\u27e8160\u27e9\n    Resource to be bound by a `BindGroup`\u27e834\u27e9 for use with a pipeline.\n\nBindingType\u27e8161\u27e9\n    Type of a binding in a bind group layout\u27e839\u27e9.\n\nBlasGeometries\u27e8162\u27e9\n    Contains the sets of geometry that go into a Blas\u27e840\u27e9.\n\nBlendFactor\u27e8163\u27e9\n    Alpha blend factor.\n\nBlendOperation\u27e8164\u27e9\n    Alpha blend operation.\n\nBufferBindingType\u27e8165\u27e9\n    Specific type of a buffer binding.\n\nCompareFunction\u27e8166\u27e9\n    Comparison function used for depth and stencil operations.\n\nCompilationMessageType\u27e8167\u27e9\n    The type of a compilation message.\n\nCompositeAlphaMode\u27e8168\u27e9\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\nContextBlasGeometries\u27e8169\u27e9\n    Context version of BlasGeometries\u27e8162\u27e9.\n\nDeviceLostReason\u27e8170\u27e9\n    Reason for \u201close the device\u201d.\n\nDeviceType\u27e8171\u27e9\n    Supported physical device types.\n\nDx12Compiler\u27e8172\u27e9\n    Selects which DX12 shader compiler to use.\n\nDxcShaderModel\u27e8173\u27e9\n    DXC shader model.\n\nError\u27e8174\u27e9\n    Errors resulting from usage of GPU APIs.\n\nErrorFilter\u27e8175\u27e9\n    Kinds of `Error`\u27e8174\u27e9s a `Device::push_error_scope()`\u27e8176\u27e9 may be configured to catch.\n\nFace\u27e8177\u27e9\n    Face of a vertex.\n\nFilterMode\u27e8178\u27e9\n    Texel mixing mode when sampling between texels.\n\nFrontFace\u27e8179\u27e9\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\nGlFenceBehavior\u27e8180\u27e9\n    Dictate the behavior of fences in OpenGL.\n\nGles3MinorVersion\u27e8181\u27e9\n    Selects which OpenGL ES 3 minor version to request.\n\nIndexFormat\u27e8182\u27e9\n    Format of indices used with pipeline.\n\nLoadOp\u27e8183\u27e9\n    Operation to perform to the output attachment at the start of a render pass.\n\nMaintainBase\u27e8184\u27e9\n    Passed to `Device::poll` to control how and if it should block.\n\nMapMode\u27e8185\u27e9\n    Type of buffer mapping.\n\nMemoryHints\u27e8186\u27e9\n    Hints to the device about the memory allocation strategy.\n\nPollError\u27e8187\u27e9\n    Error states after a device poll\n\nPollStatus\u27e8188\u27e9\n    Status of device poll operation.\n\nPolygonMode\u27e8189\u27e9\n    Type of drawing mode for polygons\n\nPowerPreference\u27e8190\u27e9\n    Power Preference when choosing a physical adapter.\n\nPredefinedColorSpace\u27e8191\u27e9\n    Color spaces supported on the web.\n\nPresentMode\u27e8192\u27e9\n    Timing and queueing with which frames are actually displayed to the user.\n\nPrimitiveTopology\u27e8193\u27e9\n    Primitive type the input mesh is composed of.\n\nQueryType\u27e8194\u27e9\n    Type of query contained in a `QuerySet`\u27e8107\u27e9.\n\nRequestAdapterError\u27e8195\u27e9\n    Error when `Instance::request_adapter()`\u27e8196\u27e9 fails.\n\nSamplerBindingType\u27e8197\u27e9\n    Specific type of a sampler binding.\n\nSamplerBorderColor\u27e8198\u27e9\n    Color variation to use when sampler addressing mode is `AddressMode::ClampToBorder`\u27e8199\u27e9\n\nShaderModel\u27e8200\u27e9\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\nShaderSource\u27e8201\u27e9\n    Source of a shader module.\n\nStencilOperation\u27e8202\u27e9\n    Operation to perform on the stencil value.\n\nStorageTextureAccess\u27e8203\u27e9\n    Specific type of a sample in a texture binding.\n\nStoreOp\u27e8204\u27e9\n    Operation to perform to the output attachment at the end of a render pass.\n\nSurfaceError\u27e8205\u27e9\n    Result of an unsuccessful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nSurfaceStatus\u27e8206\u27e9\n    Status of the received surface image.\n\nSurfaceTarget\u27e8207\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\nSurfaceTargetUnsafe\u27e8208\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\nTextureAspect\u27e8209\u27e9\n    Selects a subset of the data a `Texture`\u27e8141\u27e9 holds.\n\nTextureDimension\u27e8210\u27e9\n    Dimensionality of a texture.\n\nTextureFormat\u27e8211\u27e9\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\nTextureSampleType\u27e8212\u27e9\n    Specific type of a sample in a texture binding.\n\nTextureViewDimension\u27e8213\u27e9\n    Dimensions of a particular texture view.\n\nTrace\u27e8214\u27e9\n    Controls API call tracing and specifies where the trace is written.\n\nVertexFormat\u27e8215\u27e9\n    Vertex Format for a `VertexAttribute`\u27e827\u27e9 (input).\n\nVertexStepMode\u27e8216\u27e9\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants\u00a7\u27e8217\u27e9\n\nCOPY_BUFFER_ALIGNMENT\u27e8218\u27e9\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\nCOPY_BYTES_PER_ROW_ALIGNMENT\u27e8219\u27e9\n    Buffer-to-texture copies must have `bytes_per_row`\u27e8220\u27e9 aligned to this number.\n\nMAP_ALIGNMENT\u27e8221\u27e9\n    Minimum alignment of buffer mappings.\n\nPUSH_CONSTANT_ALIGNMENT\u27e8222\u27e9\n    Ranges of writes to push constant storage\u27e8223\u27e9 must be at least this aligned.\n\nQUERY_RESOLVE_BUFFER_ALIGNMENT\u27e8224\u27e9\n    An offset into the query resolve buffer\u27e8225\u27e9 has to be aligned to this.\n\nQUERY_SET_MAX_QUERIES\u27e8226\u27e9\n    Maximum queries in a `QuerySetDescriptor`\u27e8227\u27e9.\n\nQUERY_SIZE\u27e8228\u27e9\n    Size in bytes of a single piece of query\u27e8107\u27e9 data.\n\nVERTEX_STRIDE_ALIGNMENT\u27e8229\u27e9\n    Vertex buffer strides\u27e8230\u27e9 have to be a multiple of this number.\n## Traits\u00a7\u27e8231\u27e9\n\nUncapturedErrorHandler\u27e8232\u27e9\n    Type for the callback of uncaptured error handler\n\nWasmNotSend\u27e8233\u27e9\n\n\nWasmNotSendSync\u27e8234\u27e9\n\n\nWasmNotSync\u27e8235\u27e9\n\n\nWindowHandle\u27e8236\u27e9\n    Super trait for window handles as used in `SurfaceTarget`\u27e8207\u27e9.\n## Type Aliases\u00a7\u27e8237\u27e9\n\nAccelerationStructureFlags\u27e8238\u27e9\n    Flags for an acceleration structure.\n\nAccelerationStructureGeometryFlags\u27e8239\u27e9\n    Flags for a geometry inside a bottom level acceleration structure.\n\nAccelerationStructureUpdateMode\u27e8240\u27e9\n    Update mode for acceleration structure builds.\n\nBlasGeometrySizeDescriptors\u27e8241\u27e9\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\nBlasTriangleGeometrySizeDescriptor\u27e8242\u27e9\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\nBufferAddress\u27e8243\u27e9\n    Integral type used for `Buffer`\u27e846\u27e9 offsets and sizes.\n\nBufferDescriptor\u27e8244\u27e9\n    Describes a `Buffer`\u27e846\u27e9.\n\nBufferSize\u27e8245\u27e9\n    Integral type used for `BufferSlice`\u27e849\u27e9 sizes.\n\nCommandEncoderDescriptor\u27e8246\u27e9\n    Describes a `CommandEncoder`\u27e859\u27e9.\n\nCreateBlasDescriptor\u27e8247\u27e9\n    Descriptor to create bottom level acceleration structures.\n\nCreateTlasDescriptor\u27e8248\u27e9\n    Descriptor to create top level acceleration structures.\n\nDeviceDescriptor\u27e8249\u27e9\n    Describes a `Device`\u27e876\u27e9.\n\nDynamicOffset\u27e8250\u27e9\n    Integral type used for dynamic bind group offsets\u27e8251\u27e9.\n\nErrorSource\u27e8252\u27e9\n    Lower level source of the error.\n\nImageCopyBuffer\u27e8253\u27e9Deprecated\n    Old name for a `TexelCopyBufferInfo`\u27e8138\u27e9.\n\nImageCopyTexture\u27e8254\u27e9Deprecated\n    Old name for a `TexelCopyTextureInfo`\u27e8140\u27e9.\n\nImageCopyTextureTagged\u27e8255\u27e9Deprecated\n    Old name for a `CopyExternalImageDestInfo`\u27e869\u27e9.\n\nImageDataLayout\u27e8256\u27e9Deprecated\n    Old name for a `TexelCopyBufferLayout`\u27e8139\u27e9.\n\nLabel\u27e8257\u27e9\n    Object debugging label.\n\nPollType\u27e8258\u27e9\n    Passed to `Device::poll`\u27e8133\u27e9 to control how and if it should block.\n\nQuerySetDescriptor\u27e8259\u27e9\n    Describes a `QuerySet`\u27e8107\u27e9.\n\nRenderBundleDescriptor\u27e8260\u27e9\n    Describes a `RenderBundle`\u27e8110\u27e9.\n\nRequestAdapterOptions\u27e8261\u27e9\n    Additional information required when requesting an adapter.\n\nSamplerDescriptor\u27e8262\u27e9\n    Describes a `Sampler`\u27e8122\u27e9.\n\nShaderLocation\u27e8263\u27e9\n    Integral type used for binding locations in shaders.\n\nShaderModuleDescriptorMsl\u27e8264\u27e9\n    Descriptor for a shader module given by Metal MSL source.\n\nShaderModuleDescriptorPassthrough\u27e8265\u27e9\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with `Device::create_shader_module_passthrough`\u27e8266\u27e9.\n\nShaderModuleDescriptorSpirV\u27e8267\u27e9\n    Descriptor for a shader module given by SPIR-V binary.\n\nSurfaceConfiguration\u27e8268\u27e9\n    Describes a `Surface`\u27e8134\u27e9.\n\nTexelCopyBufferInfo\u27e8269\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyTextureInfo\u27e8270\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTextureDescriptor\u27e8271\u27e9\n    Describes a `Texture`\u27e8141\u27e9.\n\nTextureViewDescriptor\u27e8272\u27e9\n    Describes a `TextureView`\u27e8147\u27e9.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wgpu/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wgpu/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126: Source\n\u27e84\u27e9 https://gpuweb.github.io/gpuweb/: WebGPU\n\u27e85\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html: struct wgpu::Instance - `Instance`\n\u27e86\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-flags: \u00a7\n\u27e87\u27e9 https://docs.rs/wgpu/latest/wgpu/#backends: \u00a7\n\u27e88\u27e9 https://docs.rs/wgpu/latest/wgpu/#conditional-backends: \u00a7\n\u27e89\u27e9 https://github.com/google/angle: ANGLE\n\u27e810\u27e9 https://github.com/KhronosGroup/MoltenVK: MoltenVK\n\u27e811\u27e9 https://docs.rs/wgpu/latest/wgpu/#shading-language-support: \u00a7\n\u27e812\u27e9 https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization: \u00a7\n\u27e813\u27e9 https://docs.rs/wgpu/latest/wgpu/#external-libraries: \u00a7\n\u27e814\u27e9 https://github.com/Microsoft/DirectXShaderCompiler: Microsoft\u2019s GitHub\n\u27e815\u27e9 https://docs.rs/wgpu/latest/wgpu/#other: \u00a7\n\u27e816\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-aliases: \u00a7\n\u27e817\u27e9 https://docs.rs/wgpu/latest/wgpu/#reexports: \u00a7\n\u27e818\u27e9 https://docs.rs/wgpu/latest/wgpu/#modules: \u00a7\n\u27e819\u27e9 https://docs.rs/wgpu/latest/wgpu/custom/index.html: mod wgpu::custom - custom\n\u27e820\u27e9 https://docs.rs/wgpu/latest/wgpu/util/index.html: mod wgpu::util - util\n\u27e821\u27e9 https://docs.rs/wgpu/latest/wgpu/#macros: \u00a7\n\u27e822\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html: macro wgpu::include_spirv - include_spirv\n\u27e823\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html: macro wgpu::include_spirv_raw - include_spirv_raw\n\u27e824\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH: associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH - `Features::SPIRV_SHADER_PASSTHROUGH`\n\u27e825\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html: macro wgpu::include_wgsl - include_wgsl\n\u27e826\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html: macro wgpu::vertex_attr_array - vertex_attr_array\n\u27e827\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html: struct wgpu::VertexAttribute - `VertexAttribute`\n\u27e828\u27e9 https://docs.rs/wgpu/latest/wgpu/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html: struct wgpu::Adapter - Adapter\n\u27e830\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html: struct wgpu::AdapterInfo - AdapterInfo\n\u27e831\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html: struct wgpu::AllocatorReport - AllocatorReport\n\u27e832\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html: struct wgpu::BackendOptions - BackendOptions\n\u27e833\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Backends.html: struct wgpu::Backends - Backends\n\u27e834\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html: struct wgpu::BindGroup - BindGroup\n\u27e835\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html: struct wgpu::BindGroupDescriptor - BindGroupDescriptor\n\u27e836\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html: struct wgpu::BindGroupEntry - BindGroupEntry\n\u27e837\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html: struct wgpu::BindGroupLayout - BindGroupLayout\n\u27e838\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html: struct wgpu::BindGroupLayoutDescriptor - BindGroupLayoutDescriptor\n\u27e839\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html: struct wgpu::BindGroupLayoutEntry - BindGroupLayoutEntry\n\u27e840\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Blas.html: struct wgpu::Blas - Blas\n\u27e841\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html: struct wgpu::BlasBuildEntry - BlasBuildEntry\n\u27e842\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html: struct wgpu::BlasTriangleGeometry - BlasTriangleGeometry\n\u27e843\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html: struct wgpu::BlendComponent - BlendComponent\n\u27e844\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html: struct wgpu::BlendState - `BlendState`\n\u27e845\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html: struct wgpu::ColorTargetState - `ColorTargetState`\n\u27e846\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html: struct wgpu::Buffer - Buffer\n\u27e847\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html: struct wgpu::BufferAsyncError - BufferAsyncError\n\u27e848\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html: struct wgpu::BufferBinding - BufferBinding\n\u27e849\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html: struct wgpu::BufferSlice - BufferSlice\n\u27e850\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html: struct wgpu::BufferTransition - BufferTransition\n\u27e851\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html: struct wgpu::BufferUsages - BufferUsages\n\u27e852\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html: struct wgpu::BufferUses - BufferUses\n\u27e853\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html: struct wgpu::BufferView - BufferView\n\u27e854\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html: struct wgpu::BufferViewMut - BufferViewMut\n\u27e855\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Color.html: struct wgpu::Color - Color\n\u27e856\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html: struct wgpu::ColorWrites - ColorWrites\n\u27e857\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html: struct wgpu::CommandBuffer - CommandBuffer\n\u27e858\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html: struct wgpu::CommandBufferDescriptor - CommandBufferDescriptor\n\u27e859\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html: struct wgpu::CommandEncoder - CommandEncoder\n\u27e860\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html: struct wgpu::CompilationInfo - CompilationInfo\n\u27e861\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html: struct wgpu::CompilationMessage - CompilationMessage\n\u27e862\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html: struct wgpu::ComputePass - ComputePass\n\u27e863\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html: struct wgpu::ComputePassDescriptor - ComputePassDescriptor\n\u27e864\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html: struct wgpu::ComputePassTimestampWrites - ComputePassTimestampWrites\n\u27e865\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html: struct wgpu::ComputePipeline - ComputePipeline\n\u27e866\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html: struct wgpu::ComputePipelineDescriptor - ComputePipelineDescriptor\n\u27e867\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html: struct wgpu::ContextBlasBuildEntry - ContextBlasBuildEntry\n\u27e868\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html: struct wgpu::ContextBlasTriangleGeometry - ContextBlasTriangleGeometry\n\u27e869\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html: struct wgpu::CopyExternalImageDestInfo - CopyExternalImageDestInfo\n\u27e870\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html: struct wgpu::CoreCounters - CoreCounters\n\u27e871\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html: struct wgpu::InternalCounters - `InternalCounters`\n\u27e872\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html: struct wgpu::CreateSurfaceError - CreateSurfaceError\n\u27e873\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface: method wgpu::Instance::create_surface - `Instance::create_surface()`\n\u27e874\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html: struct wgpu::DepthBiasState - DepthBiasState\n\u27e875\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html: struct wgpu::DepthStencilState - DepthStencilState\n\u27e876\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html: struct wgpu::Device - Device\n\u27e877\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html: struct wgpu::DownlevelCapabilities - DownlevelCapabilities\n\u27e878\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html: struct wgpu::DownlevelFlags - DownlevelFlags\n\u27e879\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html: struct wgpu::DownlevelLimits - DownlevelLimits\n\u27e880\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html: struct wgpu::Dx12BackendOptions - Dx12BackendOptions\n\u27e881\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html: struct wgpu::Extent3d - Extent3d\n\u27e882\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html: struct wgpu::Features - Features\n\u27e883\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html: struct wgpu::FeaturesWGPU - FeaturesWGPU\n\u27e884\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html: struct wgpu::FeaturesWebGPU - FeaturesWebGPU\n\u27e885\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html: struct wgpu::FragmentState - FragmentState\n\u27e886\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html: struct wgpu::GlBackendOptions - GlBackendOptions\n\u27e887\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html: struct wgpu::HalCounters - HalCounters\n\u27e888\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html: struct wgpu::ImageSubresourceRange - ImageSubresourceRange\n\u27e889\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html: struct wgpu::InstanceDescriptor - InstanceDescriptor\n\u27e890\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html: struct wgpu::InstanceFlags - InstanceFlags\n\u27e891\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Limits.html: struct wgpu::Limits - Limits\n\u27e892\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html: struct wgpu::MultisampleState - MultisampleState\n\u27e893\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html: struct wgpu::NoopBackendOptions - NoopBackendOptions\n\u27e894\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Operations.html: struct wgpu::Operations - Operations\n\u27e895\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html: struct wgpu::Origin2d - Origin2d\n\u27e896\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html: struct wgpu::Origin3d - Origin3d\n\u27e897\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html: struct wgpu::PipelineCache - PipelineCache\n\u27e898\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html: struct wgpu::RenderPipeline - `RenderPipeline`\n\u27e899\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html: struct wgpu::PipelineCacheDescriptor - PipelineCacheDescriptor\n\u27e8100\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html: struct wgpu::PipelineCompilationOptions - PipelineCompilationOptions\n\u27e8101\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html: struct wgpu::PipelineLayout - PipelineLayout\n\u27e8102\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html: struct wgpu::PipelineLayoutDescriptor - PipelineLayoutDescriptor\n\u27e8103\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html: struct wgpu::PipelineStatisticsTypes - PipelineStatisticsTypes\n\u27e8104\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html: struct wgpu::PresentationTimestamp - PresentationTimestamp\n\u27e8105\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html: struct wgpu::PrimitiveState - PrimitiveState\n\u27e8106\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html: struct wgpu::PushConstantRange - PushConstantRange\n\u27e8107\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html: struct wgpu::QuerySet - QuerySet\n\u27e8108\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html: struct wgpu::Queue - Queue\n\u27e8109\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html: struct wgpu::QueueWriteBufferView - QueueWriteBufferView\n\u27e8110\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html: struct wgpu::RenderBundle - RenderBundle\n\u27e8111\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html: struct wgpu::RenderBundleDepthStencil - RenderBundleDepthStencil\n\u27e8112\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html: struct wgpu::RenderBundleEncoder - RenderBundleEncoder\n\u27e8113\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html: struct wgpu::RenderBundleEncoderDescriptor - RenderBundleEncoderDescriptor\n\u27e8114\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html: struct wgpu::RenderPass - RenderPass\n\u27e8115\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html: struct wgpu::RenderPassColorAttachment - RenderPassColorAttachment\n\u27e8116\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html: struct wgpu::RenderPassDepthStencilAttachment - RenderPassDepthStencilAttachment\n\u27e8117\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html: struct wgpu::RenderPassDescriptor - RenderPassDescriptor\n\u27e8118\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html: struct wgpu::RenderPassTimestampWrites - RenderPassTimestampWrites\n\u27e8119\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html: struct wgpu::RenderPipelineDescriptor - RenderPipelineDescriptor\n\u27e8120\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html: struct wgpu::RequestAdapterOptionsBase - RequestAdapterOptionsBase\n\u27e8121\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html: struct wgpu::RequestDeviceError - RequestDeviceError\n\u27e8122\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html: struct wgpu::Sampler - Sampler\n\u27e8123\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html: struct wgpu::ShaderModule - ShaderModule\n\u27e8124\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html: struct wgpu::ShaderModuleDescriptor - ShaderModuleDescriptor\n\u27e8125\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module: method wgpu::Device::create_shader_module - `Device::create_shader_module`\n\u27e8126\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html: struct wgpu::ShaderRuntimeChecks - ShaderRuntimeChecks\n\u27e8127\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html: struct wgpu::ShaderStages - ShaderStages\n\u27e8128\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html: struct wgpu::SourceLocation - SourceLocation\n\u27e8129\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html: struct wgpu::StencilFaceState - StencilFaceState\n\u27e8130\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html: struct wgpu::StencilState - StencilState\n\u27e8131\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html: struct wgpu::SubmissionIndex - SubmissionIndex\n\u27e8132\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit: method wgpu::Queue::submit - `Queue::submit`\n\u27e8133\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll: method wgpu::Device::poll - `Device::poll`\n\u27e8134\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html: struct wgpu::Surface - Surface\n\u27e8135\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html: struct wgpu::SurfaceCapabilities - SurfaceCapabilities\n\u27e8136\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html: struct wgpu::SurfaceTexture - SurfaceTexture\n\u27e8137\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture: method wgpu::Surface::get_current_texture - `Surface::get_current_texture`\n\u27e8138\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html: struct wgpu::TexelCopyBufferInfoBase - TexelCopyBufferInfoBase\n\u27e8139\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html: struct wgpu::TexelCopyBufferLayout - TexelCopyBufferLayout\n\u27e8140\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html: struct wgpu::TexelCopyTextureInfoBase - TexelCopyTextureInfoBase\n\u27e8141\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Texture.html: struct wgpu::Texture - Texture\n\u27e8142\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html: struct wgpu::TextureFormatFeatureFlags - TextureFormatFeatureFlags\n\u27e8143\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html: struct wgpu::TextureFormatFeatures - TextureFormatFeatures\n\u27e8144\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html: struct wgpu::TextureTransition - TextureTransition\n\u27e8145\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html: struct wgpu::TextureUsages - TextureUsages\n\u27e8146\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html: struct wgpu::TextureUses - TextureUses\n\u27e8147\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html: struct wgpu::TextureView - TextureView\n\u27e8148\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html: struct wgpu::Tlas - Tlas\n\u27e8149\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html: struct wgpu::TlasBuildEntry - TlasBuildEntry\n\u27e8150\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html: struct wgpu::TlasPackage - `TlasPackage`\n\u27e8151\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html: struct wgpu::TlasInstance - TlasInstance\n\u27e8152\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html: struct wgpu::VertexBufferLayout - VertexBufferLayout\n\u27e8153\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html: struct wgpu::VertexState - VertexState\n\u27e8154\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html: struct wgpu::WgslLanguageFeatures - WgslLanguageFeatures\n\u27e8155\u27e9 https://docs.rs/wgpu/latest/wgpu/#enums: \u00a7\n\u27e8156\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html: enum wgpu::AddressMode - AddressMode\n\u27e8157\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html: enum wgpu::AstcBlock - AstcBlock\n\u27e8158\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html: enum wgpu::AstcChannel - AstcChannel\n\u27e8159\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Backend.html: enum wgpu::Backend - Backend\n\u27e8160\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html: enum wgpu::BindingResource - BindingResource\n\u27e8161\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html: enum wgpu::BindingType - BindingType\n\u27e8162\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html: enum wgpu::BlasGeometries - BlasGeometries\n\u27e8163\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html: enum wgpu::BlendFactor - BlendFactor\n\u27e8164\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html: enum wgpu::BlendOperation - BlendOperation\n\u27e8165\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html: enum wgpu::BufferBindingType - BufferBindingType\n\u27e8166\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html: enum wgpu::CompareFunction - CompareFunction\n\u27e8167\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html: enum wgpu::CompilationMessageType - CompilationMessageType\n\u27e8168\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html: enum wgpu::CompositeAlphaMode - CompositeAlphaMode\n\u27e8169\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html: enum wgpu::ContextBlasGeometries - ContextBlasGeometries\n\u27e8170\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html: enum wgpu::DeviceLostReason - DeviceLostReason\n\u27e8171\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html: enum wgpu::DeviceType - DeviceType\n\u27e8172\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html: enum wgpu::Dx12Compiler - Dx12Compiler\n\u27e8173\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html: enum wgpu::DxcShaderModel - DxcShaderModel\n\u27e8174\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Error.html: enum wgpu::Error - Error\n\u27e8175\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html: enum wgpu::ErrorFilter - ErrorFilter\n\u27e8176\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope: method wgpu::Device::push_error_scope - `Device::push_error_scope()`\n\u27e8177\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Face.html: enum wgpu::Face - Face\n\u27e8178\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html: enum wgpu::FilterMode - FilterMode\n\u27e8179\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html: enum wgpu::FrontFace - FrontFace\n\u27e8180\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html: enum wgpu::GlFenceBehavior - GlFenceBehavior\n\u27e8181\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html: enum wgpu::Gles3MinorVersion - Gles3MinorVersion\n\u27e8182\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html: enum wgpu::IndexFormat - IndexFormat\n\u27e8183\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html: enum wgpu::LoadOp - LoadOp\n\u27e8184\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html: enum wgpu::MaintainBase - MaintainBase\n\u27e8185\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html: enum wgpu::MapMode - MapMode\n\u27e8186\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html: enum wgpu::MemoryHints - MemoryHints\n\u27e8187\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollError.html: enum wgpu::PollError - PollError\n\u27e8188\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html: enum wgpu::PollStatus - PollStatus\n\u27e8189\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html: enum wgpu::PolygonMode - PolygonMode\n\u27e8190\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html: enum wgpu::PowerPreference - PowerPreference\n\u27e8191\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html: enum wgpu::PredefinedColorSpace - PredefinedColorSpace\n\u27e8192\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html: enum wgpu::PresentMode - PresentMode\n\u27e8193\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html: enum wgpu::PrimitiveTopology - PrimitiveTopology\n\u27e8194\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html: enum wgpu::QueryType - QueryType\n\u27e8195\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html: enum wgpu::RequestAdapterError - RequestAdapterError\n\u27e8196\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter: `Instance::request_adapter()`\n\u27e8197\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html: enum wgpu::SamplerBindingType - SamplerBindingType\n\u27e8198\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html: enum wgpu::SamplerBorderColor - SamplerBorderColor\n\u27e8199\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder: variant wgpu::AddressMode::ClampToBorder - `AddressMode::ClampToBorder`\n\u27e8200\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html: enum wgpu::ShaderModel - ShaderModel\n\u27e8201\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html: enum wgpu::ShaderSource - ShaderSource\n\u27e8202\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html: enum wgpu::StencilOperation - StencilOperation\n\u27e8203\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html: enum wgpu::StorageTextureAccess - StorageTextureAccess\n\u27e8204\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html: enum wgpu::StoreOp - StoreOp\n\u27e8205\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html: enum wgpu::SurfaceError - SurfaceError\n\u27e8206\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html: enum wgpu::SurfaceStatus - SurfaceStatus\n\u27e8207\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html: enum wgpu::SurfaceTarget - SurfaceTarget\n\u27e8208\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html: enum wgpu::SurfaceTargetUnsafe - SurfaceTargetUnsafe\n\u27e8209\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html: enum wgpu::TextureAspect - TextureAspect\n\u27e8210\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html: enum wgpu::TextureDimension - TextureDimension\n\u27e8211\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html: enum wgpu::TextureFormat - TextureFormat\n\u27e8212\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html: enum wgpu::TextureSampleType - TextureSampleType\n\u27e8213\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html: enum wgpu::TextureViewDimension - TextureViewDimension\n\u27e8214\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Trace.html: enum wgpu::Trace - Trace\n\u27e8215\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html: enum wgpu::VertexFormat - VertexFormat\n\u27e8216\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html: enum wgpu::VertexStepMode - VertexStepMode\n\u27e8217\u27e9 https://docs.rs/wgpu/latest/wgpu/#constants: \u00a7\n\u27e8218\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html: constant wgpu::COPY_BUFFER_ALIGNMENT - COPY_BUFFER_ALIGNMENT\n\u27e8219\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html: constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT - COPY_BYTES_PER_ROW_ALIGNMENT\n\u27e8220\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row: field wgpu::TexelCopyBufferLayout::bytes_per_row - `bytes_per_row`\n\u27e8221\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html: constant wgpu::MAP_ALIGNMENT - MAP_ALIGNMENT\n\u27e8222\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html: constant wgpu::PUSH_CONSTANT_ALIGNMENT - PUSH_CONSTANT_ALIGNMENT\n\u27e8223\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants: writes to push constant storage\n\u27e8224\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html: constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT - QUERY_RESOLVE_BUFFER_ALIGNMENT\n\u27e8225\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set: offset into the query resolve buffer\n\u27e8226\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html: constant wgpu::QUERY_SET_MAX_QUERIES - QUERY_SET_MAX_QUERIES\n\u27e8227\u27e9 https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html: struct wgpu_types::QuerySetDescriptor - `QuerySetDescriptor`\n\u27e8228\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html: constant wgpu::QUERY_SIZE - QUERY_SIZE\n\u27e8229\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html: constant wgpu::VERTEX_STRIDE_ALIGNMENT - VERTEX_STRIDE_ALIGNMENT\n\u27e8230\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride: Vertex buffer strides\n\u27e8231\u27e9 https://docs.rs/wgpu/latest/wgpu/#traits: \u00a7\n\u27e8232\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html: trait wgpu::UncapturedErrorHandler - UncapturedErrorHandler\n\u27e8233\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html: trait wgpu::WasmNotSend - WasmNotSend\n\u27e8234\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html: trait wgpu::WasmNotSendSync - WasmNotSendSync\n\u27e8235\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html: trait wgpu::WasmNotSync - WasmNotSync\n\u27e8236\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html: trait wgpu::WindowHandle - WindowHandle\n\u27e8237\u27e9 https://docs.rs/wgpu/latest/wgpu/#types: \u00a7\n\u27e8238\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html: type wgpu::AccelerationStructureFlags - AccelerationStructureFlags\n\u27e8239\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html: type wgpu::AccelerationStructureGeometryFlags - AccelerationStructureGeometryFlags\n\u27e8240\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html: type wgpu::AccelerationStructureUpdateMode - AccelerationStructureUpdateMode\n\u27e8241\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html: type wgpu::BlasGeometrySizeDescriptors - BlasGeometrySizeDescriptors\n\u27e8242\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html: type wgpu::BlasTriangleGeometrySizeDescriptor - BlasTriangleGeometrySizeDescriptor\n\u27e8243\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html: type wgpu::BufferAddress - BufferAddress\n\u27e8244\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html: type wgpu::BufferDescriptor - BufferDescriptor\n\u27e8245\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html: type wgpu::BufferSize - BufferSize\n\u27e8246\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html: type wgpu::CommandEncoderDescriptor - CommandEncoderDescriptor\n\u27e8247\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html: type wgpu::CreateBlasDescriptor - CreateBlasDescriptor\n\u27e8248\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html: type wgpu::CreateTlasDescriptor - CreateTlasDescriptor\n\u27e8249\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html: type wgpu::DeviceDescriptor - DeviceDescriptor\n\u27e8250\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html: type wgpu::DynamicOffset - DynamicOffset\n\u27e8251\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group: dynamic bind group offsets\n\u27e8252\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html: type wgpu::ErrorSource - ErrorSource\n\u27e8253\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html: type wgpu::ImageCopyBuffer - ImageCopyBuffer\n\u27e8254\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html: type wgpu::ImageCopyTexture - ImageCopyTexture\n\u27e8255\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html: type wgpu::ImageCopyTextureTagged - ImageCopyTextureTagged\n\u27e8256\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html: type wgpu::ImageDataLayout - ImageDataLayout\n\u27e8257\u27e9 https://docs.rs/wgpu/latest/wgpu/type.Label.html: type wgpu::Label - Label\n\u27e8258\u27e9 https://docs.rs/wgpu/latest/wgpu/type.PollType.html: type wgpu::PollType - PollType\n\u27e8259\u27e9 https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html: type wgpu::QuerySetDescriptor - QuerySetDescriptor\n\u27e8260\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html: type wgpu::RenderBundleDescriptor - RenderBundleDescriptor\n\u27e8261\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html: type wgpu::RequestAdapterOptions - RequestAdapterOptions\n\u27e8262\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html: type wgpu::SamplerDescriptor - SamplerDescriptor\n\u27e8263\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html: type wgpu::ShaderLocation - ShaderLocation\n\u27e8264\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html: type wgpu::ShaderModuleDescriptorMsl - ShaderModuleDescriptorMsl\n\u27e8265\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html: type wgpu::ShaderModuleDescriptorPassthrough - ShaderModuleDescriptorPassthrough\n\u27e8266\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough: method wgpu::Device::create_shader_module_passthrough - `Device::create_shader_module_passthrough`\n\u27e8267\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html: type wgpu::ShaderModuleDescriptorSpirV - ShaderModuleDescriptorSpirV\n\u27e8268\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html: type wgpu::SurfaceConfiguration - SurfaceConfiguration\n\u27e8269\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html: type wgpu::TexelCopyBufferInfo - TexelCopyBufferInfo\n\u27e8270\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html: type wgpu::TexelCopyTextureInfo - TexelCopyTextureInfo\n\u27e8271\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html: type wgpu::TextureDescriptor - TextureDescriptor\n\u27e8272\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html: type wgpu::TextureViewDescriptor - TextureViewDescriptor\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 51009,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119019.8537237"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/wgpu",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [52 releases](https://lib.rs/crates/wgpu/versions) (10 stable)\n25.0.2 |  May 24, 2025   \n---|---  \n24.0.5 |  May 24, 2025   \n24.0.3 |  Mar 19, 2025   \n23.0.1 |  Nov 25, 2024   \n0.2.2 |  Mar 31, 2019   \n#**1** in [Graphics APIs](https://lib.rs/rendering/graphics-api \"Crates that provide direct access to the hardware's or the operating system's rendering capabilities.\")\nDownload history 127843/week @ 2025-03-10 128868/week @ 2025-03-17 119322/week @ 2025-03-24 105203/week @ 2025-03-31 107417/week @ 2025-04-07 106179/week @ 2025-04-14 127114/week @ 2025-04-21 124947/week @ 2025-04-28 125557/week @ 2025-05-05 120766/week @ 2025-05-12 117532/week @ 2025-05-19 121238/week @ 2025-05-26 112860/week @ 2025-06-02 109169/week @ 2025-06-09 117007/week @ 2025-06-16 115223/week @ 2025-06-23\n**464,063** downloads per month Used in [**2,150** crates (544 directly)](https://lib.rs/crates/wgpu/rev)\n**MIT/Apache**\n3.5MB  **66K** SLoC\n# wgpu\n![](https://img.gs/czjpqfbdkz/160,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/logo.png)\n[![Matrix Space](https://img.shields.io/static/v1?label=Space&message=%23Wgpu&color=blue&logo=matrix)](https://matrix.to/#/#Wgpu:matrix.org) [![Dev Matrix](https://img.shields.io/static/v1?label=devs&message=%23wgpu&color=blueviolet&logo=matrix)](https://matrix.to/#/#wgpu:matrix.org) [![User Matrix](https://img.shields.io/static/v1?label=users&message=%23wgpu-users&color=blueviolet&logo=matrix)](https://matrix.to/#/#wgpu-users:matrix.org) [![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/gfx-rs/wgpu/workflows/CI/badge.svg)](https://github.com/gfx-rs/wgpu/actions) [![codecov.io](https://img.gs/czjpqfbdkz/full/https://codecov.io/gh/gfx-rs/wgpu/branch/trunk/graph/badge.svg?token=84qJTesmeS)](https://codecov.io/gh/gfx-rs/wgpu)\n``wgpu`` is a cross-platform, safe, pure-rust graphics API. It runs natively on Vulkan, Metal, D3D12, and OpenGL; and on top of WebGL2 and WebGPU on wasm.\nThe API is based on the [WebGPU standard](https://gpuweb.github.io/gpuweb/). It serves as the core of the WebGPU integration in Firefox, Servo, and Deno.\n## Quick Links\nDocs | Examples | Changelog  \n---|---|---  \n[v25](https://docs.rs/wgpu/) | [v25](https://github.com/gfx-rs/wgpu/tree/v25/examples#readme) | [v25](https://github.com/gfx-rs/wgpu/releases)  \n[``trunk``](https://wgpu.rs/doc/wgpu/) | [``trunk``](https://github.com/gfx-rs/wgpu/tree/trunk/examples#readme) | [``trunk``](https://github.com/gfx-rs/wgpu/blob/trunk/CHANGELOG.md#unreleased)  \nContributors are welcome! See [CONTRIBUTING.md](https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/CONTRIBUTING.md) for more information.\n## Repo Overview\nThe repository hosts the following libraries:\n  * [![Crates.io](https://img.shields.io/crates/v/wgpu.svg?label=wgpu)](https://crates.io/crates/wgpu) [![docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu/badge.svg)](https://docs.rs/wgpu/) - User facing Rust API.\n  * [![Crates.io](https://img.shields.io/crates/v/wgpu-core.svg?label=wgpu-core)](https://lib.rs/crates/wgpu-core) [![docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-core/badge.svg)](https://docs.rs/wgpu-core/) - Internal safe implementation.\n  * [![Crates.io](https://img.shields.io/crates/v/wgpu-hal.svg?label=wgpu-hal)](https://lib.rs/crates/wgpu-hal) [![docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-hal/badge.svg)](https://docs.rs/wgpu-hal/) - Internal unsafe GPU API abstraction layer.\n  * [![Crates.io](https://img.shields.io/crates/v/wgpu-types.svg?label=wgpu-types)](https://lib.rs/crates/wgpu-types) [![docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-types/badge.svg)](https://docs.rs/wgpu-types/) - Rust types shared between all crates.\n  * [![Crates.io](https://img.shields.io/crates/v/naga.svg?label=naga)](https://lib.rs/crates/naga) [![docs.rs](https://img.gs/czjpqfbdkz/full/https://docs.rs/naga/badge.svg)](https://docs.rs/naga/) - Stand-alone shader translation library.\n  * [![Crates.io](https://img.shields.io/crates/v/deno_webgpu.svg?label=deno_webgpu)](https://lib.rs/crates/deno_webgpu) - WebGPU implementation for the Deno JavaScript/TypeScript runtime\n\n\nThe following binaries:\n  * [![Crates.io](https://img.shields.io/crates/v/naga-cli.svg?label=naga-cli)](https://lib.rs/crates/naga-cli) - Tool for translating shaders between different languages using ``naga``.\n  * [![Crates.io](https://img.shields.io/crates/v/wgpu-info.svg?label=wgpu-info)](https://lib.rs/crates/wgpu-info) - Tool for getting information on GPUs in the system.\n  * ``cts_runner`` - WebGPU Conformance Test Suite runner using ``deno_webgpu``.\n  * ``player`` - standalone application for replaying the API traces.\n\n\nFor an overview of all the components in the gfx-rs ecosystem, see [the big picture](https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/big-picture.png).\n## Getting Started\n### Play with our Examples\nGo to <https://wgpu.rs/examples/> to play with our examples in your browser. Requires a browser supporting WebGPU for the WebGPU examples.\n### Rust\nRust examples can be found at [examples](https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/examples). You can run the examples natively with ````cargo``` run`` --`bin` wgpu-examples `<`example`>````.\nIf you are new to wgpu and graphics programming, we recommend starting with <https://sotrh.github.io/learn-wgpu/>.\nTo run the examples in a browser, run ````cargo``` xtask run-wasm```. Then open ``http://localhost:8000`` in your browser, and you can choose an example to run. Naturally, in order to display any of the WebGPU based examples, you need to make sure your browser supports it.\n### C/C++\nTo use wgpu in C/C++, you need [wgpu-native](https://github.com/gfx-rs/wgpu-native).\nIf you are looking for a wgpu C++ tutorial, look at the following:\n  * <https://eliemichel.github.io/LearnWebGPU/>\n\n\n### Others\nIf you want to use wgpu in other languages, there are many bindings to wgpu-native from languages such as Python, D, Julia, Kotlin, and more. See [the list](https://github.com/gfx-rs/wgpu-native#bindings).\n## Community\nWe have the Matrix space [![Matrix Space](https://img.shields.io/static/v1?label=Space&message=%23Wgpu&color=blue&logo=matrix)](https://matrix.to/#/#Wgpu:matrix.org) with a few different rooms that form the wgpu community:\n  * [![Wgpu Matrix](https://img.shields.io/static/v1?label=wgpu-devs&message=%23wgpu&color=blueviolet&logo=matrix)](https://matrix.to/#/#wgpu:matrix.org) - discussion of the wgpu's development.\n  * [![Naga Matrix](https://img.shields.io/static/v1?label=naga-devs&message=%23naga&color=blueviolet&logo=matrix)](https://matrix.to/#/#naga:matrix.org) - discussion of the naga's development.\n  * [![User Matrix](https://img.shields.io/static/v1?label=wgpu-users&message=%23wgpu-users&color=blueviolet&logo=matrix)](https://matrix.to/#/#wgpu-users:matrix.org) - discussion of using the library and the surrounding ecosystem.\n  * [![Random Matrix](https://img.shields.io/static/v1?label=random&message=%23wgpu-random&color=blueviolet&logo=matrix)](https://matrix.to/#/#wgpu-random:matrix.org) - discussion of everything else.\n\n\n## Wiki\nWe have a [wiki](https://github.com/gfx-rs/wgpu/wiki) that serves as a knowledge base.\n## Extension Specifications\nWhile the core of wgpu is based on the WebGPU standard, we also support extensions that allow for features that the standard does not have yet. For high-level documentation on how to use these extensions, see the individual specifications:\n\ud83e\uddeaEXPERIMENTAL\ud83e\uddea APIs are subject to change and may allow undefined behavior if used incorrectly.\n  * \ud83e\uddeaEXPERIMENTAL\ud83e\uddea [Ray Tracing](https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/api-specs/ray_tracing.md).\n\n\n## Supported Platforms\nAPI | Windows | Linux/Android | macOS/iOS | Web (wasm)  \n---|---|---|---|---  \nVulkan | \u2705 | \u2705 | \ud83c\udf0b |   \nMetal |  |  | \u2705 |   \nDX12 | \u2705 |  |  |   \nOpenGL | \ud83c\udd97 (GL 3.3+) | \ud83c\udd97 (GL ES 3.0+) | \ud83d\udcd0 | \ud83c\udd97 (WebGL2)  \nWebGPU |  |  |  | \u2705  \n\u2705 = First Class Support \ud83c\udd97 = Downlevel/Best Effort Support \ud83d\udcd0 = Requires the [ANGLE](https://lib.rs/crates/wgpu#readme-angle) translation layer (GL ES 3.0 only) \ud83c\udf0b = Requires the [MoltenVK](https://vulkan.lunarg.com/sdk/home#mac) translation layer \ud83d\udee0\ufe0f = Unsupported, though open to contributions\n### Shader Support\nwgpu supports shaders in [WGSL](https://gpuweb.github.io/gpuweb/wgsl/), SPIR-V, and GLSL. Both [HLSL](https://github.com/Microsoft/DirectXShaderCompiler) and [GLSL](https://github.com/KhronosGroup/glslang) have compilers to target SPIR-V. All of these shader languages can be used with any backend as we handle all of the conversions. Additionally, support for these shader inputs is not going away.\nWhile WebGPU does not support any shading language other than WGSL, we will automatically convert your non-WGSL shaders if you're running on WebGPU.\nWGSL is always supported by default, but GLSL and SPIR-V need features enabled to compile in support.\nNote that the WGSL specification is still under development, so the [draft specification](https://gpuweb.github.io/gpuweb/wgsl/) does not exactly describe what ``wgpu`` supports. See [below](https://lib.rs/crates/wgpu#readme-tracking-the-webgpu-and-wgsl-draft-specifications) for details.\nTo enable SPIR-V shaders, enable the ``spirv`` feature of wgpu. To enable GLSL shaders, enable the ``glsl`` feature of wgpu.\n### Angle\n[Angle](http://angleproject.org) is a translation layer from GLES to other backends developed by Google. We support running our GLES3 backend over it in order to reach platforms DX11 support, which aren't accessible otherwise. In order to run with Angle, the \"angle\" feature has to be enabled, and Angle libraries placed in a location visible to the application. These binaries can be downloaded from [gfbuild-angle](https://github.com/DileSoft/gfbuild-angle) artifacts, [manual compilation](https://github.com/google/angle/blob/main/doc/DevSetup.md) may be required on Macs with Apple silicon.\nOn Windows, you generally need to copy them into the working directory, in the same directory as the executable, or somewhere in your path. On Linux, you can point to them using ``LD_LIBRARY_PATH`` environment.\n### MSRV policy\nDue to complex dependants, we have two MSRV policies:\n  * ``naga``, ``wgpu-core``, ``wgpu-hal``, and ``wgpu-types``'s MSRV is **1.76**.\n  * The rest of the workspace has an MSRV of **1.84**.\n\n\nIt is enforced on CI (in \"/.github/workflows/ci.yml\") with the ``CORE_MSRV`` and ``REPO_MSRV`` variables. This version can only be upgraded in breaking releases, though we release a breaking version every three months.\nThe ``naga``, ``wgpu-core``, ``wgpu-hal``, and ``wgpu-types`` crates should never require an MSRV ahead of Firefox's MSRV for nightly builds, as determined by the value of ``MINIMUM_RUST_VERSION`` in [``python/mozboot/mozboot/util.py``](https://searchfox.org/mozilla-central/source/python/mozboot/mozboot/util.py).\n## Environment Variables\nAll testing and example infrastructure share the same set of environment variables that determine which Backend/GPU it will run on.\n  * ``WGPU_ADAPTER_NAME`` with a substring of the name of the adapter you want to use (ex. ```1080``` will match ```NVIDIA` GeForce 1080ti``).\n  * ``WGPU_BACKEND`` with a comma-separated list of the backends you want to use (``vulkan``, ``metal``, ``dx12``, or ``gl``).\n  * ``WGPU_POWER_PREF`` with the power preference to choose when a specific adapter name isn't specified (``high``, ``low`` or ``none``)\n  * ```WGPU_DX12_COMPILER``` with the DX12 shader compiler you wish to use (``dxc``, ``static-dxc``, or ``fxc``). Note that ``dxc`` requires ``dxil`.`dll`` and ``dxcompiler`.`dll`` to be in the working directory, and ``static-dxc`` requires the ``static-dxc`` crate feature to be enabled. Otherwise, it will fall back to ``fxc``.\n  * ``WGPU_GLES_MINOR_VERSION`` with the minor OpenGL ES 3 version number to request (```0```, ```1```, ```2``` or ``automatic``).\n  * ``WGPU_ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER`` with a boolean whether non-compliant drivers are enumerated (```0``` for false, ```1``` for true).\n\n\nWhen running the CTS, use the variables ``DENO_WEBGPU_ADAPTER_NAME``, ``DENO_WEBGPU_BACKEND``, ``DENO_WEBGPU_POWER_PREFERENCE``.\n## Testing\nWe have multiple methods of testing, each of which tests different qualities about wgpu. We automatically run our tests on CI. The current state of CI testing:\nPlatform/Backend | Tests | Notes  \n---|---|---  \nWindows/DX12 | \u2714\ufe0f | using WARP  \nWindows/OpenGL | \u2714\ufe0f | using llvmpipe  \nMacOS/Metal | \u2714\ufe0f | using hardware runner  \nLinux/Vulkan | \u2714\ufe0f | using lavapipe  \nLinux/OpenGL ES | \u2714\ufe0f | using llvmpipe  \nChrome/WebGL | \u2714\ufe0f | using swiftshader  \nChrome/WebGPU | \u274c | not set up  \n### Core Test Infrastructure\nWe use a tool called [````cargo``` nextest```](https://github.com/nextest-rs/nextest) to run our tests. To install it, run ````cargo``` install cargo-nextest```.\nTo run the test suite:\n```\n```cargo``` xtask test`\n`\n```\n\nTo run the test suite on WebGL (currently incomplete):\n```\n```cd``` wgpu`\n``wasm-pack``` test`` --`headless``` --`chrome``` --`no-default-features``` --`features` webgl`` --`workspace``\n`\n```\n\nThis will automatically run the tests using a packaged browser. Remove ``--headless`` to run the tests with whatever browser you wish at ``http://localhost:8000``.\nIf you are a user and want a way to help contribute to wgpu, we always need more help writing test cases.\n### WebGPU Conformance Test Suite\nWebGPU includes a Conformance Test Suite to validate that implementations are working correctly. We can run this CTS against wgpu.\nTo run the CTS, first, you need to check it out:\n```\n```git``` clone https://github.com/gpuweb/cts.git`\n``cd``` cts`\n``#``` works in bash and powershell\n`git checkout $(cat ../cts_runner/revision.txt)\n`\n```\n\nTo run a given set of tests:\n```\n``#` Must be inside the `cts` folder we just checked out`,` `else` this will fail\ncargo run `-``-`manifest`-`path `..``/`Cargo`.`toml `-`p cts_runner `-``-`bin cts_runner `-``-` `.``/`tools`/`run_deno `-``-`verbose ``\"`<test string>`\"``\n`\n```\n\nTo find the full list of tests, go to the [online cts viewer](https://gpuweb.github.io/cts/standalone/?runnow=0&worker=0&debug=0&q=webgpu:*).\nThe list of currently enabled CTS tests can be found [here](https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/cts_runner/test.lst).\n## Tracking the WebGPU and WGSL draft specifications\nThe ``wgpu`` crate is meant to be an idiomatic Rust translation of the [WebGPU API](https://www.w3.org/TR/webgpu/). That specification, along with its shading language, [WGSL](https://gpuweb.github.io/gpuweb/wgsl/), are both still in the \"Working Draft\" phase, and while the general outlines are stable, details change frequently. Until the specification is stabilized, the ``wgpu`` crate and the version of WGSL it implements will likely differ from what is specified, as the implementation catches up.\nExactly which WGSL features ``wgpu`` supports depends on how you are using it:\n  * When running as native code, ``wgpu`` uses the [Naga](https://github.com/gfx-rs/naga/) crate to translate WGSL code into the shading language of your platform's native GPU API. Naga has [a milestone](https://github.com/gfx-rs/naga/milestone/4) for catching up to the WGSL specification, but in general, there is no up-to-date summary of the differences between Naga and the WGSL spec.\n  * When running in a web browser (by compilation to WebAssembly) without the ````\"`webgl`\"```` feature enabled, ``wgpu`` relies on the browser's own WebGPU implementation. WGSL shaders are simply passed through to the browser, so that determines which WGSL features you can use.\n  * When running in a web browser with ``wgpu``'s ````\"`webgl`\"```` feature enabled, ``wgpu`` uses Naga to translate WGSL programs into GLSL. This uses the same version of Naga as if you were running ``wgpu`` as native code.\n\n\n## Coordinate Systems\nwgpu uses the coordinate systems of D3D and Metal:\nRender | Texture  \n---|---  \n![render_coordinates](https://img.gs/czjpqfbdkz/800,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/render_coordinates.png) | ![texture_coordinates](https://img.gs/czjpqfbdkz/800,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/texture_coordinates.png)  \n#### Dependencies\n~2\u201332MB  ~467K SLoC\n  * [arrayvec](https://lib.rs/crates/arrayvec \"0.7.6\")\n  * [bitflags](https://lib.rs/crates/bitflags \"new\") 2.9\n  * [document-features](https://lib.rs/crates/document-features \"0.2.11\")\n  * [hashbrown](https://lib.rs/crates/hashbrown \"new\") 0.15.2[+default-hasher](https://lib.rs/crates/hashbrown/features#feature-default-hasher)[+inline-more](https://lib.rs/crates/hashbrown/features#feature-inline-more)\n  * [log](https://lib.rs/crates/log \"0.4\")\n  * [parking_lot](https://lib.rs/crates/parking_lot \"0.12.1\")\n  * [portable-atomic](https://lib.rs/crates/portable-atomic \"1\") not atomic 64\n  * [profiling](https://lib.rs/crates/profiling \"1\")\n  * [raw-window-handle](https://lib.rs/crates/raw-window-handle \"new\") 0.6.2[+std](https://lib.rs/crates/raw-window-handle/features#feature-std)\n  * [static_assertions](https://lib.rs/crates/static_assertions \"1.1.0\")\n  * [wgpu-types](https://lib.rs/crates/wgpu-types \"new\") 25.0\n  * [js-sys](https://lib.rs/crates/js-sys \"0.3.70\")[+default](https://lib.rs/crates/js-sys/features#feature-default) wasm32 not emscripten\n  * [noop?](https://lib.rs/crates/wgpu/features#feature-noop \"optional feature\") [webgl?](https://lib.rs/crates/wgpu/features#feature-webgl \"optional feature\") [smallvec](https://lib.rs/crates/smallvec \"1\") wasm32 not emscripten not wasm32 emscripten\n  * [wasm-bindgen](https://lib.rs/crates/wasm-bindgen \"0.2.97\") wasm32 not emscripten\n  * [webgpu?](https://lib.rs/crates/wgpu/features#feature-webgpu \"optional feature\") [wasm-bindgen-futures](https://lib.rs/crates/wasm-bindgen-futures \"0.4.45\") wasm32 not emscripten\n  * [web-sys](https://lib.rs/crates/web-sys \"0.3.74\")[+HtmlCanvasElement](https://lib.rs/crates/web-sys/features#feature-HtmlCanvasElement)[+OffscreenCanvas](https://lib.rs/crates/web-sys/features#feature-OffscreenCanvas) wasm32 not emscripten\n  * [noop?](https://lib.rs/crates/wgpu/features#feature-noop \"optional feature\") [webgl?](https://lib.rs/crates/wgpu/features#feature-webgl \"optional feature\") [wgpu-hal](https://lib.rs/crates/wgpu-hal \"new\") 25.0 wasm32 not emscripten not wasm32 emscripten\n  * [glsl?](https://lib.rs/crates/wgpu/features#feature-glsl \"optional feature\") [naga-ir?](https://lib.rs/crates/wgpu/features#feature-naga-ir \"optional feature\") [spirv?](https://lib.rs/crates/wgpu/features#feature-spirv \"optional feature\") [webgpu?](https://lib.rs/crates/wgpu/features#feature-webgpu \"optional feature\") [naga](https://lib.rs/crates/naga \"new\") 25.0\n  * [angle?](https://lib.rs/crates/wgpu/features#feature-angle \"optional feature\") [counters?](https://lib.rs/crates/wgpu/features#feature-counters \"optional feature\") [dx12?](https://lib.rs/crates/wgpu/features#feature-dx12 \"optional feature\") [fragile-send\u2026atomic-wasm?](https://lib.rs/crates/wgpu/features#feature-fragile-send-sync-non-atomic-wasm \"optional feature\") [gles?](https://lib.rs/crates/wgpu/features#feature-gles \"optional feature\") [glsl?](https://lib.rs/crates/wgpu/features#feature-glsl \"optional feature\") [metal?](https://lib.rs/crates/wgpu/features#feature-metal \"optional feature\") [noop?](https://lib.rs/crates/wgpu/features#feature-noop \"optional feature\") [serde?](https://lib.rs/crates/wgpu/features#feature-serde \"optional feature\") [spirv?](https://lib.rs/crates/wgpu/features#feature-spirv \"optional feature\") [static-dxc?](https://lib.rs/crates/wgpu/features#feature-static-dxc \"optional feature\") [strict_asserts?](https://lib.rs/crates/wgpu/features#feature-strict_asserts \"optional feature\") [vulkan?](https://lib.rs/crates/wgpu/features#feature-vulkan \"optional feature\") [vulkan-portability?](https://lib.rs/crates/wgpu/features#feature-vulkan-portability \"optional feature\") [webgl?](https://lib.rs/crates/wgpu/features#feature-webgl \"optional feature\") [wgsl?](https://lib.rs/crates/wgpu/features#feature-wgsl \"optional feature\") [wgpu-core](https://lib.rs/crates/wgpu-core \"new\") 25.0\n\n\n  * build `build.rs`\n  * build  [cfg_aliases](https://lib.rs/crates/cfg_aliases \"0.2.1\")\n  * dev  [bytemuck](https://lib.rs/crates/bytemuck \"1.22\")[+extern_crate_alloc](https://lib.rs/crates/bytemuck/features#feature-extern_crate_alloc)[+min_const_generics](https://lib.rs/crates/bytemuck/features#feature-min_const_generics)\n\n\n#### [Other feature](https://lib.rs/crates/wgpu/features)\n  * [custom](https://lib.rs/crates/wgpu/features#feature-custom)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  52 releases\u27e81\u27e9 (10 stable)\n25.0.2 |  May 24, 2025   \n---|---  \n24.0.5 |  May 24, 2025   \n24.0.3 |  Mar 19, 2025   \n23.0.1 |  Nov 25, 2024   \n0.2.2 |  Mar 31, 2019   \n#**1** in Graphics APIs\u27e82\u27e9\nDownload history 127843/week @ 2025-03-10 128868/week @ 2025-03-17 119322/week @ 2025-03-24 105203/week @ 2025-03-31 107417/week @ 2025-04-07 106179/week @ 2025-04-14 127114/week @ 2025-04-21 124947/week @ 2025-04-28 125557/week @ 2025-05-05 120766/week @ 2025-05-12 117532/week @ 2025-05-19 121238/week @ 2025-05-26 112860/week @ 2025-06-02 109169/week @ 2025-06-09 117007/week @ 2025-06-16 115223/week @ 2025-06-23\n**464,063** downloads per month Used in **2,150** crates (544 directly)\u27e83\u27e9\n**MIT/Apache**\n3.5MB  **66K** SLoC\n# wgpu\n![](https://img.gs/czjpqfbdkz/160,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/logo.png)\n![Matrix Space\u27e84\u27e9](https://matrix.to/#/#Wgpu:matrix.org) ![Dev Matrix\u27e85\u27e9](https://matrix.to/#/#wgpu:matrix.org) ![User Matrix\u27e86\u27e9](https://matrix.to/#/#wgpu-users:matrix.org) ![Build Status\u27e87\u27e9](https://github.com/gfx-rs/wgpu/actions) ![codecov.io\u27e88\u27e9](https://codecov.io/gh/gfx-rs/wgpu)\n``wgpu`` is a cross-platform, safe, pure-rust graphics API. It runs natively on Vulkan, Metal, D3D12, and OpenGL; and on top of WebGL2 and WebGPU on wasm.\nThe API is based on the WebGPU standard\u27e89\u27e9. It serves as the core of the WebGPU integration in Firefox, Servo, and Deno.\n## Quick Links\nDocs | Examples | Changelog  \n---|---|---  \nv25\u27e810\u27e9 | v25\u27e811\u27e9 | v25\u27e812\u27e9  \n``trunk``\u27e813\u27e9 | ``trunk``\u27e814\u27e9 | ``trunk``\u27e815\u27e9  \nContributors are welcome! See CONTRIBUTING.md\u27e816\u27e9 for more information.\n## Repo Overview\nThe repository hosts the following libraries:\n  * ![Crates.io\u27e817\u27e9](https://crates.io/crates/wgpu) ![docs.rs\u27e818\u27e9](https://docs.rs/wgpu/) - User facing Rust API.\n  * ![Crates.io\u27e819\u27e9](https://lib.rs/crates/wgpu-core) ![docs.rs\u27e820\u27e9](https://docs.rs/wgpu-core/) - Internal safe implementation.\n  * ![Crates.io\u27e821\u27e9](https://lib.rs/crates/wgpu-hal) ![docs.rs\u27e822\u27e9](https://docs.rs/wgpu-hal/) - Internal unsafe GPU API abstraction layer.\n  * ![Crates.io\u27e823\u27e9](https://lib.rs/crates/wgpu-types) ![docs.rs\u27e824\u27e9](https://docs.rs/wgpu-types/) - Rust types shared between all crates.\n  * ![Crates.io\u27e825\u27e9](https://lib.rs/crates/naga) ![docs.rs\u27e826\u27e9](https://docs.rs/naga/) - Stand-alone shader translation library.\n  * ![Crates.io\u27e827\u27e9](https://lib.rs/crates/deno_webgpu) - WebGPU implementation for the Deno JavaScript/TypeScript runtime\n\n\nThe following binaries:\n  * ![Crates.io\u27e828\u27e9](https://lib.rs/crates/naga-cli) - Tool for translating shaders between different languages using ``naga``.\n  * ![Crates.io\u27e829\u27e9](https://lib.rs/crates/wgpu-info) - Tool for getting information on GPUs in the system.\n  * ``cts_runner`` - WebGPU Conformance Test Suite runner using ``deno_webgpu``.\n  * ``player`` - standalone application for replaying the API traces.\n\n\nFor an overview of all the components in the gfx-rs ecosystem, see the big picture\u27e830\u27e9.\n## Getting Started\n### Play with our Examples\nGo to <https://wgpu.rs/examples/> to play with our examples in your browser. Requires a browser supporting WebGPU for the WebGPU examples.\n### Rust\nRust examples can be found at examples\u27e831\u27e9. You can run the examples natively with ````cargo``` run`` --`bin` wgpu-examples `<`example`>````.\nIf you are new to wgpu and graphics programming, we recommend starting with <https://sotrh.github.io/learn-wgpu/>.\nTo run the examples in a browser, run ````cargo``` xtask run-wasm```. Then open ``http://localhost:8000`` in your browser, and you can choose an example to run. Naturally, in order to display any of the WebGPU based examples, you need to make sure your browser supports it.\n### C/C++\nTo use wgpu in C/C++, you need wgpu-native\u27e832\u27e9.\nIf you are looking for a wgpu C++ tutorial, look at the following:\n  * <https://eliemichel.github.io/LearnWebGPU/>\n\n\n### Others\nIf you want to use wgpu in other languages, there are many bindings to wgpu-native from languages such as Python, D, Julia, Kotlin, and more. See the list\u27e833\u27e9.\n## Community\nWe have the Matrix space ![Matrix Space\u27e84\u27e9](https://matrix.to/#/#Wgpu:matrix.org) with a few different rooms that form the wgpu community:\n  * ![Wgpu Matrix\u27e834\u27e9](https://matrix.to/#/#wgpu:matrix.org) - discussion of the wgpu's development.\n  * ![Naga Matrix\u27e835\u27e9](https://matrix.to/#/#naga:matrix.org) - discussion of the naga's development.\n  * ![User Matrix\u27e836\u27e9](https://matrix.to/#/#wgpu-users:matrix.org) - discussion of using the library and the surrounding ecosystem.\n  * ![Random Matrix\u27e837\u27e9](https://matrix.to/#/#wgpu-random:matrix.org) - discussion of everything else.\n\n\n## Wiki\nWe have a wiki\u27e838\u27e9 that serves as a knowledge base.\n## Extension Specifications\nWhile the core of wgpu is based on the WebGPU standard, we also support extensions that allow for features that the standard does not have yet. For high-level documentation on how to use these extensions, see the individual specifications:\n\ud83e\uddeaEXPERIMENTAL\ud83e\uddea APIs are subject to change and may allow undefined behavior if used incorrectly.\n  * \ud83e\uddeaEXPERIMENTAL\ud83e\uddea Ray Tracing\u27e839\u27e9.\n\n\n## Supported Platforms\nAPI | Windows | Linux/Android | macOS/iOS | Web (wasm)  \n---|---|---|---|---  \nVulkan | \u2705 | \u2705 | \ud83c\udf0b |   \nMetal |  |  | \u2705 |   \nDX12 | \u2705 |  |  |   \nOpenGL | \ud83c\udd97 (GL 3.3+) | \ud83c\udd97 (GL ES 3.0+) | \ud83d\udcd0 | \ud83c\udd97 (WebGL2)  \nWebGPU |  |  |  | \u2705  \n\u2705 = First Class Support \ud83c\udd97 = Downlevel/Best Effort Support \ud83d\udcd0 = Requires the ANGLE\u27e840\u27e9 translation layer (GL ES 3.0 only) \ud83c\udf0b = Requires the MoltenVK\u27e841\u27e9 translation layer \ud83d\udee0\ufe0f = Unsupported, though open to contributions\n### Shader Support\nwgpu supports shaders in WGSL\u27e842\u27e9, SPIR-V, and GLSL. Both HLSL\u27e843\u27e9 and GLSL\u27e844\u27e9 have compilers to target SPIR-V. All of these shader languages can be used with any backend as we handle all of the conversions. Additionally, support for these shader inputs is not going away.\nWhile WebGPU does not support any shading language other than WGSL, we will automatically convert your non-WGSL shaders if you're running on WebGPU.\nWGSL is always supported by default, but GLSL and SPIR-V need features enabled to compile in support.\nNote that the WGSL specification is still under development, so the draft specification\u27e842\u27e9 does not exactly describe what ``wgpu`` supports. See below\u27e845\u27e9 for details.\nTo enable SPIR-V shaders, enable the ``spirv`` feature of wgpu. To enable GLSL shaders, enable the ``glsl`` feature of wgpu.\n### Angle\nAngle\u27e846\u27e9 is a translation layer from GLES to other backends developed by Google. We support running our GLES3 backend over it in order to reach platforms DX11 support, which aren't accessible otherwise. In order to run with Angle, the \"angle\" feature has to be enabled, and Angle libraries placed in a location visible to the application. These binaries can be downloaded from gfbuild-angle\u27e847\u27e9 artifacts, manual compilation\u27e848\u27e9 may be required on Macs with Apple silicon.\nOn Windows, you generally need to copy them into the working directory, in the same directory as the executable, or somewhere in your path. On Linux, you can point to them using ``LD_LIBRARY_PATH`` environment.\n### MSRV policy\nDue to complex dependants, we have two MSRV policies:\n  * ``naga``, ``wgpu-core``, ``wgpu-hal``, and ``wgpu-types``'s MSRV is **1.76**.\n  * The rest of the workspace has an MSRV of **1.84**.\n\n\nIt is enforced on CI (in \"/.github/workflows/ci.yml\") with the ``CORE_MSRV`` and ``REPO_MSRV`` variables. This version can only be upgraded in breaking releases, though we release a breaking version every three months.\nThe ``naga``, ``wgpu-core``, ``wgpu-hal``, and ``wgpu-types`` crates should never require an MSRV ahead of Firefox's MSRV for nightly builds, as determined by the value of ``MINIMUM_RUST_VERSION`` in ``python/mozboot/mozboot/util.py``\u27e849\u27e9.\n## Environment Variables\nAll testing and example infrastructure share the same set of environment variables that determine which Backend/GPU it will run on.\n  * ``WGPU_ADAPTER_NAME`` with a substring of the name of the adapter you want to use (ex. ```1080``` will match ```NVIDIA` GeForce 1080ti``).\n  * ``WGPU_BACKEND`` with a comma-separated list of the backends you want to use (``vulkan``, ``metal``, ``dx12``, or ``gl``).\n  * ``WGPU_POWER_PREF`` with the power preference to choose when a specific adapter name isn't specified (``high``, ``low`` or ``none``)\n  * ```WGPU_DX12_COMPILER``` with the DX12 shader compiler you wish to use (``dxc``, ``static-dxc``, or ``fxc``). Note that ``dxc`` requires ``dxil`.`dll`` and ``dxcompiler`.`dll`` to be in the working directory, and ``static-dxc`` requires the ``static-dxc`` crate feature to be enabled. Otherwise, it will fall back to ``fxc``.\n  * ``WGPU_GLES_MINOR_VERSION`` with the minor OpenGL ES 3 version number to request (```0```, ```1```, ```2``` or ``automatic``).\n  * ``WGPU_ALLOW_UNDERLYING_NONCOMPLIANT_ADAPTER`` with a boolean whether non-compliant drivers are enumerated (```0``` for false, ```1``` for true).\n\n\nWhen running the CTS, use the variables ``DENO_WEBGPU_ADAPTER_NAME``, ``DENO_WEBGPU_BACKEND``, ``DENO_WEBGPU_POWER_PREFERENCE``.\n## Testing\nWe have multiple methods of testing, each of which tests different qualities about wgpu. We automatically run our tests on CI. The current state of CI testing:\nPlatform/Backend | Tests | Notes  \n---|---|---  \nWindows/DX12 | \u2714\ufe0f | using WARP  \nWindows/OpenGL | \u2714\ufe0f | using llvmpipe  \nMacOS/Metal | \u2714\ufe0f | using hardware runner  \nLinux/Vulkan | \u2714\ufe0f | using lavapipe  \nLinux/OpenGL ES | \u2714\ufe0f | using llvmpipe  \nChrome/WebGL | \u2714\ufe0f | using swiftshader  \nChrome/WebGPU | \u274c | not set up  \n### Core Test Infrastructure\nWe use a tool called ````cargo``` nextest```\u27e850\u27e9 to run our tests. To install it, run ````cargo``` install cargo-nextest```.\nTo run the test suite:\n```\n```cargo``` xtask test`\n`\n```\n\nTo run the test suite on WebGL (currently incomplete):\n```\n```cd``` wgpu`\n``wasm-pack``` test`` --`headless``` --`chrome``` --`no-default-features``` --`features` webgl`` --`workspace``\n`\n```\n\nThis will automatically run the tests using a packaged browser. Remove ``--headless`` to run the tests with whatever browser you wish at ``http://localhost:8000``.\nIf you are a user and want a way to help contribute to wgpu, we always need more help writing test cases.\n### WebGPU Conformance Test Suite\nWebGPU includes a Conformance Test Suite to validate that implementations are working correctly. We can run this CTS against wgpu.\nTo run the CTS, first, you need to check it out:\n```\n```git``` clone https://github.com/gpuweb/cts.git`\n``cd``` cts`\n``#``` works in bash and powershell\n`git checkout $(cat ../cts_runner/revision.txt)\n`\n```\n\nTo run a given set of tests:\n```\n``#` Must be inside the `cts` folder we just checked out`,` `else` this will fail\ncargo run `-``-`manifest`-`path `..``/`Cargo`.`toml `-`p cts_runner `-``-`bin cts_runner `-``-` `.``/`tools`/`run_deno `-``-`verbose ``\"`<test string>`\"``\n`\n```\n\nTo find the full list of tests, go to the online cts viewer\u27e851\u27e9.\nThe list of currently enabled CTS tests can be found here\u27e852\u27e9.\n## Tracking the WebGPU and WGSL draft specifications\nThe ``wgpu`` crate is meant to be an idiomatic Rust translation of the WebGPU API\u27e853\u27e9. That specification, along with its shading language, WGSL\u27e842\u27e9, are both still in the \"Working Draft\" phase, and while the general outlines are stable, details change frequently. Until the specification is stabilized, the ``wgpu`` crate and the version of WGSL it implements will likely differ from what is specified, as the implementation catches up.\nExactly which WGSL features ``wgpu`` supports depends on how you are using it:\n  * When running as native code, ``wgpu`` uses the Naga\u27e854\u27e9 crate to translate WGSL code into the shading language of your platform's native GPU API. Naga has a milestone\u27e855\u27e9 for catching up to the WGSL specification, but in general, there is no up-to-date summary of the differences between Naga and the WGSL spec.\n  * When running in a web browser (by compilation to WebAssembly) without the ````\"`webgl`\"```` feature enabled, ``wgpu`` relies on the browser's own WebGPU implementation. WGSL shaders are simply passed through to the browser, so that determines which WGSL features you can use.\n  * When running in a web browser with ``wgpu``'s ````\"`webgl`\"```` feature enabled, ``wgpu`` uses Naga to translate WGSL programs into GLSL. This uses the same version of Naga as if you were running ``wgpu`` as native code.\n\n\n## Coordinate Systems\nwgpu uses the coordinate systems of D3D and Metal:\nRender | Texture  \n---|---  \n![render_coordinates\u27e856\u27e9] | ![texture_coordinates\u27e857\u27e9]  \n#### Dependencies\n~2\u201332MB  ~467K SLoC\n  * arrayvec\u27e858\u27e9\n  * bitflags\u27e859\u27e9 2.9\n  * document-features\u27e860\u27e9\n  * hashbrown\u27e861\u27e9 0.15.2+default-hasher\u27e862\u27e9+inline-more\u27e863\u27e9\n  * log\u27e864\u27e9\n  * parking_lot\u27e865\u27e9\n  * portable-atomic\u27e866\u27e9 not atomic 64\n  * profiling\u27e867\u27e9\n  * raw-window-handle\u27e868\u27e9 0.6.2+std\u27e869\u27e9\n  * static_assertions\u27e870\u27e9\n  * wgpu-types\u27e871\u27e9 25.0\n  * js-sys\u27e872\u27e9+default\u27e873\u27e9 wasm32 not emscripten\n  * noop?\u27e874\u27e9 webgl?\u27e875\u27e9 smallvec\u27e876\u27e9 wasm32 not emscripten not wasm32 emscripten\n  * wasm-bindgen\u27e877\u27e9 wasm32 not emscripten\n  * webgpu?\u27e878\u27e9 wasm-bindgen-futures\u27e879\u27e9 wasm32 not emscripten\n  * web-sys\u27e880\u27e9+HtmlCanvasElement\u27e881\u27e9+OffscreenCanvas\u27e882\u27e9 wasm32 not emscripten\n  * noop?\u27e874\u27e9 webgl?\u27e875\u27e9 wgpu-hal\u27e883\u27e9 25.0 wasm32 not emscripten not wasm32 emscripten\n  * glsl?\u27e884\u27e9 naga-ir?\u27e885\u27e9 spirv?\u27e886\u27e9 webgpu?\u27e878\u27e9 naga\u27e887\u27e9 25.0\n  * angle?\u27e888\u27e9 counters?\u27e889\u27e9 dx12?\u27e890\u27e9 fragile-send\u2026atomic-wasm?\u27e891\u27e9 gles?\u27e892\u27e9 glsl?\u27e884\u27e9 metal?\u27e893\u27e9 noop?\u27e874\u27e9 serde?\u27e894\u27e9 spirv?\u27e886\u27e9 static-dxc?\u27e895\u27e9 strict_asserts?\u27e896\u27e9 vulkan?\u27e897\u27e9 vulkan-portability?\u27e898\u27e9 webgl?\u27e875\u27e9 wgsl?\u27e899\u27e9 wgpu-core\u27e8100\u27e9 25.0\n\n\n  * build `build.rs`\n  * build  cfg_aliases\u27e8101\u27e9\n  * dev  bytemuck\u27e8102\u27e9+extern_crate_alloc\u27e8103\u27e9+min_const_generics\u27e8104\u27e9\n\n\n#### Other feature\u27e8105\u27e9\n  * custom\u27e8106\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/wgpu/versions: 52 releases\n\u27e82\u27e9 https://lib.rs/rendering/graphics-api: Crates that provide direct access to the hardware's or the operating system's rendering capabilities. - Graphics APIs\n\u27e83\u27e9 https://lib.rs/crates/wgpu/rev: **2,150** crates (544 directly)\n\u27e84\u27e9 https://img.shields.io/static/v1?label=Space&message=%23Wgpu&color=blue&logo=matrix: ![Matrix Space\n\u27e85\u27e9 https://img.shields.io/static/v1?label=devs&message=%23wgpu&color=blueviolet&logo=matrix: ![Dev Matrix\n\u27e86\u27e9 https://img.shields.io/static/v1?label=users&message=%23wgpu-users&color=blueviolet&logo=matrix: ![User Matrix\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/gfx-rs/wgpu/workflows/CI/badge.svg: ![Build Status\n\u27e88\u27e9 https://img.gs/czjpqfbdkz/full/https://codecov.io/gh/gfx-rs/wgpu/branch/trunk/graph/badge.svg?token=84qJTesmeS: ![codecov.io\n\u27e89\u27e9 https://gpuweb.github.io/gpuweb/: WebGPU standard\n\u27e810\u27e9 https://docs.rs/wgpu/: v25\n\u27e811\u27e9 https://github.com/gfx-rs/wgpu/tree/v25/examples#readme: v25\n\u27e812\u27e9 https://github.com/gfx-rs/wgpu/releases: v25\n\u27e813\u27e9 https://wgpu.rs/doc/wgpu/: ``trunk``\n\u27e814\u27e9 https://github.com/gfx-rs/wgpu/tree/trunk/examples#readme: ``trunk``\n\u27e815\u27e9 https://github.com/gfx-rs/wgpu/blob/trunk/CHANGELOG.md#unreleased: ``trunk``\n\u27e816\u27e9 https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/CONTRIBUTING.md: CONTRIBUTING.md\n\u27e817\u27e9 https://img.shields.io/crates/v/wgpu.svg?label=wgpu: ![Crates.io\n\u27e818\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu/badge.svg: ![docs.rs\n\u27e819\u27e9 https://img.shields.io/crates/v/wgpu-core.svg?label=wgpu-core: ![Crates.io\n\u27e820\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-core/badge.svg: ![docs.rs\n\u27e821\u27e9 https://img.shields.io/crates/v/wgpu-hal.svg?label=wgpu-hal: ![Crates.io\n\u27e822\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-hal/badge.svg: ![docs.rs\n\u27e823\u27e9 https://img.shields.io/crates/v/wgpu-types.svg?label=wgpu-types: ![Crates.io\n\u27e824\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/wgpu-types/badge.svg: ![docs.rs\n\u27e825\u27e9 https://img.shields.io/crates/v/naga.svg?label=naga: ![Crates.io\n\u27e826\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/naga/badge.svg: ![docs.rs\n\u27e827\u27e9 https://img.shields.io/crates/v/deno_webgpu.svg?label=deno_webgpu: ![Crates.io\n\u27e828\u27e9 https://img.shields.io/crates/v/naga-cli.svg?label=naga-cli: ![Crates.io\n\u27e829\u27e9 https://img.shields.io/crates/v/wgpu-info.svg?label=wgpu-info: ![Crates.io\n\u27e830\u27e9 https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/big-picture.png: the big picture\n\u27e831\u27e9 https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/examples: examples\n\u27e832\u27e9 https://github.com/gfx-rs/wgpu-native: wgpu-native\n\u27e833\u27e9 https://github.com/gfx-rs/wgpu-native#bindings: the list\n\u27e834\u27e9 https://img.shields.io/static/v1?label=wgpu-devs&message=%23wgpu&color=blueviolet&logo=matrix: ![Wgpu Matrix\n\u27e835\u27e9 https://img.shields.io/static/v1?label=naga-devs&message=%23naga&color=blueviolet&logo=matrix: ![Naga Matrix\n\u27e836\u27e9 https://img.shields.io/static/v1?label=wgpu-users&message=%23wgpu-users&color=blueviolet&logo=matrix: ![User Matrix\n\u27e837\u27e9 https://img.shields.io/static/v1?label=random&message=%23wgpu-random&color=blueviolet&logo=matrix: ![Random Matrix\n\u27e838\u27e9 https://github.com/gfx-rs/wgpu/wiki: wiki\n\u27e839\u27e9 https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/api-specs/ray_tracing.md: Ray Tracing\n\u27e840\u27e9 https://lib.rs/crates/wgpu#readme-angle: ANGLE\n\u27e841\u27e9 https://vulkan.lunarg.com/sdk/home#mac: MoltenVK\n\u27e842\u27e9 https://gpuweb.github.io/gpuweb/wgsl/: WGSL\n\u27e843\u27e9 https://github.com/Microsoft/DirectXShaderCompiler: HLSL\n\u27e844\u27e9 https://github.com/KhronosGroup/glslang: GLSL\n\u27e845\u27e9 https://lib.rs/crates/wgpu#readme-tracking-the-webgpu-and-wgsl-draft-specifications: below\n\u27e846\u27e9 http://angleproject.org: Angle\n\u27e847\u27e9 https://github.com/DileSoft/gfbuild-angle: gfbuild-angle\n\u27e848\u27e9 https://github.com/google/angle/blob/main/doc/DevSetup.md: manual compilation\n\u27e849\u27e9 https://searchfox.org/mozilla-central/source/python/mozboot/mozboot/util.py: ``python/mozboot/mozboot/util.py``\n\u27e850\u27e9 https://github.com/nextest-rs/nextest: ````cargo``` nextest```\n\u27e851\u27e9 https://gpuweb.github.io/cts/standalone/?runnow=0&worker=0&debug=0&q=webgpu:*: online cts viewer\n\u27e852\u27e9 https://github.com/gfx-rs/wgpu/blob/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/cts_runner/test.lst: here\n\u27e853\u27e9 https://www.w3.org/TR/webgpu/: WebGPU API\n\u27e854\u27e9 https://github.com/gfx-rs/naga/: Naga\n\u27e855\u27e9 https://github.com/gfx-rs/naga/milestone/4: a milestone\n\u27e856\u27e9 https://img.gs/czjpqfbdkz/800,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/render_coordinates.png: render_coordinates\n\u27e857\u27e9 https://img.gs/czjpqfbdkz/800,2x/https://raw.githubusercontent.com/gfx-rs/wgpu/f35cf942af1a3bb6f48aa9185f4d2bcee809f814/wgpu/docs/texture_coordinates.png: texture_coordinates\n\u27e858\u27e9 https://lib.rs/crates/arrayvec: 0.7.6 - arrayvec\n\u27e859\u27e9 https://lib.rs/crates/bitflags: new - bitflags\n\u27e860\u27e9 https://lib.rs/crates/document-features: 0.2.11 - document-features\n\u27e861\u27e9 https://lib.rs/crates/hashbrown: new - hashbrown\n\u27e862\u27e9 https://lib.rs/crates/hashbrown/features#feature-default-hasher: +default-hasher\n\u27e863\u27e9 https://lib.rs/crates/hashbrown/features#feature-inline-more: +inline-more\n\u27e864\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e865\u27e9 https://lib.rs/crates/parking_lot: 0.12.1 - parking_lot\n\u27e866\u27e9 https://lib.rs/crates/portable-atomic: 1 - portable-atomic\n\u27e867\u27e9 https://lib.rs/crates/profiling: 1 - profiling\n\u27e868\u27e9 https://lib.rs/crates/raw-window-handle: new - raw-window-handle\n\u27e869\u27e9 https://lib.rs/crates/raw-window-handle/features#feature-std: +std\n\u27e870\u27e9 https://lib.rs/crates/static_assertions: 1.1.0 - static_assertions\n\u27e871\u27e9 https://lib.rs/crates/wgpu-types: new - wgpu-types\n\u27e872\u27e9 https://lib.rs/crates/js-sys: 0.3.70 - js-sys\n\u27e873\u27e9 https://lib.rs/crates/js-sys/features#feature-default: +default\n\u27e874\u27e9 https://lib.rs/crates/wgpu/features#feature-noop: optional feature - noop?\n\u27e875\u27e9 https://lib.rs/crates/wgpu/features#feature-webgl: optional feature - webgl?\n\u27e876\u27e9 https://lib.rs/crates/smallvec: 1 - smallvec\n\u27e877\u27e9 https://lib.rs/crates/wasm-bindgen: 0.2.97 - wasm-bindgen\n\u27e878\u27e9 https://lib.rs/crates/wgpu/features#feature-webgpu: optional feature - webgpu?\n\u27e879\u27e9 https://lib.rs/crates/wasm-bindgen-futures: 0.4.45 - wasm-bindgen-futures\n\u27e880\u27e9 https://lib.rs/crates/web-sys: 0.3.74 - web-sys\n\u27e881\u27e9 https://lib.rs/crates/web-sys/features#feature-HtmlCanvasElement: +HtmlCanvasElement\n\u27e882\u27e9 https://lib.rs/crates/web-sys/features#feature-OffscreenCanvas: +OffscreenCanvas\n\u27e883\u27e9 https://lib.rs/crates/wgpu-hal: new - wgpu-hal\n\u27e884\u27e9 https://lib.rs/crates/wgpu/features#feature-glsl: optional feature - glsl?\n\u27e885\u27e9 https://lib.rs/crates/wgpu/features#feature-naga-ir: optional feature - naga-ir?\n\u27e886\u27e9 https://lib.rs/crates/wgpu/features#feature-spirv: optional feature - spirv?\n\u27e887\u27e9 https://lib.rs/crates/naga: new - naga\n\u27e888\u27e9 https://lib.rs/crates/wgpu/features#feature-angle: optional feature - angle?\n\u27e889\u27e9 https://lib.rs/crates/wgpu/features#feature-counters: optional feature - counters?\n\u27e890\u27e9 https://lib.rs/crates/wgpu/features#feature-dx12: optional feature - dx12?\n\u27e891\u27e9 https://lib.rs/crates/wgpu/features#feature-fragile-send-sync-non-atomic-wasm: optional feature - fragile-send\u2026atomic-wasm?\n\u27e892\u27e9 https://lib.rs/crates/wgpu/features#feature-gles: optional feature - gles?\n\u27e893\u27e9 https://lib.rs/crates/wgpu/features#feature-metal: optional feature - metal?\n\u27e894\u27e9 https://lib.rs/crates/wgpu/features#feature-serde: optional feature - serde?\n\u27e895\u27e9 https://lib.rs/crates/wgpu/features#feature-static-dxc: optional feature - static-dxc?\n\u27e896\u27e9 https://lib.rs/crates/wgpu/features#feature-strict_asserts: optional feature - strict_asserts?\n\u27e897\u27e9 https://lib.rs/crates/wgpu/features#feature-vulkan: optional feature - vulkan?\n\u27e898\u27e9 https://lib.rs/crates/wgpu/features#feature-vulkan-portability: optional feature - vulkan-portability?\n\u27e899\u27e9 https://lib.rs/crates/wgpu/features#feature-wgsl: optional feature - wgsl?\n\u27e8100\u27e9 https://lib.rs/crates/wgpu-core: new - wgpu-core\n\u27e8101\u27e9 https://lib.rs/crates/cfg_aliases: 0.2.1 - cfg_aliases\n\u27e8102\u27e9 https://lib.rs/crates/bytemuck: 1.22 - bytemuck\n\u27e8103\u27e9 https://lib.rs/crates/bytemuck/features#feature-extern_crate_alloc: +extern_crate_alloc\n\u27e8104\u27e9 https://lib.rs/crates/bytemuck/features#feature-min_const_generics: +min_const_generics\n\u27e8105\u27e9 https://lib.rs/crates/wgpu/features: Other feature\n\u27e8106\u27e9 https://lib.rs/crates/wgpu/features#feature-custom: custom\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 20905,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119020.5525644"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "foldhash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libfoldhash-7b6274bf084325ef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-29448e0814257544.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-29448e0814257544.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-3dc520fc8a45c3d2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-3dc520fc8a45c3d2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "heck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libheck-6eabf3ca9e635b47.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libheck-6eabf3ca9e635b47.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-dd61ca5f416ac130\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-388f71014c0e02d7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-388f71014c0e02d7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\build\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-d6088d1c87b2dde1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-d6088d1c87b2dde1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "debug",
                "default",
                "libloading",
                "loaded",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-43d08f1b9c207df1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-43d08f1b9c207df1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-73d1d59b0327e6b5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "union"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsmallvec-2495123e4016063b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default-hasher",
                "inline-more"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhashbrown-356580819c4410cc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-f340d441dc92b089\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compact",
                "default",
                "glsl-out",
                "hlsl-out",
                "spv-out",
                "wgsl-in"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-eada957207a513f0\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-eada957207a513f0\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-916c4d5e3142a046\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "host_os=\"windows\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-75c57678116539f7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "glsl_out",
                "hlsl_out",
                "spv_out"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-9dd7fb9fb81c365b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "1_0",
                "1_1",
                "1_2",
                "1_3",
                "1_4",
                "1_5",
                "default",
                "dynamic",
                "libloading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-295eef74a4a1e341\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-295eef74a4a1e341\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit-vec@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-vec-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_vec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-vec-0.8.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbit_vec-7edd3ea70361da65.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-result@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_result",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_result-69548471dbf3f1dc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-5eac352cbc86673a\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.8.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibloading-bd34719e0f1ba1d3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libm"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-a6d69cfee2e0265f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-a6d69cfee2e0265f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-87fe37382bee9b67\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit-set@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-set-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_set",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-set-0.8.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbit_set-4f22312e53d22108.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-strings@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_strings",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_strings-9fcfa8621f6c8cc7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libparking_lot_core-254ec69b0429b226.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-width@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-width-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_width",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-width-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cjk",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_width-911e5fa1d8ca1fe0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-0ff2238d530c1ee1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hexf-parse@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hexf-parse-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hexf_parse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hexf-parse-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhexf_parse-be4d983aaf720a9e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-b58b3b906f0a8342\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-6c9d618e5c165e59\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librustc_hash-9c0b32e2c436ea37.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libarrayvec-07b79bb29467599c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libonce_cell-5a5d52b5655b1a68.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#presser@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\presser-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "presser",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\presser-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libpresser-96fe82cdd68726cc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "profiling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libprofiling-6763eeb6a9e3efd1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.25",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.25\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.25\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libxml-e937c9d1a122e5f6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libxml-e937c9d1a122e5f6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#renderdoc-sys@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\renderdoc-sys-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "renderdoc_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\renderdoc-sys-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librenderdoc_sys-bec35534379b1325.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "rustversion",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblock_api-8d187389174b18f4.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "gpu-allocator",
                "portable-atomic",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-7ed7ef2e48542621\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-7ed7ef2e48542621\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#range-alloc@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\range-alloc-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "range_alloc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\range-alloc-0.1.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librange_alloc-9a9049dce29cf5c8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libraw_window_handle-2036ae068b998de1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "native",
                "send_sync",
                "dx12",
                "gles",
                "gles_with_std",
                "vulkan",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-b708c96f659082a5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgl_generator-9b68a699389cd2bf.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgl_generator-9b68a699389cd2bf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libindexmap-c2bda4e4d479f139.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\static_assertions-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "static_assertions",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\static_assertions-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libstatic_assertions-d4c248694dbc366f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libparking_lot-6fffa7a8524a05db.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_egl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "1_0",
                "1_1",
                "1_2",
                "1_3",
                "1_4",
                "1_5",
                "default",
                "dynamic",
                "libloading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_egl-6a88e29750f15828.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_SystemInformation",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_sys-78029168380c4e53.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "portable-atomic",
                "raw-window-handle",
                "renderdoc",
                "std",
                "vulkan",
                "wgpu-core-deps-windows-linux-android",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-1a15a6f08bc54bd8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-1a15a6f08bc54bd8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_linux_android",
                "send_sync",
                "dx12",
                "gles",
                "vulkan",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-e9a5a418c33ba162\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibm-d8ff8fb683d8bb4d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litrs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-util-0.1.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-util-0.1.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwinapi_util-aaae820693c19b30.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "vulkan",
                "webgpu",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-607654f40a88058f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-607654f40a88058f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "native",
                "send_sync",
                "dx12",
                "vulkan",
                "gles",
                "wgpu_core",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-071f5626f9e7ec3e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\termcolor-1.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termcolor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\termcolor-1.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libtermcolor-6034738593c92c01.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-9a4a111e1f24bfda\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-9a4a111e1f24bfda\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-5c188631b61a4409\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libserde-1ec50d705251eb62.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libglutin_wgl_sys-084284c492f0576d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "document_features",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libm"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libnum_traits-5e15c2eadbd5f16a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbitflags-c3f9087a89d38c80.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#codespan-reporting@0.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\codespan-reporting-0.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "codespan_reporting",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\codespan-reporting-0.12.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std",
                "termcolor"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcodespan_reporting-69c0d72b44d11d42.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glow@0.16.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.16.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.16.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libglow-00285d146768ca4e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-descriptor-types@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-types-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_descriptor_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-types-0.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_descriptor_types-4ffbeb383ac3e66e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-alloc-types@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-types-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_alloc_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-types-0.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_alloc_types-9c0b1fe35f7f9368.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@4.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ordered-float-4.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ordered_float",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ordered-float-4.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libordered_float-8475187a64c0f6ce.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-descriptor@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_descriptor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_descriptor-f0202e3ee1f996e6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "num-traits"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhalf-7b5724ca9e1b63fc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-alloc@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_alloc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-0.6.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_alloc-c2cc95696aa5b725.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spirv@0.3.0+sdk-1.3.268.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spirv-0.3.0+sdk-1.3.268.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spirv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spirv-0.3.0+sdk-1.3.268.0\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libspirv-8c72079ce434fffc.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-interface@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-interface-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "windows_interface",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-interface-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-implement@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-implement-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "windows_implement",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-implement-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck_derive@1.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck_derive-1.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "bytemuck_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck_derive-1.9.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libthiserror-114892cac0065cdf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libthiserror-83f2d796e316a88b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytemuck_derive",
                "derive",
                "extern_crate_alloc",
                "min_const_generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbytemuck-7917d116ed7d0b31.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-core@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-core-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-core-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_core-6fb9d70f8daf6b8d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.26.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum_macros-0.26.4\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum_macros-0.26.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#strum@0.26.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum-0.26.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "strum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum-0.26.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "derive",
                "strum_macros"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libstrum-5d205329ead37a37.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-types@25.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-types-25.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-types-25.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std",
                "thiserror"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_types-6510499b03f0965f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "debug",
                "default",
                "libloading",
                "loaded",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libash-a17f949be3f70103.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "naga",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compact",
                "default",
                "glsl-out",
                "hlsl-out",
                "spv-out",
                "wgsl-in"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libnaga-922c341008aeb978.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Graphics",
                "Win32_Graphics_Direct3D",
                "Win32_Graphics_Direct3D12",
                "Win32_Graphics_Direct3D_Dxc",
                "Win32_Graphics_Direct3D_Fxc",
                "Win32_Graphics_DirectComposition",
                "Win32_Graphics_Dxgi",
                "Win32_Graphics_Dxgi_Common",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Security",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_Kernel",
                "Win32_System_LibraryLoader",
                "Win32_System_Performance",
                "Win32_System_Threading",
                "Win32_UI",
                "Win32_UI_WindowsAndMessaging",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows-ab8d14abf7edac57.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-allocator@0.27.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-allocator-0.27.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_allocator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-allocator-0.27.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "d3d12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_allocator-bd8b202bbc5def54.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_hal",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "gpu-allocator",
                "portable-atomic",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_hal-a07ee029b931dd29.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core-deps-windows-linux-android@25.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-deps-windows-linux-android-25.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_core_deps_windows_linux_android",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-deps-windows-linux-android-25.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_core_deps_windows_linux_android-7626277c6fd7a21d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "portable-atomic",
                "raw-window-handle",
                "renderdoc",
                "std",
                "vulkan",
                "wgpu-core-deps-windows-linux-android",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_core-311ec9d99d34b1fd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "vulkan",
                "webgpu",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu-ded4b8ac9c38d648.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-e1ee9ee3dd80fd20\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\proc-macro2-26ba5a0b8e9c4cd4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-3dc520fc8a45c3d2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-3dc520fc8a45c3d2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_aliases",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg_aliases-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_aliases-17c3a515ffbaf083.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-1a0d65ec9bed582f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-7208c179c1df3d5f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\build\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-d6088d1c87b2dde1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-d6088d1c87b2dde1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "foldhash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libfoldhash-7b6274bf084325ef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-29448e0814257544.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-29448e0814257544.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#xml-rs@0.8.25",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.25\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "xml",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\xml-rs-0.8.25\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libxml-e937c9d1a122e5f6.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libxml-e937c9d1a122e5f6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-388f71014c0e02d7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-388f71014c0e02d7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "heck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\heck-0.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libheck-6eabf3ca9e635b47.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libheck-6eabf3ca9e635b47.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-6e895cdbcd5e4ab4\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.94",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.94\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libproc_macro2-fdce389236429c42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\serde-73d1d59b0327e6b5\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos_api-96b65c82ef4c8d63\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libm"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-a6d69cfee2e0265f\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-a6d69cfee2e0265f\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libm-dd61ca5f416ac130\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "host_os=\"windows\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\rustversion-75c57678116539f7\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-a9e715d952b9cda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default-hasher",
                "inline-more"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhashbrown-356580819c4410cc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-916c4d5e3142a046\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-8bf117fcd88546af\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-95fbe3009cb3c929\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compact",
                "default",
                "glsl-out",
                "hlsl-out",
                "spv-out",
                "wgsl-in"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-eada957207a513f0\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-eada957207a513f0\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\libc-21243236bad9ad17\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit-vec@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-vec-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_vec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-vec-0.8.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbit_vec-7edd3ea70361da65.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libquote-c266fdd689430737.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libquote-c266fdd689430737.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libserde-1ec50d705251eb62.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos_api@3.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos_api-3.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_api-3da21ebdc038de2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibm-d8ff8fb683d8bb4d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\num-traits-6c9d618e5c165e59\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "rustversion",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustversion-1.0.20\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\rustversion-40f286be1659dc7e.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\parking_lot_core-ba234acc5b3f5844\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\thiserror-f340d441dc92b089\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\lock_api-b58b3b906f0a8342\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "1_0",
                "1_1",
                "1_2",
                "1_3",
                "1_4",
                "1_5",
                "default",
                "dynamic",
                "libloading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-295eef74a4a1e341\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-295eef74a4a1e341\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "debug",
                "default",
                "libloading",
                "loaded",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-43d08f1b9c207df1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-43d08f1b9c207df1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-width@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-width-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_width",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-width-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "cjk",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_width-911e5fa1d8ca1fe0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "union"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsmallvec-2495123e4016063b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.100",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.100\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "full",
                "parsing",
                "printing",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libsyn-a45e7e3ee26a5857.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "serde"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbitflags-c3f9087a89d38c80.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gl_generator@0.14.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gl_generator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gl_generator-0.14.0\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgl_generator-9b68a699389cd2bf.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgl_generator-9b68a699389cd2bf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "libm"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libnum_traits-5e15c2eadbd5f16a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblock_api-8d187389174b18f4.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\ash-87fe37382bee9b67\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\khronos-egl-5eac352cbc86673a\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.7.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libindexmap-c2bda4e4d479f139.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "glsl_out",
                "hlsl_out",
                "spv_out"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\naga-9dd7fb9fb81c365b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bit-set@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-set-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bit_set",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bit-set-0.8.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbit_set-4f22312e53d22108.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.171",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.171\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibc-380a503941dbe08d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "gpu-allocator",
                "portable-atomic",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-7ed7ef2e48542621\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-7ed7ef2e48542621\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "rustc_hash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\rustc-hash-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librustc_hash-9c0b32e2c436ea37.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hexf-parse@0.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hexf-parse-0.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hexf_parse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hexf-parse-0.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhexf_parse-be4d983aaf720a9e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libunicode_ident-0ff2238d530c1ee1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-result@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_result",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.2.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_result-69548471dbf3f1dc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_SystemInformation",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_sys-78029168380c4e53.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-2.0.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-2793cec470151448.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-implement@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-implement-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "windows_implement",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-implement-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_implement-087bec908e46d2b9.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-interface@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-interface-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "windows_interface",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-interface-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\windows_interface-8c5ff953e9132d01.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck_derive@1.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck_derive-1.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "bytemuck_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck_derive-1.9.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\bytemuck_derive-c22edcff6b5b7b20.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.26.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum_macros-0.26.4\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "strum_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum_macros-0.26.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\strum_macros-93ad3a665d75ab24.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libloading@0.8.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libloading",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libloading-0.8.6\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblibloading-bd34719e0f1ba1d3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "thiserror_impl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-impl-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\thiserror_impl-26b705be6134c43e.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-9a4a111e1f24bfda\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-9a4a111e1f24bfda\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#half@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "half",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\half-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "num-traits"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libhalf-7b5724ca9e1b63fc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spirv@0.3.0+sdk-1.3.268.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spirv-0.3.0+sdk-1.3.268.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spirv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spirv-0.3.0+sdk-1.3.268.0\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libspirv-8c72079ce434fffc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-descriptor-types@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-types-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_descriptor_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-types-0.2.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_descriptor_types-4ffbeb383ac3e66e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libparking_lot_core-254ec69b0429b226.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-alloc-types@0.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-types-0.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_alloc_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-types-0.3.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_alloc_types-9c0b1fe35f7f9368.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libonce_cell-5a5d52b5655b1a68.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-strings@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_strings",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_strings-9fcfa8621f6c8cc7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-util-0.1.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-util-0.1.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwinapi_util-aaae820693c19b30.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-2.0.12\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libthiserror-83f2d796e316a88b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytemuck_derive",
                "derive",
                "extern_crate_alloc",
                "min_const_generics"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libbytemuck-7917d116ed7d0b31.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "thiserror",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\thiserror-1.0.69\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libthiserror-114892cac0065cdf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#strum@0.26.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum-0.26.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "strum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\strum-0.26.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "derive",
                "strum_macros"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libstrum-5d205329ead37a37.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\glutin_wgl_sys-5c188631b61a4409\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "arrayvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\arrayvec-0.7.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libarrayvec-07b79bb29467599c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#presser@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\presser-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "presser",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\presser-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libpresser-96fe82cdd68726cc.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-alloc@0.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-0.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_alloc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-alloc-0.6.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_alloc-c2cc95696aa5b725.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libparking_lot-6fffa7a8524a05db.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ash@0.38.0+1.3.281",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ash-0.38.0+1.3.281\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "debug",
                "default",
                "libloading",
                "loaded",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libash-a17f949be3f70103.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#khronos-egl@6.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "khronos_egl",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\khronos-egl-6.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "1_0",
                "1_1",
                "1_2",
                "1_3",
                "1_4",
                "1_5",
                "default",
                "dynamic",
                "libloading"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libkhronos_egl-6a88e29750f15828.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-descriptor@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_descriptor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-descriptor-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_descriptor-f0202e3ee1f996e6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "native",
                "send_sync",
                "dx12",
                "gles",
                "gles_with_std",
                "vulkan",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-hal-b708c96f659082a5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@4.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ordered-float-4.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ordered_float",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ordered-float-4.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libordered_float-8475187a64c0f6ce.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\termcolor-1.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "termcolor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\termcolor-1.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libtermcolor-6034738593c92c01.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-core@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-core-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-core-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows_core-6fb9d70f8daf6b8d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glutin_wgl_sys@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glutin_wgl_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glutin_wgl_sys-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libglutin_wgl_sys-084284c492f0576d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-types@25.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-types-25.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_types",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-types-25.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std",
                "thiserror"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_types-6510499b03f0965f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glow@0.16.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.16.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glow",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glow-0.16.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libglow-00285d146768ca4e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#profiling@1.0.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "profiling",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\profiling-1.0.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libprofiling-6763eeb6a9e3efd1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#raw-window-handle@0.6.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "raw_window_handle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\raw-window-handle-0.6.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libraw_window_handle-2036ae068b998de1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#range-alloc@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\range-alloc-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "range_alloc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\range-alloc-0.1.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librange_alloc-9a9049dce29cf5c8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#renderdoc-sys@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\renderdoc-sys-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "renderdoc_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\renderdoc-sys-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\librenderdoc_sys-bec35534379b1325.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "portable-atomic",
                "raw-window-handle",
                "renderdoc",
                "std",
                "vulkan",
                "wgpu-core-deps-windows-linux-android",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-1a15a6f08bc54bd8\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-1a15a6f08bc54bd8\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litrs",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litrs-0.4.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\liblitrs-7c0df97d080944bb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\static_assertions-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "static_assertions",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\static_assertions-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libstatic_assertions-d4c248694dbc366f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#codespan-reporting@0.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\codespan-reporting-0.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "codespan_reporting",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\codespan-reporting-0.12.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std",
                "termcolor"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libcodespan_reporting-69c0d72b44d11d42.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows@0.58.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-0.58.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-0.58.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Graphics",
                "Win32_Graphics_Direct3D",
                "Win32_Graphics_Direct3D12",
                "Win32_Graphics_Direct3D_Dxc",
                "Win32_Graphics_Direct3D_Fxc",
                "Win32_Graphics_DirectComposition",
                "Win32_Graphics_Dxgi",
                "Win32_Graphics_Dxgi_Common",
                "Win32_Graphics_Gdi",
                "Win32_Graphics_OpenGL",
                "Win32_Security",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_Kernel",
                "Win32_System_LibraryLoader",
                "Win32_System_Performance",
                "Win32_System_Threading",
                "Win32_UI",
                "Win32_UI_WindowsAndMessaging",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwindows-ab8d14abf7edac57.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "document_features",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\document-features-0.2.11\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\document_features-b567261d8311bb5a.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "windows_linux_android",
                "send_sync",
                "dx12",
                "gles",
                "vulkan",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-core-e9a5a418c33ba162\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gpu-allocator@0.27.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-allocator-0.27.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gpu_allocator",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gpu-allocator-0.27.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "d3d12"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libgpu_allocator-bd8b202bbc5def54.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#naga@25.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "naga",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\naga-25.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compact",
                "default",
                "glsl-out",
                "hlsl-out",
                "spv-out",
                "wgsl-in"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libnaga-922c341008aeb978.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-hal@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_hal",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-hal-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "gpu-allocator",
                "portable-atomic",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_hal-a07ee029b931dd29.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core-deps-windows-linux-android@25.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-deps-windows-linux-android-25.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_core_deps_windows_linux_android",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-deps-windows-linux-android-25.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "dx12",
                "gles",
                "renderdoc",
                "vulkan"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_core_deps_windows_linux_android-7626277c6fd7a21d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#wgpu-core@25.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\wgpu-core-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "portable-atomic",
                "raw-window-handle",
                "renderdoc",
                "std",
                "vulkan",
                "wgpu-core-deps-windows-linux-android",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu_core-311ec9d99d34b1fd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "vulkan",
                "webgpu",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-e70a617d20f45e1a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-e70a617d20f45e1a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "native",
                "send_sync",
                "dx12",
                "vulkan",
                "gles",
                "wgpu_core",
                "supports_64bit_atomics"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\build\\wgpu-cb5620d74739f7a2\\out"
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\backend\\wgpu_core.rs:1352:17\n     |\n1352 |                 log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n     = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n     |\n1352 -                 log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);\n1352 +                 log::error!(\"Shader translation error for stage {stage:?}: {error}\");\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 43322,
                        "byte_start": 43322,
                        "column_end": 66,
                        "column_start": 66,
                        "expansion": null,
                        "file_name": "src\\backend\\wgpu_core.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "stage",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 66,
                            "text": "                log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);"
                          }
                        ]
                      },
                      {
                        "byte_end": 43328,
                        "byte_start": 43328,
                        "column_end": 72,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\backend\\wgpu_core.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "error",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 72,
                            "text": "                log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);"
                          }
                        ]
                      },
                      {
                        "byte_end": 43337,
                        "byte_start": 43330,
                        "column_end": 81,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\backend\\wgpu_core.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 74,
                            "text": "                log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);"
                          }
                        ]
                      },
                      {
                        "byte_end": 43344,
                        "byte_start": 43337,
                        "column_end": 88,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "src\\backend\\wgpu_core.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1352,
                        "line_start": 1352,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 88,
                            "highlight_start": 81,
                            "text": "                log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 43345,
                    "byte_start": 43273,
                    "column_end": 89,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\backend\\wgpu_core.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1352,
                    "line_start": 1352,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 89,
                        "highlight_start": 17,
                        "text": "                log::error!(\"Shader translation error for stage {:?}: {}\", stage, error);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpxwni_ebh/wgpu-25.0.2#wgpu@25.0.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wgpu",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "dx12",
                "gles",
                "metal",
                "vulkan",
                "webgpu",
                "wgsl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpxwni_ebh\\wgpu-25.0.2\\target\\debug\\deps\\libwgpu-5a188c7cc5d7d085.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 128
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "wgpu",
          "version": "25.0.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\n[Settings](https://docs.rs/wgpu/latest/settings.html)\n[Help](https://docs.rs/wgpu/latest/help.html)\nSummary[Source](https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126)\nExpand description\nA cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).\nTo start using the API, create an [`Instance`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\").\n### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-flags)Feature flags\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#backends)Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#conditional-backends)Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use with[ANGLE](https://github.com/google/angle).\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with [MoltenVK](https://github.com/KhronosGroup/MoltenVK).\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#shading-language-support)Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization)Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#external-libraries)External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from [Microsoft\u2019s GitHub](https://github.com/Microsoft/DirectXShaderCompiler)). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#other)Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-aliases)Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports[\u00a7](https://docs.rs/wgpu/latest/wgpu/#reexports)\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules[\u00a7](https://docs.rs/wgpu/latest/wgpu/#modules)\n\n[custom](https://docs.rs/wgpu/latest/wgpu/custom/index.html \"mod wgpu::custom\")`custom`\n    Provides wrappers custom backend implementations\n\n[util](https://docs.rs/wgpu/latest/wgpu/util/index.html \"mod wgpu::util\")\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros[\u00a7](https://docs.rs/wgpu/latest/wgpu/#macros)\n\n[include_spirv](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html \"macro wgpu::include_spirv\")`spirv`\n    Macro to load a SPIR-V module statically.\n\n[include_spirv_raw](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html \"macro wgpu::include_spirv_raw\")\n    Macro to load raw SPIR-V data statically, for use with [`Features::SPIRV_SHADER_PASSTHROUGH`](https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH \"associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH\").\n\n[include_wgsl](https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html \"macro wgpu::include_wgsl\")\n    Load WGSL source code from a file at compile time.\n\n[vertex_attr_array](https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html \"macro wgpu::vertex_attr_array\")\n    Macro to produce an array of [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\").\n## Structs[\u00a7](https://docs.rs/wgpu/latest/wgpu/#structs)\n\n[Adapter](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\")\n    Handle to a physical graphics and/or compute device.\n\n[AdapterInfo](https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html \"struct wgpu::AdapterInfo\")\n    Information about an adapter.\n\n[AllocatorReport](https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html \"struct wgpu::AllocatorReport\")\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\n[BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html \"struct wgpu::BackendOptions\")\n    Options that are passed to a given backend.\n\n[Backends](https://docs.rs/wgpu/latest/wgpu/struct.Backends.html \"struct wgpu::Backends\")\n    Represents the backends that wgpu will use.\n\n[BindGroup](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\")\n    Handle to a binding group.\n\n[BindGroupDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\")\n    Describes a group of bindings and the resources to be bound.\n\n[BindGroupEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html \"struct wgpu::BindGroupEntry\")\n    An element of a [`BindGroupDescriptor`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\"), consisting of a bindable resource and the slot to bind it to.\n\n[BindGroupLayout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\")\n    Handle to a binding group layout.\n\n[BindGroupLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html \"struct wgpu::BindGroupLayoutDescriptor\")\n    Describes a [`BindGroupLayout`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\").\n\n[BindGroupLayoutEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\")\n    Describes a single binding inside a bind group.\n\n[Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\")\n    Bottom Level Acceleration Structure (BLAS).\n\n[BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\")\n    Builds the given sets of geometry into the given [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\")\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\n[BlendComponent](https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html \"struct wgpu::BlendComponent\")\n    Describes a blend component of a [`BlendState`](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\").\n\n[BlendState](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\")\n    Describe the blend state of a render pipeline, within [`ColorTargetState`](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\").\n\n[Buffer](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\")\n    Handle to a GPU-accessible buffer.\n\n[BufferAsyncError](https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html \"struct wgpu::BufferAsyncError\")\n    Error occurred when trying to async map a buffer.\n\n[BufferBinding](https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html \"struct wgpu::BufferBinding\")\n    Describes the segment of a buffer to bind.\n\n[BufferSlice](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html \"struct wgpu::BufferSlice\")\n    A slice of a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\"), to be mapped, used for vertex or index data, or the like.\n\n[BufferTransition](https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html \"struct wgpu::BufferTransition\")\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\n[BufferUsages](https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html \"struct wgpu::BufferUsages\")\n    Different ways that you can use a buffer.\n\n[BufferUses](https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html \"struct wgpu::BufferUses\")\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[BufferView](https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html \"struct wgpu::BufferView\")\n    A read-only view of a mapped buffer\u2019s bytes.\n\n[BufferViewMut](https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html \"struct wgpu::BufferViewMut\")\n    A write-only view of a mapped buffer\u2019s bytes.\n\n[Color](https://docs.rs/wgpu/latest/wgpu/struct.Color.html \"struct wgpu::Color\")\n    RGBA double precision color.\n\n[ColorTargetState](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\")\n    Describes the color state of a render pipeline.\n\n[ColorWrites](https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html \"struct wgpu::ColorWrites\")\n    Color write mask. Disabled color channels will not be written to.\n\n[CommandBuffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html \"struct wgpu::CommandBuffer\")\n    Handle to a command buffer on the GPU.\n\n[CommandBufferDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html \"struct wgpu::CommandBufferDescriptor\")\n    Describes a [`CommandBuffer`](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html).\n\n[CommandEncoder](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\")\n    Encodes a series of GPU operations.\n\n[CompilationInfo](https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html \"struct wgpu::CompilationInfo\")\n    Compilation information for a shader module.\n\n[CompilationMessage](https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html \"struct wgpu::CompilationMessage\")\n    A single message from the shader compilation process.\n\n[ComputePass](https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html \"struct wgpu::ComputePass\")\n    In-progress recording of a compute pass.\n\n[ComputePassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html \"struct wgpu::ComputePassDescriptor\")\n    Describes the attachments of a compute pass.\n\n[ComputePassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html \"struct wgpu::ComputePassTimestampWrites\")\n    Describes the timestamp writes of a compute pass.\n\n[ComputePipeline](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")\n    Handle to a compute pipeline.\n\n[ComputePipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html \"struct wgpu::ComputePipelineDescriptor\")\n    Describes a compute pipeline.\n\n[ContextBlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html \"struct wgpu::ContextBlasBuildEntry\")\n    Context version see [BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\").\n\n[ContextBlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html \"struct wgpu::ContextBlasTriangleGeometry\")\n    Context version of [BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\").\n\n[CopyExternalImageDestInfo](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\")\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\n[CoreCounters](https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html \"struct wgpu::CoreCounters\")\n    `wgpu-core`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[CreateSurfaceError](https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html \"struct wgpu::CreateSurfaceError\")\n    [`Instance::create_surface()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface \"method wgpu::Instance::create_surface\") or a related function failed.\n\n[DepthBiasState](https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html \"struct wgpu::DepthBiasState\")\n    Describes the biasing setting for the depth target.\n\n[DepthStencilState](https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html \"struct wgpu::DepthStencilState\")\n    Describes the depth/stencil state in a render pipeline.\n\n[Device](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\")\n    Open connection to a graphics and/or compute device.\n\n[DownlevelCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html \"struct wgpu::DownlevelCapabilities\")\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\n[DownlevelFlags](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html \"struct wgpu::DownlevelFlags\")\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\n[DownlevelLimits](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html \"struct wgpu::DownlevelLimits\")\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\n[Dx12BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html \"struct wgpu::Dx12BackendOptions\")\n    Configuration for the DX12 backend.\n\n[Extent3d](https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html \"struct wgpu::Extent3d\")\n    Extent of a texture related operation.\n\n[Features](https://docs.rs/wgpu/latest/wgpu/struct.Features.html \"struct wgpu::Features\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html \"struct wgpu::FeaturesWGPU\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWebGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html \"struct wgpu::FeaturesWebGPU\")\n    Features that are not guaranteed to be supported.\n\n[FragmentState](https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html \"struct wgpu::FragmentState\")\n    Describes the fragment processing in a render pipeline.\n\n[GlBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html \"struct wgpu::GlBackendOptions\")\n    Configuration for the OpenGL/OpenGLES backend.\n\n[HalCounters](https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html \"struct wgpu::HalCounters\")\n    `wgpu-hal`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[ImageSubresourceRange](https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html \"struct wgpu::ImageSubresourceRange\")\n    Subresource range within an image\n\n[Instance](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\")\n    Context for all other wgpu objects. Instance of wgpu.\n\n[InstanceDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html \"struct wgpu::InstanceDescriptor\")\n    Options for creating an instance.\n\n[InstanceFlags](https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html \"struct wgpu::InstanceFlags\")\n    Instance debugging flags.\n\n[InternalCounters](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\")\n    All internal counters, exposed for debugging purposes.\n\n[Limits](https://docs.rs/wgpu/latest/wgpu/struct.Limits.html \"struct wgpu::Limits\")\n    Represents the sets of limits an adapter/device supports.\n\n[MultisampleState](https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html \"struct wgpu::MultisampleState\")\n    Describes the multi-sampling state of a render pipeline.\n\n[NoopBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html \"struct wgpu::NoopBackendOptions\")\n    Configuration for the noop backend.\n\n[Operations](https://docs.rs/wgpu/latest/wgpu/struct.Operations.html \"struct wgpu::Operations\")\n    Pair of load and store operations for an attachment aspect.\n\n[Origin2d](https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html \"struct wgpu::Origin2d\")\n    Origin of a copy from a 2D image.\n\n[Origin3d](https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html \"struct wgpu::Origin3d\")\n    Origin of a copy to/from a texture.\n\n[PipelineCache](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html \"struct wgpu::PipelineCache\")\n    Handle to a pipeline cache, which is used to accelerate creating [`RenderPipeline`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")s and [`ComputePipeline`](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")s in subsequent executions\n\n[PipelineCacheDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html \"struct wgpu::PipelineCacheDescriptor\")\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\n[PipelineCompilationOptions](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html \"struct wgpu::PipelineCompilationOptions\")\n    Advanced options for use when a pipeline is compiled\n\n[PipelineLayout](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\")\n    Handle to a pipeline layout.\n\n[PipelineLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html \"struct wgpu::PipelineLayoutDescriptor\")\n    Describes a [`PipelineLayout`](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\").\n\n[PipelineStatisticsTypes](https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html \"struct wgpu::PipelineStatisticsTypes\")\n    Flags for which pipeline data should be recorded in a query.\n\n[PresentationTimestamp](https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html \"struct wgpu::PresentationTimestamp\")\n    Nanosecond timestamp used by the presentation engine.\n\n[PrimitiveState](https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html \"struct wgpu::PrimitiveState\")\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\n[PushConstantRange](https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html \"struct wgpu::PushConstantRange\")\n    A range of push constant memory to pass to a shader stage.\n\n[QuerySet](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\")\n    Handle to a query set.\n\n[Queue](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html \"struct wgpu::Queue\")\n    Handle to a command queue on a device.\n\n[QueueWriteBufferView](https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html \"struct wgpu::QueueWriteBufferView\")\n    A write-only view into a staging buffer.\n\n[RenderBundle](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\")\n    Pre-prepared reusable bundle of GPU operations.\n\n[RenderBundleDepthStencil](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html \"struct wgpu::RenderBundleDepthStencil\")\n    Describes the depth/stencil attachment for render bundles.\n\n[RenderBundleEncoder](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\")\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\n[RenderBundleEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html \"struct wgpu::RenderBundleEncoderDescriptor\")\n    Describes a [`RenderBundleEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\").\n\n[RenderPass](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\")\n    In-progress recording of a render pass: a list of render commands in a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[RenderPassColorAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html \"struct wgpu::RenderPassColorAttachment\")\n    Describes a color attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDepthStencilAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html \"struct wgpu::RenderPassDepthStencilAttachment\")\n    Describes a depth/stencil attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html \"struct wgpu::RenderPassDescriptor\")\n    Describes the attachments of a render pass.\n\n[RenderPassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html \"struct wgpu::RenderPassTimestampWrites\")\n    Describes the timestamp writes of a render pass.\n\n[RenderPipeline](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")\n    Handle to a rendering (graphics) pipeline.\n\n[RenderPipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html \"struct wgpu::RenderPipelineDescriptor\")\n    Describes a render (graphics) pipeline.\n\n[RequestAdapterOptionsBase](https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html \"struct wgpu::RequestAdapterOptionsBase\")\n    Options for requesting adapter.\n\n[RequestDeviceError](https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html \"struct wgpu::RequestDeviceError\")\n    Requesting a device from an [`Adapter`](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\") failed.\n\n[Sampler](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\")\n    Handle to a sampler.\n\n[ShaderModule](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html \"struct wgpu::ShaderModule\")\n    Handle to a compiled shader module.\n\n[ShaderModuleDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html \"struct wgpu::ShaderModuleDescriptor\")\n    Descriptor for use with [`Device::create_shader_module`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module \"method wgpu::Device::create_shader_module\").\n\n[ShaderRuntimeChecks](https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html \"struct wgpu::ShaderRuntimeChecks\")\n    Describes how shader bound checks should be performed.\n\n[ShaderStages](https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html \"struct wgpu::ShaderStages\")\n    Describes the shader stages that a binding will be visible from.\n\n[SourceLocation](https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html \"struct wgpu::SourceLocation\")\n    A human-readable representation for a span, tailored for text source.\n\n[StencilFaceState](https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html \"struct wgpu::StencilFaceState\")\n    Describes stencil state in a render pipeline.\n\n[StencilState](https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html \"struct wgpu::StencilState\")\n    State of the stencil operation (fixed-pipeline stage).\n\n[SubmissionIndex](https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html \"struct wgpu::SubmissionIndex\")\n    Identifier for a particular call to [`Queue::submit`](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit \"method wgpu::Queue::submit\"). Can be used as part of an argument to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to block for a particular submission to finish.\n\n[Surface](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\")\n    Handle to a presentable surface.\n\n[SurfaceCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html \"struct wgpu::SurfaceCapabilities\")\n    Defines the capabilities of a given surface and adapter.\n\n[SurfaceTexture](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html \"struct wgpu::SurfaceTexture\")\n    Surface texture that can be rendered to. Result of a successful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[TexelCopyBufferInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\")\n    Layout of a texture in a buffer\u2019s memory.\n\n[TexelCopyTextureInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[Texture](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\")\n    Handle to a texture on the GPU.\n\n[TextureFormatFeatureFlags](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html \"struct wgpu::TextureFormatFeatureFlags\")\n    Feature flags for a texture format.\n\n[TextureFormatFeatures](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html \"struct wgpu::TextureFormatFeatures\")\n    Features supported by a given texture format\n\n[TextureTransition](https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html \"struct wgpu::TextureTransition\")\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\n[TextureUsages](https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html \"struct wgpu::TextureUsages\")\n    Different ways that you can use a texture.\n\n[TextureUses](https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html \"struct wgpu::TextureUses\")\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[TextureView](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\")\n    Handle to a texture view.\n\n[Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\")\n    Top Level Acceleration Structure (TLAS).\n\n[TlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\")\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See [`TlasPackage`](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\") for the safe version.\n\n[TlasInstance](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")\n    Safe instance for a [Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\").\n\n[TlasPackage](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\")\n    The safe version of [`TlasBuildEntry`](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\"), containing [`TlasInstance`](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")s instead of a raw buffer.\n\n[VertexAttribute](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\")\n    Vertex inputs (attributes) to shaders.\n\n[VertexBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html \"struct wgpu::VertexBufferLayout\")\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\n[VertexState](https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html \"struct wgpu::VertexState\")\n    Describes the vertex processing in a render pipeline.\n\n[WgslLanguageFeatures](https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html \"struct wgpu::WgslLanguageFeatures\")\n    WGSL language extensions.\n## Enums[\u00a7](https://docs.rs/wgpu/latest/wgpu/#enums)\n\n[AddressMode](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html \"enum wgpu::AddressMode\")\n    How edges should be handled in texture addressing.\n\n[AstcBlock](https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html \"enum wgpu::AstcBlock\")\n    ASTC block dimensions\n\n[AstcChannel](https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html \"enum wgpu::AstcChannel\")\n    ASTC RGBA channel\n\n[Backend](https://docs.rs/wgpu/latest/wgpu/enum.Backend.html \"enum wgpu::Backend\")\n    Backends supported by wgpu.\n\n[BindingResource](https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html \"enum wgpu::BindingResource\")\n    Resource to be bound by a [`BindGroup`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\") for use with a pipeline.\n\n[BindingType](https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html \"enum wgpu::BindingType\")\n    Type of a binding in a [bind group layout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\").\n\n[BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\")\n    Contains the sets of geometry that go into a [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlendFactor](https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html \"enum wgpu::BlendFactor\")\n    Alpha blend factor.\n\n[BlendOperation](https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html \"enum wgpu::BlendOperation\")\n    Alpha blend operation.\n\n[BufferBindingType](https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html \"enum wgpu::BufferBindingType\")\n    Specific type of a buffer binding.\n\n[CompareFunction](https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html \"enum wgpu::CompareFunction\")\n    Comparison function used for depth and stencil operations.\n\n[CompilationMessageType](https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html \"enum wgpu::CompilationMessageType\")\n    The type of a compilation message.\n\n[CompositeAlphaMode](https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html \"enum wgpu::CompositeAlphaMode\")\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\n[ContextBlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html \"enum wgpu::ContextBlasGeometries\")\n    Context version of [BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\").\n\n[DeviceLostReason](https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html \"enum wgpu::DeviceLostReason\")\n    Reason for \u201close the device\u201d.\n\n[DeviceType](https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html \"enum wgpu::DeviceType\")\n    Supported physical device types.\n\n[Dx12Compiler](https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html \"enum wgpu::Dx12Compiler\")\n    Selects which DX12 shader compiler to use.\n\n[DxcShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html \"enum wgpu::DxcShaderModel\")\n    DXC shader model.\n\n[Error](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")\n    Errors resulting from usage of GPU APIs.\n\n[ErrorFilter](https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html \"enum wgpu::ErrorFilter\")\n    Kinds of [`Error`](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")s a [`Device::push_error_scope()`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope \"method wgpu::Device::push_error_scope\") may be configured to catch.\n\n[Face](https://docs.rs/wgpu/latest/wgpu/enum.Face.html \"enum wgpu::Face\")\n    Face of a vertex.\n\n[FilterMode](https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html \"enum wgpu::FilterMode\")\n    Texel mixing mode when sampling between texels.\n\n[FrontFace](https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html \"enum wgpu::FrontFace\")\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\n[GlFenceBehavior](https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html \"enum wgpu::GlFenceBehavior\")\n    Dictate the behavior of fences in OpenGL.\n\n[Gles3MinorVersion](https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html \"enum wgpu::Gles3MinorVersion\")\n    Selects which OpenGL ES 3 minor version to request.\n\n[IndexFormat](https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html \"enum wgpu::IndexFormat\")\n    Format of indices used with pipeline.\n\n[LoadOp](https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html \"enum wgpu::LoadOp\")\n    Operation to perform to the output attachment at the start of a render pass.\n\n[MaintainBase](https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html \"enum wgpu::MaintainBase\")\n    Passed to `Device::poll` to control how and if it should block.\n\n[MapMode](https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html \"enum wgpu::MapMode\")\n    Type of buffer mapping.\n\n[MemoryHints](https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html \"enum wgpu::MemoryHints\")\n    Hints to the device about the memory allocation strategy.\n\n[PollError](https://docs.rs/wgpu/latest/wgpu/enum.PollError.html \"enum wgpu::PollError\")\n    Error states after a device poll\n\n[PollStatus](https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html \"enum wgpu::PollStatus\")\n    Status of device poll operation.\n\n[PolygonMode](https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html \"enum wgpu::PolygonMode\")\n    Type of drawing mode for polygons\n\n[PowerPreference](https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html \"enum wgpu::PowerPreference\")\n    Power Preference when choosing a physical adapter.\n\n[PredefinedColorSpace](https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html \"enum wgpu::PredefinedColorSpace\")\n    Color spaces supported on the web.\n\n[PresentMode](https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html \"enum wgpu::PresentMode\")\n    Timing and queueing with which frames are actually displayed to the user.\n\n[PrimitiveTopology](https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html \"enum wgpu::PrimitiveTopology\")\n    Primitive type the input mesh is composed of.\n\n[QueryType](https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html \"enum wgpu::QueryType\")\n    Type of query contained in a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html).\n\n[RequestAdapterError](https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html \"enum wgpu::RequestAdapterError\")\n    Error when [`Instance::request_adapter()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter) fails.\n\n[SamplerBindingType](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html \"enum wgpu::SamplerBindingType\")\n    Specific type of a sampler binding.\n\n[SamplerBorderColor](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html \"enum wgpu::SamplerBorderColor\")\n    Color variation to use when sampler addressing mode is [`AddressMode::ClampToBorder`](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder \"variant wgpu::AddressMode::ClampToBorder\")\n\n[ShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html \"enum wgpu::ShaderModel\")\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\n[ShaderSource](https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html \"enum wgpu::ShaderSource\")\n    Source of a shader module.\n\n[StencilOperation](https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html \"enum wgpu::StencilOperation\")\n    Operation to perform on the stencil value.\n\n[StorageTextureAccess](https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html \"enum wgpu::StorageTextureAccess\")\n    Specific type of a sample in a texture binding.\n\n[StoreOp](https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html \"enum wgpu::StoreOp\")\n    Operation to perform to the output attachment at the end of a render pass.\n\n[SurfaceError](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html \"enum wgpu::SurfaceError\")\n    Result of an unsuccessful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[SurfaceStatus](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html \"enum wgpu::SurfaceStatus\")\n    Status of the received surface image.\n\n[SurfaceTarget](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\n[SurfaceTargetUnsafe](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html \"enum wgpu::SurfaceTargetUnsafe\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\n[TextureAspect](https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html \"enum wgpu::TextureAspect\")\n    Selects a subset of the data a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html) holds.\n\n[TextureDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html \"enum wgpu::TextureDimension\")\n    Dimensionality of a texture.\n\n[TextureFormat](https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html \"enum wgpu::TextureFormat\")\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\n[TextureSampleType](https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html \"enum wgpu::TextureSampleType\")\n    Specific type of a sample in a texture binding.\n\n[TextureViewDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html \"enum wgpu::TextureViewDimension\")\n    Dimensions of a particular texture view.\n\n[Trace](https://docs.rs/wgpu/latest/wgpu/enum.Trace.html \"enum wgpu::Trace\")\n    Controls API call tracing and specifies where the trace is written.\n\n[VertexFormat](https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html \"enum wgpu::VertexFormat\")\n    Vertex Format for a [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\") (input).\n\n[VertexStepMode](https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html \"enum wgpu::VertexStepMode\")\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants[\u00a7](https://docs.rs/wgpu/latest/wgpu/#constants)\n\n[COPY_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html \"constant wgpu::COPY_BUFFER_ALIGNMENT\")\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\n[COPY_BYTES_PER_ROW_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html \"constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT\")\n    Buffer-to-texture copies must have [`bytes_per_row`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row \"field wgpu::TexelCopyBufferLayout::bytes_per_row\") aligned to this number.\n\n[MAP_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html \"constant wgpu::MAP_ALIGNMENT\")\n    Minimum alignment of buffer mappings.\n\n[PUSH_CONSTANT_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html \"constant wgpu::PUSH_CONSTANT_ALIGNMENT\")\n    Ranges of [writes to push constant storage](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants) must be at least this aligned.\n\n[QUERY_RESOLVE_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html \"constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT\")\n    An [offset into the query resolve buffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set) has to be aligned to this.\n\n[QUERY_SET_MAX_QUERIES](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html \"constant wgpu::QUERY_SET_MAX_QUERIES\")\n    Maximum queries in a [`QuerySetDescriptor`](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html \"struct wgpu_types::QuerySetDescriptor\").\n\n[QUERY_SIZE](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html \"constant wgpu::QUERY_SIZE\")\n    Size in bytes of a single piece of [query](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html) data.\n\n[VERTEX_STRIDE_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html \"constant wgpu::VERTEX_STRIDE_ALIGNMENT\")\n    [Vertex buffer strides](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride) have to be a multiple of this number.\n## Traits[\u00a7](https://docs.rs/wgpu/latest/wgpu/#traits)\n\n[UncapturedErrorHandler](https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html \"trait wgpu::UncapturedErrorHandler\")\n    Type for the callback of uncaptured error handler\n\n[WasmNotSend](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html \"trait wgpu::WasmNotSend\")\n\n\n[WasmNotSendSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html \"trait wgpu::WasmNotSendSync\")\n\n\n[WasmNotSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html \"trait wgpu::WasmNotSync\")\n\n\n[WindowHandle](https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html \"trait wgpu::WindowHandle\")\n    Super trait for window handles as used in [`SurfaceTarget`](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\").\n## Type Aliases[\u00a7](https://docs.rs/wgpu/latest/wgpu/#types)\n\n[AccelerationStructureFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html \"type wgpu::AccelerationStructureFlags\")\n    Flags for an acceleration structure.\n\n[AccelerationStructureGeometryFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html \"type wgpu::AccelerationStructureGeometryFlags\")\n    Flags for a geometry inside a bottom level acceleration structure.\n\n[AccelerationStructureUpdateMode](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html \"type wgpu::AccelerationStructureUpdateMode\")\n    Update mode for acceleration structure builds.\n\n[BlasGeometrySizeDescriptors](https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html \"type wgpu::BlasGeometrySizeDescriptors\")\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\n[BlasTriangleGeometrySizeDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html \"type wgpu::BlasTriangleGeometrySizeDescriptor\")\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\n[BufferAddress](https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html \"type wgpu::BufferAddress\")\n    Integral type used for [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html) offsets and sizes.\n\n[BufferDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html \"type wgpu::BufferDescriptor\")\n    Describes a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\").\n\n[BufferSize](https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html \"type wgpu::BufferSize\")\n    Integral type used for [`BufferSlice`](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html) sizes.\n\n[CommandEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html \"type wgpu::CommandEncoderDescriptor\")\n    Describes a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[CreateBlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html \"type wgpu::CreateBlasDescriptor\")\n    Descriptor to create bottom level acceleration structures.\n\n[CreateTlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html \"type wgpu::CreateTlasDescriptor\")\n    Descriptor to create top level acceleration structures.\n\n[DeviceDescriptor](https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html \"type wgpu::DeviceDescriptor\")\n    Describes a [`Device`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\").\n\n[DynamicOffset](https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html \"type wgpu::DynamicOffset\")\n    Integral type used for [dynamic bind group offsets](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group).\n\n[ErrorSource](https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html \"type wgpu::ErrorSource\")\n    Lower level source of the error.\n\n[ImageCopyBuffer](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html \"type wgpu::ImageCopyBuffer\")Deprecated\n    Old name for a [`TexelCopyBufferInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\").\n\n[ImageCopyTexture](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html \"type wgpu::ImageCopyTexture\")Deprecated\n    Old name for a [`TexelCopyTextureInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\").\n\n[ImageCopyTextureTagged](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html \"type wgpu::ImageCopyTextureTagged\")Deprecated\n    Old name for a [`CopyExternalImageDestInfo`](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\").\n\n[ImageDataLayout](https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html \"type wgpu::ImageDataLayout\")Deprecated\n    Old name for a [`TexelCopyBufferLayout`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\").\n\n[Label](https://docs.rs/wgpu/latest/wgpu/type.Label.html \"type wgpu::Label\")\n    Object debugging label.\n\n[PollType](https://docs.rs/wgpu/latest/wgpu/type.PollType.html \"type wgpu::PollType\")\n    Passed to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to control how and if it should block.\n\n[QuerySetDescriptor](https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html \"type wgpu::QuerySetDescriptor\")\n    Describes a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\").\n\n[RenderBundleDescriptor](https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html \"type wgpu::RenderBundleDescriptor\")\n    Describes a [`RenderBundle`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\").\n\n[RequestAdapterOptions](https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html \"type wgpu::RequestAdapterOptions\")\n    Additional information required when requesting an adapter.\n\n[SamplerDescriptor](https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html \"type wgpu::SamplerDescriptor\")\n    Describes a [`Sampler`](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\").\n\n[ShaderLocation](https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html \"type wgpu::ShaderLocation\")\n    Integral type used for binding locations in shaders.\n\n[ShaderModuleDescriptorMsl](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html \"type wgpu::ShaderModuleDescriptorMsl\")\n    Descriptor for a shader module given by Metal MSL source.\n\n[ShaderModuleDescriptorPassthrough](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html \"type wgpu::ShaderModuleDescriptorPassthrough\")\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with [`Device::create_shader_module_passthrough`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough \"method wgpu::Device::create_shader_module_passthrough\").\n\n[ShaderModuleDescriptorSpirV](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html \"type wgpu::ShaderModuleDescriptorSpirV\")\n    Descriptor for a shader module given by SPIR-V binary.\n\n[SurfaceConfiguration](https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html \"type wgpu::SurfaceConfiguration\")\n    Describes a [`Surface`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\").\n\n[TexelCopyBufferInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html \"type wgpu::TexelCopyBufferInfo\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyTextureInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html \"type wgpu::TexelCopyTextureInfo\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[TextureDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html \"type wgpu::TextureDescriptor\")\n    Describes a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\").\n\n[TextureViewDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html \"type wgpu::TextureViewDescriptor\")\n    Describes a [`TextureView`](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\").\n",
            "markdown_with_citations": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA cross-platform graphics and compute library based on WebGPU\u27e84\u27e9.\nTo start using the API, create an `Instance`\u27e85\u27e9.\n### \u00a7\u27e86\u27e9Feature flags\n#### \u00a7\u27e87\u27e9Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### \u00a7\u27e88\u27e9Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use withANGLE\u27e89\u27e9.\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with MoltenVK\u27e810\u27e9.\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### \u00a7\u27e811\u27e9Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### \u00a7\u27e812\u27e9Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### \u00a7\u27e813\u27e9External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from Microsoft\u2019s GitHub\u27e814\u27e9). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### \u00a7\u27e815\u27e9Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### \u00a7\u27e816\u27e9Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports\u00a7\u27e817\u27e9\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules\u00a7\u27e818\u27e9\n\ncustom\u27e819\u27e9`custom`\n    Provides wrappers custom backend implementations\n\nutil\u27e820\u27e9\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros\u00a7\u27e821\u27e9\n\ninclude_spirv\u27e822\u27e9`spirv`\n    Macro to load a SPIR-V module statically.\n\ninclude_spirv_raw\u27e823\u27e9\n    Macro to load raw SPIR-V data statically, for use with `Features::SPIRV_SHADER_PASSTHROUGH`\u27e824\u27e9.\n\ninclude_wgsl\u27e825\u27e9\n    Load WGSL source code from a file at compile time.\n\nvertex_attr_array\u27e826\u27e9\n    Macro to produce an array of `VertexAttribute`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAdapter\u27e829\u27e9\n    Handle to a physical graphics and/or compute device.\n\nAdapterInfo\u27e830\u27e9\n    Information about an adapter.\n\nAllocatorReport\u27e831\u27e9\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\nBackendOptions\u27e832\u27e9\n    Options that are passed to a given backend.\n\nBackends\u27e833\u27e9\n    Represents the backends that wgpu will use.\n\nBindGroup\u27e834\u27e9\n    Handle to a binding group.\n\nBindGroupDescriptor\u27e835\u27e9\n    Describes a group of bindings and the resources to be bound.\n\nBindGroupEntry\u27e836\u27e9\n    An element of a `BindGroupDescriptor`\u27e835\u27e9, consisting of a bindable resource and the slot to bind it to.\n\nBindGroupLayout\u27e837\u27e9\n    Handle to a binding group layout.\n\nBindGroupLayoutDescriptor\u27e838\u27e9\n    Describes a `BindGroupLayout`\u27e837\u27e9.\n\nBindGroupLayoutEntry\u27e839\u27e9\n    Describes a single binding inside a bind group.\n\nBlas\u27e840\u27e9\n    Bottom Level Acceleration Structure (BLAS).\n\nBlasBuildEntry\u27e841\u27e9\n    Builds the given sets of geometry into the given Blas\u27e840\u27e9.\n\nBlasTriangleGeometry\u27e842\u27e9\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\nBlendComponent\u27e843\u27e9\n    Describes a blend component of a `BlendState`\u27e844\u27e9.\n\nBlendState\u27e844\u27e9\n    Describe the blend state of a render pipeline, within `ColorTargetState`\u27e845\u27e9.\n\nBuffer\u27e846\u27e9\n    Handle to a GPU-accessible buffer.\n\nBufferAsyncError\u27e847\u27e9\n    Error occurred when trying to async map a buffer.\n\nBufferBinding\u27e848\u27e9\n    Describes the segment of a buffer to bind.\n\nBufferSlice\u27e849\u27e9\n    A slice of a `Buffer`\u27e846\u27e9, to be mapped, used for vertex or index data, or the like.\n\nBufferTransition\u27e850\u27e9\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\nBufferUsages\u27e851\u27e9\n    Different ways that you can use a buffer.\n\nBufferUses\u27e852\u27e9\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\nBufferView\u27e853\u27e9\n    A read-only view of a mapped buffer\u2019s bytes.\n\nBufferViewMut\u27e854\u27e9\n    A write-only view of a mapped buffer\u2019s bytes.\n\nColor\u27e855\u27e9\n    RGBA double precision color.\n\nColorTargetState\u27e845\u27e9\n    Describes the color state of a render pipeline.\n\nColorWrites\u27e856\u27e9\n    Color write mask. Disabled color channels will not be written to.\n\nCommandBuffer\u27e857\u27e9\n    Handle to a command buffer on the GPU.\n\nCommandBufferDescriptor\u27e858\u27e9\n    Describes a `CommandBuffer`\u27e857\u27e9.\n\nCommandEncoder\u27e859\u27e9\n    Encodes a series of GPU operations.\n\nCompilationInfo\u27e860\u27e9\n    Compilation information for a shader module.\n\nCompilationMessage\u27e861\u27e9\n    A single message from the shader compilation process.\n\nComputePass\u27e862\u27e9\n    In-progress recording of a compute pass.\n\nComputePassDescriptor\u27e863\u27e9\n    Describes the attachments of a compute pass.\n\nComputePassTimestampWrites\u27e864\u27e9\n    Describes the timestamp writes of a compute pass.\n\nComputePipeline\u27e865\u27e9\n    Handle to a compute pipeline.\n\nComputePipelineDescriptor\u27e866\u27e9\n    Describes a compute pipeline.\n\nContextBlasBuildEntry\u27e867\u27e9\n    Context version see BlasBuildEntry\u27e841\u27e9.\n\nContextBlasTriangleGeometry\u27e868\u27e9\n    Context version of BlasTriangleGeometry\u27e842\u27e9.\n\nCopyExternalImageDestInfo\u27e869\u27e9\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\nCoreCounters\u27e870\u27e9\n    `wgpu-core`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nCreateSurfaceError\u27e872\u27e9\n    `Instance::create_surface()`\u27e873\u27e9 or a related function failed.\n\nDepthBiasState\u27e874\u27e9\n    Describes the biasing setting for the depth target.\n\nDepthStencilState\u27e875\u27e9\n    Describes the depth/stencil state in a render pipeline.\n\nDevice\u27e876\u27e9\n    Open connection to a graphics and/or compute device.\n\nDownlevelCapabilities\u27e877\u27e9\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\nDownlevelFlags\u27e878\u27e9\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\nDownlevelLimits\u27e879\u27e9\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\nDx12BackendOptions\u27e880\u27e9\n    Configuration for the DX12 backend.\n\nExtent3d\u27e881\u27e9\n    Extent of a texture related operation.\n\nFeatures\u27e882\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWGPU\u27e883\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWebGPU\u27e884\u27e9\n    Features that are not guaranteed to be supported.\n\nFragmentState\u27e885\u27e9\n    Describes the fragment processing in a render pipeline.\n\nGlBackendOptions\u27e886\u27e9\n    Configuration for the OpenGL/OpenGLES backend.\n\nHalCounters\u27e887\u27e9\n    `wgpu-hal`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nImageSubresourceRange\u27e888\u27e9\n    Subresource range within an image\n\nInstance\u27e85\u27e9\n    Context for all other wgpu objects. Instance of wgpu.\n\nInstanceDescriptor\u27e889\u27e9\n    Options for creating an instance.\n\nInstanceFlags\u27e890\u27e9\n    Instance debugging flags.\n\nInternalCounters\u27e871\u27e9\n    All internal counters, exposed for debugging purposes.\n\nLimits\u27e891\u27e9\n    Represents the sets of limits an adapter/device supports.\n\nMultisampleState\u27e892\u27e9\n    Describes the multi-sampling state of a render pipeline.\n\nNoopBackendOptions\u27e893\u27e9\n    Configuration for the noop backend.\n\nOperations\u27e894\u27e9\n    Pair of load and store operations for an attachment aspect.\n\nOrigin2d\u27e895\u27e9\n    Origin of a copy from a 2D image.\n\nOrigin3d\u27e896\u27e9\n    Origin of a copy to/from a texture.\n\nPipelineCache\u27e897\u27e9\n    Handle to a pipeline cache, which is used to accelerate creating `RenderPipeline`\u27e898\u27e9s and `ComputePipeline`\u27e865\u27e9s in subsequent executions\n\nPipelineCacheDescriptor\u27e899\u27e9\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\nPipelineCompilationOptions\u27e8100\u27e9\n    Advanced options for use when a pipeline is compiled\n\nPipelineLayout\u27e8101\u27e9\n    Handle to a pipeline layout.\n\nPipelineLayoutDescriptor\u27e8102\u27e9\n    Describes a `PipelineLayout`\u27e8101\u27e9.\n\nPipelineStatisticsTypes\u27e8103\u27e9\n    Flags for which pipeline data should be recorded in a query.\n\nPresentationTimestamp\u27e8104\u27e9\n    Nanosecond timestamp used by the presentation engine.\n\nPrimitiveState\u27e8105\u27e9\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\nPushConstantRange\u27e8106\u27e9\n    A range of push constant memory to pass to a shader stage.\n\nQuerySet\u27e8107\u27e9\n    Handle to a query set.\n\nQueue\u27e8108\u27e9\n    Handle to a command queue on a device.\n\nQueueWriteBufferView\u27e8109\u27e9\n    A write-only view into a staging buffer.\n\nRenderBundle\u27e8110\u27e9\n    Pre-prepared reusable bundle of GPU operations.\n\nRenderBundleDepthStencil\u27e8111\u27e9\n    Describes the depth/stencil attachment for render bundles.\n\nRenderBundleEncoder\u27e8112\u27e9\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\nRenderBundleEncoderDescriptor\u27e8113\u27e9\n    Describes a `RenderBundleEncoder`\u27e8112\u27e9.\n\nRenderPass\u27e8114\u27e9\n    In-progress recording of a render pass: a list of render commands in a `CommandEncoder`\u27e859\u27e9.\n\nRenderPassColorAttachment\u27e8115\u27e9\n    Describes a color attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDepthStencilAttachment\u27e8116\u27e9\n    Describes a depth/stencil attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDescriptor\u27e8117\u27e9\n    Describes the attachments of a render pass.\n\nRenderPassTimestampWrites\u27e8118\u27e9\n    Describes the timestamp writes of a render pass.\n\nRenderPipeline\u27e898\u27e9\n    Handle to a rendering (graphics) pipeline.\n\nRenderPipelineDescriptor\u27e8119\u27e9\n    Describes a render (graphics) pipeline.\n\nRequestAdapterOptionsBase\u27e8120\u27e9\n    Options for requesting adapter.\n\nRequestDeviceError\u27e8121\u27e9\n    Requesting a device from an `Adapter`\u27e829\u27e9 failed.\n\nSampler\u27e8122\u27e9\n    Handle to a sampler.\n\nShaderModule\u27e8123\u27e9\n    Handle to a compiled shader module.\n\nShaderModuleDescriptor\u27e8124\u27e9\n    Descriptor for use with `Device::create_shader_module`\u27e8125\u27e9.\n\nShaderRuntimeChecks\u27e8126\u27e9\n    Describes how shader bound checks should be performed.\n\nShaderStages\u27e8127\u27e9\n    Describes the shader stages that a binding will be visible from.\n\nSourceLocation\u27e8128\u27e9\n    A human-readable representation for a span, tailored for text source.\n\nStencilFaceState\u27e8129\u27e9\n    Describes stencil state in a render pipeline.\n\nStencilState\u27e8130\u27e9\n    State of the stencil operation (fixed-pipeline stage).\n\nSubmissionIndex\u27e8131\u27e9\n    Identifier for a particular call to `Queue::submit`\u27e8132\u27e9. Can be used as part of an argument to `Device::poll`\u27e8133\u27e9 to block for a particular submission to finish.\n\nSurface\u27e8134\u27e9\n    Handle to a presentable surface.\n\nSurfaceCapabilities\u27e8135\u27e9\n    Defines the capabilities of a given surface and adapter.\n\nSurfaceTexture\u27e8136\u27e9\n    Surface texture that can be rendered to. Result of a successful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nTexelCopyBufferInfoBase\u27e8138\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyBufferLayout\u27e8139\u27e9\n    Layout of a texture in a buffer\u2019s memory.\n\nTexelCopyTextureInfoBase\u27e8140\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTexture\u27e8141\u27e9\n    Handle to a texture on the GPU.\n\nTextureFormatFeatureFlags\u27e8142\u27e9\n    Feature flags for a texture format.\n\nTextureFormatFeatures\u27e8143\u27e9\n    Features supported by a given texture format\n\nTextureTransition\u27e8144\u27e9\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\nTextureUsages\u27e8145\u27e9\n    Different ways that you can use a texture.\n\nTextureUses\u27e8146\u27e9\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\nTextureView\u27e8147\u27e9\n    Handle to a texture view.\n\nTlas\u27e8148\u27e9\n    Top Level Acceleration Structure (TLAS).\n\nTlasBuildEntry\u27e8149\u27e9\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See `TlasPackage`\u27e8150\u27e9 for the safe version.\n\nTlasInstance\u27e8151\u27e9\n    Safe instance for a Tlas\u27e8148\u27e9.\n\nTlasPackage\u27e8150\u27e9\n    The safe version of `TlasBuildEntry`\u27e8149\u27e9, containing `TlasInstance`\u27e8151\u27e9s instead of a raw buffer.\n\nVertexAttribute\u27e827\u27e9\n    Vertex inputs (attributes) to shaders.\n\nVertexBufferLayout\u27e8152\u27e9\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\nVertexState\u27e8153\u27e9\n    Describes the vertex processing in a render pipeline.\n\nWgslLanguageFeatures\u27e8154\u27e9\n    WGSL language extensions.\n## Enums\u00a7\u27e8155\u27e9\n\nAddressMode\u27e8156\u27e9\n    How edges should be handled in texture addressing.\n\nAstcBlock\u27e8157\u27e9\n    ASTC block dimensions\n\nAstcChannel\u27e8158\u27e9\n    ASTC RGBA channel\n\nBackend\u27e8159\u27e9\n    Backends supported by wgpu.\n\nBindingResource\u27e8160\u27e9\n    Resource to be bound by a `BindGroup`\u27e834\u27e9 for use with a pipeline.\n\nBindingType\u27e8161\u27e9\n    Type of a binding in a bind group layout\u27e839\u27e9.\n\nBlasGeometries\u27e8162\u27e9\n    Contains the sets of geometry that go into a Blas\u27e840\u27e9.\n\nBlendFactor\u27e8163\u27e9\n    Alpha blend factor.\n\nBlendOperation\u27e8164\u27e9\n    Alpha blend operation.\n\nBufferBindingType\u27e8165\u27e9\n    Specific type of a buffer binding.\n\nCompareFunction\u27e8166\u27e9\n    Comparison function used for depth and stencil operations.\n\nCompilationMessageType\u27e8167\u27e9\n    The type of a compilation message.\n\nCompositeAlphaMode\u27e8168\u27e9\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\nContextBlasGeometries\u27e8169\u27e9\n    Context version of BlasGeometries\u27e8162\u27e9.\n\nDeviceLostReason\u27e8170\u27e9\n    Reason for \u201close the device\u201d.\n\nDeviceType\u27e8171\u27e9\n    Supported physical device types.\n\nDx12Compiler\u27e8172\u27e9\n    Selects which DX12 shader compiler to use.\n\nDxcShaderModel\u27e8173\u27e9\n    DXC shader model.\n\nError\u27e8174\u27e9\n    Errors resulting from usage of GPU APIs.\n\nErrorFilter\u27e8175\u27e9\n    Kinds of `Error`\u27e8174\u27e9s a `Device::push_error_scope()`\u27e8176\u27e9 may be configured to catch.\n\nFace\u27e8177\u27e9\n    Face of a vertex.\n\nFilterMode\u27e8178\u27e9\n    Texel mixing mode when sampling between texels.\n\nFrontFace\u27e8179\u27e9\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\nGlFenceBehavior\u27e8180\u27e9\n    Dictate the behavior of fences in OpenGL.\n\nGles3MinorVersion\u27e8181\u27e9\n    Selects which OpenGL ES 3 minor version to request.\n\nIndexFormat\u27e8182\u27e9\n    Format of indices used with pipeline.\n\nLoadOp\u27e8183\u27e9\n    Operation to perform to the output attachment at the start of a render pass.\n\nMaintainBase\u27e8184\u27e9\n    Passed to `Device::poll` to control how and if it should block.\n\nMapMode\u27e8185\u27e9\n    Type of buffer mapping.\n\nMemoryHints\u27e8186\u27e9\n    Hints to the device about the memory allocation strategy.\n\nPollError\u27e8187\u27e9\n    Error states after a device poll\n\nPollStatus\u27e8188\u27e9\n    Status of device poll operation.\n\nPolygonMode\u27e8189\u27e9\n    Type of drawing mode for polygons\n\nPowerPreference\u27e8190\u27e9\n    Power Preference when choosing a physical adapter.\n\nPredefinedColorSpace\u27e8191\u27e9\n    Color spaces supported on the web.\n\nPresentMode\u27e8192\u27e9\n    Timing and queueing with which frames are actually displayed to the user.\n\nPrimitiveTopology\u27e8193\u27e9\n    Primitive type the input mesh is composed of.\n\nQueryType\u27e8194\u27e9\n    Type of query contained in a `QuerySet`\u27e8107\u27e9.\n\nRequestAdapterError\u27e8195\u27e9\n    Error when `Instance::request_adapter()`\u27e8196\u27e9 fails.\n\nSamplerBindingType\u27e8197\u27e9\n    Specific type of a sampler binding.\n\nSamplerBorderColor\u27e8198\u27e9\n    Color variation to use when sampler addressing mode is `AddressMode::ClampToBorder`\u27e8199\u27e9\n\nShaderModel\u27e8200\u27e9\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\nShaderSource\u27e8201\u27e9\n    Source of a shader module.\n\nStencilOperation\u27e8202\u27e9\n    Operation to perform on the stencil value.\n\nStorageTextureAccess\u27e8203\u27e9\n    Specific type of a sample in a texture binding.\n\nStoreOp\u27e8204\u27e9\n    Operation to perform to the output attachment at the end of a render pass.\n\nSurfaceError\u27e8205\u27e9\n    Result of an unsuccessful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nSurfaceStatus\u27e8206\u27e9\n    Status of the received surface image.\n\nSurfaceTarget\u27e8207\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\nSurfaceTargetUnsafe\u27e8208\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\nTextureAspect\u27e8209\u27e9\n    Selects a subset of the data a `Texture`\u27e8141\u27e9 holds.\n\nTextureDimension\u27e8210\u27e9\n    Dimensionality of a texture.\n\nTextureFormat\u27e8211\u27e9\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\nTextureSampleType\u27e8212\u27e9\n    Specific type of a sample in a texture binding.\n\nTextureViewDimension\u27e8213\u27e9\n    Dimensions of a particular texture view.\n\nTrace\u27e8214\u27e9\n    Controls API call tracing and specifies where the trace is written.\n\nVertexFormat\u27e8215\u27e9\n    Vertex Format for a `VertexAttribute`\u27e827\u27e9 (input).\n\nVertexStepMode\u27e8216\u27e9\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants\u00a7\u27e8217\u27e9\n\nCOPY_BUFFER_ALIGNMENT\u27e8218\u27e9\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\nCOPY_BYTES_PER_ROW_ALIGNMENT\u27e8219\u27e9\n    Buffer-to-texture copies must have `bytes_per_row`\u27e8220\u27e9 aligned to this number.\n\nMAP_ALIGNMENT\u27e8221\u27e9\n    Minimum alignment of buffer mappings.\n\nPUSH_CONSTANT_ALIGNMENT\u27e8222\u27e9\n    Ranges of writes to push constant storage\u27e8223\u27e9 must be at least this aligned.\n\nQUERY_RESOLVE_BUFFER_ALIGNMENT\u27e8224\u27e9\n    An offset into the query resolve buffer\u27e8225\u27e9 has to be aligned to this.\n\nQUERY_SET_MAX_QUERIES\u27e8226\u27e9\n    Maximum queries in a `QuerySetDescriptor`\u27e8227\u27e9.\n\nQUERY_SIZE\u27e8228\u27e9\n    Size in bytes of a single piece of query\u27e8107\u27e9 data.\n\nVERTEX_STRIDE_ALIGNMENT\u27e8229\u27e9\n    Vertex buffer strides\u27e8230\u27e9 have to be a multiple of this number.\n## Traits\u00a7\u27e8231\u27e9\n\nUncapturedErrorHandler\u27e8232\u27e9\n    Type for the callback of uncaptured error handler\n\nWasmNotSend\u27e8233\u27e9\n\n\nWasmNotSendSync\u27e8234\u27e9\n\n\nWasmNotSync\u27e8235\u27e9\n\n\nWindowHandle\u27e8236\u27e9\n    Super trait for window handles as used in `SurfaceTarget`\u27e8207\u27e9.\n## Type Aliases\u00a7\u27e8237\u27e9\n\nAccelerationStructureFlags\u27e8238\u27e9\n    Flags for an acceleration structure.\n\nAccelerationStructureGeometryFlags\u27e8239\u27e9\n    Flags for a geometry inside a bottom level acceleration structure.\n\nAccelerationStructureUpdateMode\u27e8240\u27e9\n    Update mode for acceleration structure builds.\n\nBlasGeometrySizeDescriptors\u27e8241\u27e9\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\nBlasTriangleGeometrySizeDescriptor\u27e8242\u27e9\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\nBufferAddress\u27e8243\u27e9\n    Integral type used for `Buffer`\u27e846\u27e9 offsets and sizes.\n\nBufferDescriptor\u27e8244\u27e9\n    Describes a `Buffer`\u27e846\u27e9.\n\nBufferSize\u27e8245\u27e9\n    Integral type used for `BufferSlice`\u27e849\u27e9 sizes.\n\nCommandEncoderDescriptor\u27e8246\u27e9\n    Describes a `CommandEncoder`\u27e859\u27e9.\n\nCreateBlasDescriptor\u27e8247\u27e9\n    Descriptor to create bottom level acceleration structures.\n\nCreateTlasDescriptor\u27e8248\u27e9\n    Descriptor to create top level acceleration structures.\n\nDeviceDescriptor\u27e8249\u27e9\n    Describes a `Device`\u27e876\u27e9.\n\nDynamicOffset\u27e8250\u27e9\n    Integral type used for dynamic bind group offsets\u27e8251\u27e9.\n\nErrorSource\u27e8252\u27e9\n    Lower level source of the error.\n\nImageCopyBuffer\u27e8253\u27e9Deprecated\n    Old name for a `TexelCopyBufferInfo`\u27e8138\u27e9.\n\nImageCopyTexture\u27e8254\u27e9Deprecated\n    Old name for a `TexelCopyTextureInfo`\u27e8140\u27e9.\n\nImageCopyTextureTagged\u27e8255\u27e9Deprecated\n    Old name for a `CopyExternalImageDestInfo`\u27e869\u27e9.\n\nImageDataLayout\u27e8256\u27e9Deprecated\n    Old name for a `TexelCopyBufferLayout`\u27e8139\u27e9.\n\nLabel\u27e8257\u27e9\n    Object debugging label.\n\nPollType\u27e8258\u27e9\n    Passed to `Device::poll`\u27e8133\u27e9 to control how and if it should block.\n\nQuerySetDescriptor\u27e8259\u27e9\n    Describes a `QuerySet`\u27e8107\u27e9.\n\nRenderBundleDescriptor\u27e8260\u27e9\n    Describes a `RenderBundle`\u27e8110\u27e9.\n\nRequestAdapterOptions\u27e8261\u27e9\n    Additional information required when requesting an adapter.\n\nSamplerDescriptor\u27e8262\u27e9\n    Describes a `Sampler`\u27e8122\u27e9.\n\nShaderLocation\u27e8263\u27e9\n    Integral type used for binding locations in shaders.\n\nShaderModuleDescriptorMsl\u27e8264\u27e9\n    Descriptor for a shader module given by Metal MSL source.\n\nShaderModuleDescriptorPassthrough\u27e8265\u27e9\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with `Device::create_shader_module_passthrough`\u27e8266\u27e9.\n\nShaderModuleDescriptorSpirV\u27e8267\u27e9\n    Descriptor for a shader module given by SPIR-V binary.\n\nSurfaceConfiguration\u27e8268\u27e9\n    Describes a `Surface`\u27e8134\u27e9.\n\nTexelCopyBufferInfo\u27e8269\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyTextureInfo\u27e8270\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTextureDescriptor\u27e8271\u27e9\n    Describes a `Texture`\u27e8141\u27e9.\n\nTextureViewDescriptor\u27e8272\u27e9\n    Describes a `TextureView`\u27e8147\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wgpu/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wgpu/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126: Source\n\u27e84\u27e9 https://gpuweb.github.io/gpuweb/: WebGPU\n\u27e85\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html: struct wgpu::Instance - `Instance`\n\u27e86\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-flags: \u00a7\n\u27e87\u27e9 https://docs.rs/wgpu/latest/wgpu/#backends: \u00a7\n\u27e88\u27e9 https://docs.rs/wgpu/latest/wgpu/#conditional-backends: \u00a7\n\u27e89\u27e9 https://github.com/google/angle: ANGLE\n\u27e810\u27e9 https://github.com/KhronosGroup/MoltenVK: MoltenVK\n\u27e811\u27e9 https://docs.rs/wgpu/latest/wgpu/#shading-language-support: \u00a7\n\u27e812\u27e9 https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization: \u00a7\n\u27e813\u27e9 https://docs.rs/wgpu/latest/wgpu/#external-libraries: \u00a7\n\u27e814\u27e9 https://github.com/Microsoft/DirectXShaderCompiler: Microsoft\u2019s GitHub\n\u27e815\u27e9 https://docs.rs/wgpu/latest/wgpu/#other: \u00a7\n\u27e816\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-aliases: \u00a7\n\u27e817\u27e9 https://docs.rs/wgpu/latest/wgpu/#reexports: \u00a7\n\u27e818\u27e9 https://docs.rs/wgpu/latest/wgpu/#modules: \u00a7\n\u27e819\u27e9 https://docs.rs/wgpu/latest/wgpu/custom/index.html: mod wgpu::custom - custom\n\u27e820\u27e9 https://docs.rs/wgpu/latest/wgpu/util/index.html: mod wgpu::util - util\n\u27e821\u27e9 https://docs.rs/wgpu/latest/wgpu/#macros: \u00a7\n\u27e822\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html: macro wgpu::include_spirv - include_spirv\n\u27e823\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html: macro wgpu::include_spirv_raw - include_spirv_raw\n\u27e824\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH: associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH - `Features::SPIRV_SHADER_PASSTHROUGH`\n\u27e825\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html: macro wgpu::include_wgsl - include_wgsl\n\u27e826\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html: macro wgpu::vertex_attr_array - vertex_attr_array\n\u27e827\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html: struct wgpu::VertexAttribute - `VertexAttribute`\n\u27e828\u27e9 https://docs.rs/wgpu/latest/wgpu/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html: struct wgpu::Adapter - Adapter\n\u27e830\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html: struct wgpu::AdapterInfo - AdapterInfo\n\u27e831\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html: struct wgpu::AllocatorReport - AllocatorReport\n\u27e832\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html: struct wgpu::BackendOptions - BackendOptions\n\u27e833\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Backends.html: struct wgpu::Backends - Backends\n\u27e834\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html: struct wgpu::BindGroup - BindGroup\n\u27e835\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html: struct wgpu::BindGroupDescriptor - BindGroupDescriptor\n\u27e836\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html: struct wgpu::BindGroupEntry - BindGroupEntry\n\u27e837\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html: struct wgpu::BindGroupLayout - BindGroupLayout\n\u27e838\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html: struct wgpu::BindGroupLayoutDescriptor - BindGroupLayoutDescriptor\n\u27e839\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html: struct wgpu::BindGroupLayoutEntry - BindGroupLayoutEntry\n\u27e840\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Blas.html: struct wgpu::Blas - Blas\n\u27e841\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html: struct wgpu::BlasBuildEntry - BlasBuildEntry\n\u27e842\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html: struct wgpu::BlasTriangleGeometry - BlasTriangleGeometry\n\u27e843\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html: struct wgpu::BlendComponent - BlendComponent\n\u27e844\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html: struct wgpu::BlendState - `BlendState`\n\u27e845\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html: struct wgpu::ColorTargetState - `ColorTargetState`\n\u27e846\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html: struct wgpu::Buffer - Buffer\n\u27e847\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html: struct wgpu::BufferAsyncError - BufferAsyncError\n\u27e848\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html: struct wgpu::BufferBinding - BufferBinding\n\u27e849\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html: struct wgpu::BufferSlice - BufferSlice\n\u27e850\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html: struct wgpu::BufferTransition - BufferTransition\n\u27e851\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html: struct wgpu::BufferUsages - BufferUsages\n\u27e852\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html: struct wgpu::BufferUses - BufferUses\n\u27e853\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html: struct wgpu::BufferView - BufferView\n\u27e854\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html: struct wgpu::BufferViewMut - BufferViewMut\n\u27e855\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Color.html: struct wgpu::Color - Color\n\u27e856\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html: struct wgpu::ColorWrites - ColorWrites\n\u27e857\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html: struct wgpu::CommandBuffer - CommandBuffer\n\u27e858\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html: struct wgpu::CommandBufferDescriptor - CommandBufferDescriptor\n\u27e859\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html: struct wgpu::CommandEncoder - CommandEncoder\n\u27e860\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html: struct wgpu::CompilationInfo - CompilationInfo\n\u27e861\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html: struct wgpu::CompilationMessage - CompilationMessage\n\u27e862\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html: struct wgpu::ComputePass - ComputePass\n\u27e863\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html: struct wgpu::ComputePassDescriptor - ComputePassDescriptor\n\u27e864\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html: struct wgpu::ComputePassTimestampWrites - ComputePassTimestampWrites\n\u27e865\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html: struct wgpu::ComputePipeline - ComputePipeline\n\u27e866\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html: struct wgpu::ComputePipelineDescriptor - ComputePipelineDescriptor\n\u27e867\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html: struct wgpu::ContextBlasBuildEntry - ContextBlasBuildEntry\n\u27e868\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html: struct wgpu::ContextBlasTriangleGeometry - ContextBlasTriangleGeometry\n\u27e869\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html: struct wgpu::CopyExternalImageDestInfo - CopyExternalImageDestInfo\n\u27e870\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html: struct wgpu::CoreCounters - CoreCounters\n\u27e871\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html: struct wgpu::InternalCounters - `InternalCounters`\n\u27e872\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html: struct wgpu::CreateSurfaceError - CreateSurfaceError\n\u27e873\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface: method wgpu::Instance::create_surface - `Instance::create_surface()`\n\u27e874\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html: struct wgpu::DepthBiasState - DepthBiasState\n\u27e875\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html: struct wgpu::DepthStencilState - DepthStencilState\n\u27e876\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html: struct wgpu::Device - Device\n\u27e877\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html: struct wgpu::DownlevelCapabilities - DownlevelCapabilities\n\u27e878\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html: struct wgpu::DownlevelFlags - DownlevelFlags\n\u27e879\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html: struct wgpu::DownlevelLimits - DownlevelLimits\n\u27e880\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html: struct wgpu::Dx12BackendOptions - Dx12BackendOptions\n\u27e881\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html: struct wgpu::Extent3d - Extent3d\n\u27e882\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html: struct wgpu::Features - Features\n\u27e883\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html: struct wgpu::FeaturesWGPU - FeaturesWGPU\n\u27e884\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html: struct wgpu::FeaturesWebGPU - FeaturesWebGPU\n\u27e885\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html: struct wgpu::FragmentState - FragmentState\n\u27e886\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html: struct wgpu::GlBackendOptions - GlBackendOptions\n\u27e887\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html: struct wgpu::HalCounters - HalCounters\n\u27e888\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html: struct wgpu::ImageSubresourceRange - ImageSubresourceRange\n\u27e889\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html: struct wgpu::InstanceDescriptor - InstanceDescriptor\n\u27e890\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html: struct wgpu::InstanceFlags - InstanceFlags\n\u27e891\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Limits.html: struct wgpu::Limits - Limits\n\u27e892\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html: struct wgpu::MultisampleState - MultisampleState\n\u27e893\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html: struct wgpu::NoopBackendOptions - NoopBackendOptions\n\u27e894\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Operations.html: struct wgpu::Operations - Operations\n\u27e895\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html: struct wgpu::Origin2d - Origin2d\n\u27e896\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html: struct wgpu::Origin3d - Origin3d\n\u27e897\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html: struct wgpu::PipelineCache - PipelineCache\n\u27e898\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html: struct wgpu::RenderPipeline - `RenderPipeline`\n\u27e899\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html: struct wgpu::PipelineCacheDescriptor - PipelineCacheDescriptor\n\u27e8100\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html: struct wgpu::PipelineCompilationOptions - PipelineCompilationOptions\n\u27e8101\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html: struct wgpu::PipelineLayout - PipelineLayout\n\u27e8102\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html: struct wgpu::PipelineLayoutDescriptor - PipelineLayoutDescriptor\n\u27e8103\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html: struct wgpu::PipelineStatisticsTypes - PipelineStatisticsTypes\n\u27e8104\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html: struct wgpu::PresentationTimestamp - PresentationTimestamp\n\u27e8105\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html: struct wgpu::PrimitiveState - PrimitiveState\n\u27e8106\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html: struct wgpu::PushConstantRange - PushConstantRange\n\u27e8107\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html: struct wgpu::QuerySet - QuerySet\n\u27e8108\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html: struct wgpu::Queue - Queue\n\u27e8109\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html: struct wgpu::QueueWriteBufferView - QueueWriteBufferView\n\u27e8110\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html: struct wgpu::RenderBundle - RenderBundle\n\u27e8111\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html: struct wgpu::RenderBundleDepthStencil - RenderBundleDepthStencil\n\u27e8112\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html: struct wgpu::RenderBundleEncoder - RenderBundleEncoder\n\u27e8113\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html: struct wgpu::RenderBundleEncoderDescriptor - RenderBundleEncoderDescriptor\n\u27e8114\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html: struct wgpu::RenderPass - RenderPass\n\u27e8115\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html: struct wgpu::RenderPassColorAttachment - RenderPassColorAttachment\n\u27e8116\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html: struct wgpu::RenderPassDepthStencilAttachment - RenderPassDepthStencilAttachment\n\u27e8117\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html: struct wgpu::RenderPassDescriptor - RenderPassDescriptor\n\u27e8118\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html: struct wgpu::RenderPassTimestampWrites - RenderPassTimestampWrites\n\u27e8119\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html: struct wgpu::RenderPipelineDescriptor - RenderPipelineDescriptor\n\u27e8120\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html: struct wgpu::RequestAdapterOptionsBase - RequestAdapterOptionsBase\n\u27e8121\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html: struct wgpu::RequestDeviceError - RequestDeviceError\n\u27e8122\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html: struct wgpu::Sampler - Sampler\n\u27e8123\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html: struct wgpu::ShaderModule - ShaderModule\n\u27e8124\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html: struct wgpu::ShaderModuleDescriptor - ShaderModuleDescriptor\n\u27e8125\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module: method wgpu::Device::create_shader_module - `Device::create_shader_module`\n\u27e8126\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html: struct wgpu::ShaderRuntimeChecks - ShaderRuntimeChecks\n\u27e8127\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html: struct wgpu::ShaderStages - ShaderStages\n\u27e8128\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html: struct wgpu::SourceLocation - SourceLocation\n\u27e8129\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html: struct wgpu::StencilFaceState - StencilFaceState\n\u27e8130\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html: struct wgpu::StencilState - StencilState\n\u27e8131\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html: struct wgpu::SubmissionIndex - SubmissionIndex\n\u27e8132\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit: method wgpu::Queue::submit - `Queue::submit`\n\u27e8133\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll: method wgpu::Device::poll - `Device::poll`\n\u27e8134\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html: struct wgpu::Surface - Surface\n\u27e8135\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html: struct wgpu::SurfaceCapabilities - SurfaceCapabilities\n\u27e8136\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html: struct wgpu::SurfaceTexture - SurfaceTexture\n\u27e8137\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture: method wgpu::Surface::get_current_texture - `Surface::get_current_texture`\n\u27e8138\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html: struct wgpu::TexelCopyBufferInfoBase - TexelCopyBufferInfoBase\n\u27e8139\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html: struct wgpu::TexelCopyBufferLayout - TexelCopyBufferLayout\n\u27e8140\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html: struct wgpu::TexelCopyTextureInfoBase - TexelCopyTextureInfoBase\n\u27e8141\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Texture.html: struct wgpu::Texture - Texture\n\u27e8142\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html: struct wgpu::TextureFormatFeatureFlags - TextureFormatFeatureFlags\n\u27e8143\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html: struct wgpu::TextureFormatFeatures - TextureFormatFeatures\n\u27e8144\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html: struct wgpu::TextureTransition - TextureTransition\n\u27e8145\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html: struct wgpu::TextureUsages - TextureUsages\n\u27e8146\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html: struct wgpu::TextureUses - TextureUses\n\u27e8147\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html: struct wgpu::TextureView - TextureView\n\u27e8148\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html: struct wgpu::Tlas - Tlas\n\u27e8149\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html: struct wgpu::TlasBuildEntry - TlasBuildEntry\n\u27e8150\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html: struct wgpu::TlasPackage - `TlasPackage`\n\u27e8151\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html: struct wgpu::TlasInstance - TlasInstance\n\u27e8152\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html: struct wgpu::VertexBufferLayout - VertexBufferLayout\n\u27e8153\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html: struct wgpu::VertexState - VertexState\n\u27e8154\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html: struct wgpu::WgslLanguageFeatures - WgslLanguageFeatures\n\u27e8155\u27e9 https://docs.rs/wgpu/latest/wgpu/#enums: \u00a7\n\u27e8156\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html: enum wgpu::AddressMode - AddressMode\n\u27e8157\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html: enum wgpu::AstcBlock - AstcBlock\n\u27e8158\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html: enum wgpu::AstcChannel - AstcChannel\n\u27e8159\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Backend.html: enum wgpu::Backend - Backend\n\u27e8160\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html: enum wgpu::BindingResource - BindingResource\n\u27e8161\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html: enum wgpu::BindingType - BindingType\n\u27e8162\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html: enum wgpu::BlasGeometries - BlasGeometries\n\u27e8163\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html: enum wgpu::BlendFactor - BlendFactor\n\u27e8164\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html: enum wgpu::BlendOperation - BlendOperation\n\u27e8165\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html: enum wgpu::BufferBindingType - BufferBindingType\n\u27e8166\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html: enum wgpu::CompareFunction - CompareFunction\n\u27e8167\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html: enum wgpu::CompilationMessageType - CompilationMessageType\n\u27e8168\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html: enum wgpu::CompositeAlphaMode - CompositeAlphaMode\n\u27e8169\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html: enum wgpu::ContextBlasGeometries - ContextBlasGeometries\n\u27e8170\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html: enum wgpu::DeviceLostReason - DeviceLostReason\n\u27e8171\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html: enum wgpu::DeviceType - DeviceType\n\u27e8172\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html: enum wgpu::Dx12Compiler - Dx12Compiler\n\u27e8173\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html: enum wgpu::DxcShaderModel - DxcShaderModel\n\u27e8174\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Error.html: enum wgpu::Error - Error\n\u27e8175\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html: enum wgpu::ErrorFilter - ErrorFilter\n\u27e8176\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope: method wgpu::Device::push_error_scope - `Device::push_error_scope()`\n\u27e8177\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Face.html: enum wgpu::Face - Face\n\u27e8178\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html: enum wgpu::FilterMode - FilterMode\n\u27e8179\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html: enum wgpu::FrontFace - FrontFace\n\u27e8180\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html: enum wgpu::GlFenceBehavior - GlFenceBehavior\n\u27e8181\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html: enum wgpu::Gles3MinorVersion - Gles3MinorVersion\n\u27e8182\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html: enum wgpu::IndexFormat - IndexFormat\n\u27e8183\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html: enum wgpu::LoadOp - LoadOp\n\u27e8184\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html: enum wgpu::MaintainBase - MaintainBase\n\u27e8185\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html: enum wgpu::MapMode - MapMode\n\u27e8186\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html: enum wgpu::MemoryHints - MemoryHints\n\u27e8187\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollError.html: enum wgpu::PollError - PollError\n\u27e8188\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html: enum wgpu::PollStatus - PollStatus\n\u27e8189\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html: enum wgpu::PolygonMode - PolygonMode\n\u27e8190\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html: enum wgpu::PowerPreference - PowerPreference\n\u27e8191\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html: enum wgpu::PredefinedColorSpace - PredefinedColorSpace\n\u27e8192\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html: enum wgpu::PresentMode - PresentMode\n\u27e8193\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html: enum wgpu::PrimitiveTopology - PrimitiveTopology\n\u27e8194\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html: enum wgpu::QueryType - QueryType\n\u27e8195\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html: enum wgpu::RequestAdapterError - RequestAdapterError\n\u27e8196\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter: `Instance::request_adapter()`\n\u27e8197\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html: enum wgpu::SamplerBindingType - SamplerBindingType\n\u27e8198\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html: enum wgpu::SamplerBorderColor - SamplerBorderColor\n\u27e8199\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder: variant wgpu::AddressMode::ClampToBorder - `AddressMode::ClampToBorder`\n\u27e8200\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html: enum wgpu::ShaderModel - ShaderModel\n\u27e8201\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html: enum wgpu::ShaderSource - ShaderSource\n\u27e8202\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html: enum wgpu::StencilOperation - StencilOperation\n\u27e8203\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html: enum wgpu::StorageTextureAccess - StorageTextureAccess\n\u27e8204\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html: enum wgpu::StoreOp - StoreOp\n\u27e8205\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html: enum wgpu::SurfaceError - SurfaceError\n\u27e8206\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html: enum wgpu::SurfaceStatus - SurfaceStatus\n\u27e8207\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html: enum wgpu::SurfaceTarget - SurfaceTarget\n\u27e8208\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html: enum wgpu::SurfaceTargetUnsafe - SurfaceTargetUnsafe\n\u27e8209\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html: enum wgpu::TextureAspect - TextureAspect\n\u27e8210\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html: enum wgpu::TextureDimension - TextureDimension\n\u27e8211\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html: enum wgpu::TextureFormat - TextureFormat\n\u27e8212\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html: enum wgpu::TextureSampleType - TextureSampleType\n\u27e8213\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html: enum wgpu::TextureViewDimension - TextureViewDimension\n\u27e8214\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Trace.html: enum wgpu::Trace - Trace\n\u27e8215\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html: enum wgpu::VertexFormat - VertexFormat\n\u27e8216\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html: enum wgpu::VertexStepMode - VertexStepMode\n\u27e8217\u27e9 https://docs.rs/wgpu/latest/wgpu/#constants: \u00a7\n\u27e8218\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html: constant wgpu::COPY_BUFFER_ALIGNMENT - COPY_BUFFER_ALIGNMENT\n\u27e8219\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html: constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT - COPY_BYTES_PER_ROW_ALIGNMENT\n\u27e8220\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row: field wgpu::TexelCopyBufferLayout::bytes_per_row - `bytes_per_row`\n\u27e8221\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html: constant wgpu::MAP_ALIGNMENT - MAP_ALIGNMENT\n\u27e8222\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html: constant wgpu::PUSH_CONSTANT_ALIGNMENT - PUSH_CONSTANT_ALIGNMENT\n\u27e8223\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants: writes to push constant storage\n\u27e8224\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html: constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT - QUERY_RESOLVE_BUFFER_ALIGNMENT\n\u27e8225\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set: offset into the query resolve buffer\n\u27e8226\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html: constant wgpu::QUERY_SET_MAX_QUERIES - QUERY_SET_MAX_QUERIES\n\u27e8227\u27e9 https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html: struct wgpu_types::QuerySetDescriptor - `QuerySetDescriptor`\n\u27e8228\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html: constant wgpu::QUERY_SIZE - QUERY_SIZE\n\u27e8229\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html: constant wgpu::VERTEX_STRIDE_ALIGNMENT - VERTEX_STRIDE_ALIGNMENT\n\u27e8230\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride: Vertex buffer strides\n\u27e8231\u27e9 https://docs.rs/wgpu/latest/wgpu/#traits: \u00a7\n\u27e8232\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html: trait wgpu::UncapturedErrorHandler - UncapturedErrorHandler\n\u27e8233\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html: trait wgpu::WasmNotSend - WasmNotSend\n\u27e8234\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html: trait wgpu::WasmNotSendSync - WasmNotSendSync\n\u27e8235\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html: trait wgpu::WasmNotSync - WasmNotSync\n\u27e8236\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html: trait wgpu::WindowHandle - WindowHandle\n\u27e8237\u27e9 https://docs.rs/wgpu/latest/wgpu/#types: \u00a7\n\u27e8238\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html: type wgpu::AccelerationStructureFlags - AccelerationStructureFlags\n\u27e8239\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html: type wgpu::AccelerationStructureGeometryFlags - AccelerationStructureGeometryFlags\n\u27e8240\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html: type wgpu::AccelerationStructureUpdateMode - AccelerationStructureUpdateMode\n\u27e8241\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html: type wgpu::BlasGeometrySizeDescriptors - BlasGeometrySizeDescriptors\n\u27e8242\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html: type wgpu::BlasTriangleGeometrySizeDescriptor - BlasTriangleGeometrySizeDescriptor\n\u27e8243\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html: type wgpu::BufferAddress - BufferAddress\n\u27e8244\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html: type wgpu::BufferDescriptor - BufferDescriptor\n\u27e8245\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html: type wgpu::BufferSize - BufferSize\n\u27e8246\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html: type wgpu::CommandEncoderDescriptor - CommandEncoderDescriptor\n\u27e8247\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html: type wgpu::CreateBlasDescriptor - CreateBlasDescriptor\n\u27e8248\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html: type wgpu::CreateTlasDescriptor - CreateTlasDescriptor\n\u27e8249\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html: type wgpu::DeviceDescriptor - DeviceDescriptor\n\u27e8250\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html: type wgpu::DynamicOffset - DynamicOffset\n\u27e8251\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group: dynamic bind group offsets\n\u27e8252\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html: type wgpu::ErrorSource - ErrorSource\n\u27e8253\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html: type wgpu::ImageCopyBuffer - ImageCopyBuffer\n\u27e8254\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html: type wgpu::ImageCopyTexture - ImageCopyTexture\n\u27e8255\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html: type wgpu::ImageCopyTextureTagged - ImageCopyTextureTagged\n\u27e8256\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html: type wgpu::ImageDataLayout - ImageDataLayout\n\u27e8257\u27e9 https://docs.rs/wgpu/latest/wgpu/type.Label.html: type wgpu::Label - Label\n\u27e8258\u27e9 https://docs.rs/wgpu/latest/wgpu/type.PollType.html: type wgpu::PollType - PollType\n\u27e8259\u27e9 https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html: type wgpu::QuerySetDescriptor - QuerySetDescriptor\n\u27e8260\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html: type wgpu::RenderBundleDescriptor - RenderBundleDescriptor\n\u27e8261\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html: type wgpu::RequestAdapterOptions - RequestAdapterOptions\n\u27e8262\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html: type wgpu::SamplerDescriptor - SamplerDescriptor\n\u27e8263\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html: type wgpu::ShaderLocation - ShaderLocation\n\u27e8264\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html: type wgpu::ShaderModuleDescriptorMsl - ShaderModuleDescriptorMsl\n\u27e8265\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html: type wgpu::ShaderModuleDescriptorPassthrough - ShaderModuleDescriptorPassthrough\n\u27e8266\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough: method wgpu::Device::create_shader_module_passthrough - `Device::create_shader_module_passthrough`\n\u27e8267\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html: type wgpu::ShaderModuleDescriptorSpirV - ShaderModuleDescriptorSpirV\n\u27e8268\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html: type wgpu::SurfaceConfiguration - SurfaceConfiguration\n\u27e8269\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html: type wgpu::TexelCopyBufferInfo - TexelCopyBufferInfo\n\u27e8270\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html: type wgpu::TexelCopyTextureInfo - TexelCopyTextureInfo\n\u27e8271\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html: type wgpu::TextureDescriptor - TextureDescriptor\n\u27e8272\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html: type wgpu::TextureViewDescriptor - TextureViewDescriptor\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "wgpu",
          "version": "25.0.2",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\n[Settings](https://docs.rs/wgpu/latest/settings.html)\n[Help](https://docs.rs/wgpu/latest/help.html)\nSummary[Source](https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126)\nExpand description\nA cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).\nTo start using the API, create an [`Instance`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\").\n### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-flags)Feature flags\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#backends)Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#conditional-backends)Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use with[ANGLE](https://github.com/google/angle).\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with [MoltenVK](https://github.com/KhronosGroup/MoltenVK).\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#shading-language-support)Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization)Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#external-libraries)External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from [Microsoft\u2019s GitHub](https://github.com/Microsoft/DirectXShaderCompiler)). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#other)Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### [\u00a7](https://docs.rs/wgpu/latest/wgpu/#feature-aliases)Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports[\u00a7](https://docs.rs/wgpu/latest/wgpu/#reexports)\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules[\u00a7](https://docs.rs/wgpu/latest/wgpu/#modules)\n\n[custom](https://docs.rs/wgpu/latest/wgpu/custom/index.html \"mod wgpu::custom\")`custom`\n    Provides wrappers custom backend implementations\n\n[util](https://docs.rs/wgpu/latest/wgpu/util/index.html \"mod wgpu::util\")\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros[\u00a7](https://docs.rs/wgpu/latest/wgpu/#macros)\n\n[include_spirv](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html \"macro wgpu::include_spirv\")`spirv`\n    Macro to load a SPIR-V module statically.\n\n[include_spirv_raw](https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html \"macro wgpu::include_spirv_raw\")\n    Macro to load raw SPIR-V data statically, for use with [`Features::SPIRV_SHADER_PASSTHROUGH`](https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH \"associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH\").\n\n[include_wgsl](https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html \"macro wgpu::include_wgsl\")\n    Load WGSL source code from a file at compile time.\n\n[vertex_attr_array](https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html \"macro wgpu::vertex_attr_array\")\n    Macro to produce an array of [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\").\n## Structs[\u00a7](https://docs.rs/wgpu/latest/wgpu/#structs)\n\n[Adapter](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\")\n    Handle to a physical graphics and/or compute device.\n\n[AdapterInfo](https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html \"struct wgpu::AdapterInfo\")\n    Information about an adapter.\n\n[AllocatorReport](https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html \"struct wgpu::AllocatorReport\")\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\n[BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html \"struct wgpu::BackendOptions\")\n    Options that are passed to a given backend.\n\n[Backends](https://docs.rs/wgpu/latest/wgpu/struct.Backends.html \"struct wgpu::Backends\")\n    Represents the backends that wgpu will use.\n\n[BindGroup](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\")\n    Handle to a binding group.\n\n[BindGroupDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\")\n    Describes a group of bindings and the resources to be bound.\n\n[BindGroupEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html \"struct wgpu::BindGroupEntry\")\n    An element of a [`BindGroupDescriptor`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html \"struct wgpu::BindGroupDescriptor\"), consisting of a bindable resource and the slot to bind it to.\n\n[BindGroupLayout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\")\n    Handle to a binding group layout.\n\n[BindGroupLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html \"struct wgpu::BindGroupLayoutDescriptor\")\n    Describes a [`BindGroupLayout`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html \"struct wgpu::BindGroupLayout\").\n\n[BindGroupLayoutEntry](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\")\n    Describes a single binding inside a bind group.\n\n[Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\")\n    Bottom Level Acceleration Structure (BLAS).\n\n[BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\")\n    Builds the given sets of geometry into the given [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\")\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\n[BlendComponent](https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html \"struct wgpu::BlendComponent\")\n    Describes a blend component of a [`BlendState`](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\").\n\n[BlendState](https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html \"struct wgpu::BlendState\")\n    Describe the blend state of a render pipeline, within [`ColorTargetState`](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\").\n\n[Buffer](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\")\n    Handle to a GPU-accessible buffer.\n\n[BufferAsyncError](https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html \"struct wgpu::BufferAsyncError\")\n    Error occurred when trying to async map a buffer.\n\n[BufferBinding](https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html \"struct wgpu::BufferBinding\")\n    Describes the segment of a buffer to bind.\n\n[BufferSlice](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html \"struct wgpu::BufferSlice\")\n    A slice of a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\"), to be mapped, used for vertex or index data, or the like.\n\n[BufferTransition](https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html \"struct wgpu::BufferTransition\")\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\n[BufferUsages](https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html \"struct wgpu::BufferUsages\")\n    Different ways that you can use a buffer.\n\n[BufferUses](https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html \"struct wgpu::BufferUses\")\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[BufferView](https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html \"struct wgpu::BufferView\")\n    A read-only view of a mapped buffer\u2019s bytes.\n\n[BufferViewMut](https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html \"struct wgpu::BufferViewMut\")\n    A write-only view of a mapped buffer\u2019s bytes.\n\n[Color](https://docs.rs/wgpu/latest/wgpu/struct.Color.html \"struct wgpu::Color\")\n    RGBA double precision color.\n\n[ColorTargetState](https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html \"struct wgpu::ColorTargetState\")\n    Describes the color state of a render pipeline.\n\n[ColorWrites](https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html \"struct wgpu::ColorWrites\")\n    Color write mask. Disabled color channels will not be written to.\n\n[CommandBuffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html \"struct wgpu::CommandBuffer\")\n    Handle to a command buffer on the GPU.\n\n[CommandBufferDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html \"struct wgpu::CommandBufferDescriptor\")\n    Describes a [`CommandBuffer`](https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html).\n\n[CommandEncoder](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\")\n    Encodes a series of GPU operations.\n\n[CompilationInfo](https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html \"struct wgpu::CompilationInfo\")\n    Compilation information for a shader module.\n\n[CompilationMessage](https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html \"struct wgpu::CompilationMessage\")\n    A single message from the shader compilation process.\n\n[ComputePass](https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html \"struct wgpu::ComputePass\")\n    In-progress recording of a compute pass.\n\n[ComputePassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html \"struct wgpu::ComputePassDescriptor\")\n    Describes the attachments of a compute pass.\n\n[ComputePassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html \"struct wgpu::ComputePassTimestampWrites\")\n    Describes the timestamp writes of a compute pass.\n\n[ComputePipeline](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")\n    Handle to a compute pipeline.\n\n[ComputePipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html \"struct wgpu::ComputePipelineDescriptor\")\n    Describes a compute pipeline.\n\n[ContextBlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html \"struct wgpu::ContextBlasBuildEntry\")\n    Context version see [BlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html \"struct wgpu::BlasBuildEntry\").\n\n[ContextBlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html \"struct wgpu::ContextBlasTriangleGeometry\")\n    Context version of [BlasTriangleGeometry](https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html \"struct wgpu::BlasTriangleGeometry\").\n\n[CopyExternalImageDestInfo](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\")\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\n[CoreCounters](https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html \"struct wgpu::CoreCounters\")\n    `wgpu-core`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[CreateSurfaceError](https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html \"struct wgpu::CreateSurfaceError\")\n    [`Instance::create_surface()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface \"method wgpu::Instance::create_surface\") or a related function failed.\n\n[DepthBiasState](https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html \"struct wgpu::DepthBiasState\")\n    Describes the biasing setting for the depth target.\n\n[DepthStencilState](https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html \"struct wgpu::DepthStencilState\")\n    Describes the depth/stencil state in a render pipeline.\n\n[Device](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\")\n    Open connection to a graphics and/or compute device.\n\n[DownlevelCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html \"struct wgpu::DownlevelCapabilities\")\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\n[DownlevelFlags](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html \"struct wgpu::DownlevelFlags\")\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\n[DownlevelLimits](https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html \"struct wgpu::DownlevelLimits\")\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\n[Dx12BackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html \"struct wgpu::Dx12BackendOptions\")\n    Configuration for the DX12 backend.\n\n[Extent3d](https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html \"struct wgpu::Extent3d\")\n    Extent of a texture related operation.\n\n[Features](https://docs.rs/wgpu/latest/wgpu/struct.Features.html \"struct wgpu::Features\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html \"struct wgpu::FeaturesWGPU\")\n    Features that are not guaranteed to be supported.\n\n[FeaturesWebGPU](https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html \"struct wgpu::FeaturesWebGPU\")\n    Features that are not guaranteed to be supported.\n\n[FragmentState](https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html \"struct wgpu::FragmentState\")\n    Describes the fragment processing in a render pipeline.\n\n[GlBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html \"struct wgpu::GlBackendOptions\")\n    Configuration for the OpenGL/OpenGLES backend.\n\n[HalCounters](https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html \"struct wgpu::HalCounters\")\n    `wgpu-hal`\u2019s part of [`InternalCounters`](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\").\n\n[ImageSubresourceRange](https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html \"struct wgpu::ImageSubresourceRange\")\n    Subresource range within an image\n\n[Instance](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html \"struct wgpu::Instance\")\n    Context for all other wgpu objects. Instance of wgpu.\n\n[InstanceDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html \"struct wgpu::InstanceDescriptor\")\n    Options for creating an instance.\n\n[InstanceFlags](https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html \"struct wgpu::InstanceFlags\")\n    Instance debugging flags.\n\n[InternalCounters](https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html \"struct wgpu::InternalCounters\")\n    All internal counters, exposed for debugging purposes.\n\n[Limits](https://docs.rs/wgpu/latest/wgpu/struct.Limits.html \"struct wgpu::Limits\")\n    Represents the sets of limits an adapter/device supports.\n\n[MultisampleState](https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html \"struct wgpu::MultisampleState\")\n    Describes the multi-sampling state of a render pipeline.\n\n[NoopBackendOptions](https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html \"struct wgpu::NoopBackendOptions\")\n    Configuration for the noop backend.\n\n[Operations](https://docs.rs/wgpu/latest/wgpu/struct.Operations.html \"struct wgpu::Operations\")\n    Pair of load and store operations for an attachment aspect.\n\n[Origin2d](https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html \"struct wgpu::Origin2d\")\n    Origin of a copy from a 2D image.\n\n[Origin3d](https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html \"struct wgpu::Origin3d\")\n    Origin of a copy to/from a texture.\n\n[PipelineCache](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html \"struct wgpu::PipelineCache\")\n    Handle to a pipeline cache, which is used to accelerate creating [`RenderPipeline`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")s and [`ComputePipeline`](https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html \"struct wgpu::ComputePipeline\")s in subsequent executions\n\n[PipelineCacheDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html \"struct wgpu::PipelineCacheDescriptor\")\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\n[PipelineCompilationOptions](https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html \"struct wgpu::PipelineCompilationOptions\")\n    Advanced options for use when a pipeline is compiled\n\n[PipelineLayout](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\")\n    Handle to a pipeline layout.\n\n[PipelineLayoutDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html \"struct wgpu::PipelineLayoutDescriptor\")\n    Describes a [`PipelineLayout`](https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html \"struct wgpu::PipelineLayout\").\n\n[PipelineStatisticsTypes](https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html \"struct wgpu::PipelineStatisticsTypes\")\n    Flags for which pipeline data should be recorded in a query.\n\n[PresentationTimestamp](https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html \"struct wgpu::PresentationTimestamp\")\n    Nanosecond timestamp used by the presentation engine.\n\n[PrimitiveState](https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html \"struct wgpu::PrimitiveState\")\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\n[PushConstantRange](https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html \"struct wgpu::PushConstantRange\")\n    A range of push constant memory to pass to a shader stage.\n\n[QuerySet](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\")\n    Handle to a query set.\n\n[Queue](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html \"struct wgpu::Queue\")\n    Handle to a command queue on a device.\n\n[QueueWriteBufferView](https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html \"struct wgpu::QueueWriteBufferView\")\n    A write-only view into a staging buffer.\n\n[RenderBundle](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\")\n    Pre-prepared reusable bundle of GPU operations.\n\n[RenderBundleDepthStencil](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html \"struct wgpu::RenderBundleDepthStencil\")\n    Describes the depth/stencil attachment for render bundles.\n\n[RenderBundleEncoder](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\")\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\n[RenderBundleEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html \"struct wgpu::RenderBundleEncoderDescriptor\")\n    Describes a [`RenderBundleEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html \"struct wgpu::RenderBundleEncoder\").\n\n[RenderPass](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\")\n    In-progress recording of a render pass: a list of render commands in a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[RenderPassColorAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html \"struct wgpu::RenderPassColorAttachment\")\n    Describes a color attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDepthStencilAttachment](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html \"struct wgpu::RenderPassDepthStencilAttachment\")\n    Describes a depth/stencil attachment to a [`RenderPass`](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html \"struct wgpu::RenderPass\").\n\n[RenderPassDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html \"struct wgpu::RenderPassDescriptor\")\n    Describes the attachments of a render pass.\n\n[RenderPassTimestampWrites](https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html \"struct wgpu::RenderPassTimestampWrites\")\n    Describes the timestamp writes of a render pass.\n\n[RenderPipeline](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html \"struct wgpu::RenderPipeline\")\n    Handle to a rendering (graphics) pipeline.\n\n[RenderPipelineDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html \"struct wgpu::RenderPipelineDescriptor\")\n    Describes a render (graphics) pipeline.\n\n[RequestAdapterOptionsBase](https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html \"struct wgpu::RequestAdapterOptionsBase\")\n    Options for requesting adapter.\n\n[RequestDeviceError](https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html \"struct wgpu::RequestDeviceError\")\n    Requesting a device from an [`Adapter`](https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html \"struct wgpu::Adapter\") failed.\n\n[Sampler](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\")\n    Handle to a sampler.\n\n[ShaderModule](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html \"struct wgpu::ShaderModule\")\n    Handle to a compiled shader module.\n\n[ShaderModuleDescriptor](https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html \"struct wgpu::ShaderModuleDescriptor\")\n    Descriptor for use with [`Device::create_shader_module`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module \"method wgpu::Device::create_shader_module\").\n\n[ShaderRuntimeChecks](https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html \"struct wgpu::ShaderRuntimeChecks\")\n    Describes how shader bound checks should be performed.\n\n[ShaderStages](https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html \"struct wgpu::ShaderStages\")\n    Describes the shader stages that a binding will be visible from.\n\n[SourceLocation](https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html \"struct wgpu::SourceLocation\")\n    A human-readable representation for a span, tailored for text source.\n\n[StencilFaceState](https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html \"struct wgpu::StencilFaceState\")\n    Describes stencil state in a render pipeline.\n\n[StencilState](https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html \"struct wgpu::StencilState\")\n    State of the stencil operation (fixed-pipeline stage).\n\n[SubmissionIndex](https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html \"struct wgpu::SubmissionIndex\")\n    Identifier for a particular call to [`Queue::submit`](https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit \"method wgpu::Queue::submit\"). Can be used as part of an argument to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to block for a particular submission to finish.\n\n[Surface](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\")\n    Handle to a presentable surface.\n\n[SurfaceCapabilities](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html \"struct wgpu::SurfaceCapabilities\")\n    Defines the capabilities of a given surface and adapter.\n\n[SurfaceTexture](https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html \"struct wgpu::SurfaceTexture\")\n    Surface texture that can be rendered to. Result of a successful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[TexelCopyBufferInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\")\n    Layout of a texture in a buffer\u2019s memory.\n\n[TexelCopyTextureInfoBase](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[Texture](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\")\n    Handle to a texture on the GPU.\n\n[TextureFormatFeatureFlags](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html \"struct wgpu::TextureFormatFeatureFlags\")\n    Feature flags for a texture format.\n\n[TextureFormatFeatures](https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html \"struct wgpu::TextureFormatFeatures\")\n    Features supported by a given texture format\n\n[TextureTransition](https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html \"struct wgpu::TextureTransition\")\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\n[TextureUsages](https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html \"struct wgpu::TextureUsages\")\n    Different ways that you can use a texture.\n\n[TextureUses](https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html \"struct wgpu::TextureUses\")\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\n[TextureView](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\")\n    Handle to a texture view.\n\n[Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\")\n    Top Level Acceleration Structure (TLAS).\n\n[TlasBuildEntry](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\")\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See [`TlasPackage`](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\") for the safe version.\n\n[TlasInstance](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")\n    Safe instance for a [Tlas](https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html \"struct wgpu::Tlas\").\n\n[TlasPackage](https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html \"struct wgpu::TlasPackage\")\n    The safe version of [`TlasBuildEntry`](https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html \"struct wgpu::TlasBuildEntry\"), containing [`TlasInstance`](https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html \"struct wgpu::TlasInstance\")s instead of a raw buffer.\n\n[VertexAttribute](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\")\n    Vertex inputs (attributes) to shaders.\n\n[VertexBufferLayout](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html \"struct wgpu::VertexBufferLayout\")\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\n[VertexState](https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html \"struct wgpu::VertexState\")\n    Describes the vertex processing in a render pipeline.\n\n[WgslLanguageFeatures](https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html \"struct wgpu::WgslLanguageFeatures\")\n    WGSL language extensions.\n## Enums[\u00a7](https://docs.rs/wgpu/latest/wgpu/#enums)\n\n[AddressMode](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html \"enum wgpu::AddressMode\")\n    How edges should be handled in texture addressing.\n\n[AstcBlock](https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html \"enum wgpu::AstcBlock\")\n    ASTC block dimensions\n\n[AstcChannel](https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html \"enum wgpu::AstcChannel\")\n    ASTC RGBA channel\n\n[Backend](https://docs.rs/wgpu/latest/wgpu/enum.Backend.html \"enum wgpu::Backend\")\n    Backends supported by wgpu.\n\n[BindingResource](https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html \"enum wgpu::BindingResource\")\n    Resource to be bound by a [`BindGroup`](https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html \"struct wgpu::BindGroup\") for use with a pipeline.\n\n[BindingType](https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html \"enum wgpu::BindingType\")\n    Type of a binding in a [bind group layout](https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html \"struct wgpu::BindGroupLayoutEntry\").\n\n[BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\")\n    Contains the sets of geometry that go into a [Blas](https://docs.rs/wgpu/latest/wgpu/struct.Blas.html \"struct wgpu::Blas\").\n\n[BlendFactor](https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html \"enum wgpu::BlendFactor\")\n    Alpha blend factor.\n\n[BlendOperation](https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html \"enum wgpu::BlendOperation\")\n    Alpha blend operation.\n\n[BufferBindingType](https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html \"enum wgpu::BufferBindingType\")\n    Specific type of a buffer binding.\n\n[CompareFunction](https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html \"enum wgpu::CompareFunction\")\n    Comparison function used for depth and stencil operations.\n\n[CompilationMessageType](https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html \"enum wgpu::CompilationMessageType\")\n    The type of a compilation message.\n\n[CompositeAlphaMode](https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html \"enum wgpu::CompositeAlphaMode\")\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\n[ContextBlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html \"enum wgpu::ContextBlasGeometries\")\n    Context version of [BlasGeometries](https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html \"enum wgpu::BlasGeometries\").\n\n[DeviceLostReason](https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html \"enum wgpu::DeviceLostReason\")\n    Reason for \u201close the device\u201d.\n\n[DeviceType](https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html \"enum wgpu::DeviceType\")\n    Supported physical device types.\n\n[Dx12Compiler](https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html \"enum wgpu::Dx12Compiler\")\n    Selects which DX12 shader compiler to use.\n\n[DxcShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html \"enum wgpu::DxcShaderModel\")\n    DXC shader model.\n\n[Error](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")\n    Errors resulting from usage of GPU APIs.\n\n[ErrorFilter](https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html \"enum wgpu::ErrorFilter\")\n    Kinds of [`Error`](https://docs.rs/wgpu/latest/wgpu/enum.Error.html \"enum wgpu::Error\")s a [`Device::push_error_scope()`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope \"method wgpu::Device::push_error_scope\") may be configured to catch.\n\n[Face](https://docs.rs/wgpu/latest/wgpu/enum.Face.html \"enum wgpu::Face\")\n    Face of a vertex.\n\n[FilterMode](https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html \"enum wgpu::FilterMode\")\n    Texel mixing mode when sampling between texels.\n\n[FrontFace](https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html \"enum wgpu::FrontFace\")\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\n[GlFenceBehavior](https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html \"enum wgpu::GlFenceBehavior\")\n    Dictate the behavior of fences in OpenGL.\n\n[Gles3MinorVersion](https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html \"enum wgpu::Gles3MinorVersion\")\n    Selects which OpenGL ES 3 minor version to request.\n\n[IndexFormat](https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html \"enum wgpu::IndexFormat\")\n    Format of indices used with pipeline.\n\n[LoadOp](https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html \"enum wgpu::LoadOp\")\n    Operation to perform to the output attachment at the start of a render pass.\n\n[MaintainBase](https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html \"enum wgpu::MaintainBase\")\n    Passed to `Device::poll` to control how and if it should block.\n\n[MapMode](https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html \"enum wgpu::MapMode\")\n    Type of buffer mapping.\n\n[MemoryHints](https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html \"enum wgpu::MemoryHints\")\n    Hints to the device about the memory allocation strategy.\n\n[PollError](https://docs.rs/wgpu/latest/wgpu/enum.PollError.html \"enum wgpu::PollError\")\n    Error states after a device poll\n\n[PollStatus](https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html \"enum wgpu::PollStatus\")\n    Status of device poll operation.\n\n[PolygonMode](https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html \"enum wgpu::PolygonMode\")\n    Type of drawing mode for polygons\n\n[PowerPreference](https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html \"enum wgpu::PowerPreference\")\n    Power Preference when choosing a physical adapter.\n\n[PredefinedColorSpace](https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html \"enum wgpu::PredefinedColorSpace\")\n    Color spaces supported on the web.\n\n[PresentMode](https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html \"enum wgpu::PresentMode\")\n    Timing and queueing with which frames are actually displayed to the user.\n\n[PrimitiveTopology](https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html \"enum wgpu::PrimitiveTopology\")\n    Primitive type the input mesh is composed of.\n\n[QueryType](https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html \"enum wgpu::QueryType\")\n    Type of query contained in a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html).\n\n[RequestAdapterError](https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html \"enum wgpu::RequestAdapterError\")\n    Error when [`Instance::request_adapter()`](https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter) fails.\n\n[SamplerBindingType](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html \"enum wgpu::SamplerBindingType\")\n    Specific type of a sampler binding.\n\n[SamplerBorderColor](https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html \"enum wgpu::SamplerBorderColor\")\n    Color variation to use when sampler addressing mode is [`AddressMode::ClampToBorder`](https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder \"variant wgpu::AddressMode::ClampToBorder\")\n\n[ShaderModel](https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html \"enum wgpu::ShaderModel\")\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\n[ShaderSource](https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html \"enum wgpu::ShaderSource\")\n    Source of a shader module.\n\n[StencilOperation](https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html \"enum wgpu::StencilOperation\")\n    Operation to perform on the stencil value.\n\n[StorageTextureAccess](https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html \"enum wgpu::StorageTextureAccess\")\n    Specific type of a sample in a texture binding.\n\n[StoreOp](https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html \"enum wgpu::StoreOp\")\n    Operation to perform to the output attachment at the end of a render pass.\n\n[SurfaceError](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html \"enum wgpu::SurfaceError\")\n    Result of an unsuccessful call to [`Surface::get_current_texture`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture \"method wgpu::Surface::get_current_texture\").\n\n[SurfaceStatus](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html \"enum wgpu::SurfaceStatus\")\n    Status of the received surface image.\n\n[SurfaceTarget](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\n[SurfaceTargetUnsafe](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html \"enum wgpu::SurfaceTargetUnsafe\")\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\n[TextureAspect](https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html \"enum wgpu::TextureAspect\")\n    Selects a subset of the data a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html) holds.\n\n[TextureDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html \"enum wgpu::TextureDimension\")\n    Dimensionality of a texture.\n\n[TextureFormat](https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html \"enum wgpu::TextureFormat\")\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\n[TextureSampleType](https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html \"enum wgpu::TextureSampleType\")\n    Specific type of a sample in a texture binding.\n\n[TextureViewDimension](https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html \"enum wgpu::TextureViewDimension\")\n    Dimensions of a particular texture view.\n\n[Trace](https://docs.rs/wgpu/latest/wgpu/enum.Trace.html \"enum wgpu::Trace\")\n    Controls API call tracing and specifies where the trace is written.\n\n[VertexFormat](https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html \"enum wgpu::VertexFormat\")\n    Vertex Format for a [`VertexAttribute`](https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html \"struct wgpu::VertexAttribute\") (input).\n\n[VertexStepMode](https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html \"enum wgpu::VertexStepMode\")\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants[\u00a7](https://docs.rs/wgpu/latest/wgpu/#constants)\n\n[COPY_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html \"constant wgpu::COPY_BUFFER_ALIGNMENT\")\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\n[COPY_BYTES_PER_ROW_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html \"constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT\")\n    Buffer-to-texture copies must have [`bytes_per_row`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row \"field wgpu::TexelCopyBufferLayout::bytes_per_row\") aligned to this number.\n\n[MAP_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html \"constant wgpu::MAP_ALIGNMENT\")\n    Minimum alignment of buffer mappings.\n\n[PUSH_CONSTANT_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html \"constant wgpu::PUSH_CONSTANT_ALIGNMENT\")\n    Ranges of [writes to push constant storage](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants) must be at least this aligned.\n\n[QUERY_RESOLVE_BUFFER_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html \"constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT\")\n    An [offset into the query resolve buffer](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set) has to be aligned to this.\n\n[QUERY_SET_MAX_QUERIES](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html \"constant wgpu::QUERY_SET_MAX_QUERIES\")\n    Maximum queries in a [`QuerySetDescriptor`](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html \"struct wgpu_types::QuerySetDescriptor\").\n\n[QUERY_SIZE](https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html \"constant wgpu::QUERY_SIZE\")\n    Size in bytes of a single piece of [query](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html) data.\n\n[VERTEX_STRIDE_ALIGNMENT](https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html \"constant wgpu::VERTEX_STRIDE_ALIGNMENT\")\n    [Vertex buffer strides](https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride) have to be a multiple of this number.\n## Traits[\u00a7](https://docs.rs/wgpu/latest/wgpu/#traits)\n\n[UncapturedErrorHandler](https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html \"trait wgpu::UncapturedErrorHandler\")\n    Type for the callback of uncaptured error handler\n\n[WasmNotSend](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html \"trait wgpu::WasmNotSend\")\n\n\n[WasmNotSendSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html \"trait wgpu::WasmNotSendSync\")\n\n\n[WasmNotSync](https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html \"trait wgpu::WasmNotSync\")\n\n\n[WindowHandle](https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html \"trait wgpu::WindowHandle\")\n    Super trait for window handles as used in [`SurfaceTarget`](https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html \"enum wgpu::SurfaceTarget\").\n## Type Aliases[\u00a7](https://docs.rs/wgpu/latest/wgpu/#types)\n\n[AccelerationStructureFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html \"type wgpu::AccelerationStructureFlags\")\n    Flags for an acceleration structure.\n\n[AccelerationStructureGeometryFlags](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html \"type wgpu::AccelerationStructureGeometryFlags\")\n    Flags for a geometry inside a bottom level acceleration structure.\n\n[AccelerationStructureUpdateMode](https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html \"type wgpu::AccelerationStructureUpdateMode\")\n    Update mode for acceleration structure builds.\n\n[BlasGeometrySizeDescriptors](https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html \"type wgpu::BlasGeometrySizeDescriptors\")\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\n[BlasTriangleGeometrySizeDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html \"type wgpu::BlasTriangleGeometrySizeDescriptor\")\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\n[BufferAddress](https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html \"type wgpu::BufferAddress\")\n    Integral type used for [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html) offsets and sizes.\n\n[BufferDescriptor](https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html \"type wgpu::BufferDescriptor\")\n    Describes a [`Buffer`](https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html \"struct wgpu::Buffer\").\n\n[BufferSize](https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html \"type wgpu::BufferSize\")\n    Integral type used for [`BufferSlice`](https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html) sizes.\n\n[CommandEncoderDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html \"type wgpu::CommandEncoderDescriptor\")\n    Describes a [`CommandEncoder`](https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html \"struct wgpu::CommandEncoder\").\n\n[CreateBlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html \"type wgpu::CreateBlasDescriptor\")\n    Descriptor to create bottom level acceleration structures.\n\n[CreateTlasDescriptor](https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html \"type wgpu::CreateTlasDescriptor\")\n    Descriptor to create top level acceleration structures.\n\n[DeviceDescriptor](https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html \"type wgpu::DeviceDescriptor\")\n    Describes a [`Device`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html \"struct wgpu::Device\").\n\n[DynamicOffset](https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html \"type wgpu::DynamicOffset\")\n    Integral type used for [dynamic bind group offsets](https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group).\n\n[ErrorSource](https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html \"type wgpu::ErrorSource\")\n    Lower level source of the error.\n\n[ImageCopyBuffer](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html \"type wgpu::ImageCopyBuffer\")Deprecated\n    Old name for a [`TexelCopyBufferInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html \"struct wgpu::TexelCopyBufferInfoBase\").\n\n[ImageCopyTexture](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html \"type wgpu::ImageCopyTexture\")Deprecated\n    Old name for a [`TexelCopyTextureInfo`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html \"struct wgpu::TexelCopyTextureInfoBase\").\n\n[ImageCopyTextureTagged](https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html \"type wgpu::ImageCopyTextureTagged\")Deprecated\n    Old name for a [`CopyExternalImageDestInfo`](https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html \"struct wgpu::CopyExternalImageDestInfo\").\n\n[ImageDataLayout](https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html \"type wgpu::ImageDataLayout\")Deprecated\n    Old name for a [`TexelCopyBufferLayout`](https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html \"struct wgpu::TexelCopyBufferLayout\").\n\n[Label](https://docs.rs/wgpu/latest/wgpu/type.Label.html \"type wgpu::Label\")\n    Object debugging label.\n\n[PollType](https://docs.rs/wgpu/latest/wgpu/type.PollType.html \"type wgpu::PollType\")\n    Passed to [`Device::poll`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll \"method wgpu::Device::poll\") to control how and if it should block.\n\n[QuerySetDescriptor](https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html \"type wgpu::QuerySetDescriptor\")\n    Describes a [`QuerySet`](https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html \"struct wgpu::QuerySet\").\n\n[RenderBundleDescriptor](https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html \"type wgpu::RenderBundleDescriptor\")\n    Describes a [`RenderBundle`](https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html \"struct wgpu::RenderBundle\").\n\n[RequestAdapterOptions](https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html \"type wgpu::RequestAdapterOptions\")\n    Additional information required when requesting an adapter.\n\n[SamplerDescriptor](https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html \"type wgpu::SamplerDescriptor\")\n    Describes a [`Sampler`](https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html \"struct wgpu::Sampler\").\n\n[ShaderLocation](https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html \"type wgpu::ShaderLocation\")\n    Integral type used for binding locations in shaders.\n\n[ShaderModuleDescriptorMsl](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html \"type wgpu::ShaderModuleDescriptorMsl\")\n    Descriptor for a shader module given by Metal MSL source.\n\n[ShaderModuleDescriptorPassthrough](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html \"type wgpu::ShaderModuleDescriptorPassthrough\")\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with [`Device::create_shader_module_passthrough`](https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough \"method wgpu::Device::create_shader_module_passthrough\").\n\n[ShaderModuleDescriptorSpirV](https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html \"type wgpu::ShaderModuleDescriptorSpirV\")\n    Descriptor for a shader module given by SPIR-V binary.\n\n[SurfaceConfiguration](https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html \"type wgpu::SurfaceConfiguration\")\n    Describes a [`Surface`](https://docs.rs/wgpu/latest/wgpu/struct.Surface.html \"struct wgpu::Surface\").\n\n[TexelCopyBufferInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html \"type wgpu::TexelCopyBufferInfo\")\n    View of a buffer which can be used to copy to/from a texture.\n\n[TexelCopyTextureInfo](https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html \"type wgpu::TexelCopyTextureInfo\")\n    View of a texture which can be used to copy to/from a buffer/texture.\n\n[TextureDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html \"type wgpu::TextureDescriptor\")\n    Describes a [`Texture`](https://docs.rs/wgpu/latest/wgpu/struct.Texture.html \"struct wgpu::Texture\").\n\n[TextureViewDescriptor](https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html \"type wgpu::TextureViewDescriptor\")\n    Describes a [`TextureView`](https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html \"struct wgpu::TextureView\").\n",
            "markdown_with_citations": "[](https://docs.rs/wgpu/latest/wgpu/all.html \"show sidebar\")\n# Crate wgpuCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA cross-platform graphics and compute library based on WebGPU\u27e84\u27e9.\nTo start using the API, create an `Instance`\u27e85\u27e9.\n### \u00a7\u27e86\u27e9Feature flags\n#### \u00a7\u27e87\u27e9Backends\n  * **`dx12`**_(enabled by default)_ \u2014 Enables the DX12 backend on Windows.\n  * **`metal`**_(enabled by default)_ \u2014 Enables the Metal backend on macOS & iOS.\n  * **`vulkan`**_(enabled by default)_ \u2014 Enables the Vulkan backend on Windows, Linux, and Android.\n  * **`gles`**_(enabled by default)_ \u2014 Enables the OpenGL/GLES backend on Windows, Linux, Android, and Emscripten.\n  * **`webgpu`**_(enabled by default)_ \u2014 Enables the WebGPU backend on WebAssembly.\n\n\n#### \u00a7\u27e88\u27e9Conditional Backends\n  * **`angle`**\u2014 Enables the GLES backend on macOS only for use withANGLE\u27e89\u27e9.\n  * **`vulkan-portability`**\u2014 Enables the Vulkan backend on macOS & iOS only for use with MoltenVK\u27e810\u27e9.\n  * **`webgl`**\u2014 Enables the GLES backend on WebAssembly only.\n  * **`noop`**\u2014 Enables the noop backend for testing.\nThis backend allows creating resources such as buffers and textures, but performs no computation. Because it lacks basic functionality, it is only actually used if explicitly enabled through `NoopBackendOptions`.\n\n\n**Note:** In the documentation, if you see that an item depends on a backend, it means that the item is only available when that backend is enabled _and_ the backend is supported on the current platform.\n#### \u00a7\u27e811\u27e9Shading language support\nThese features enable support for that input language on all platforms. We will translate the input language to whatever the backend requires.\n  * **`spirv`**\u2014 Enable accepting SPIR-V shaders as input.\n  * **`glsl`**\u2014 Enable accepting GLSL shaders as input.\n  * **`wgsl`**_(enabled by default)_ \u2014 Enable accepting WGSL shaders as input.\n  * **`naga-ir`**\u2014 Enable accepting naga IR shaders as input.\n\n\n#### \u00a7\u27e812\u27e9Assertions and Serialization\n  * **`strict_asserts`**\u2014 Apply run-time checks, even in release builds. These are in addition to the validation carried out at public APIs in all builds.\n  * **`serde`**\u2014 Enables serialization via`serde` on common wgpu types.\n\n\n#### \u00a7\u27e813\u27e9External libraries\nThe following features facilitate integration with third-party supporting libraries.\n  * **`static-dxc`**\u2014 Enables statically linking DXC.\nNormally, to use the modern DXC shader compiler with WGPU, the final application must be shipped alongside `dxcompiler.dll` and `dxil.dll` (which can be downloaded from Microsoft\u2019s GitHub\u27e814\u27e9). This feature statically links a version of DXC so that no external binaries are required to compile DX12 shaders.\n\n\n#### \u00a7\u27e815\u27e9Other\n  * **`counters`**\u2014 Internally count resources and events for debugging purposes. If the counters feature is disabled, the counting infrastructure is removed from the build and the exposed counters always return 0.\n  * **`fragile-send-sync-non-atomic-wasm`**\u2014 Implement`Send` and `Sync` on Wasm, but only if atomics are not enabled.\nWebGL/WebGPU objects can not be shared between threads. However, it can be useful to artificially mark them as `Send` and `Sync` anyways to make it easier to write cross-platform code. This is technically _very_ unsafe in a multithreaded environment, but on a wasm binary compiled without atomics is a definitionally single-threaded environment.\n\n\n#### \u00a7\u27e816\u27e9Feature Aliases\nThese features aren\u2019t actually features on the crate itself, but a convenient shorthand for complicated cases.\n  * **`wgpu_core`**\u2014 Enabled when there is any non-webgpu backend enabled on the platform.\n  * **`naga`**\u2013\u2013 Enabled when any non-wgsl shader input is enabled.\n\n\n## Re-exports\u00a7\u27e817\u27e9\n\n`pub extern crate wgpu_hal[](https://docs.rs/wgpu-hal/25.0.2/x86_64-unknown-linux-gnu/wgpu_hal/index.html \"mod wgpu_hal\") as hal;`\n\n\n`pub extern crate wgpu_core[](https://docs.rs/wgpu-core/25.0.2/x86_64-unknown-linux-gnu/wgpu_core/index.html \"mod wgpu_core\") as wgc;`\n\n\n`pub extern crate wgpu_types[](https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/index.html \"mod wgpu_types\") as wgt;`\n\n\n`pub use ::wgc::naga[](https://docs.rs/naga/25.0.1/x86_64-unknown-linux-gnu/naga/index.html \"mod naga\");``wgpu_core` or `naga`\n\n\n`pub use raw_window_handle[](https://docs.rs/raw-window-handle/0.6.2/x86_64-unknown-linux-gnu/raw_window_handle/index.html \"mod raw_window_handle\") as rwh;`\n\n## Modules\u00a7\u27e818\u27e9\n\ncustom\u27e819\u27e9`custom`\n    Provides wrappers custom backend implementations\n\nutil\u27e820\u27e9\n    Utility structures and functions that are built on top of the main `wgpu` API.\n## Macros\u00a7\u27e821\u27e9\n\ninclude_spirv\u27e822\u27e9`spirv`\n    Macro to load a SPIR-V module statically.\n\ninclude_spirv_raw\u27e823\u27e9\n    Macro to load raw SPIR-V data statically, for use with `Features::SPIRV_SHADER_PASSTHROUGH`\u27e824\u27e9.\n\ninclude_wgsl\u27e825\u27e9\n    Load WGSL source code from a file at compile time.\n\nvertex_attr_array\u27e826\u27e9\n    Macro to produce an array of `VertexAttribute`\u27e827\u27e9.\n## Structs\u00a7\u27e828\u27e9\n\nAdapter\u27e829\u27e9\n    Handle to a physical graphics and/or compute device.\n\nAdapterInfo\u27e830\u27e9\n    Information about an adapter.\n\nAllocatorReport\u27e831\u27e9\n    A report that can be generated for informational purposes using `Allocator::generate_report()`.\n\nBackendOptions\u27e832\u27e9\n    Options that are passed to a given backend.\n\nBackends\u27e833\u27e9\n    Represents the backends that wgpu will use.\n\nBindGroup\u27e834\u27e9\n    Handle to a binding group.\n\nBindGroupDescriptor\u27e835\u27e9\n    Describes a group of bindings and the resources to be bound.\n\nBindGroupEntry\u27e836\u27e9\n    An element of a `BindGroupDescriptor`\u27e835\u27e9, consisting of a bindable resource and the slot to bind it to.\n\nBindGroupLayout\u27e837\u27e9\n    Handle to a binding group layout.\n\nBindGroupLayoutDescriptor\u27e838\u27e9\n    Describes a `BindGroupLayout`\u27e837\u27e9.\n\nBindGroupLayoutEntry\u27e839\u27e9\n    Describes a single binding inside a bind group.\n\nBlas\u27e840\u27e9\n    Bottom Level Acceleration Structure (BLAS).\n\nBlasBuildEntry\u27e841\u27e9\n    Builds the given sets of geometry into the given Blas\u27e840\u27e9.\n\nBlasTriangleGeometry\u27e842\u27e9\n    Definition for a triangle geometry for a Bottom Level Acceleration Structure (BLAS).\n\nBlendComponent\u27e843\u27e9\n    Describes a blend component of a `BlendState`\u27e844\u27e9.\n\nBlendState\u27e844\u27e9\n    Describe the blend state of a render pipeline, within `ColorTargetState`\u27e845\u27e9.\n\nBuffer\u27e846\u27e9\n    Handle to a GPU-accessible buffer.\n\nBufferAsyncError\u27e847\u27e9\n    Error occurred when trying to async map a buffer.\n\nBufferBinding\u27e848\u27e9\n    Describes the segment of a buffer to bind.\n\nBufferSlice\u27e849\u27e9\n    A slice of a `Buffer`\u27e846\u27e9, to be mapped, used for vertex or index data, or the like.\n\nBufferTransition\u27e850\u27e9\n    A buffer transition for use with `CommandEncoder::transition_resources`.\n\nBufferUsages\u27e851\u27e9\n    Different ways that you can use a buffer.\n\nBufferUses\u27e852\u27e9\n    Similar to `BufferUsages`, but used only for `CommandEncoder::transition_resources`.\n\nBufferView\u27e853\u27e9\n    A read-only view of a mapped buffer\u2019s bytes.\n\nBufferViewMut\u27e854\u27e9\n    A write-only view of a mapped buffer\u2019s bytes.\n\nColor\u27e855\u27e9\n    RGBA double precision color.\n\nColorTargetState\u27e845\u27e9\n    Describes the color state of a render pipeline.\n\nColorWrites\u27e856\u27e9\n    Color write mask. Disabled color channels will not be written to.\n\nCommandBuffer\u27e857\u27e9\n    Handle to a command buffer on the GPU.\n\nCommandBufferDescriptor\u27e858\u27e9\n    Describes a `CommandBuffer`\u27e857\u27e9.\n\nCommandEncoder\u27e859\u27e9\n    Encodes a series of GPU operations.\n\nCompilationInfo\u27e860\u27e9\n    Compilation information for a shader module.\n\nCompilationMessage\u27e861\u27e9\n    A single message from the shader compilation process.\n\nComputePass\u27e862\u27e9\n    In-progress recording of a compute pass.\n\nComputePassDescriptor\u27e863\u27e9\n    Describes the attachments of a compute pass.\n\nComputePassTimestampWrites\u27e864\u27e9\n    Describes the timestamp writes of a compute pass.\n\nComputePipeline\u27e865\u27e9\n    Handle to a compute pipeline.\n\nComputePipelineDescriptor\u27e866\u27e9\n    Describes a compute pipeline.\n\nContextBlasBuildEntry\u27e867\u27e9\n    Context version see BlasBuildEntry\u27e841\u27e9.\n\nContextBlasTriangleGeometry\u27e868\u27e9\n    Context version of BlasTriangleGeometry\u27e842\u27e9.\n\nCopyExternalImageDestInfo\u27e869\u27e9\n    View of a texture which can be used to copy to a texture, including color space and alpha premultiplication information.\n\nCoreCounters\u27e870\u27e9\n    `wgpu-core`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nCreateSurfaceError\u27e872\u27e9\n    `Instance::create_surface()`\u27e873\u27e9 or a related function failed.\n\nDepthBiasState\u27e874\u27e9\n    Describes the biasing setting for the depth target.\n\nDepthStencilState\u27e875\u27e9\n    Describes the depth/stencil state in a render pipeline.\n\nDevice\u27e876\u27e9\n    Open connection to a graphics and/or compute device.\n\nDownlevelCapabilities\u27e877\u27e9\n    Lists various ways the underlying platform does not conform to the WebGPU standard.\n\nDownlevelFlags\u27e878\u27e9\n    Binary flags listing features that may or may not be present on downlevel adapters.\n\nDownlevelLimits\u27e879\u27e9\n    Represents the sets of additional limits on an adapter, which take place when running on downlevel backends.\n\nDx12BackendOptions\u27e880\u27e9\n    Configuration for the DX12 backend.\n\nExtent3d\u27e881\u27e9\n    Extent of a texture related operation.\n\nFeatures\u27e882\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWGPU\u27e883\u27e9\n    Features that are not guaranteed to be supported.\n\nFeaturesWebGPU\u27e884\u27e9\n    Features that are not guaranteed to be supported.\n\nFragmentState\u27e885\u27e9\n    Describes the fragment processing in a render pipeline.\n\nGlBackendOptions\u27e886\u27e9\n    Configuration for the OpenGL/OpenGLES backend.\n\nHalCounters\u27e887\u27e9\n    `wgpu-hal`\u2019s part of `InternalCounters`\u27e871\u27e9.\n\nImageSubresourceRange\u27e888\u27e9\n    Subresource range within an image\n\nInstance\u27e85\u27e9\n    Context for all other wgpu objects. Instance of wgpu.\n\nInstanceDescriptor\u27e889\u27e9\n    Options for creating an instance.\n\nInstanceFlags\u27e890\u27e9\n    Instance debugging flags.\n\nInternalCounters\u27e871\u27e9\n    All internal counters, exposed for debugging purposes.\n\nLimits\u27e891\u27e9\n    Represents the sets of limits an adapter/device supports.\n\nMultisampleState\u27e892\u27e9\n    Describes the multi-sampling state of a render pipeline.\n\nNoopBackendOptions\u27e893\u27e9\n    Configuration for the noop backend.\n\nOperations\u27e894\u27e9\n    Pair of load and store operations for an attachment aspect.\n\nOrigin2d\u27e895\u27e9\n    Origin of a copy from a 2D image.\n\nOrigin3d\u27e896\u27e9\n    Origin of a copy to/from a texture.\n\nPipelineCache\u27e897\u27e9\n    Handle to a pipeline cache, which is used to accelerate creating `RenderPipeline`\u27e898\u27e9s and `ComputePipeline`\u27e865\u27e9s in subsequent executions\n\nPipelineCacheDescriptor\u27e899\u27e9\n    Describes a pipeline cache, which allows reusing compilation work between program runs.\n\nPipelineCompilationOptions\u27e8100\u27e9\n    Advanced options for use when a pipeline is compiled\n\nPipelineLayout\u27e8101\u27e9\n    Handle to a pipeline layout.\n\nPipelineLayoutDescriptor\u27e8102\u27e9\n    Describes a `PipelineLayout`\u27e8101\u27e9.\n\nPipelineStatisticsTypes\u27e8103\u27e9\n    Flags for which pipeline data should be recorded in a query.\n\nPresentationTimestamp\u27e8104\u27e9\n    Nanosecond timestamp used by the presentation engine.\n\nPrimitiveState\u27e8105\u27e9\n    Describes the state of primitive assembly and rasterization in a render pipeline.\n\nPushConstantRange\u27e8106\u27e9\n    A range of push constant memory to pass to a shader stage.\n\nQuerySet\u27e8107\u27e9\n    Handle to a query set.\n\nQueue\u27e8108\u27e9\n    Handle to a command queue on a device.\n\nQueueWriteBufferView\u27e8109\u27e9\n    A write-only view into a staging buffer.\n\nRenderBundle\u27e8110\u27e9\n    Pre-prepared reusable bundle of GPU operations.\n\nRenderBundleDepthStencil\u27e8111\u27e9\n    Describes the depth/stencil attachment for render bundles.\n\nRenderBundleEncoder\u27e8112\u27e9\n    Encodes a series of GPU operations into a reusable \u201crender bundle\u201d.\n\nRenderBundleEncoderDescriptor\u27e8113\u27e9\n    Describes a `RenderBundleEncoder`\u27e8112\u27e9.\n\nRenderPass\u27e8114\u27e9\n    In-progress recording of a render pass: a list of render commands in a `CommandEncoder`\u27e859\u27e9.\n\nRenderPassColorAttachment\u27e8115\u27e9\n    Describes a color attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDepthStencilAttachment\u27e8116\u27e9\n    Describes a depth/stencil attachment to a `RenderPass`\u27e8114\u27e9.\n\nRenderPassDescriptor\u27e8117\u27e9\n    Describes the attachments of a render pass.\n\nRenderPassTimestampWrites\u27e8118\u27e9\n    Describes the timestamp writes of a render pass.\n\nRenderPipeline\u27e898\u27e9\n    Handle to a rendering (graphics) pipeline.\n\nRenderPipelineDescriptor\u27e8119\u27e9\n    Describes a render (graphics) pipeline.\n\nRequestAdapterOptionsBase\u27e8120\u27e9\n    Options for requesting adapter.\n\nRequestDeviceError\u27e8121\u27e9\n    Requesting a device from an `Adapter`\u27e829\u27e9 failed.\n\nSampler\u27e8122\u27e9\n    Handle to a sampler.\n\nShaderModule\u27e8123\u27e9\n    Handle to a compiled shader module.\n\nShaderModuleDescriptor\u27e8124\u27e9\n    Descriptor for use with `Device::create_shader_module`\u27e8125\u27e9.\n\nShaderRuntimeChecks\u27e8126\u27e9\n    Describes how shader bound checks should be performed.\n\nShaderStages\u27e8127\u27e9\n    Describes the shader stages that a binding will be visible from.\n\nSourceLocation\u27e8128\u27e9\n    A human-readable representation for a span, tailored for text source.\n\nStencilFaceState\u27e8129\u27e9\n    Describes stencil state in a render pipeline.\n\nStencilState\u27e8130\u27e9\n    State of the stencil operation (fixed-pipeline stage).\n\nSubmissionIndex\u27e8131\u27e9\n    Identifier for a particular call to `Queue::submit`\u27e8132\u27e9. Can be used as part of an argument to `Device::poll`\u27e8133\u27e9 to block for a particular submission to finish.\n\nSurface\u27e8134\u27e9\n    Handle to a presentable surface.\n\nSurfaceCapabilities\u27e8135\u27e9\n    Defines the capabilities of a given surface and adapter.\n\nSurfaceTexture\u27e8136\u27e9\n    Surface texture that can be rendered to. Result of a successful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nTexelCopyBufferInfoBase\u27e8138\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyBufferLayout\u27e8139\u27e9\n    Layout of a texture in a buffer\u2019s memory.\n\nTexelCopyTextureInfoBase\u27e8140\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTexture\u27e8141\u27e9\n    Handle to a texture on the GPU.\n\nTextureFormatFeatureFlags\u27e8142\u27e9\n    Feature flags for a texture format.\n\nTextureFormatFeatures\u27e8143\u27e9\n    Features supported by a given texture format\n\nTextureTransition\u27e8144\u27e9\n    A texture transition for use with `CommandEncoder::transition_resources`.\n\nTextureUsages\u27e8145\u27e9\n    Different ways that you can use a texture.\n\nTextureUses\u27e8146\u27e9\n    Similar to `TextureUsages`, but used only for `CommandEncoder::transition_resources`.\n\nTextureView\u27e8147\u27e9\n    Handle to a texture view.\n\nTlas\u27e8148\u27e9\n    Top Level Acceleration Structure (TLAS).\n\nTlasBuildEntry\u27e8149\u27e9\n    Entry for a top level acceleration structure build. Used with raw instance buffers for an unvalidated builds. See `TlasPackage`\u27e8150\u27e9 for the safe version.\n\nTlasInstance\u27e8151\u27e9\n    Safe instance for a Tlas\u27e8148\u27e9.\n\nTlasPackage\u27e8150\u27e9\n    The safe version of `TlasBuildEntry`\u27e8149\u27e9, containing `TlasInstance`\u27e8151\u27e9s instead of a raw buffer.\n\nVertexAttribute\u27e827\u27e9\n    Vertex inputs (attributes) to shaders.\n\nVertexBufferLayout\u27e8152\u27e9\n    Specifies an interpretation of the bytes of a vertex buffer as vertex attributes.\n\nVertexState\u27e8153\u27e9\n    Describes the vertex processing in a render pipeline.\n\nWgslLanguageFeatures\u27e8154\u27e9\n    WGSL language extensions.\n## Enums\u00a7\u27e8155\u27e9\n\nAddressMode\u27e8156\u27e9\n    How edges should be handled in texture addressing.\n\nAstcBlock\u27e8157\u27e9\n    ASTC block dimensions\n\nAstcChannel\u27e8158\u27e9\n    ASTC RGBA channel\n\nBackend\u27e8159\u27e9\n    Backends supported by wgpu.\n\nBindingResource\u27e8160\u27e9\n    Resource to be bound by a `BindGroup`\u27e834\u27e9 for use with a pipeline.\n\nBindingType\u27e8161\u27e9\n    Type of a binding in a bind group layout\u27e839\u27e9.\n\nBlasGeometries\u27e8162\u27e9\n    Contains the sets of geometry that go into a Blas\u27e840\u27e9.\n\nBlendFactor\u27e8163\u27e9\n    Alpha blend factor.\n\nBlendOperation\u27e8164\u27e9\n    Alpha blend operation.\n\nBufferBindingType\u27e8165\u27e9\n    Specific type of a buffer binding.\n\nCompareFunction\u27e8166\u27e9\n    Comparison function used for depth and stencil operations.\n\nCompilationMessageType\u27e8167\u27e9\n    The type of a compilation message.\n\nCompositeAlphaMode\u27e8168\u27e9\n    Specifies how the alpha channel of the textures should be handled during compositing.\n\nContextBlasGeometries\u27e8169\u27e9\n    Context version of BlasGeometries\u27e8162\u27e9.\n\nDeviceLostReason\u27e8170\u27e9\n    Reason for \u201close the device\u201d.\n\nDeviceType\u27e8171\u27e9\n    Supported physical device types.\n\nDx12Compiler\u27e8172\u27e9\n    Selects which DX12 shader compiler to use.\n\nDxcShaderModel\u27e8173\u27e9\n    DXC shader model.\n\nError\u27e8174\u27e9\n    Errors resulting from usage of GPU APIs.\n\nErrorFilter\u27e8175\u27e9\n    Kinds of `Error`\u27e8174\u27e9s a `Device::push_error_scope()`\u27e8176\u27e9 may be configured to catch.\n\nFace\u27e8177\u27e9\n    Face of a vertex.\n\nFilterMode\u27e8178\u27e9\n    Texel mixing mode when sampling between texels.\n\nFrontFace\u27e8179\u27e9\n    Vertex winding order which classifies the \u201cfront\u201d face of a triangle.\n\nGlFenceBehavior\u27e8180\u27e9\n    Dictate the behavior of fences in OpenGL.\n\nGles3MinorVersion\u27e8181\u27e9\n    Selects which OpenGL ES 3 minor version to request.\n\nIndexFormat\u27e8182\u27e9\n    Format of indices used with pipeline.\n\nLoadOp\u27e8183\u27e9\n    Operation to perform to the output attachment at the start of a render pass.\n\nMaintainBase\u27e8184\u27e9\n    Passed to `Device::poll` to control how and if it should block.\n\nMapMode\u27e8185\u27e9\n    Type of buffer mapping.\n\nMemoryHints\u27e8186\u27e9\n    Hints to the device about the memory allocation strategy.\n\nPollError\u27e8187\u27e9\n    Error states after a device poll\n\nPollStatus\u27e8188\u27e9\n    Status of device poll operation.\n\nPolygonMode\u27e8189\u27e9\n    Type of drawing mode for polygons\n\nPowerPreference\u27e8190\u27e9\n    Power Preference when choosing a physical adapter.\n\nPredefinedColorSpace\u27e8191\u27e9\n    Color spaces supported on the web.\n\nPresentMode\u27e8192\u27e9\n    Timing and queueing with which frames are actually displayed to the user.\n\nPrimitiveTopology\u27e8193\u27e9\n    Primitive type the input mesh is composed of.\n\nQueryType\u27e8194\u27e9\n    Type of query contained in a `QuerySet`\u27e8107\u27e9.\n\nRequestAdapterError\u27e8195\u27e9\n    Error when `Instance::request_adapter()`\u27e8196\u27e9 fails.\n\nSamplerBindingType\u27e8197\u27e9\n    Specific type of a sampler binding.\n\nSamplerBorderColor\u27e8198\u27e9\n    Color variation to use when sampler addressing mode is `AddressMode::ClampToBorder`\u27e8199\u27e9\n\nShaderModel\u27e8200\u27e9\n    Collections of shader features a device supports if they support less than WebGPU normally allows.\n\nShaderSource\u27e8201\u27e9\n    Source of a shader module.\n\nStencilOperation\u27e8202\u27e9\n    Operation to perform on the stencil value.\n\nStorageTextureAccess\u27e8203\u27e9\n    Specific type of a sample in a texture binding.\n\nStoreOp\u27e8204\u27e9\n    Operation to perform to the output attachment at the end of a render pass.\n\nSurfaceError\u27e8205\u27e9\n    Result of an unsuccessful call to `Surface::get_current_texture`\u27e8137\u27e9.\n\nSurfaceStatus\u27e8206\u27e9\n    Status of the received surface image.\n\nSurfaceTarget\u27e8207\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with safe surface creation.\n\nSurfaceTargetUnsafe\u27e8208\u27e9\n    The window/canvas/surface/swap-chain/etc. a surface is attached to, for use with unsafe surface creation.\n\nTextureAspect\u27e8209\u27e9\n    Selects a subset of the data a `Texture`\u27e8141\u27e9 holds.\n\nTextureDimension\u27e8210\u27e9\n    Dimensionality of a texture.\n\nTextureFormat\u27e8211\u27e9\n    Format in which a texture\u2019s texels are stored in GPU memory.\n\nTextureSampleType\u27e8212\u27e9\n    Specific type of a sample in a texture binding.\n\nTextureViewDimension\u27e8213\u27e9\n    Dimensions of a particular texture view.\n\nTrace\u27e8214\u27e9\n    Controls API call tracing and specifies where the trace is written.\n\nVertexFormat\u27e8215\u27e9\n    Vertex Format for a `VertexAttribute`\u27e827\u27e9 (input).\n\nVertexStepMode\u27e8216\u27e9\n    Whether a vertex buffer is indexed by vertex or by instance.\n## Constants\u00a7\u27e8217\u27e9\n\nCOPY_BUFFER_ALIGNMENT\u27e8218\u27e9\n    Buffer to buffer copy as well as buffer clear offsets and sizes must be aligned to this number.\n\nCOPY_BYTES_PER_ROW_ALIGNMENT\u27e8219\u27e9\n    Buffer-to-texture copies must have `bytes_per_row`\u27e8220\u27e9 aligned to this number.\n\nMAP_ALIGNMENT\u27e8221\u27e9\n    Minimum alignment of buffer mappings.\n\nPUSH_CONSTANT_ALIGNMENT\u27e8222\u27e9\n    Ranges of writes to push constant storage\u27e8223\u27e9 must be at least this aligned.\n\nQUERY_RESOLVE_BUFFER_ALIGNMENT\u27e8224\u27e9\n    An offset into the query resolve buffer\u27e8225\u27e9 has to be aligned to this.\n\nQUERY_SET_MAX_QUERIES\u27e8226\u27e9\n    Maximum queries in a `QuerySetDescriptor`\u27e8227\u27e9.\n\nQUERY_SIZE\u27e8228\u27e9\n    Size in bytes of a single piece of query\u27e8107\u27e9 data.\n\nVERTEX_STRIDE_ALIGNMENT\u27e8229\u27e9\n    Vertex buffer strides\u27e8230\u27e9 have to be a multiple of this number.\n## Traits\u00a7\u27e8231\u27e9\n\nUncapturedErrorHandler\u27e8232\u27e9\n    Type for the callback of uncaptured error handler\n\nWasmNotSend\u27e8233\u27e9\n\n\nWasmNotSendSync\u27e8234\u27e9\n\n\nWasmNotSync\u27e8235\u27e9\n\n\nWindowHandle\u27e8236\u27e9\n    Super trait for window handles as used in `SurfaceTarget`\u27e8207\u27e9.\n## Type Aliases\u00a7\u27e8237\u27e9\n\nAccelerationStructureFlags\u27e8238\u27e9\n    Flags for an acceleration structure.\n\nAccelerationStructureGeometryFlags\u27e8239\u27e9\n    Flags for a geometry inside a bottom level acceleration structure.\n\nAccelerationStructureUpdateMode\u27e8240\u27e9\n    Update mode for acceleration structure builds.\n\nBlasGeometrySizeDescriptors\u27e8241\u27e9\n    Descriptor for the size defining attributes, for a bottom level acceleration structure.\n\nBlasTriangleGeometrySizeDescriptor\u27e8242\u27e9\n    Descriptor for the size defining attributes of a triangle geometry, for a bottom level acceleration structure.\n\nBufferAddress\u27e8243\u27e9\n    Integral type used for `Buffer`\u27e846\u27e9 offsets and sizes.\n\nBufferDescriptor\u27e8244\u27e9\n    Describes a `Buffer`\u27e846\u27e9.\n\nBufferSize\u27e8245\u27e9\n    Integral type used for `BufferSlice`\u27e849\u27e9 sizes.\n\nCommandEncoderDescriptor\u27e8246\u27e9\n    Describes a `CommandEncoder`\u27e859\u27e9.\n\nCreateBlasDescriptor\u27e8247\u27e9\n    Descriptor to create bottom level acceleration structures.\n\nCreateTlasDescriptor\u27e8248\u27e9\n    Descriptor to create top level acceleration structures.\n\nDeviceDescriptor\u27e8249\u27e9\n    Describes a `Device`\u27e876\u27e9.\n\nDynamicOffset\u27e8250\u27e9\n    Integral type used for dynamic bind group offsets\u27e8251\u27e9.\n\nErrorSource\u27e8252\u27e9\n    Lower level source of the error.\n\nImageCopyBuffer\u27e8253\u27e9Deprecated\n    Old name for a `TexelCopyBufferInfo`\u27e8138\u27e9.\n\nImageCopyTexture\u27e8254\u27e9Deprecated\n    Old name for a `TexelCopyTextureInfo`\u27e8140\u27e9.\n\nImageCopyTextureTagged\u27e8255\u27e9Deprecated\n    Old name for a `CopyExternalImageDestInfo`\u27e869\u27e9.\n\nImageDataLayout\u27e8256\u27e9Deprecated\n    Old name for a `TexelCopyBufferLayout`\u27e8139\u27e9.\n\nLabel\u27e8257\u27e9\n    Object debugging label.\n\nPollType\u27e8258\u27e9\n    Passed to `Device::poll`\u27e8133\u27e9 to control how and if it should block.\n\nQuerySetDescriptor\u27e8259\u27e9\n    Describes a `QuerySet`\u27e8107\u27e9.\n\nRenderBundleDescriptor\u27e8260\u27e9\n    Describes a `RenderBundle`\u27e8110\u27e9.\n\nRequestAdapterOptions\u27e8261\u27e9\n    Additional information required when requesting an adapter.\n\nSamplerDescriptor\u27e8262\u27e9\n    Describes a `Sampler`\u27e8122\u27e9.\n\nShaderLocation\u27e8263\u27e9\n    Integral type used for binding locations in shaders.\n\nShaderModuleDescriptorMsl\u27e8264\u27e9\n    Descriptor for a shader module given by Metal MSL source.\n\nShaderModuleDescriptorPassthrough\u27e8265\u27e9\n    Descriptor for a shader module that will bypass wgpu\u2019s shader tooling, for use with `Device::create_shader_module_passthrough`\u27e8266\u27e9.\n\nShaderModuleDescriptorSpirV\u27e8267\u27e9\n    Descriptor for a shader module given by SPIR-V binary.\n\nSurfaceConfiguration\u27e8268\u27e9\n    Describes a `Surface`\u27e8134\u27e9.\n\nTexelCopyBufferInfo\u27e8269\u27e9\n    View of a buffer which can be used to copy to/from a texture.\n\nTexelCopyTextureInfo\u27e8270\u27e9\n    View of a texture which can be used to copy to/from a buffer/texture.\n\nTextureDescriptor\u27e8271\u27e9\n    Describes a `Texture`\u27e8141\u27e9.\n\nTextureViewDescriptor\u27e8272\u27e9\n    Describes a `TextureView`\u27e8147\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wgpu/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wgpu/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wgpu/latest/src/wgpu/lib.rs.html#1-126: Source\n\u27e84\u27e9 https://gpuweb.github.io/gpuweb/: WebGPU\n\u27e85\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html: struct wgpu::Instance - `Instance`\n\u27e86\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-flags: \u00a7\n\u27e87\u27e9 https://docs.rs/wgpu/latest/wgpu/#backends: \u00a7\n\u27e88\u27e9 https://docs.rs/wgpu/latest/wgpu/#conditional-backends: \u00a7\n\u27e89\u27e9 https://github.com/google/angle: ANGLE\n\u27e810\u27e9 https://github.com/KhronosGroup/MoltenVK: MoltenVK\n\u27e811\u27e9 https://docs.rs/wgpu/latest/wgpu/#shading-language-support: \u00a7\n\u27e812\u27e9 https://docs.rs/wgpu/latest/wgpu/#assertions-and-serialization: \u00a7\n\u27e813\u27e9 https://docs.rs/wgpu/latest/wgpu/#external-libraries: \u00a7\n\u27e814\u27e9 https://github.com/Microsoft/DirectXShaderCompiler: Microsoft\u2019s GitHub\n\u27e815\u27e9 https://docs.rs/wgpu/latest/wgpu/#other: \u00a7\n\u27e816\u27e9 https://docs.rs/wgpu/latest/wgpu/#feature-aliases: \u00a7\n\u27e817\u27e9 https://docs.rs/wgpu/latest/wgpu/#reexports: \u00a7\n\u27e818\u27e9 https://docs.rs/wgpu/latest/wgpu/#modules: \u00a7\n\u27e819\u27e9 https://docs.rs/wgpu/latest/wgpu/custom/index.html: mod wgpu::custom - custom\n\u27e820\u27e9 https://docs.rs/wgpu/latest/wgpu/util/index.html: mod wgpu::util - util\n\u27e821\u27e9 https://docs.rs/wgpu/latest/wgpu/#macros: \u00a7\n\u27e822\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv.html: macro wgpu::include_spirv - include_spirv\n\u27e823\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_spirv_raw.html: macro wgpu::include_spirv_raw - include_spirv_raw\n\u27e824\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html#associatedconstant.SPIRV_SHADER_PASSTHROUGH: associated constant wgpu::Features::SPIRV_SHADER_PASSTHROUGH - `Features::SPIRV_SHADER_PASSTHROUGH`\n\u27e825\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.include_wgsl.html: macro wgpu::include_wgsl - include_wgsl\n\u27e826\u27e9 https://docs.rs/wgpu/latest/wgpu/macro.vertex_attr_array.html: macro wgpu::vertex_attr_array - vertex_attr_array\n\u27e827\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexAttribute.html: struct wgpu::VertexAttribute - `VertexAttribute`\n\u27e828\u27e9 https://docs.rs/wgpu/latest/wgpu/#structs: \u00a7\n\u27e829\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Adapter.html: struct wgpu::Adapter - Adapter\n\u27e830\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AdapterInfo.html: struct wgpu::AdapterInfo - AdapterInfo\n\u27e831\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.AllocatorReport.html: struct wgpu::AllocatorReport - AllocatorReport\n\u27e832\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BackendOptions.html: struct wgpu::BackendOptions - BackendOptions\n\u27e833\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Backends.html: struct wgpu::Backends - Backends\n\u27e834\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroup.html: struct wgpu::BindGroup - BindGroup\n\u27e835\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupDescriptor.html: struct wgpu::BindGroupDescriptor - BindGroupDescriptor\n\u27e836\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupEntry.html: struct wgpu::BindGroupEntry - BindGroupEntry\n\u27e837\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayout.html: struct wgpu::BindGroupLayout - BindGroupLayout\n\u27e838\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutDescriptor.html: struct wgpu::BindGroupLayoutDescriptor - BindGroupLayoutDescriptor\n\u27e839\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BindGroupLayoutEntry.html: struct wgpu::BindGroupLayoutEntry - BindGroupLayoutEntry\n\u27e840\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Blas.html: struct wgpu::Blas - Blas\n\u27e841\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasBuildEntry.html: struct wgpu::BlasBuildEntry - BlasBuildEntry\n\u27e842\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlasTriangleGeometry.html: struct wgpu::BlasTriangleGeometry - BlasTriangleGeometry\n\u27e843\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendComponent.html: struct wgpu::BlendComponent - BlendComponent\n\u27e844\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BlendState.html: struct wgpu::BlendState - `BlendState`\n\u27e845\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorTargetState.html: struct wgpu::ColorTargetState - `ColorTargetState`\n\u27e846\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Buffer.html: struct wgpu::Buffer - Buffer\n\u27e847\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferAsyncError.html: struct wgpu::BufferAsyncError - BufferAsyncError\n\u27e848\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferBinding.html: struct wgpu::BufferBinding - BufferBinding\n\u27e849\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferSlice.html: struct wgpu::BufferSlice - BufferSlice\n\u27e850\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferTransition.html: struct wgpu::BufferTransition - BufferTransition\n\u27e851\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUsages.html: struct wgpu::BufferUsages - BufferUsages\n\u27e852\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferUses.html: struct wgpu::BufferUses - BufferUses\n\u27e853\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferView.html: struct wgpu::BufferView - BufferView\n\u27e854\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.BufferViewMut.html: struct wgpu::BufferViewMut - BufferViewMut\n\u27e855\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Color.html: struct wgpu::Color - Color\n\u27e856\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ColorWrites.html: struct wgpu::ColorWrites - ColorWrites\n\u27e857\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBuffer.html: struct wgpu::CommandBuffer - CommandBuffer\n\u27e858\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandBufferDescriptor.html: struct wgpu::CommandBufferDescriptor - CommandBufferDescriptor\n\u27e859\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html: struct wgpu::CommandEncoder - CommandEncoder\n\u27e860\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationInfo.html: struct wgpu::CompilationInfo - CompilationInfo\n\u27e861\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CompilationMessage.html: struct wgpu::CompilationMessage - CompilationMessage\n\u27e862\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePass.html: struct wgpu::ComputePass - ComputePass\n\u27e863\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassDescriptor.html: struct wgpu::ComputePassDescriptor - ComputePassDescriptor\n\u27e864\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePassTimestampWrites.html: struct wgpu::ComputePassTimestampWrites - ComputePassTimestampWrites\n\u27e865\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipeline.html: struct wgpu::ComputePipeline - ComputePipeline\n\u27e866\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ComputePipelineDescriptor.html: struct wgpu::ComputePipelineDescriptor - ComputePipelineDescriptor\n\u27e867\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasBuildEntry.html: struct wgpu::ContextBlasBuildEntry - ContextBlasBuildEntry\n\u27e868\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ContextBlasTriangleGeometry.html: struct wgpu::ContextBlasTriangleGeometry - ContextBlasTriangleGeometry\n\u27e869\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CopyExternalImageDestInfo.html: struct wgpu::CopyExternalImageDestInfo - CopyExternalImageDestInfo\n\u27e870\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CoreCounters.html: struct wgpu::CoreCounters - CoreCounters\n\u27e871\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InternalCounters.html: struct wgpu::InternalCounters - `InternalCounters`\n\u27e872\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CreateSurfaceError.html: struct wgpu::CreateSurfaceError - CreateSurfaceError\n\u27e873\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.create_surface: method wgpu::Instance::create_surface - `Instance::create_surface()`\n\u27e874\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthBiasState.html: struct wgpu::DepthBiasState - DepthBiasState\n\u27e875\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DepthStencilState.html: struct wgpu::DepthStencilState - DepthStencilState\n\u27e876\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html: struct wgpu::Device - Device\n\u27e877\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelCapabilities.html: struct wgpu::DownlevelCapabilities - DownlevelCapabilities\n\u27e878\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelFlags.html: struct wgpu::DownlevelFlags - DownlevelFlags\n\u27e879\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.DownlevelLimits.html: struct wgpu::DownlevelLimits - DownlevelLimits\n\u27e880\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Dx12BackendOptions.html: struct wgpu::Dx12BackendOptions - Dx12BackendOptions\n\u27e881\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Extent3d.html: struct wgpu::Extent3d - Extent3d\n\u27e882\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Features.html: struct wgpu::Features - Features\n\u27e883\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWGPU.html: struct wgpu::FeaturesWGPU - FeaturesWGPU\n\u27e884\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FeaturesWebGPU.html: struct wgpu::FeaturesWebGPU - FeaturesWebGPU\n\u27e885\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.FragmentState.html: struct wgpu::FragmentState - FragmentState\n\u27e886\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.GlBackendOptions.html: struct wgpu::GlBackendOptions - GlBackendOptions\n\u27e887\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.HalCounters.html: struct wgpu::HalCounters - HalCounters\n\u27e888\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ImageSubresourceRange.html: struct wgpu::ImageSubresourceRange - ImageSubresourceRange\n\u27e889\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceDescriptor.html: struct wgpu::InstanceDescriptor - InstanceDescriptor\n\u27e890\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.InstanceFlags.html: struct wgpu::InstanceFlags - InstanceFlags\n\u27e891\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Limits.html: struct wgpu::Limits - Limits\n\u27e892\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.MultisampleState.html: struct wgpu::MultisampleState - MultisampleState\n\u27e893\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.NoopBackendOptions.html: struct wgpu::NoopBackendOptions - NoopBackendOptions\n\u27e894\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Operations.html: struct wgpu::Operations - Operations\n\u27e895\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin2d.html: struct wgpu::Origin2d - Origin2d\n\u27e896\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Origin3d.html: struct wgpu::Origin3d - Origin3d\n\u27e897\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCache.html: struct wgpu::PipelineCache - PipelineCache\n\u27e898\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipeline.html: struct wgpu::RenderPipeline - `RenderPipeline`\n\u27e899\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCacheDescriptor.html: struct wgpu::PipelineCacheDescriptor - PipelineCacheDescriptor\n\u27e8100\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineCompilationOptions.html: struct wgpu::PipelineCompilationOptions - PipelineCompilationOptions\n\u27e8101\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayout.html: struct wgpu::PipelineLayout - PipelineLayout\n\u27e8102\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineLayoutDescriptor.html: struct wgpu::PipelineLayoutDescriptor - PipelineLayoutDescriptor\n\u27e8103\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PipelineStatisticsTypes.html: struct wgpu::PipelineStatisticsTypes - PipelineStatisticsTypes\n\u27e8104\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PresentationTimestamp.html: struct wgpu::PresentationTimestamp - PresentationTimestamp\n\u27e8105\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PrimitiveState.html: struct wgpu::PrimitiveState - PrimitiveState\n\u27e8106\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.PushConstantRange.html: struct wgpu::PushConstantRange - PushConstantRange\n\u27e8107\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QuerySet.html: struct wgpu::QuerySet - QuerySet\n\u27e8108\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html: struct wgpu::Queue - Queue\n\u27e8109\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.QueueWriteBufferView.html: struct wgpu::QueueWriteBufferView - QueueWriteBufferView\n\u27e8110\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundle.html: struct wgpu::RenderBundle - RenderBundle\n\u27e8111\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleDepthStencil.html: struct wgpu::RenderBundleDepthStencil - RenderBundleDepthStencil\n\u27e8112\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoder.html: struct wgpu::RenderBundleEncoder - RenderBundleEncoder\n\u27e8113\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderBundleEncoderDescriptor.html: struct wgpu::RenderBundleEncoderDescriptor - RenderBundleEncoderDescriptor\n\u27e8114\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html: struct wgpu::RenderPass - RenderPass\n\u27e8115\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassColorAttachment.html: struct wgpu::RenderPassColorAttachment - RenderPassColorAttachment\n\u27e8116\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDepthStencilAttachment.html: struct wgpu::RenderPassDepthStencilAttachment - RenderPassDepthStencilAttachment\n\u27e8117\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassDescriptor.html: struct wgpu::RenderPassDescriptor - RenderPassDescriptor\n\u27e8118\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPassTimestampWrites.html: struct wgpu::RenderPassTimestampWrites - RenderPassTimestampWrites\n\u27e8119\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPipelineDescriptor.html: struct wgpu::RenderPipelineDescriptor - RenderPipelineDescriptor\n\u27e8120\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestAdapterOptionsBase.html: struct wgpu::RequestAdapterOptionsBase - RequestAdapterOptionsBase\n\u27e8121\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RequestDeviceError.html: struct wgpu::RequestDeviceError - RequestDeviceError\n\u27e8122\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Sampler.html: struct wgpu::Sampler - Sampler\n\u27e8123\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModule.html: struct wgpu::ShaderModule - ShaderModule\n\u27e8124\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderModuleDescriptor.html: struct wgpu::ShaderModuleDescriptor - ShaderModuleDescriptor\n\u27e8125\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module: method wgpu::Device::create_shader_module - `Device::create_shader_module`\n\u27e8126\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderRuntimeChecks.html: struct wgpu::ShaderRuntimeChecks - ShaderRuntimeChecks\n\u27e8127\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.ShaderStages.html: struct wgpu::ShaderStages - ShaderStages\n\u27e8128\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SourceLocation.html: struct wgpu::SourceLocation - SourceLocation\n\u27e8129\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilFaceState.html: struct wgpu::StencilFaceState - StencilFaceState\n\u27e8130\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.StencilState.html: struct wgpu::StencilState - StencilState\n\u27e8131\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SubmissionIndex.html: struct wgpu::SubmissionIndex - SubmissionIndex\n\u27e8132\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Queue.html#method.submit: method wgpu::Queue::submit - `Queue::submit`\n\u27e8133\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.poll: method wgpu::Device::poll - `Device::poll`\n\u27e8134\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html: struct wgpu::Surface - Surface\n\u27e8135\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceCapabilities.html: struct wgpu::SurfaceCapabilities - SurfaceCapabilities\n\u27e8136\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.SurfaceTexture.html: struct wgpu::SurfaceTexture - SurfaceTexture\n\u27e8137\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Surface.html#method.get_current_texture: method wgpu::Surface::get_current_texture - `Surface::get_current_texture`\n\u27e8138\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferInfoBase.html: struct wgpu::TexelCopyBufferInfoBase - TexelCopyBufferInfoBase\n\u27e8139\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html: struct wgpu::TexelCopyBufferLayout - TexelCopyBufferLayout\n\u27e8140\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyTextureInfoBase.html: struct wgpu::TexelCopyTextureInfoBase - TexelCopyTextureInfoBase\n\u27e8141\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Texture.html: struct wgpu::Texture - Texture\n\u27e8142\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatureFlags.html: struct wgpu::TextureFormatFeatureFlags - TextureFormatFeatureFlags\n\u27e8143\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureFormatFeatures.html: struct wgpu::TextureFormatFeatures - TextureFormatFeatures\n\u27e8144\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureTransition.html: struct wgpu::TextureTransition - TextureTransition\n\u27e8145\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUsages.html: struct wgpu::TextureUsages - TextureUsages\n\u27e8146\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureUses.html: struct wgpu::TextureUses - TextureUses\n\u27e8147\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TextureView.html: struct wgpu::TextureView - TextureView\n\u27e8148\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Tlas.html: struct wgpu::Tlas - Tlas\n\u27e8149\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasBuildEntry.html: struct wgpu::TlasBuildEntry - TlasBuildEntry\n\u27e8150\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasPackage.html: struct wgpu::TlasPackage - `TlasPackage`\n\u27e8151\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TlasInstance.html: struct wgpu::TlasInstance - TlasInstance\n\u27e8152\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html: struct wgpu::VertexBufferLayout - VertexBufferLayout\n\u27e8153\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexState.html: struct wgpu::VertexState - VertexState\n\u27e8154\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.WgslLanguageFeatures.html: struct wgpu::WgslLanguageFeatures - WgslLanguageFeatures\n\u27e8155\u27e9 https://docs.rs/wgpu/latest/wgpu/#enums: \u00a7\n\u27e8156\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html: enum wgpu::AddressMode - AddressMode\n\u27e8157\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcBlock.html: enum wgpu::AstcBlock - AstcBlock\n\u27e8158\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AstcChannel.html: enum wgpu::AstcChannel - AstcChannel\n\u27e8159\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Backend.html: enum wgpu::Backend - Backend\n\u27e8160\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html: enum wgpu::BindingResource - BindingResource\n\u27e8161\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BindingType.html: enum wgpu::BindingType - BindingType\n\u27e8162\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlasGeometries.html: enum wgpu::BlasGeometries - BlasGeometries\n\u27e8163\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendFactor.html: enum wgpu::BlendFactor - BlendFactor\n\u27e8164\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BlendOperation.html: enum wgpu::BlendOperation - BlendOperation\n\u27e8165\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.BufferBindingType.html: enum wgpu::BufferBindingType - BufferBindingType\n\u27e8166\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompareFunction.html: enum wgpu::CompareFunction - CompareFunction\n\u27e8167\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompilationMessageType.html: enum wgpu::CompilationMessageType - CompilationMessageType\n\u27e8168\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.CompositeAlphaMode.html: enum wgpu::CompositeAlphaMode - CompositeAlphaMode\n\u27e8169\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ContextBlasGeometries.html: enum wgpu::ContextBlasGeometries - ContextBlasGeometries\n\u27e8170\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceLostReason.html: enum wgpu::DeviceLostReason - DeviceLostReason\n\u27e8171\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DeviceType.html: enum wgpu::DeviceType - DeviceType\n\u27e8172\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Dx12Compiler.html: enum wgpu::Dx12Compiler - Dx12Compiler\n\u27e8173\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.DxcShaderModel.html: enum wgpu::DxcShaderModel - DxcShaderModel\n\u27e8174\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Error.html: enum wgpu::Error - Error\n\u27e8175\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ErrorFilter.html: enum wgpu::ErrorFilter - ErrorFilter\n\u27e8176\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.push_error_scope: method wgpu::Device::push_error_scope - `Device::push_error_scope()`\n\u27e8177\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Face.html: enum wgpu::Face - Face\n\u27e8178\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FilterMode.html: enum wgpu::FilterMode - FilterMode\n\u27e8179\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.FrontFace.html: enum wgpu::FrontFace - FrontFace\n\u27e8180\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.GlFenceBehavior.html: enum wgpu::GlFenceBehavior - GlFenceBehavior\n\u27e8181\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Gles3MinorVersion.html: enum wgpu::Gles3MinorVersion - Gles3MinorVersion\n\u27e8182\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.IndexFormat.html: enum wgpu::IndexFormat - IndexFormat\n\u27e8183\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.LoadOp.html: enum wgpu::LoadOp - LoadOp\n\u27e8184\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MaintainBase.html: enum wgpu::MaintainBase - MaintainBase\n\u27e8185\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MapMode.html: enum wgpu::MapMode - MapMode\n\u27e8186\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.MemoryHints.html: enum wgpu::MemoryHints - MemoryHints\n\u27e8187\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollError.html: enum wgpu::PollError - PollError\n\u27e8188\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PollStatus.html: enum wgpu::PollStatus - PollStatus\n\u27e8189\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PolygonMode.html: enum wgpu::PolygonMode - PolygonMode\n\u27e8190\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PowerPreference.html: enum wgpu::PowerPreference - PowerPreference\n\u27e8191\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PredefinedColorSpace.html: enum wgpu::PredefinedColorSpace - PredefinedColorSpace\n\u27e8192\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PresentMode.html: enum wgpu::PresentMode - PresentMode\n\u27e8193\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.PrimitiveTopology.html: enum wgpu::PrimitiveTopology - PrimitiveTopology\n\u27e8194\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.QueryType.html: enum wgpu::QueryType - QueryType\n\u27e8195\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.RequestAdapterError.html: enum wgpu::RequestAdapterError - RequestAdapterError\n\u27e8196\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Instance.html#method.request_adapter: `Instance::request_adapter()`\n\u27e8197\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBindingType.html: enum wgpu::SamplerBindingType - SamplerBindingType\n\u27e8198\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SamplerBorderColor.html: enum wgpu::SamplerBorderColor - SamplerBorderColor\n\u27e8199\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.AddressMode.html#variant.ClampToBorder: variant wgpu::AddressMode::ClampToBorder - `AddressMode::ClampToBorder`\n\u27e8200\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderModel.html: enum wgpu::ShaderModel - ShaderModel\n\u27e8201\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.ShaderSource.html: enum wgpu::ShaderSource - ShaderSource\n\u27e8202\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StencilOperation.html: enum wgpu::StencilOperation - StencilOperation\n\u27e8203\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StorageTextureAccess.html: enum wgpu::StorageTextureAccess - StorageTextureAccess\n\u27e8204\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.StoreOp.html: enum wgpu::StoreOp - StoreOp\n\u27e8205\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceError.html: enum wgpu::SurfaceError - SurfaceError\n\u27e8206\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceStatus.html: enum wgpu::SurfaceStatus - SurfaceStatus\n\u27e8207\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTarget.html: enum wgpu::SurfaceTarget - SurfaceTarget\n\u27e8208\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.SurfaceTargetUnsafe.html: enum wgpu::SurfaceTargetUnsafe - SurfaceTargetUnsafe\n\u27e8209\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureAspect.html: enum wgpu::TextureAspect - TextureAspect\n\u27e8210\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureDimension.html: enum wgpu::TextureDimension - TextureDimension\n\u27e8211\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureFormat.html: enum wgpu::TextureFormat - TextureFormat\n\u27e8212\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureSampleType.html: enum wgpu::TextureSampleType - TextureSampleType\n\u27e8213\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.TextureViewDimension.html: enum wgpu::TextureViewDimension - TextureViewDimension\n\u27e8214\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.Trace.html: enum wgpu::Trace - Trace\n\u27e8215\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexFormat.html: enum wgpu::VertexFormat - VertexFormat\n\u27e8216\u27e9 https://docs.rs/wgpu/latest/wgpu/enum.VertexStepMode.html: enum wgpu::VertexStepMode - VertexStepMode\n\u27e8217\u27e9 https://docs.rs/wgpu/latest/wgpu/#constants: \u00a7\n\u27e8218\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BUFFER_ALIGNMENT.html: constant wgpu::COPY_BUFFER_ALIGNMENT - COPY_BUFFER_ALIGNMENT\n\u27e8219\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.COPY_BYTES_PER_ROW_ALIGNMENT.html: constant wgpu::COPY_BYTES_PER_ROW_ALIGNMENT - COPY_BYTES_PER_ROW_ALIGNMENT\n\u27e8220\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.TexelCopyBufferLayout.html#structfield.bytes_per_row: field wgpu::TexelCopyBufferLayout::bytes_per_row - `bytes_per_row`\n\u27e8221\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.MAP_ALIGNMENT.html: constant wgpu::MAP_ALIGNMENT - MAP_ALIGNMENT\n\u27e8222\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.PUSH_CONSTANT_ALIGNMENT.html: constant wgpu::PUSH_CONSTANT_ALIGNMENT - PUSH_CONSTANT_ALIGNMENT\n\u27e8223\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_push_constants: writes to push constant storage\n\u27e8224\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_RESOLVE_BUFFER_ALIGNMENT.html: constant wgpu::QUERY_RESOLVE_BUFFER_ALIGNMENT - QUERY_RESOLVE_BUFFER_ALIGNMENT\n\u27e8225\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.CommandEncoder.html#method.resolve_query_set: offset into the query resolve buffer\n\u27e8226\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SET_MAX_QUERIES.html: constant wgpu::QUERY_SET_MAX_QUERIES - QUERY_SET_MAX_QUERIES\n\u27e8227\u27e9 https://docs.rs/wgpu-types/25.0.0/x86_64-unknown-linux-gnu/wgpu_types/struct.QuerySetDescriptor.html: struct wgpu_types::QuerySetDescriptor - `QuerySetDescriptor`\n\u27e8228\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.QUERY_SIZE.html: constant wgpu::QUERY_SIZE - QUERY_SIZE\n\u27e8229\u27e9 https://docs.rs/wgpu/latest/wgpu/constant.VERTEX_STRIDE_ALIGNMENT.html: constant wgpu::VERTEX_STRIDE_ALIGNMENT - VERTEX_STRIDE_ALIGNMENT\n\u27e8230\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.VertexBufferLayout.html#structfield.array_stride: Vertex buffer strides\n\u27e8231\u27e9 https://docs.rs/wgpu/latest/wgpu/#traits: \u00a7\n\u27e8232\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.UncapturedErrorHandler.html: trait wgpu::UncapturedErrorHandler - UncapturedErrorHandler\n\u27e8233\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSend.html: trait wgpu::WasmNotSend - WasmNotSend\n\u27e8234\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSendSync.html: trait wgpu::WasmNotSendSync - WasmNotSendSync\n\u27e8235\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WasmNotSync.html: trait wgpu::WasmNotSync - WasmNotSync\n\u27e8236\u27e9 https://docs.rs/wgpu/latest/wgpu/trait.WindowHandle.html: trait wgpu::WindowHandle - WindowHandle\n\u27e8237\u27e9 https://docs.rs/wgpu/latest/wgpu/#types: \u00a7\n\u27e8238\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureFlags.html: type wgpu::AccelerationStructureFlags - AccelerationStructureFlags\n\u27e8239\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureGeometryFlags.html: type wgpu::AccelerationStructureGeometryFlags - AccelerationStructureGeometryFlags\n\u27e8240\u27e9 https://docs.rs/wgpu/latest/wgpu/type.AccelerationStructureUpdateMode.html: type wgpu::AccelerationStructureUpdateMode - AccelerationStructureUpdateMode\n\u27e8241\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasGeometrySizeDescriptors.html: type wgpu::BlasGeometrySizeDescriptors - BlasGeometrySizeDescriptors\n\u27e8242\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BlasTriangleGeometrySizeDescriptor.html: type wgpu::BlasTriangleGeometrySizeDescriptor - BlasTriangleGeometrySizeDescriptor\n\u27e8243\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferAddress.html: type wgpu::BufferAddress - BufferAddress\n\u27e8244\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferDescriptor.html: type wgpu::BufferDescriptor - BufferDescriptor\n\u27e8245\u27e9 https://docs.rs/wgpu/latest/wgpu/type.BufferSize.html: type wgpu::BufferSize - BufferSize\n\u27e8246\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CommandEncoderDescriptor.html: type wgpu::CommandEncoderDescriptor - CommandEncoderDescriptor\n\u27e8247\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateBlasDescriptor.html: type wgpu::CreateBlasDescriptor - CreateBlasDescriptor\n\u27e8248\u27e9 https://docs.rs/wgpu/latest/wgpu/type.CreateTlasDescriptor.html: type wgpu::CreateTlasDescriptor - CreateTlasDescriptor\n\u27e8249\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DeviceDescriptor.html: type wgpu::DeviceDescriptor - DeviceDescriptor\n\u27e8250\u27e9 https://docs.rs/wgpu/latest/wgpu/type.DynamicOffset.html: type wgpu::DynamicOffset - DynamicOffset\n\u27e8251\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.RenderPass.html#method.set_bind_group: dynamic bind group offsets\n\u27e8252\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ErrorSource.html: type wgpu::ErrorSource - ErrorSource\n\u27e8253\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyBuffer.html: type wgpu::ImageCopyBuffer - ImageCopyBuffer\n\u27e8254\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTexture.html: type wgpu::ImageCopyTexture - ImageCopyTexture\n\u27e8255\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageCopyTextureTagged.html: type wgpu::ImageCopyTextureTagged - ImageCopyTextureTagged\n\u27e8256\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ImageDataLayout.html: type wgpu::ImageDataLayout - ImageDataLayout\n\u27e8257\u27e9 https://docs.rs/wgpu/latest/wgpu/type.Label.html: type wgpu::Label - Label\n\u27e8258\u27e9 https://docs.rs/wgpu/latest/wgpu/type.PollType.html: type wgpu::PollType - PollType\n\u27e8259\u27e9 https://docs.rs/wgpu/latest/wgpu/type.QuerySetDescriptor.html: type wgpu::QuerySetDescriptor - QuerySetDescriptor\n\u27e8260\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RenderBundleDescriptor.html: type wgpu::RenderBundleDescriptor - RenderBundleDescriptor\n\u27e8261\u27e9 https://docs.rs/wgpu/latest/wgpu/type.RequestAdapterOptions.html: type wgpu::RequestAdapterOptions - RequestAdapterOptions\n\u27e8262\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SamplerDescriptor.html: type wgpu::SamplerDescriptor - SamplerDescriptor\n\u27e8263\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderLocation.html: type wgpu::ShaderLocation - ShaderLocation\n\u27e8264\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorMsl.html: type wgpu::ShaderModuleDescriptorMsl - ShaderModuleDescriptorMsl\n\u27e8265\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorPassthrough.html: type wgpu::ShaderModuleDescriptorPassthrough - ShaderModuleDescriptorPassthrough\n\u27e8266\u27e9 https://docs.rs/wgpu/latest/wgpu/struct.Device.html#method.create_shader_module_passthrough: method wgpu::Device::create_shader_module_passthrough - `Device::create_shader_module_passthrough`\n\u27e8267\u27e9 https://docs.rs/wgpu/latest/wgpu/type.ShaderModuleDescriptorSpirV.html: type wgpu::ShaderModuleDescriptorSpirV - ShaderModuleDescriptorSpirV\n\u27e8268\u27e9 https://docs.rs/wgpu/latest/wgpu/type.SurfaceConfiguration.html: type wgpu::SurfaceConfiguration - SurfaceConfiguration\n\u27e8269\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyBufferInfo.html: type wgpu::TexelCopyBufferInfo - TexelCopyBufferInfo\n\u27e8270\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TexelCopyTextureInfo.html: type wgpu::TexelCopyTextureInfo - TexelCopyTextureInfo\n\u27e8271\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureDescriptor.html: type wgpu::TextureDescriptor - TextureDescriptor\n\u27e8272\u27e9 https://docs.rs/wgpu/latest/wgpu/type.TextureViewDescriptor.html: type wgpu::TextureViewDescriptor - TextureViewDescriptor\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `wgpu` crate is a cross-platform graphics and compute library built on the WebGPU API, supporting rendering and GPU computation across various backends like Vulkan, DX12, Metal, OpenGL/GLES, and WebGPU. It offers robust shading language support (WGSL, SPIR-V, GLSL), serialization via `serde`, and debugging tools like resource counters. Additionally, it provides utility macros for shader inclusion and vertex attributes, and re-exports core modules for advanced customization.",
          "feature_summary": null,
          "use_case": "Unknown",
          "score": 8.5,
          "factual_counterfactual": "### Pair 1: Backend Support  \n\u2705 **Factual**: The `wgpu` crate supports multiple graphics backends, including DX12, Vulkan, Metal, OpenGL/GLES, and WebGPU, with most backends enabled by default.  \n\u274c **Counterfactual**: The `wgpu` crate exclusively supports the Vulkan backend, making it unsuitable for platforms like macOS or WebAssembly.  \n\n---\n\n### Pair 2: Shading Language Support  \n\u2705 **Factual**: The `wgpu` crate supports WGSL as its default shading language and can also accept SPIR-V, GLSL, and Naga IR shaders as input when the respective features are enabled.  \n\u274c **Counterfactual**: The `wgpu` crate only supports GLSL shaders as input and requires external tools to convert other shading languages like WGSL or SPIR-V.  \n\n---\n\n### Pair 3: Serialization and Debugging  \n\u2705 **Factual**: The `serde` feature in `wgpu` enables serialization of common types, while the `counters` feature allows developers to debug by counting resources and events internally.  \n\u274c **Counterfactual**: The `wgpu` crate does not support serialization or debugging features, requiring developers to implement these functionalities manually.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-056ecc5c-49d7342c-1751265229",
      "timestamp": "2025-06-30T06:33:49.421345+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]