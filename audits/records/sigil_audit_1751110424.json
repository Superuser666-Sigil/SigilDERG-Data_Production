[
  {
    "execution_id": "exec-adf1c78f-9776c558-1751110417",
    "timestamp": "2025-06-28T11:33:37.899435+00:00",
    "sacred_chain": {
      "input_data": "nanomsg",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'nanomsg' -> 'nanomsg'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "nanomsg",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "documentation_quality": 3.0,
        "documentation_sources": [
          "crates_io",
          "docs_rs",
          "lib_rs"
        ],
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libshlex-27ba53e6f2866fee.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libshlex-27ba53e6f2866fee.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-56cdc4a54f543ac6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-56cdc4a54f543ac6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libpkg_config-175e33df67621791.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libpkg_config-175e33df67621791.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-5fa4bf4c31f0f91d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\liblibc-bb560bf5cffc4727.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gcc@0.3.55",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gcc-0.3.55\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gcc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gcc-0.3.55\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libgcc-b0cf303cf3ae3b7f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libgcc-b0cf303cf3ae3b7f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cmake@0.1.54",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cmake-0.1.54\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cmake",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cmake-0.1.54\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcmake-404d89c0ae1c2871.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcmake-404d89c0ae1c2871.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.27\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcc-0e574b4d15c526bd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcc-0e574b4d15c526bd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-1b65cdf16f1baa89\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-1b65cdf16f1baa89\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "linked_libs": [
                "nanomsg"
              ],
              "linked_paths": [
                "C:/Program Files (x86)/nanomsg/lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-124b04997d17a89d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libnanomsg_sys-3fff9e9818ad316b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTSUP` in crate `nanomsg_sys`\n  --> src\\result.rs:19:47\n   |\n19 |     OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSUP;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSUP;\n   |\nhelp: if you import `ENOTSUP`, refer to it directly\n   |\n19 -     OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,\n19 +     OperationNotSupported      = ENOTSUP          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSUP`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 370,
                        "byte_start": 357,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTSUP` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 377,
                    "byte_start": 370,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 19,
                    "line_start": 19,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EPROTONOSUPPORT` in crate `nanomsg_sys`\n   --> src\\result.rs:20:47\n    |\n20  |     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n    |                                               ^^^^^^^^^^^^^^^\n    |\n   ::: C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs:100:5\n    |\n100 |     pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;\n    |     -------------------------------- similarly named constant `ESOCKTNOSUPPORT` defined here\n    |\nhelp: a constant with a similar name exists\n    |\n20  -     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n20  +     ProtocolNotSupported       = nanomsg_sys::ESOCKTNOSUPPORT  as isize,\n    |\nhelp: consider importing one of these constants\n    |\n3   + use libc::EPROTONOSUPPORT;\n    |\n3   + use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n    |\nhelp: if you import `EPROTONOSUPPORT`, refer to it directly\n    |\n20  -     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n20  +     ProtocolNotSupported       = EPROTONOSUPPORT  as isize,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "a constant with a similar name exists",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 458,
                        "byte_start": 443,
                        "column_end": 62,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": "ESOCKTNOSUPPORT",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 47,
                            "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTONOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 443,
                        "byte_start": 430,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EPROTONOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3354,
                    "byte_start": 3322,
                    "column_end": 37,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                    "is_primary": false,
                    "label": "similarly named constant `ESOCKTNOSUPPORT` defined here",
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 5,
                        "text": "    pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;"
                      }
                    ]
                  },
                  {
                    "byte_end": 458,
                    "byte_start": 443,
                    "column_end": 62,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 20,
                    "line_start": 20,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 47,
                        "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOBUFS` in crate `nanomsg_sys`\n  --> src\\result.rs:21:47\n   |\n21 |     NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOBUFS;\n   |\n3  + use nanomsg_sys::posix_consts::ENOBUFS;\n   |\nhelp: if you import `ENOBUFS`, refer to it directly\n   |\n21 -     NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,\n21 +     NoBufferSpace              = ENOBUFS          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOBUFS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 516,
                        "byte_start": 503,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 21,
                        "line_start": 21,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOBUFS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 523,
                    "byte_start": 516,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 21,
                    "line_start": 21,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETDOWN` in crate `nanomsg_sys`\n  --> src\\result.rs:22:47\n   |\n22 |     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETDOWN;\n   |\n3  + use nanomsg_sys::posix_consts::ENETDOWN;\n   |\nhelp: if you import `ENETDOWN`, refer to it directly\n   |\n22 -     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n22 +     NetworkDown                = ENETDOWN         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETDOWN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 589,
                        "byte_start": 576,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETDOWN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 597,
                    "byte_start": 589,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 22,
                    "line_start": 22,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EADDRINUSE` in crate `nanomsg_sys`\n  --> src\\result.rs:23:47\n   |\n23 |     AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,\n   |                                               ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRINUSE;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRINUSE;\n   |\nhelp: if you import `EADDRINUSE`, refer to it directly\n   |\n23 -     AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,\n23 +     AddressInUse               = EADDRINUSE       as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRINUSE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 662,
                        "byte_start": 649,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EADDRINUSE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 672,
                    "byte_start": 662,
                    "column_end": 57,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 47,
                        "text": "    AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EADDRNOTAVAIL` in crate `nanomsg_sys`\n  --> src\\result.rs:24:47\n   |\n24 |     AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,\n   |                                               ^^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRNOTAVAIL;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n   |\nhelp: if you import `EADDRNOTAVAIL`, refer to it directly\n   |\n24 -     AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,\n24 +     AddressNotAvailable        = EADDRNOTAVAIL    as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRNOTAVAIL`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 735,
                        "byte_start": 722,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EADDRNOTAVAIL` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 748,
                    "byte_start": 735,
                    "column_end": 60,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 24,
                    "line_start": 24,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 47,
                        "text": "    AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNREFUSED` in crate `nanomsg_sys`\n  --> src\\result.rs:25:47\n   |\n25 |     ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNREFUSED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNREFUSED;\n   |\nhelp: if you import `ECONNREFUSED`, refer to it directly\n   |\n25 -     ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,\n25 +     ConnectionRefused          = ECONNREFUSED     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNREFUSED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 808,
                        "byte_start": 795,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 25,
                        "line_start": 25,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNREFUSED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 820,
                    "byte_start": 808,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EINPROGRESS` in crate `nanomsg_sys`\n  --> src\\result.rs:26:47\n   |\n26 |     OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EINPROGRESS;\n   |\n3  + use nanomsg_sys::posix_consts::EINPROGRESS;\n   |\nhelp: if you import `EINPROGRESS`, refer to it directly\n   |\n26 -     OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,\n26 +     OperationNowInProgress     = EINPROGRESS      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EINPROGRESS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 881,
                        "byte_start": 868,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EINPROGRESS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 892,
                    "byte_start": 881,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTSOCK` in crate `nanomsg_sys`\n  --> src\\result.rs:27:47\n   |\n27 |     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSOCK;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSOCK;\n   |\nhelp: if you import `ENOTSOCK`, refer to it directly\n   |\n27 -     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n27 +     NotSocket                  = ENOTSOCK         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSOCK`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 954,
                        "byte_start": 941,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTSOCK` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 962,
                    "byte_start": 954,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EAFNOSUPPORT` in crate `nanomsg_sys`\n  --> src\\result.rs:28:47\n   |\n28 |     AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EAFNOSUPPORT;\n   |\n3  + use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n   |\nhelp: if you import `EAFNOSUPPORT`, refer to it directly\n   |\n28 -     AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,\n28 +     AddressFamilyNotSupported  = EAFNOSUPPORT     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EAFNOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1027,
                        "byte_start": 1014,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EAFNOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1039,
                    "byte_start": 1027,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EPROTO` in crate `nanomsg_sys`\n  --> src\\result.rs:30:47\n   |\n30 |     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n   |                                               ^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EPROTO;\n   |\n3  + use nanomsg_sys::posix_consts::EPROTO;\n   |\nhelp: if you import `EPROTO`, refer to it directly\n   |\n30 -     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n30 +     WrongProtocol              = EPROTO           as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTO`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1139,
                        "byte_start": 1126,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EPROTO` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1145,
                    "byte_start": 1139,
                    "column_end": 53,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 47,
                        "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:39:47\n   |\n39 |     NetworkReset               = nanomsg_sys::ENETRESET        as isize,\n   |                                               ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ENETRESET;\n   |\nhelp: if you import `ENETRESET`, refer to it directly\n   |\n39 -     NetworkReset               = nanomsg_sys::ENETRESET        as isize,\n39 +     NetworkReset               = ENETRESET        as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1757,
                        "byte_start": 1744,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 39,
                        "line_start": 39,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkReset               = nanomsg_sys::ENETRESET        as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1766,
                    "byte_start": 1757,
                    "column_end": 56,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 39,
                    "line_start": 39,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 47,
                        "text": "    NetworkReset               = nanomsg_sys::ENETRESET        as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:40:47\n   |\n40 |     NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::ENETUNREACH;\n   |\nhelp: if you import `ENETUNREACH`, refer to it directly\n   |\n40 -     NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,\n40 +     NetworkUnreachable         = ENETUNREACH      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1830,
                        "byte_start": 1817,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1841,
                    "byte_start": 1830,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EHOSTUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:41:47\n   |\n41 |     HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EHOSTUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::EHOSTUNREACH;\n   |\nhelp: if you import `EHOSTUNREACH`, refer to it directly\n   |\n41 -     HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,\n41 +     HostUnreachable            = EHOSTUNREACH     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EHOSTUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1903,
                        "byte_start": 1890,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 41,
                        "line_start": 41,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EHOSTUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1915,
                    "byte_start": 1903,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:42:47\n   |\n42 |     NotConnected               = nanomsg_sys::ENOTCONN         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTCONN;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTCONN;\n   |\nhelp: if you import `ENOTCONN`, refer to it directly\n   |\n42 -     NotConnected               = nanomsg_sys::ENOTCONN         as isize,\n42 +     NotConnected               = ENOTCONN         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1976,
                        "byte_start": 1963,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NotConnected               = nanomsg_sys::ENOTCONN         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1984,
                    "byte_start": 1976,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NotConnected               = nanomsg_sys::ENOTCONN         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EMSGSIZE` in crate `nanomsg_sys`\n  --> src\\result.rs:43:47\n   |\n43 |     MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EMSGSIZE;\n   |\n3  + use nanomsg_sys::posix_consts::EMSGSIZE;\n   |\nhelp: if you import `EMSGSIZE`, refer to it directly\n   |\n43 -     MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,\n43 +     MessageTooLong             = EMSGSIZE         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EMSGSIZE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2049,
                        "byte_start": 2036,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 43,
                        "line_start": 43,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EMSGSIZE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2057,
                    "byte_start": 2049,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ETIMEDOUT` in crate `nanomsg_sys`\n  --> src\\result.rs:44:47\n   |\n44 |     TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,\n   |                                               ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ETIMEDOUT;\n   |\n3  + use nanomsg_sys::posix_consts::ETIMEDOUT;\n   |\nhelp: if you import `ETIMEDOUT`, refer to it directly\n   |\n44 -     TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,\n44 +     TimedOut                   = ETIMEDOUT        as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ETIMEDOUT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2122,
                        "byte_start": 2109,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ETIMEDOUT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2131,
                    "byte_start": 2122,
                    "column_end": 56,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 44,
                    "line_start": 44,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 47,
                        "text": "    TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNABORTED` in crate `nanomsg_sys`\n  --> src\\result.rs:45:47\n   |\n45 |     ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNABORTED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNABORTED;\n   |\nhelp: if you import `ECONNABORTED`, refer to it directly\n   |\n45 -     ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,\n45 +     ConnectionAborted          = ECONNABORTED     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNABORTED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2195,
                        "byte_start": 2182,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 45,
                        "line_start": 45,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNABORTED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2207,
                    "byte_start": 2195,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 45,
                    "line_start": 45,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:46:47\n   |\n46 |     ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,\n   |                                               ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNRESET;\n   |\nhelp: if you import `ECONNRESET`, refer to it directly\n   |\n46 -     ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,\n46 +     ConnectionReset            = ECONNRESET       as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2268,
                        "byte_start": 2255,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 46,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2278,
                    "byte_start": 2268,
                    "column_end": 57,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 46,
                    "line_start": 46,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 47,
                        "text": "    ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOPROTOOPT` in crate `nanomsg_sys`\n  --> src\\result.rs:47:47\n   |\n47 |     ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOPROTOOPT;\n   |\n3  + use nanomsg_sys::posix_consts::ENOPROTOOPT;\n   |\nhelp: if you import `ENOPROTOOPT`, refer to it directly\n   |\n47 -     ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,\n47 +     ProtocolNotAvailable       = ENOPROTOOPT      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOPROTOOPT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2341,
                        "byte_start": 2328,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 47,
                        "line_start": 47,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOPROTOOPT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2352,
                    "byte_start": 2341,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 47,
                    "line_start": 47,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EISCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:48:47\n   |\n48 |     AlreadyConnected           = nanomsg_sys::EISCONN          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EISCONN;\n   |\n3  + use nanomsg_sys::posix_consts::EISCONN;\n   |\nhelp: if you import `EISCONN`, refer to it directly\n   |\n48 -     AlreadyConnected           = nanomsg_sys::EISCONN          as isize,\n48 +     AlreadyConnected           = EISCONN          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EISCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2414,
                        "byte_start": 2401,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AlreadyConnected           = nanomsg_sys::EISCONN          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EISCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2421,
                    "byte_start": 2414,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    AlreadyConnected           = nanomsg_sys::EISCONN          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTSUP` in crate `nanomsg_sys`\n  --> src\\result.rs:64:26\n   |\n64 |             nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSUP;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSUP;\n   |\nhelp: if you import `ENOTSUP`, refer to it directly\n   |\n64 -             nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,\n64 +             ENOTSUP         => Error::OperationNotSupported    ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSUP`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3048,
                        "byte_start": 3035,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTSUP` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3055,
                    "byte_start": 3048,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 64,
                    "line_start": 64,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EPROTONOSUPPORT` in crate `nanomsg_sys`\n   --> src\\result.rs:65:26\n    |\n65  |             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n    |                          ^^^^^^^^^^^^^^^\n    |\n   ::: C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs:100:5\n    |\n100 |     pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;\n    |     -------------------------------- similarly named constant `ESOCKTNOSUPPORT` defined here\n    |\nhelp: a constant with a similar name exists\n    |\n65  -             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n65  +             nanomsg_sys::ESOCKTNOSUPPORT => Error::ProtocolNotSupported     ,\n    |\nhelp: consider importing one of these constants\n    |\n3   + use libc::EPROTONOSUPPORT;\n    |\n3   + use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n    |\nhelp: if you import `EPROTONOSUPPORT`, refer to it directly\n    |\n65  -             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n65  +             EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "a constant with a similar name exists",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3141,
                        "byte_start": 3126,
                        "column_end": 41,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "ESOCKTNOSUPPORT",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 26,
                            "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTONOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3126,
                        "byte_start": 3113,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EPROTONOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3354,
                    "byte_start": 3322,
                    "column_end": 37,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                    "is_primary": false,
                    "label": "similarly named constant `ESOCKTNOSUPPORT` defined here",
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 5,
                        "text": "    pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;"
                      }
                    ]
                  },
                  {
                    "byte_end": 3141,
                    "byte_start": 3126,
                    "column_end": 41,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 65,
                    "line_start": 65,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOBUFS` in crate `nanomsg_sys`\n  --> src\\result.rs:66:26\n   |\n66 |             nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOBUFS;\n   |\n3  + use nanomsg_sys::posix_consts::ENOBUFS;\n   |\nhelp: if you import `ENOBUFS`, refer to it directly\n   |\n66 -             nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,\n66 +             ENOBUFS         => Error::NoBufferSpace            ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOBUFS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3204,
                        "byte_start": 3191,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOBUFS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3211,
                    "byte_start": 3204,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETDOWN` in crate `nanomsg_sys`\n  --> src\\result.rs:67:26\n   |\n67 |             nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETDOWN;\n   |\n3  + use nanomsg_sys::posix_consts::ENETDOWN;\n   |\nhelp: if you import `ENETDOWN`, refer to it directly\n   |\n67 -             nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,\n67 +             ENETDOWN        => Error::NetworkDown              ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETDOWN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3282,
                        "byte_start": 3269,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETDOWN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3290,
                    "byte_start": 3282,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EADDRINUSE` in crate `nanomsg_sys`\n  --> src\\result.rs:68:26\n   |\n68 |             nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,\n   |                          ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRINUSE;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRINUSE;\n   |\nhelp: if you import `EADDRINUSE`, refer to it directly\n   |\n68 -             nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,\n68 +             EADDRINUSE      => Error::AddressInUse             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRINUSE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3360,
                        "byte_start": 3347,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EADDRINUSE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3370,
                    "byte_start": 3360,
                    "column_end": 36,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EADDRNOTAVAIL` in crate `nanomsg_sys`\n  --> src\\result.rs:69:26\n   |\n69 |             nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n   |                          ^^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRNOTAVAIL;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n   |\nhelp: if you import `EADDRNOTAVAIL`, refer to it directly\n   |\n69 -             nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n69 +             EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRNOTAVAIL`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3438,
                        "byte_start": 3425,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EADDRNOTAVAIL` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3451,
                    "byte_start": 3438,
                    "column_end": 39,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNREFUSED` in crate `nanomsg_sys`\n  --> src\\result.rs:70:26\n   |\n70 |             nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNREFUSED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNREFUSED;\n   |\nhelp: if you import `ECONNREFUSED`, refer to it directly\n   |\n70 -             nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,\n70 +             ECONNREFUSED    => Error::ConnectionRefused        ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNREFUSED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3516,
                        "byte_start": 3503,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNREFUSED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3528,
                    "byte_start": 3516,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EINPROGRESS` in crate `nanomsg_sys`\n  --> src\\result.rs:71:26\n   |\n71 |             nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EINPROGRESS;\n   |\n3  + use nanomsg_sys::posix_consts::EINPROGRESS;\n   |\nhelp: if you import `EINPROGRESS`, refer to it directly\n   |\n71 -             nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,\n71 +             EINPROGRESS     => Error::OperationNowInProgress   ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EINPROGRESS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3594,
                        "byte_start": 3581,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EINPROGRESS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3605,
                    "byte_start": 3594,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTSOCK` in crate `nanomsg_sys`\n  --> src\\result.rs:72:26\n   |\n72 |             nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSOCK;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSOCK;\n   |\nhelp: if you import `ENOTSOCK`, refer to it directly\n   |\n72 -             nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,\n72 +             ENOTSOCK        => Error::NotSocket                ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSOCK`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3672,
                        "byte_start": 3659,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTSOCK` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3680,
                    "byte_start": 3672,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 72,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EAFNOSUPPORT` in crate `nanomsg_sys`\n  --> src\\result.rs:73:26\n   |\n73 |             nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EAFNOSUPPORT;\n   |\n3  + use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n   |\nhelp: if you import `EAFNOSUPPORT`, refer to it directly\n   |\n73 -             nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n73 +             EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EAFNOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3750,
                        "byte_start": 3737,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 73,
                        "line_start": 73,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EAFNOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3762,
                    "byte_start": 3750,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EPROTO` in crate `nanomsg_sys`\n  --> src\\result.rs:75:26\n   |\n75 |             nanomsg_sys::EPROTO          => Error::WrongProtocol            ,\n   |                          ^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EPROTO;\n   |\n3  + use nanomsg_sys::posix_consts::EPROTO;\n   |\nhelp: if you import `EPROTO`, refer to it directly\n   |\n75 -             nanomsg_sys::EPROTO          => Error::WrongProtocol            ,\n75 +             EPROTO          => Error::WrongProtocol            ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTO`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3875,
                        "byte_start": 3862,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 75,
                        "line_start": 75,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EPROTO          => Error::WrongProtocol            ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EPROTO` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3881,
                    "byte_start": 3875,
                    "column_end": 32,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EPROTO          => Error::WrongProtocol            ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:84:26\n   |\n84 |             nanomsg_sys::ENETRESET       => Error::NetworkReset             ,\n   |                          ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ENETRESET;\n   |\nhelp: if you import `ENETRESET`, refer to it directly\n   |\n84 -             nanomsg_sys::ENETRESET       => Error::NetworkReset             ,\n84 +             ENETRESET       => Error::NetworkReset             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4541,
                        "byte_start": 4528,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 84,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETRESET       => Error::NetworkReset             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4550,
                    "byte_start": 4541,
                    "column_end": 35,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETRESET       => Error::NetworkReset             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:85:26\n   |\n85 |             nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::ENETUNREACH;\n   |\nhelp: if you import `ENETUNREACH`, refer to it directly\n   |\n85 -             nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,\n85 +             ENETUNREACH     => Error::NetworkUnreachable       ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4619,
                        "byte_start": 4606,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4630,
                    "byte_start": 4619,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 85,
                    "line_start": 85,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EHOSTUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:86:26\n   |\n86 |             nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EHOSTUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::EHOSTUNREACH;\n   |\nhelp: if you import `EHOSTUNREACH`, refer to it directly\n   |\n86 -             nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,\n86 +             EHOSTUNREACH    => Error::HostUnreachable          ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EHOSTUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4697,
                        "byte_start": 4684,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EHOSTUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4709,
                    "byte_start": 4697,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 86,
                    "line_start": 86,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:87:26\n   |\n87 |             nanomsg_sys::ENOTCONN        => Error::NotConnected             ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTCONN;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTCONN;\n   |\nhelp: if you import `ENOTCONN`, refer to it directly\n   |\n87 -             nanomsg_sys::ENOTCONN        => Error::NotConnected             ,\n87 +             ENOTCONN        => Error::NotConnected             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4775,
                        "byte_start": 4762,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTCONN        => Error::NotConnected             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4783,
                    "byte_start": 4775,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 87,
                    "line_start": 87,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTCONN        => Error::NotConnected             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EMSGSIZE` in crate `nanomsg_sys`\n  --> src\\result.rs:88:26\n   |\n88 |             nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EMSGSIZE;\n   |\n3  + use nanomsg_sys::posix_consts::EMSGSIZE;\n   |\nhelp: if you import `EMSGSIZE`, refer to it directly\n   |\n88 -             nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,\n88 +             EMSGSIZE        => Error::MessageTooLong           ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EMSGSIZE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4853,
                        "byte_start": 4840,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EMSGSIZE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4861,
                    "byte_start": 4853,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ETIMEDOUT` in crate `nanomsg_sys`\n  --> src\\result.rs:89:26\n   |\n89 |             nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,\n   |                          ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ETIMEDOUT;\n   |\n3  + use nanomsg_sys::posix_consts::ETIMEDOUT;\n   |\nhelp: if you import `ETIMEDOUT`, refer to it directly\n   |\n89 -             nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,\n89 +             ETIMEDOUT       => Error::TimedOut                 ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ETIMEDOUT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4931,
                        "byte_start": 4918,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 89,
                        "line_start": 89,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ETIMEDOUT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4940,
                    "byte_start": 4931,
                    "column_end": 35,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 89,
                    "line_start": 89,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNABORTED` in crate `nanomsg_sys`\n  --> src\\result.rs:90:26\n   |\n90 |             nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNABORTED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNABORTED;\n   |\nhelp: if you import `ECONNABORTED`, refer to it directly\n   |\n90 -             nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,\n90 +             ECONNABORTED    => Error::ConnectionAborted        ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNABORTED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5009,
                        "byte_start": 4996,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 90,
                        "line_start": 90,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNABORTED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5021,
                    "byte_start": 5009,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 90,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:91:26\n   |\n91 |             nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,\n   |                          ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNRESET;\n   |\nhelp: if you import `ECONNRESET`, refer to it directly\n   |\n91 -             nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,\n91 +             ECONNRESET      => Error::ConnectionReset          ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5087,
                        "byte_start": 5074,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 91,
                        "line_start": 91,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5097,
                    "byte_start": 5087,
                    "column_end": 36,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 91,
                    "line_start": 91,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOPROTOOPT` in crate `nanomsg_sys`\n  --> src\\result.rs:92:26\n   |\n92 |             nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOPROTOOPT;\n   |\n3  + use nanomsg_sys::posix_consts::ENOPROTOOPT;\n   |\nhelp: if you import `ENOPROTOOPT`, refer to it directly\n   |\n92 -             nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n92 +             ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOPROTOOPT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5165,
                        "byte_start": 5152,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 92,
                        "line_start": 92,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOPROTOOPT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5176,
                    "byte_start": 5165,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EISCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:93:26\n   |\n93 |             nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EISCONN;\n   |\n3  + use nanomsg_sys::posix_consts::EISCONN;\n   |\nhelp: if you import `EISCONN`, refer to it directly\n   |\n93 -             nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,\n93 +             EISCONN         => Error::AlreadyConnected         ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EISCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5243,
                        "byte_start": 5230,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 93,
                        "line_start": 93,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EISCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5250,
                    "byte_start": 5243,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 93,
                    "line_start": 93,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `4` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n22 |     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n   |                                  -------------------------------------- `4` assigned here\n...\n54 |     Interrupted                = nanomsg_sys::EINTR            as isize\n   |                                  -------------------------------------- `4` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `4` assigned more than once",
                "spans": [
                  {
                    "byte_end": 614,
                    "byte_start": 576,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`4` assigned here",
                    "line_end": 22,
                    "line_start": 22,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 2877,
                    "byte_start": 2839,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`4` assigned here",
                    "line_end": 54,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    Interrupted                = nanomsg_sys::EINTR            as isize"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `9` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n27 |     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n   |                                  -------------------------------------- `9` assigned here\n...\n34 |     BadFileDescriptor          = nanomsg_sys::EBADF            as isize,\n   |                                  -------------------------------------- `9` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `9` assigned more than once",
                "spans": [
                  {
                    "byte_end": 979,
                    "byte_start": 941,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`9` assigned here",
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 1417,
                    "byte_start": 1379,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`9` assigned here",
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    BadFileDescriptor          = nanomsg_sys::EBADF            as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `11` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n30 |     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n   |                                  -------------------------------------- `11` assigned here\n...\n33 |     TryAgain                   = nanomsg_sys::EAGAIN           as isize,\n   |                                  -------------------------------------- `11` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `11` assigned more than once",
                "spans": [
                  {
                    "byte_end": 1164,
                    "byte_start": 1126,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`11` assigned here",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 1344,
                    "byte_start": 1306,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`11` assigned here",
                    "line_end": 33,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    TryAgain                   = nanomsg_sys::EAGAIN           as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:141:28\n    |\n141 |         let as_std_error: &error::Error = &err;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n    = note: `#[warn(bare_trait_objects)]` on by default\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n141 |         let as_std_error: &dyn error::Error = &err;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(bare_trait_objects)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7393,
                        "byte_start": 7393,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 141,
                        "line_start": 141,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = &err;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 7405,
                    "byte_start": 7393,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = &err;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:142:40\n    |\n142 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n    |\n    = note: `#[warn(deprecated)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(deprecated)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 7464,
                    "byte_start": 7453,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:163:28\n    |\n163 |         let as_std_error: &error::Error = self;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n163 |         let as_std_error: &dyn error::Error = self;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9032,
                        "byte_start": 9032,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 163,
                        "line_start": 163,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = self;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 9044,
                    "byte_start": 9032,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = self;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:164:40\n    |\n164 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 9103,
                    "byte_start": 9092,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:171:28\n    |\n171 |         let as_std_error: &error::Error = self;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n171 |         let as_std_error: &dyn error::Error = self;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9285,
                        "byte_start": 9285,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 171,
                        "line_start": 171,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = self;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 9297,
                    "byte_start": 9285,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 171,
                    "line_start": 171,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = self;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:172:40\n    |\n172 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 9356,
                    "byte_start": 9345,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0081, E0425, E0531.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0081, E0425, E0531.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0081`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0081`.",
                "spans": []
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "shlex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\shlex-1.3.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libshlex-27ba53e6f2866fee.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libshlex-27ba53e6f2866fee.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cc-1.2.27\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcc-0e574b4d15c526bd.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcc-0e574b4d15c526bd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#gcc@0.3.55",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gcc-0.3.55\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "gcc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\gcc-0.3.55\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libgcc-b0cf303cf3ae3b7f.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libgcc-b0cf303cf3ae3b7f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-56cdc4a54f543ac6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-56cdc4a54f543ac6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.32",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.32\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pkg_config",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pkg-config-0.3.32\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libpkg_config-175e33df67621791.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libpkg_config-175e33df67621791.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cmake@0.1.54",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cmake-0.1.54\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cmake",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cmake-0.1.54\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcmake-404d89c0ae1c2871.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libcmake-404d89c0ae1c2871.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\libc-5fa4bf4c31f0f91d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-1b65cdf16f1baa89\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-1b65cdf16f1baa89\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\liblibc-bb560bf5cffc4727.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "linked_libs": [
                "nanomsg"
              ],
              "linked_paths": [
                "C:/Program Files (x86)/nanomsg/lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\build\\nanomsg-sys-124b04997d17a89d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanomsg-sys@0.7.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\target\\debug\\deps\\libnanomsg_sys-3fff9e9818ad316b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTSUP` in crate `nanomsg_sys`\n  --> src\\result.rs:19:47\n   |\n19 |     OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSUP;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSUP;\n   |\nhelp: if you import `ENOTSUP`, refer to it directly\n   |\n19 -     OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,\n19 +     OperationNotSupported      = ENOTSUP          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSUP`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 370,
                        "byte_start": 357,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTSUP` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 377,
                    "byte_start": 370,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 19,
                    "line_start": 19,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    OperationNotSupported      = nanomsg_sys::ENOTSUP          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EPROTONOSUPPORT` in crate `nanomsg_sys`\n   --> src\\result.rs:20:47\n    |\n20  |     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n    |                                               ^^^^^^^^^^^^^^^\n    |\n   ::: C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs:100:5\n    |\n100 |     pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;\n    |     -------------------------------- similarly named constant `ESOCKTNOSUPPORT` defined here\n    |\nhelp: a constant with a similar name exists\n    |\n20  -     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n20  +     ProtocolNotSupported       = nanomsg_sys::ESOCKTNOSUPPORT  as isize,\n    |\nhelp: consider importing one of these constants\n    |\n3   + use libc::EPROTONOSUPPORT;\n    |\n3   + use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n    |\nhelp: if you import `EPROTONOSUPPORT`, refer to it directly\n    |\n20  -     ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,\n20  +     ProtocolNotSupported       = EPROTONOSUPPORT  as isize,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "a constant with a similar name exists",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 458,
                        "byte_start": 443,
                        "column_end": 62,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": "ESOCKTNOSUPPORT",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 47,
                            "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTONOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 443,
                        "byte_start": 430,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 20,
                        "line_start": 20,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EPROTONOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3354,
                    "byte_start": 3322,
                    "column_end": 37,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                    "is_primary": false,
                    "label": "similarly named constant `ESOCKTNOSUPPORT` defined here",
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 5,
                        "text": "    pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;"
                      }
                    ]
                  },
                  {
                    "byte_end": 458,
                    "byte_start": 443,
                    "column_end": 62,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 20,
                    "line_start": 20,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 47,
                        "text": "    ProtocolNotSupported       = nanomsg_sys::EPROTONOSUPPORT  as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOBUFS` in crate `nanomsg_sys`\n  --> src\\result.rs:21:47\n   |\n21 |     NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOBUFS;\n   |\n3  + use nanomsg_sys::posix_consts::ENOBUFS;\n   |\nhelp: if you import `ENOBUFS`, refer to it directly\n   |\n21 -     NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,\n21 +     NoBufferSpace              = ENOBUFS          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOBUFS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 516,
                        "byte_start": 503,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 21,
                        "line_start": 21,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOBUFS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 523,
                    "byte_start": 516,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 21,
                    "line_start": 21,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    NoBufferSpace              = nanomsg_sys::ENOBUFS          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETDOWN` in crate `nanomsg_sys`\n  --> src\\result.rs:22:47\n   |\n22 |     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETDOWN;\n   |\n3  + use nanomsg_sys::posix_consts::ENETDOWN;\n   |\nhelp: if you import `ENETDOWN`, refer to it directly\n   |\n22 -     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n22 +     NetworkDown                = ENETDOWN         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETDOWN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 589,
                        "byte_start": 576,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 22,
                        "line_start": 22,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETDOWN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 597,
                    "byte_start": 589,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 22,
                    "line_start": 22,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EADDRINUSE` in crate `nanomsg_sys`\n  --> src\\result.rs:23:47\n   |\n23 |     AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,\n   |                                               ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRINUSE;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRINUSE;\n   |\nhelp: if you import `EADDRINUSE`, refer to it directly\n   |\n23 -     AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,\n23 +     AddressInUse               = EADDRINUSE       as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRINUSE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 662,
                        "byte_start": 649,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EADDRINUSE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 672,
                    "byte_start": 662,
                    "column_end": 57,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 23,
                    "line_start": 23,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 47,
                        "text": "    AddressInUse               = nanomsg_sys::EADDRINUSE       as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EADDRNOTAVAIL` in crate `nanomsg_sys`\n  --> src\\result.rs:24:47\n   |\n24 |     AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,\n   |                                               ^^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRNOTAVAIL;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n   |\nhelp: if you import `EADDRNOTAVAIL`, refer to it directly\n   |\n24 -     AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,\n24 +     AddressNotAvailable        = EADDRNOTAVAIL    as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRNOTAVAIL`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 735,
                        "byte_start": 722,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 24,
                        "line_start": 24,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EADDRNOTAVAIL` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 748,
                    "byte_start": 735,
                    "column_end": 60,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 24,
                    "line_start": 24,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 47,
                        "text": "    AddressNotAvailable        = nanomsg_sys::EADDRNOTAVAIL    as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNREFUSED` in crate `nanomsg_sys`\n  --> src\\result.rs:25:47\n   |\n25 |     ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNREFUSED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNREFUSED;\n   |\nhelp: if you import `ECONNREFUSED`, refer to it directly\n   |\n25 -     ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,\n25 +     ConnectionRefused          = ECONNREFUSED     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNREFUSED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 808,
                        "byte_start": 795,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 25,
                        "line_start": 25,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNREFUSED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 820,
                    "byte_start": 808,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    ConnectionRefused          = nanomsg_sys::ECONNREFUSED     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EINPROGRESS` in crate `nanomsg_sys`\n  --> src\\result.rs:26:47\n   |\n26 |     OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EINPROGRESS;\n   |\n3  + use nanomsg_sys::posix_consts::EINPROGRESS;\n   |\nhelp: if you import `EINPROGRESS`, refer to it directly\n   |\n26 -     OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,\n26 +     OperationNowInProgress     = EINPROGRESS      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EINPROGRESS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 881,
                        "byte_start": 868,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 26,
                        "line_start": 26,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EINPROGRESS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 892,
                    "byte_start": 881,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 26,
                    "line_start": 26,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    OperationNowInProgress     = nanomsg_sys::EINPROGRESS      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTSOCK` in crate `nanomsg_sys`\n  --> src\\result.rs:27:47\n   |\n27 |     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSOCK;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSOCK;\n   |\nhelp: if you import `ENOTSOCK`, refer to it directly\n   |\n27 -     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n27 +     NotSocket                  = ENOTSOCK         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSOCK`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 954,
                        "byte_start": 941,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 27,
                        "line_start": 27,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTSOCK` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 962,
                    "byte_start": 954,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EAFNOSUPPORT` in crate `nanomsg_sys`\n  --> src\\result.rs:28:47\n   |\n28 |     AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EAFNOSUPPORT;\n   |\n3  + use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n   |\nhelp: if you import `EAFNOSUPPORT`, refer to it directly\n   |\n28 -     AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,\n28 +     AddressFamilyNotSupported  = EAFNOSUPPORT     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EAFNOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1027,
                        "byte_start": 1014,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 28,
                        "line_start": 28,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EAFNOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1039,
                    "byte_start": 1027,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 28,
                    "line_start": 28,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    AddressFamilyNotSupported  = nanomsg_sys::EAFNOSUPPORT     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EPROTO` in crate `nanomsg_sys`\n  --> src\\result.rs:30:47\n   |\n30 |     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n   |                                               ^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EPROTO;\n   |\n3  + use nanomsg_sys::posix_consts::EPROTO;\n   |\nhelp: if you import `EPROTO`, refer to it directly\n   |\n30 -     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n30 +     WrongProtocol              = EPROTO           as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTO`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1139,
                        "byte_start": 1126,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 30,
                        "line_start": 30,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EPROTO` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1145,
                    "byte_start": 1139,
                    "column_end": 53,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 47,
                        "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:39:47\n   |\n39 |     NetworkReset               = nanomsg_sys::ENETRESET        as isize,\n   |                                               ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ENETRESET;\n   |\nhelp: if you import `ENETRESET`, refer to it directly\n   |\n39 -     NetworkReset               = nanomsg_sys::ENETRESET        as isize,\n39 +     NetworkReset               = ENETRESET        as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1757,
                        "byte_start": 1744,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 39,
                        "line_start": 39,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkReset               = nanomsg_sys::ENETRESET        as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1766,
                    "byte_start": 1757,
                    "column_end": 56,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 39,
                    "line_start": 39,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 47,
                        "text": "    NetworkReset               = nanomsg_sys::ENETRESET        as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENETUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:40:47\n   |\n40 |     NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::ENETUNREACH;\n   |\nhelp: if you import `ENETUNREACH`, refer to it directly\n   |\n40 -     NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,\n40 +     NetworkUnreachable         = ENETUNREACH      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1830,
                        "byte_start": 1817,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 40,
                        "line_start": 40,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENETUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1841,
                    "byte_start": 1830,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 40,
                    "line_start": 40,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    NetworkUnreachable         = nanomsg_sys::ENETUNREACH      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EHOSTUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:41:47\n   |\n41 |     HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EHOSTUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::EHOSTUNREACH;\n   |\nhelp: if you import `EHOSTUNREACH`, refer to it directly\n   |\n41 -     HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,\n41 +     HostUnreachable            = EHOSTUNREACH     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EHOSTUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1903,
                        "byte_start": 1890,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 41,
                        "line_start": 41,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EHOSTUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1915,
                    "byte_start": 1903,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    HostUnreachable            = nanomsg_sys::EHOSTUNREACH     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOTCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:42:47\n   |\n42 |     NotConnected               = nanomsg_sys::ENOTCONN         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTCONN;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTCONN;\n   |\nhelp: if you import `ENOTCONN`, refer to it directly\n   |\n42 -     NotConnected               = nanomsg_sys::ENOTCONN         as isize,\n42 +     NotConnected               = ENOTCONN         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1976,
                        "byte_start": 1963,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    NotConnected               = nanomsg_sys::ENOTCONN         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOTCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 1984,
                    "byte_start": 1976,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    NotConnected               = nanomsg_sys::ENOTCONN         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EMSGSIZE` in crate `nanomsg_sys`\n  --> src\\result.rs:43:47\n   |\n43 |     MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,\n   |                                               ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EMSGSIZE;\n   |\n3  + use nanomsg_sys::posix_consts::EMSGSIZE;\n   |\nhelp: if you import `EMSGSIZE`, refer to it directly\n   |\n43 -     MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,\n43 +     MessageTooLong             = EMSGSIZE         as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EMSGSIZE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2049,
                        "byte_start": 2036,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 43,
                        "line_start": 43,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EMSGSIZE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2057,
                    "byte_start": 2049,
                    "column_end": 55,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 47,
                        "text": "    MessageTooLong             = nanomsg_sys::EMSGSIZE         as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ETIMEDOUT` in crate `nanomsg_sys`\n  --> src\\result.rs:44:47\n   |\n44 |     TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,\n   |                                               ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ETIMEDOUT;\n   |\n3  + use nanomsg_sys::posix_consts::ETIMEDOUT;\n   |\nhelp: if you import `ETIMEDOUT`, refer to it directly\n   |\n44 -     TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,\n44 +     TimedOut                   = ETIMEDOUT        as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ETIMEDOUT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2122,
                        "byte_start": 2109,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ETIMEDOUT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2131,
                    "byte_start": 2122,
                    "column_end": 56,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 44,
                    "line_start": 44,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 47,
                        "text": "    TimedOut                   = nanomsg_sys::ETIMEDOUT        as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNABORTED` in crate `nanomsg_sys`\n  --> src\\result.rs:45:47\n   |\n45 |     ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,\n   |                                               ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNABORTED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNABORTED;\n   |\nhelp: if you import `ECONNABORTED`, refer to it directly\n   |\n45 -     ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,\n45 +     ConnectionAborted          = ECONNABORTED     as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNABORTED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2195,
                        "byte_start": 2182,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 45,
                        "line_start": 45,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNABORTED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2207,
                    "byte_start": 2195,
                    "column_end": 59,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 45,
                    "line_start": 45,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 47,
                        "text": "    ConnectionAborted          = nanomsg_sys::ECONNABORTED     as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ECONNRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:46:47\n   |\n46 |     ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,\n   |                                               ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNRESET;\n   |\nhelp: if you import `ECONNRESET`, refer to it directly\n   |\n46 -     ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,\n46 +     ConnectionReset            = ECONNRESET       as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2268,
                        "byte_start": 2255,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 46,
                        "line_start": 46,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ECONNRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2278,
                    "byte_start": 2268,
                    "column_end": 57,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 46,
                    "line_start": 46,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 47,
                        "text": "    ConnectionReset            = nanomsg_sys::ECONNRESET       as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `ENOPROTOOPT` in crate `nanomsg_sys`\n  --> src\\result.rs:47:47\n   |\n47 |     ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,\n   |                                               ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOPROTOOPT;\n   |\n3  + use nanomsg_sys::posix_consts::ENOPROTOOPT;\n   |\nhelp: if you import `ENOPROTOOPT`, refer to it directly\n   |\n47 -     ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,\n47 +     ProtocolNotAvailable       = ENOPROTOOPT      as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOPROTOOPT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2341,
                        "byte_start": 2328,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 47,
                        "line_start": 47,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `ENOPROTOOPT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2352,
                    "byte_start": 2341,
                    "column_end": 58,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 47,
                    "line_start": 47,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 47,
                        "text": "    ProtocolNotAvailable       = nanomsg_sys::ENOPROTOOPT      as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `EISCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:48:47\n   |\n48 |     AlreadyConnected           = nanomsg_sys::EISCONN          as isize,\n   |                                               ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EISCONN;\n   |\n3  + use nanomsg_sys::posix_consts::EISCONN;\n   |\nhelp: if you import `EISCONN`, refer to it directly\n   |\n48 -     AlreadyConnected           = nanomsg_sys::EISCONN          as isize,\n48 +     AlreadyConnected           = EISCONN          as isize,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EISCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2414,
                        "byte_start": 2401,
                        "column_end": 47,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 34,
                            "text": "    AlreadyConnected           = nanomsg_sys::EISCONN          as isize,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `EISCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 2421,
                    "byte_start": 2414,
                    "column_end": 54,
                    "column_start": 47,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 47,
                        "text": "    AlreadyConnected           = nanomsg_sys::EISCONN          as isize,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTSUP` in crate `nanomsg_sys`\n  --> src\\result.rs:64:26\n   |\n64 |             nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSUP;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSUP;\n   |\nhelp: if you import `ENOTSUP`, refer to it directly\n   |\n64 -             nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,\n64 +             ENOTSUP         => Error::OperationNotSupported    ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSUP;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSUP`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3048,
                        "byte_start": 3035,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTSUP` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3055,
                    "byte_start": 3048,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 64,
                    "line_start": 64,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTSUP         => Error::OperationNotSupported    ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EPROTONOSUPPORT` in crate `nanomsg_sys`\n   --> src\\result.rs:65:26\n    |\n65  |             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n    |                          ^^^^^^^^^^^^^^^\n    |\n   ::: C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs:100:5\n    |\n100 |     pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;\n    |     -------------------------------- similarly named constant `ESOCKTNOSUPPORT` defined here\n    |\nhelp: a constant with a similar name exists\n    |\n65  -             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n65  +             nanomsg_sys::ESOCKTNOSUPPORT => Error::ProtocolNotSupported     ,\n    |\nhelp: consider importing one of these constants\n    |\n3   + use libc::EPROTONOSUPPORT;\n    |\n3   + use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n    |\nhelp: if you import `EPROTONOSUPPORT`, refer to it directly\n    |\n65  -             nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n65  +             EPROTONOSUPPORT => Error::ProtocolNotSupported     ,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "a constant with a similar name exists",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3141,
                        "byte_start": 3126,
                        "column_end": 41,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "ESOCKTNOSUPPORT",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 26,
                            "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTONOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTONOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3126,
                        "byte_start": 3113,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EPROTONOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3354,
                    "byte_start": 3322,
                    "column_end": 37,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanomsg-sys-0.7.2\\src\\lib.rs",
                    "is_primary": false,
                    "label": "similarly named constant `ESOCKTNOSUPPORT` defined here",
                    "line_end": 100,
                    "line_start": 100,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 5,
                        "text": "    pub const ESOCKTNOSUPPORT: c_int = NN_HAUSNUMERO + 28;"
                      }
                    ]
                  },
                  {
                    "byte_end": 3141,
                    "byte_start": 3126,
                    "column_end": 41,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 65,
                    "line_start": 65,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EPROTONOSUPPORT => Error::ProtocolNotSupported     ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOBUFS` in crate `nanomsg_sys`\n  --> src\\result.rs:66:26\n   |\n66 |             nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOBUFS;\n   |\n3  + use nanomsg_sys::posix_consts::ENOBUFS;\n   |\nhelp: if you import `ENOBUFS`, refer to it directly\n   |\n66 -             nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,\n66 +             ENOBUFS         => Error::NoBufferSpace            ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOBUFS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOBUFS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3204,
                        "byte_start": 3191,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 66,
                        "line_start": 66,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOBUFS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3211,
                    "byte_start": 3204,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 66,
                    "line_start": 66,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOBUFS         => Error::NoBufferSpace            ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETDOWN` in crate `nanomsg_sys`\n  --> src\\result.rs:67:26\n   |\n67 |             nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETDOWN;\n   |\n3  + use nanomsg_sys::posix_consts::ENETDOWN;\n   |\nhelp: if you import `ENETDOWN`, refer to it directly\n   |\n67 -             nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,\n67 +             ENETDOWN        => Error::NetworkDown              ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETDOWN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETDOWN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3282,
                        "byte_start": 3269,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETDOWN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3290,
                    "byte_start": 3282,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETDOWN        => Error::NetworkDown              ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EADDRINUSE` in crate `nanomsg_sys`\n  --> src\\result.rs:68:26\n   |\n68 |             nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,\n   |                          ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRINUSE;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRINUSE;\n   |\nhelp: if you import `EADDRINUSE`, refer to it directly\n   |\n68 -             nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,\n68 +             EADDRINUSE      => Error::AddressInUse             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRINUSE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRINUSE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3360,
                        "byte_start": 3347,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EADDRINUSE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3370,
                    "byte_start": 3360,
                    "column_end": 36,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 68,
                    "line_start": 68,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EADDRINUSE      => Error::AddressInUse             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EADDRNOTAVAIL` in crate `nanomsg_sys`\n  --> src\\result.rs:69:26\n   |\n69 |             nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n   |                          ^^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EADDRNOTAVAIL;\n   |\n3  + use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n   |\nhelp: if you import `EADDRNOTAVAIL`, refer to it directly\n   |\n69 -             nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n69 +             EADDRNOTAVAIL   => Error::AddressNotAvailable      ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EADDRNOTAVAIL;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EADDRNOTAVAIL`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3438,
                        "byte_start": 3425,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EADDRNOTAVAIL` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3451,
                    "byte_start": 3438,
                    "column_end": 39,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EADDRNOTAVAIL   => Error::AddressNotAvailable      ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNREFUSED` in crate `nanomsg_sys`\n  --> src\\result.rs:70:26\n   |\n70 |             nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNREFUSED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNREFUSED;\n   |\nhelp: if you import `ECONNREFUSED`, refer to it directly\n   |\n70 -             nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,\n70 +             ECONNREFUSED    => Error::ConnectionRefused        ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNREFUSED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNREFUSED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3516,
                        "byte_start": 3503,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNREFUSED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3528,
                    "byte_start": 3516,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNREFUSED    => Error::ConnectionRefused        ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EINPROGRESS` in crate `nanomsg_sys`\n  --> src\\result.rs:71:26\n   |\n71 |             nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EINPROGRESS;\n   |\n3  + use nanomsg_sys::posix_consts::EINPROGRESS;\n   |\nhelp: if you import `EINPROGRESS`, refer to it directly\n   |\n71 -             nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,\n71 +             EINPROGRESS     => Error::OperationNowInProgress   ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EINPROGRESS;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EINPROGRESS`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3594,
                        "byte_start": 3581,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EINPROGRESS` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3605,
                    "byte_start": 3594,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EINPROGRESS     => Error::OperationNowInProgress   ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTSOCK` in crate `nanomsg_sys`\n  --> src\\result.rs:72:26\n   |\n72 |             nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTSOCK;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTSOCK;\n   |\nhelp: if you import `ENOTSOCK`, refer to it directly\n   |\n72 -             nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,\n72 +             ENOTSOCK        => Error::NotSocket                ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTSOCK;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTSOCK`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3672,
                        "byte_start": 3659,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTSOCK` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3680,
                    "byte_start": 3672,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 72,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTSOCK        => Error::NotSocket                ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EAFNOSUPPORT` in crate `nanomsg_sys`\n  --> src\\result.rs:73:26\n   |\n73 |             nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EAFNOSUPPORT;\n   |\n3  + use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n   |\nhelp: if you import `EAFNOSUPPORT`, refer to it directly\n   |\n73 -             nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n73 +             EAFNOSUPPORT    => Error::AddressFamilyNotSupported,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EAFNOSUPPORT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EAFNOSUPPORT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3750,
                        "byte_start": 3737,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 73,
                        "line_start": 73,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EAFNOSUPPORT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3762,
                    "byte_start": 3750,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EAFNOSUPPORT    => Error::AddressFamilyNotSupported,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EPROTO` in crate `nanomsg_sys`\n  --> src\\result.rs:75:26\n   |\n75 |             nanomsg_sys::EPROTO          => Error::WrongProtocol            ,\n   |                          ^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EPROTO;\n   |\n3  + use nanomsg_sys::posix_consts::EPROTO;\n   |\nhelp: if you import `EPROTO`, refer to it directly\n   |\n75 -             nanomsg_sys::EPROTO          => Error::WrongProtocol            ,\n75 +             EPROTO          => Error::WrongProtocol            ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EPROTO;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EPROTO`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3875,
                        "byte_start": 3862,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 75,
                        "line_start": 75,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EPROTO          => Error::WrongProtocol            ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EPROTO` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 3881,
                    "byte_start": 3875,
                    "column_end": 32,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EPROTO          => Error::WrongProtocol            ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:84:26\n   |\n84 |             nanomsg_sys::ENETRESET       => Error::NetworkReset             ,\n   |                          ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ENETRESET;\n   |\nhelp: if you import `ENETRESET`, refer to it directly\n   |\n84 -             nanomsg_sys::ENETRESET       => Error::NetworkReset             ,\n84 +             ENETRESET       => Error::NetworkReset             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4541,
                        "byte_start": 4528,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 84,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETRESET       => Error::NetworkReset             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4550,
                    "byte_start": 4541,
                    "column_end": 35,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETRESET       => Error::NetworkReset             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENETUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:85:26\n   |\n85 |             nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENETUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::ENETUNREACH;\n   |\nhelp: if you import `ENETUNREACH`, refer to it directly\n   |\n85 -             nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,\n85 +             ENETUNREACH     => Error::NetworkUnreachable       ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENETUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENETUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4619,
                        "byte_start": 4606,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 85,
                        "line_start": 85,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENETUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4630,
                    "byte_start": 4619,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 85,
                    "line_start": 85,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENETUNREACH     => Error::NetworkUnreachable       ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EHOSTUNREACH` in crate `nanomsg_sys`\n  --> src\\result.rs:86:26\n   |\n86 |             nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EHOSTUNREACH;\n   |\n3  + use nanomsg_sys::posix_consts::EHOSTUNREACH;\n   |\nhelp: if you import `EHOSTUNREACH`, refer to it directly\n   |\n86 -             nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,\n86 +             EHOSTUNREACH    => Error::HostUnreachable          ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EHOSTUNREACH;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EHOSTUNREACH`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4697,
                        "byte_start": 4684,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 86,
                        "line_start": 86,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EHOSTUNREACH` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4709,
                    "byte_start": 4697,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 86,
                    "line_start": 86,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EHOSTUNREACH    => Error::HostUnreachable          ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOTCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:87:26\n   |\n87 |             nanomsg_sys::ENOTCONN        => Error::NotConnected             ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOTCONN;\n   |\n3  + use nanomsg_sys::posix_consts::ENOTCONN;\n   |\nhelp: if you import `ENOTCONN`, refer to it directly\n   |\n87 -             nanomsg_sys::ENOTCONN        => Error::NotConnected             ,\n87 +             ENOTCONN        => Error::NotConnected             ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOTCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOTCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4775,
                        "byte_start": 4762,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 87,
                        "line_start": 87,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOTCONN        => Error::NotConnected             ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOTCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4783,
                    "byte_start": 4775,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 87,
                    "line_start": 87,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOTCONN        => Error::NotConnected             ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EMSGSIZE` in crate `nanomsg_sys`\n  --> src\\result.rs:88:26\n   |\n88 |             nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,\n   |                          ^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EMSGSIZE;\n   |\n3  + use nanomsg_sys::posix_consts::EMSGSIZE;\n   |\nhelp: if you import `EMSGSIZE`, refer to it directly\n   |\n88 -             nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,\n88 +             EMSGSIZE        => Error::MessageTooLong           ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EMSGSIZE;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EMSGSIZE`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4853,
                        "byte_start": 4840,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EMSGSIZE` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4861,
                    "byte_start": 4853,
                    "column_end": 34,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EMSGSIZE        => Error::MessageTooLong           ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ETIMEDOUT` in crate `nanomsg_sys`\n  --> src\\result.rs:89:26\n   |\n89 |             nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,\n   |                          ^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ETIMEDOUT;\n   |\n3  + use nanomsg_sys::posix_consts::ETIMEDOUT;\n   |\nhelp: if you import `ETIMEDOUT`, refer to it directly\n   |\n89 -             nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,\n89 +             ETIMEDOUT       => Error::TimedOut                 ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ETIMEDOUT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ETIMEDOUT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4931,
                        "byte_start": 4918,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 89,
                        "line_start": 89,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ETIMEDOUT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 4940,
                    "byte_start": 4931,
                    "column_end": 35,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 89,
                    "line_start": 89,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ETIMEDOUT       => Error::TimedOut                 ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNABORTED` in crate `nanomsg_sys`\n  --> src\\result.rs:90:26\n   |\n90 |             nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,\n   |                          ^^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNABORTED;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNABORTED;\n   |\nhelp: if you import `ECONNABORTED`, refer to it directly\n   |\n90 -             nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,\n90 +             ECONNABORTED    => Error::ConnectionAborted        ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNABORTED;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNABORTED`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5009,
                        "byte_start": 4996,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 90,
                        "line_start": 90,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNABORTED` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5021,
                    "byte_start": 5009,
                    "column_end": 38,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 90,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNABORTED    => Error::ConnectionAborted        ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ECONNRESET` in crate `nanomsg_sys`\n  --> src\\result.rs:91:26\n   |\n91 |             nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,\n   |                          ^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ECONNRESET;\n   |\n3  + use nanomsg_sys::posix_consts::ECONNRESET;\n   |\nhelp: if you import `ECONNRESET`, refer to it directly\n   |\n91 -             nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,\n91 +             ECONNRESET      => Error::ConnectionReset          ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ECONNRESET;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ECONNRESET`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5087,
                        "byte_start": 5074,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 91,
                        "line_start": 91,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ECONNRESET` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5097,
                    "byte_start": 5087,
                    "column_end": 36,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 91,
                    "line_start": 91,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ECONNRESET      => Error::ConnectionReset          ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `ENOPROTOOPT` in crate `nanomsg_sys`\n  --> src\\result.rs:92:26\n   |\n92 |             nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n   |                          ^^^^^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::ENOPROTOOPT;\n   |\n3  + use nanomsg_sys::posix_consts::ENOPROTOOPT;\n   |\nhelp: if you import `ENOPROTOOPT`, refer to it directly\n   |\n92 -             nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n92 +             ENOPROTOOPT     => Error::ProtocolNotAvailable     ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::ENOPROTOOPT;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `ENOPROTOOPT`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5165,
                        "byte_start": 5152,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 92,
                        "line_start": 92,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `ENOPROTOOPT` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5176,
                    "byte_start": 5165,
                    "column_end": 37,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::ENOPROTOOPT     => Error::ProtocolNotAvailable     ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find unit struct, unit variant or constant `EISCONN` in crate `nanomsg_sys`\n  --> src\\result.rs:93:26\n   |\n93 |             nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,\n   |                          ^^^^^^^ not found in `nanomsg_sys`\n   |\nhelp: consider importing one of these constants\n   |\n3  + use libc::EISCONN;\n   |\n3  + use nanomsg_sys::posix_consts::EISCONN;\n   |\nhelp: if you import `EISCONN`, refer to it directly\n   |\n93 -             nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,\n93 +             EISCONN         => Error::AlreadyConnected         ,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these constants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use libc::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      },
                      {
                        "byte_end": 20,
                        "byte_start": 20,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 3,
                        "line_start": 3,
                        "suggested_replacement": "use nanomsg_sys::posix_consts::EISCONN;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use libc::{c_int};"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you import `EISCONN`, refer to it directly",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5243,
                        "byte_start": 5230,
                        "column_end": 26,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 93,
                        "line_start": 93,
                        "suggested_replacement": "",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 13,
                            "text": "            nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find unit struct, unit variant or constant `EISCONN` in crate `nanomsg_sys`",
                "spans": [
                  {
                    "byte_end": 5250,
                    "byte_start": 5243,
                    "column_end": 33,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": "not found in `nanomsg_sys`",
                    "line_end": 93,
                    "line_start": 93,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 26,
                        "text": "            nanomsg_sys::EISCONN         => Error::AlreadyConnected         ,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n  --> src\\endpoint.rs:15:20\n   |\n15 |         Endpoint { value: value, socket: socket }\n   |                    ^^^^^^^^^^^^ help: replace it with: `value`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_field_names)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 466,
                        "byte_start": 454,
                        "column_end": 32,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\endpoint.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "value",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 20,
                            "text": "        Endpoint { value: value, socket: socket }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 466,
                    "byte_start": 454,
                    "column_end": 32,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\endpoint.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 15,
                    "line_start": 15,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 20,
                        "text": "        Endpoint { value: value, socket: socket }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n  --> src\\endpoint.rs:15:34\n   |\n15 |         Endpoint { value: value, socket: socket }\n   |                                  ^^^^^^^^^^^^^^ help: replace it with: `socket`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 468,
                        "column_end": 48,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\endpoint.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "socket",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 34,
                            "text": "        Endpoint { value: value, socket: socket }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 482,
                    "byte_start": 468,
                    "column_end": 48,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\endpoint.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 15,
                    "line_start": 15,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 34,
                        "text": "        Endpoint { value: value, socket: socket }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:172:23\n    |\n172 |         PollRequest { fds: fds, nn_fds: nn_fds }\n    |                       ^^^^^^^^ help: replace it with: `fds`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5619,
                        "byte_start": 5611,
                        "column_end": 31,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 172,
                        "line_start": 172,
                        "suggested_replacement": "fds",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 23,
                            "text": "        PollRequest { fds: fds, nn_fds: nn_fds }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 5619,
                    "byte_start": 5611,
                    "column_end": 31,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 23,
                        "text": "        PollRequest { fds: fds, nn_fds: nn_fds }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:172:33\n    |\n172 |         PollRequest { fds: fds, nn_fds: nn_fds }\n    |                                 ^^^^^^^^^^^^^^ help: replace it with: `nn_fds`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5635,
                        "byte_start": 5621,
                        "column_end": 47,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 172,
                        "line_start": 172,
                        "suggested_replacement": "nn_fds",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 33,
                            "text": "        PollRequest { fds: fds, nn_fds: nn_fds }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 5635,
                    "byte_start": 5621,
                    "column_end": 47,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 33,
                        "text": "        PollRequest { fds: fds, nn_fds: nn_fds }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant field names in struct initialization\n   --> src\\lib.rs:264:20\n    |\n264 |         Ok(Socket {socket: socket})\n    |                    ^^^^^^^^^^^^^^ help: replace it with: `socket`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8417,
                        "byte_start": 8403,
                        "column_end": 34,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 264,
                        "line_start": 264,
                        "suggested_replacement": "socket",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 20,
                            "text": "        Ok(Socket {socket: socket})"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_field_names",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant field names in struct initialization",
                "spans": [
                  {
                    "byte_end": 8417,
                    "byte_start": 8403,
                    "column_end": 34,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 264,
                    "line_start": 264,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 20,
                        "text": "        Ok(Socket {socket: socket})"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `4` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n22 |     NetworkDown                = nanomsg_sys::ENETDOWN         as isize,\n   |                                  -------------------------------------- `4` assigned here\n...\n54 |     Interrupted                = nanomsg_sys::EINTR            as isize\n   |                                  -------------------------------------- `4` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `4` assigned more than once",
                "spans": [
                  {
                    "byte_end": 614,
                    "byte_start": 576,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`4` assigned here",
                    "line_end": 22,
                    "line_start": 22,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    NetworkDown                = nanomsg_sys::ENETDOWN         as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 2877,
                    "byte_start": 2839,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`4` assigned here",
                    "line_end": 54,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    Interrupted                = nanomsg_sys::EINTR            as isize"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `9` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n27 |     NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,\n   |                                  -------------------------------------- `9` assigned here\n...\n34 |     BadFileDescriptor          = nanomsg_sys::EBADF            as isize,\n   |                                  -------------------------------------- `9` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `9` assigned more than once",
                "spans": [
                  {
                    "byte_end": 979,
                    "byte_start": 941,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`9` assigned here",
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    NotSocket                  = nanomsg_sys::ENOTSOCK         as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 1417,
                    "byte_start": 1379,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`9` assigned here",
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    BadFileDescriptor          = nanomsg_sys::EBADF            as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0081]: discriminant value `11` assigned more than once\n  --> src\\result.rs:17:1\n   |\n17 | pub enum Error {\n   | ^^^^^^^^^^^^^^\n...\n30 |     WrongProtocol              = nanomsg_sys::EPROTO           as isize,\n   |                                  -------------------------------------- `11` assigned here\n...\n33 |     TryAgain                   = nanomsg_sys::EAGAIN           as isize,\n   |                                  -------------------------------------- `11` assigned here\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "E0081",
                  "explanation": "A discriminant value is present more than once.\n\nErroneous code example:\n\n```compile_fail,E0081\nenum Enum {\n    P = 3,\n    X = 3, // error!\n    Y = 5,\n}\n```\n\nEnum discriminants are used to differentiate enum variants stored in memory.\nThis error indicates that the same value was used for two or more variants,\nmaking it impossible to distinguish them.\n\n```\nenum Enum {\n    P,\n    X = 3, // ok!\n    Y = 5,\n}\n```\n\nNote that variants without a manually specified discriminant are numbered from\ntop to bottom starting from 0, so clashes can occur with seemingly unrelated\nvariants.\n\n```compile_fail,E0081\nenum Bad {\n    X,\n    Y = 0, // error!\n}\n```\n\nHere `X` will have already been specified the discriminant 0 by the time `Y` is\nencountered, so a conflict occurs.\n"
                },
                "level": "error",
                "message": "discriminant value `11` assigned more than once",
                "spans": [
                  {
                    "byte_end": 1164,
                    "byte_start": 1126,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`11` assigned here",
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    WrongProtocol              = nanomsg_sys::EPROTO           as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 1344,
                    "byte_start": 1306,
                    "column_end": 72,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": false,
                    "label": "`11` assigned here",
                    "line_end": 33,
                    "line_start": 33,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 34,
                        "text": "    TryAgain                   = nanomsg_sys::EAGAIN           as isize,"
                      }
                    ]
                  },
                  {
                    "byte_end": 276,
                    "byte_start": 262,
                    "column_end": 15,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 17,
                    "line_start": 17,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "pub enum Error {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:141:28\n    |\n141 |         let as_std_error: &error::Error = &err;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n    = note: `#[warn(bare_trait_objects)]` on by default\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n141 |         let as_std_error: &dyn error::Error = &err;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(bare_trait_objects)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7393,
                        "byte_start": 7393,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 141,
                        "line_start": 141,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = &err;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 7405,
                    "byte_start": 7393,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = &err;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:142:40\n    |\n142 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n    |\n    = note: `#[warn(deprecated)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(deprecated)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 7464,
                    "byte_start": 7453,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:163:28\n    |\n163 |         let as_std_error: &error::Error = self;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n163 |         let as_std_error: &dyn error::Error = self;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9032,
                        "byte_start": 9032,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 163,
                        "line_start": 163,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = self;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 9044,
                    "byte_start": 9032,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = self;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:164:40\n    |\n164 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 9103,
                    "byte_start": 9092,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: trait objects without an explicit `dyn` are deprecated\n   --> src\\result.rs:171:28\n    |\n171 |         let as_std_error: &error::Error = self;\n    |                            ^^^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\nhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n171 |         let as_std_error: &dyn error::Error = self;\n    |                            +++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "warning",
                    "message": "this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is a dyn-compatible trait, use `dyn`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9285,
                        "byte_start": 9285,
                        "column_end": 28,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\result.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 171,
                        "line_start": 171,
                        "suggested_replacement": "dyn ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 28,
                            "text": "        let as_std_error: &error::Error = self;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "bare_trait_objects",
                  "explanation": null
                },
                "level": "warning",
                "message": "trait objects without an explicit `dyn` are deprecated",
                "spans": [
                  {
                    "byte_end": 9297,
                    "byte_start": 9285,
                    "column_end": 40,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 171,
                    "line_start": 171,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 28,
                        "text": "        let as_std_error: &error::Error = self;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()\n   --> src\\result.rs:172:40\n    |\n172 |         let description = as_std_error.description();\n    |                                        ^^^^^^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": {
                  "code": "deprecated",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of deprecated method `std::error::Error::description`: use the Display impl or to_string()",
                "spans": [
                  {
                    "byte_end": 9356,
                    "byte_start": 9345,
                    "column_end": 51,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\result.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 40,
                        "text": "        let description = as_std_error.description();"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0081, E0425, E0531.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0081, E0425, E0531.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpd89p4d_z/nanomsg-0.7.2#nanomsg@0.7.2",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanomsg",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpd89p4d_z\\nanomsg-0.7.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0081`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0081`.",
                "spans": []
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 8
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed."
        },
        "crate_metadata": {
          "name": "nanomsg",
          "version": "unknown",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": "",
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "ai_enrichment": {
          "provider": "azure",
          "model": "gpt-4o",
          "readme_summary": null,
          "use_case": null,
          "score": null,
          "factual_counterfactual": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-adf1c78f-9776c558-1751110417",
      "timestamp": "2025-06-28T11:33:37.899435+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]