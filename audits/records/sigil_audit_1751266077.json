[
  {
    "execution_id": "exec-80e4177d-45dff75a-1751266019",
    "timestamp": "2025-06-30T06:46:59.952021+00:00",
    "sacred_chain": {
      "input_data": "femtovg",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'femtovg' -> 'femtovg'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "femtovg",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/femtovg",
            "title": "femtovg v0.14.1",
            "content": {
              "raw_markdown": "#  femtovg v0.14.1\nAntialiased 2D vector drawing library \n  * [ #canvas ](https://crates.io/keywords/canvas)\n  * [ #drawing ](https://crates.io/keywords/drawing)\n  * [ #gpu ](https://crates.io/keywords/gpu)\n  * [ #graphics ](https://crates.io/keywords/graphics)\n  * [ #vector ](https://crates.io/keywords/vector)\n\n\n  * [ Readme ](https://crates.io/crates/femtovg)\n  * [ 45 Versions ](https://crates.io/crates/femtovg/versions)\n  * [ Dependencies ](https://crates.io/crates/femtovg/dependencies)\n  * [ Dependents ](https://crates.io/crates/femtovg/reverse_dependencies)\n\n\n## Metadata\n16 days ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n260 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add femtovg\nOr add the following line to your Cargo.toml:\nfemtovg = \"0.14.1\"\n## Repository\n[ github.com/femtovg/femtovg ](https://github.com/femtovg/femtovg)\n## Owners\n## Categories\n  * [Graphics](https://crates.io/categories/graphics)\n\n\n[ Report crate ](https://crates.io/support?crate=femtovg&inquire=crate-violation)\n### Stats Overview\n993,561 Downloads all time\n45 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  femtovg v0.14.1\nAntialiased 2D vector drawing library \n  *  #canvas \u27e81\u27e9\n  *  #drawing \u27e82\u27e9\n  *  #gpu \u27e83\u27e9\n  *  #graphics \u27e84\u27e9\n  *  #vector \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  45 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n16 days ago \n2021 edition \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n260 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add femtovg\nOr add the following line to your Cargo.toml:\nfemtovg = \"0.14.1\"\n## Repository\n github.com/femtovg/femtovg \u27e812\u27e9\n## Owners\n## Categories\n  * Graphics\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n993,561 Downloads all time\n45 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/canvas:  #canvas \n\u27e82\u27e9 https://crates.io/keywords/drawing:  #drawing \n\u27e83\u27e9 https://crates.io/keywords/gpu:  #gpu \n\u27e84\u27e9 https://crates.io/keywords/graphics:  #graphics \n\u27e85\u27e9 https://crates.io/keywords/vector:  #vector \n\u27e86\u27e9 https://crates.io/crates/femtovg:  Readme \n\u27e87\u27e9 https://crates.io/crates/femtovg/versions:  45 Versions \n\u27e88\u27e9 https://crates.io/crates/femtovg/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/femtovg/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://github.com/femtovg/femtovg:  github.com/femtovg/femtovg \n\u27e813\u27e9 https://crates.io/categories/graphics: Graphics\n\u27e814\u27e9 https://crates.io/support?crate=femtovg&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1295,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119809.4880194"
          },
          "docs_rs": {
            "url": "https://docs.rs/femtovg",
            "title": "Crate femtovgCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\n[Settings](https://docs.rs/femtovg/latest/settings.html)\n[Help](https://docs.rs/femtovg/latest/help.html)\nSummary[Source](https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637)\nExpand description\nThe femtovg API is (like [NanoVG](https://github.com/memononen/nanovg)) loosely modeled on the [HTML5 Canvas API](https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html).\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports[\u00a7](https://docs.rs/femtovg/latest/femtovg/#reexports)\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules[\u00a7](https://docs.rs/femtovg/latest/femtovg/#modules)\n\n[renderer](https://docs.rs/femtovg/latest/femtovg/renderer/index.html \"mod femtovg::renderer\")\n    Module containing renderer implementations.\n## Structs[\u00a7](https://docs.rs/femtovg/latest/femtovg/#structs)\n\n[Atlas](https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html \"struct femtovg::Atlas\")\n    Represents an atlas for packing rectangles.\n\n[Canvas](https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html \"struct femtovg::Canvas\")\n    Main 2D drawing context.\n\n[Color](https://docs.rs/femtovg/latest/femtovg/struct.Color.html \"struct femtovg::Color\")\n    Struct representing a color with red, green, blue, and alpha components.\n\n[CompositeOperationState](https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html \"struct femtovg::CompositeOperationState\")\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\n[DrawCommand](https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html \"struct femtovg::DrawCommand\")\n    Represents a command to draw an image with a set of quads.\n\n[FontId](https://docs.rs/femtovg/latest/femtovg/struct.FontId.html \"struct femtovg::FontId\")\n    A font handle.\n\n[FontMetrics](https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html \"struct femtovg::FontMetrics\")\n    Information about a font.\n\n[GlyphDrawCommands](https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html \"struct femtovg::GlyphDrawCommands\")\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\n[ImageFlags](https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html \"struct femtovg::ImageFlags\")\n    Represents a set of flags that modify the behavior of an image.\n\n[ImageId](https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html \"struct femtovg::ImageId\")\n    An image handle.\n\n[ImageInfo](https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html \"struct femtovg::ImageInfo\")\n    Information about an image.\n\n[Paint](https://docs.rs/femtovg/latest/femtovg/struct.Paint.html \"struct femtovg::Paint\")\n    Struct controlling how graphical shapes are rendered.\n\n[Path](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\")\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\n[PathIter](https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html \"struct femtovg::PathIter\")\n    An iterator over the verbs and coordinates of a path.\n\n[Quad](https://docs.rs/femtovg/latest/femtovg/struct.Quad.html \"struct femtovg::Quad\")\n    Represents a quad with position and texture coordinates.\n\n[TextContext](https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html \"struct femtovg::TextContext\")\n    `TextContext` provides functionality for text processing in femtovg.\n\n[TextMetrics](https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html \"struct femtovg::TextMetrics\")\n    Represents the result of a text shaping run.\n\n[Transform2D](https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html \"struct femtovg::Transform2D\")\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums[\u00a7](https://docs.rs/femtovg/latest/femtovg/#enums)\n\n[Align](https://docs.rs/femtovg/latest/femtovg/enum.Align.html \"enum femtovg::Align\")\n    Represents the horizontal alignment of text.\n\n[Baseline](https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html \"enum femtovg::Baseline\")\n    Represents the vertical alignment of a text baseline.\n\n[BlendFactor](https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html \"enum femtovg::BlendFactor\")\n    Blend factors.\n\n[CompositeOperation](https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html \"enum femtovg::CompositeOperation\")\n    Predefined composite oprations.\n\n[ErrorKind](https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html \"enum femtovg::ErrorKind\")\n    Enum representing different types of errors that can occur in the canvas.\n\n[FillRule](https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html \"enum femtovg::FillRule\")\n    Determines the fill rule used when filling paths.\n\n[ImageFilter](https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html \"enum femtovg::ImageFilter\")\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\n[ImageSource](https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html \"enum femtovg::ImageSource\")\n    Represents the source of an image.\n\n[LineCap](https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html \"enum femtovg::LineCap\")\n    Determines the shape used to draw the end points of lines.\n\n[LineJoin](https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html \"enum femtovg::LineJoin\")\n    Determines the shape used to join two line segments where they meet.\n\n[PixelFormat](https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html \"enum femtovg::PixelFormat\")\n    Specifies the format of an image\u2019s pixels.\n\n[RenderMode](https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html \"enum femtovg::RenderMode\")\n    Represents the rendering mode for a path.\n\n[Solidity](https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html \"enum femtovg::Solidity\")\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\n[Verb](https://docs.rs/femtovg/latest/femtovg/enum.Verb.html \"enum femtovg::Verb\")\n    A verb describes how to interpret one or more points to continue the countour of a [`Path`](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\").\n",
              "markdown_with_citations": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe femtovg API is (like NanoVG\u27e84\u27e9) loosely modeled on the HTML5 Canvas API\u27e85\u27e9.\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nrenderer\u27e88\u27e9\n    Module containing renderer implementations.\n## Structs\u00a7\u27e89\u27e9\n\nAtlas\u27e810\u27e9\n    Represents an atlas for packing rectangles.\n\nCanvas\u27e811\u27e9\n    Main 2D drawing context.\n\nColor\u27e812\u27e9\n    Struct representing a color with red, green, blue, and alpha components.\n\nCompositeOperationState\u27e813\u27e9\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\nDrawCommand\u27e814\u27e9\n    Represents a command to draw an image with a set of quads.\n\nFontId\u27e815\u27e9\n    A font handle.\n\nFontMetrics\u27e816\u27e9\n    Information about a font.\n\nGlyphDrawCommands\u27e817\u27e9\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\nImageFlags\u27e818\u27e9\n    Represents a set of flags that modify the behavior of an image.\n\nImageId\u27e819\u27e9\n    An image handle.\n\nImageInfo\u27e820\u27e9\n    Information about an image.\n\nPaint\u27e821\u27e9\n    Struct controlling how graphical shapes are rendered.\n\nPath\u27e822\u27e9\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\nPathIter\u27e823\u27e9\n    An iterator over the verbs and coordinates of a path.\n\nQuad\u27e824\u27e9\n    Represents a quad with position and texture coordinates.\n\nTextContext\u27e825\u27e9\n    `TextContext` provides functionality for text processing in femtovg.\n\nTextMetrics\u27e826\u27e9\n    Represents the result of a text shaping run.\n\nTransform2D\u27e827\u27e9\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums\u00a7\u27e828\u27e9\n\nAlign\u27e829\u27e9\n    Represents the horizontal alignment of text.\n\nBaseline\u27e830\u27e9\n    Represents the vertical alignment of a text baseline.\n\nBlendFactor\u27e831\u27e9\n    Blend factors.\n\nCompositeOperation\u27e832\u27e9\n    Predefined composite oprations.\n\nErrorKind\u27e833\u27e9\n    Enum representing different types of errors that can occur in the canvas.\n\nFillRule\u27e834\u27e9\n    Determines the fill rule used when filling paths.\n\nImageFilter\u27e835\u27e9\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\nImageSource\u27e836\u27e9\n    Represents the source of an image.\n\nLineCap\u27e837\u27e9\n    Determines the shape used to draw the end points of lines.\n\nLineJoin\u27e838\u27e9\n    Determines the shape used to join two line segments where they meet.\n\nPixelFormat\u27e839\u27e9\n    Specifies the format of an image\u2019s pixels.\n\nRenderMode\u27e840\u27e9\n    Represents the rendering mode for a path.\n\nSolidity\u27e841\u27e9\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\nVerb\u27e842\u27e9\n    A verb describes how to interpret one or more points to continue the countour of a `Path`\u27e822\u27e9.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/femtovg/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/femtovg/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637: Source\n\u27e84\u27e9 https://github.com/memononen/nanovg: NanoVG\n\u27e85\u27e9 https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html: HTML5 Canvas API\n\u27e86\u27e9 https://docs.rs/femtovg/latest/femtovg/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/femtovg/latest/femtovg/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/femtovg/latest/femtovg/renderer/index.html: mod femtovg::renderer - renderer\n\u27e89\u27e9 https://docs.rs/femtovg/latest/femtovg/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html: struct femtovg::Atlas - Atlas\n\u27e811\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html: struct femtovg::Canvas - Canvas\n\u27e812\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Color.html: struct femtovg::Color - Color\n\u27e813\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html: struct femtovg::CompositeOperationState - CompositeOperationState\n\u27e814\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html: struct femtovg::DrawCommand - DrawCommand\n\u27e815\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontId.html: struct femtovg::FontId - FontId\n\u27e816\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html: struct femtovg::FontMetrics - FontMetrics\n\u27e817\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html: struct femtovg::GlyphDrawCommands - GlyphDrawCommands\n\u27e818\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html: struct femtovg::ImageFlags - ImageFlags\n\u27e819\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html: struct femtovg::ImageId - ImageId\n\u27e820\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html: struct femtovg::ImageInfo - ImageInfo\n\u27e821\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Paint.html: struct femtovg::Paint - Paint\n\u27e822\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Path.html: struct femtovg::Path - Path\n\u27e823\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html: struct femtovg::PathIter - PathIter\n\u27e824\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Quad.html: struct femtovg::Quad - Quad\n\u27e825\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html: struct femtovg::TextContext - TextContext\n\u27e826\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html: struct femtovg::TextMetrics - TextMetrics\n\u27e827\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html: struct femtovg::Transform2D - Transform2D\n\u27e828\u27e9 https://docs.rs/femtovg/latest/femtovg/#enums: \u00a7\n\u27e829\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Align.html: enum femtovg::Align - Align\n\u27e830\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html: enum femtovg::Baseline - Baseline\n\u27e831\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html: enum femtovg::BlendFactor - BlendFactor\n\u27e832\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html: enum femtovg::CompositeOperation - CompositeOperation\n\u27e833\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html: enum femtovg::ErrorKind - ErrorKind\n\u27e834\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html: enum femtovg::FillRule - FillRule\n\u27e835\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html: enum femtovg::ImageFilter - ImageFilter\n\u27e836\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html: enum femtovg::ImageSource - ImageSource\n\u27e837\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html: enum femtovg::LineCap - LineCap\n\u27e838\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html: enum femtovg::LineJoin - LineJoin\n\u27e839\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html: enum femtovg::PixelFormat - PixelFormat\n\u27e840\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html: enum femtovg::RenderMode - RenderMode\n\u27e841\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html: enum femtovg::Solidity - Solidity\n\u27e842\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Verb.html: enum femtovg::Verb - Verb\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6885,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119810.4556377"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/femtovg",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [43 releases](https://lib.rs/crates/femtovg/versions) (13 breaking)\n0.14.1 |  Jun 14, 2025   \n---|---  \n0.14.0 |  Mar 24, 2025   \n0.13.0 |  Jan 29, 2025   \n0.11.3 |  Dec 26, 2024   \n0.1.0 |  Sep 28, 2020   \n#**19** in [Graphics APIs](https://lib.rs/rendering/graphics-api \"Crates that provide direct access to the hardware's or the operating system's rendering capabilities.\")\nDownload history 9559/week @ 2025-03-09 10240/week @ 2025-03-16 9422/week @ 2025-03-23 7612/week @ 2025-03-30 10578/week @ 2025-04-06 9084/week @ 2025-04-13 9616/week @ 2025-04-20 11621/week @ 2025-04-27 10611/week @ 2025-05-04 8724/week @ 2025-05-11 8590/week @ 2025-05-18 9071/week @ 2025-05-25 8076/week @ 2025-06-01 8366/week @ 2025-06-08 10223/week @ 2025-06-15 10753/week @ 2025-06-22\n**38,354** downloads per month Used in [**34** crates (16 directly)](https://lib.rs/crates/femtovg/rev)\n**MIT/Apache**\n395KB  9K  SLoC\n[![Crates.io](https://img.shields.io/crates/v/femtovg?color=4d76ae)](https://crates.io/crates/femtovg) [![API](https://img.gs/czjpqfbdkz/full/https://docs.rs/femtovg/badge.svg)](https://docs.rs/femtovg) [![dependency status](https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/femtovg/femtovg/status.svg)](https://deps.rs/repo/github/femtovg/femtovg) [![rust: 1.70](https://img.shields.io/badge/MSRV-1.70-success.svg)](https://lib.rs/crates/femtovg#readme-msrv) [![Discord](https://img.shields.io/discord/691716054560407592)](https://discord.gg/V69VdVu)\n## femtovg\nGPU Antialiased 2D vector drawing library written in Rust.\n  * [Cargo crate](https://crates.io/crates/femtovg)\n  * [Book](https://femtovg.github.io)\n  * [Join the femtovg Discord channel](https://discord.gg/V69VdVu)\n\n\nPorted from <https://github.com/memononen/nanovg>\nMost of the implementation is the same as the original C code with some bug fixes, some features added and several parts have been made more Rust-y. Rendering is done via one OpenGl (ES) 3.0+ backend.\n## Screenshots\n### Demo\n![demo](https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/demo.png) Run with ````cargo``` run`` --`example` demo```\n### Breakout\n![breakout](https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/breakout.png) Run with ````cargo``` run`` --`example` breakout```\n### SVG\n![svg](https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/svg.png) Run with ````cargo``` run`` --`example` svg```\n### Text\n![text](https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/text.png) Run with ````cargo``` run`` --`example` text```\n## Features\n  * Anti-aliasing\n  * B\u00e9zier paths filling and stroking\n  * Solid color and image pattern fills and strokes\n  * Gradients - box, linear and radial\n  * Stroke width and miterlimit\n  * Stroke caps: butt, round and square\n  * Stroke joins: miter, round and bevel\n  * Fill rules - EvenOdd/NonZero\n  * Rectangle scissoring\n  * Composition modes (SourceOver, SourceIn, SourceOut, Atop, etc..)\n  * Global alpha\n  * Text filling and stroking\n  * Text shaping\n  * Text alignment: (left center right), (top, middle, alphabetic, bottom)\n  * Nearest font matching\n  * Path hit testing\n  * OpenGl ES2 backend\n  * WGPU backend\n  * Color fonts\n\n\n## Not supported\n  * Stroke dashing\n  * Path scissoring\n  * Custom shaders\n  * 3D transforms\n\n\n## Ecosystem\nFemtoVG is used by these projects:\n  * pn-editor <https://gitlab.com/porky11/pn-editor>: view, edit, and simulate petri nets\n  * Slint <https://slint.dev>: A declarative GUI toolkit to build native user interfaces for embedded, desktop, and mobile application\n  * inlottie <https://github.com/mhfan/inlottie>: lib/tool in Rust for Lottie (Bodymovin) Animation\n  * Mapvas <https://github.com/UdHo/mapvas>: A map canvas showing OSM tiles with drawing functionality\n\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/femtovg/femtovg/blob/658accc4761d1bd812afa6b441b53ede69dc3843/docs/LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/femtovg/femtovg/blob/658accc4761d1bd812afa6b441b53ede69dc3843/docs/LICENSE-MIT) or <http://opensource.org/licenses/MIT>) at your option.\n\n\nFonts used in examples:\n  * Roboto licensed under [Apache license](http://www.apache.org/licenses/LICENSE-2.0)\n  * Entypo licensed under CC BY-SA 4.0.\n  * Amiri licensed under [SIL Open Font License, Version 1.1](http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL)\n\n\n#### Dependencies\n~7\u201344MB  ~637K SLoC\n  * [bitflags](https://lib.rs/crates/bitflags \"new\") 2.6\n  * [bytemuck](https://lib.rs/crates/bytemuck \"1.16\")[+derive](https://lib.rs/crates/bytemuck/features#feature-derive)\n  * [fnv](https://lib.rs/crates/fnv \"1.0.7\")\n  * [glow](https://lib.rs/crates/glow \"new\") 0.16\n  * [image-loading](https://lib.rs/crates/femtovg/features#feature-image-loading \"default feature\") [image](https://lib.rs/crates/image \"new\") 0.25\n  * [imgref](https://lib.rs/crates/imgref \"1.11.0\")\n  * [log](https://lib.rs/crates/log \"0.4\")\n  * [lru](https://lib.rs/crates/lru \"outdated\") 0.12.5\n  * [rgb](https://lib.rs/crates/rgb \"0.8.50\")\n  * [rustybuzz](https://lib.rs/crates/rustybuzz \"new\") 0.20\n  * [slotmap](https://lib.rs/crates/slotmap \"1.0.7\")\n  * [unicode-bidi](https://lib.rs/crates/unicode-bidi \"0.3.17\")\n  * [unicode-segmentation](https://lib.rs/crates/unicode-segmentation \"1.12.0\")\n  * [ optional ](https://lib.rs/crates/femtovg/features#feature-glutin \"glutin is optional feature\") [glutin](https://lib.rs/crates/glutin \"obsolete\") 0.31 not wasm32\n  * [ optional ](https://lib.rs/crates/femtovg/features#feature-serde \"serde is optional feature\") [serde](https://lib.rs/crates/serde \"1.0\")[+derive](https://lib.rs/crates/serde/features#feature-derive)[+rc](https://lib.rs/crates/serde/features#feature-rc)\n  * [wasm-bindgen](https://lib.rs/crates/wasm-bindgen \"0.2\") wasm32\n  * [web-sys](https://lib.rs/crates/web-sys \"renamed web_sys, 0.3\")[+WebGlContextAtt\u2026](https://lib.rs/crates/web-sys/features#feature-WebGlContextAttributes)[+HtmlImageElement](https://lib.rs/crates/web-sys/features#feature-HtmlImageElement)[+WebGl2Rendering\u2026](https://lib.rs/crates/web-sys/features#feature-WebGl2RenderingContext) wasm32\n  * [ optional ](https://lib.rs/crates/femtovg/features#feature-wgpu \"wgpu is optional feature\") [wgpu](https://lib.rs/crates/wgpu \"outdated\") 24.0[+wgsl](https://lib.rs/crates/wgpu/features#feature-wgsl)\n\n\n  * dev  [cosmic-text](https://lib.rs/crates/cosmic-text \"outdated\") 0.12.1\n  * dev  [euclid](https://lib.rs/crates/euclid \"0.22.3\")\n  * dev  [glutin-winit](https://lib.rs/crates/glutin-winit \"obsolete\") 0.4 not wasm32\n  * dev  [instant](https://lib.rs/crates/instant \"deprecated\") 0.1[+now](https://lib.rs/crates/instant/features#feature-now)\n  * dev  [lazy_static](https://lib.rs/crates/lazy_static \"1.4.0\")\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8\n  * dev  [raw-window-handle](https://lib.rs/crates/raw-window-handle \"obsolete\") 0.5 not wasm32\n  * dev  [resource](https://lib.rs/crates/resource \"0.5.0\")\n  * dev  [spin_on](https://lib.rs/crates/spin_on \"0.1\")\n  * dev  [svg](https://lib.rs/crates/svg \"obsolete\") 0.14\n  * dev  [swash](https://lib.rs/crates/swash \"obsolete\") =0.1.17\n  * dev  [usvg](https://lib.rs/crates/usvg \"obsolete\") 0.33\n  * dev  [winit](https://lib.rs/crates/winit \"obsolete\") 0.29.1\n  * dev  [console_error_panic_hook](https://lib.rs/crates/console_error_panic_hook \"0.1.5\") wasm32\n  * dev  [getrandom](https://lib.rs/crates/getrandom \"outdated\") 0.2.2[+js](https://lib.rs/crates/getrandom/features#feature-js) wasm32\n  * dev  [wasm-bindgen-futures](https://lib.rs/crates/wasm-bindgen-futures \"0.4.45\") wasm32\n\n\n#### [Other feature](https://lib.rs/crates/femtovg/features)\n  * [debug_inspector](https://lib.rs/crates/femtovg/features#feature-debug_inspector)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  43 releases\u27e81\u27e9 (13 breaking)\n0.14.1 |  Jun 14, 2025   \n---|---  \n0.14.0 |  Mar 24, 2025   \n0.13.0 |  Jan 29, 2025   \n0.11.3 |  Dec 26, 2024   \n0.1.0 |  Sep 28, 2020   \n#**19** in Graphics APIs\u27e82\u27e9\nDownload history 9559/week @ 2025-03-09 10240/week @ 2025-03-16 9422/week @ 2025-03-23 7612/week @ 2025-03-30 10578/week @ 2025-04-06 9084/week @ 2025-04-13 9616/week @ 2025-04-20 11621/week @ 2025-04-27 10611/week @ 2025-05-04 8724/week @ 2025-05-11 8590/week @ 2025-05-18 9071/week @ 2025-05-25 8076/week @ 2025-06-01 8366/week @ 2025-06-08 10223/week @ 2025-06-15 10753/week @ 2025-06-22\n**38,354** downloads per month Used in **34** crates (16 directly)\u27e83\u27e9\n**MIT/Apache**\n395KB  9K  SLoC\n![Crates.io\u27e84\u27e9](https://crates.io/crates/femtovg) ![API\u27e85\u27e9](https://docs.rs/femtovg) ![dependency status\u27e86\u27e9](https://deps.rs/repo/github/femtovg/femtovg) ![rust: 1.70\u27e87\u27e9](https://lib.rs/crates/femtovg#readme-msrv) ![Discord\u27e88\u27e9](https://discord.gg/V69VdVu)\n## femtovg\nGPU Antialiased 2D vector drawing library written in Rust.\n  * Cargo crate\u27e89\u27e9\n  * Book\u27e810\u27e9\n  * Join the femtovg Discord channel\u27e811\u27e9\n\n\nPorted from <https://github.com/memononen/nanovg>\nMost of the implementation is the same as the original C code with some bug fixes, some features added and several parts have been made more Rust-y. Rendering is done via one OpenGl (ES) 3.0+ backend.\n## Screenshots\n### Demo\n![demo\u27e812\u27e9] Run with ````cargo``` run`` --`example` demo```\n### Breakout\n![breakout\u27e813\u27e9] Run with ````cargo``` run`` --`example` breakout```\n### SVG\n![svg\u27e814\u27e9] Run with ````cargo``` run`` --`example` svg```\n### Text\n![text\u27e815\u27e9] Run with ````cargo``` run`` --`example` text```\n## Features\n  * Anti-aliasing\n  * B\u00e9zier paths filling and stroking\n  * Solid color and image pattern fills and strokes\n  * Gradients - box, linear and radial\n  * Stroke width and miterlimit\n  * Stroke caps: butt, round and square\n  * Stroke joins: miter, round and bevel\n  * Fill rules - EvenOdd/NonZero\n  * Rectangle scissoring\n  * Composition modes (SourceOver, SourceIn, SourceOut, Atop, etc..)\n  * Global alpha\n  * Text filling and stroking\n  * Text shaping\n  * Text alignment: (left center right), (top, middle, alphabetic, bottom)\n  * Nearest font matching\n  * Path hit testing\n  * OpenGl ES2 backend\n  * WGPU backend\n  * Color fonts\n\n\n## Not supported\n  * Stroke dashing\n  * Path scissoring\n  * Custom shaders\n  * 3D transforms\n\n\n## Ecosystem\nFemtoVG is used by these projects:\n  * pn-editor <https://gitlab.com/porky11/pn-editor>: view, edit, and simulate petri nets\n  * Slint <https://slint.dev>: A declarative GUI toolkit to build native user interfaces for embedded, desktop, and mobile application\n  * inlottie <https://github.com/mhfan/inlottie>: lib/tool in Rust for Lottie (Bodymovin) Animation\n  * Mapvas <https://github.com/UdHo/mapvas>: A map canvas showing OSM tiles with drawing functionality\n\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e816\u27e9 or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e817\u27e9 or <http://opensource.org/licenses/MIT>) at your option.\n\n\nFonts used in examples:\n  * Roboto licensed under Apache license\u27e818\u27e9\n  * Entypo licensed under CC BY-SA 4.0.\n  * Amiri licensed under SIL Open Font License, Version 1.1\u27e819\u27e9\n\n\n#### Dependencies\n~7\u201344MB  ~637K SLoC\n  * bitflags\u27e820\u27e9 2.6\n  * bytemuck\u27e821\u27e9+derive\u27e822\u27e9\n  * fnv\u27e823\u27e9\n  * glow\u27e824\u27e9 0.16\n  * image-loading\u27e825\u27e9 image\u27e826\u27e9 0.25\n  * imgref\u27e827\u27e9\n  * log\u27e828\u27e9\n  * lru\u27e829\u27e9 0.12.5\n  * rgb\u27e830\u27e9\n  * rustybuzz\u27e831\u27e9 0.20\n  * slotmap\u27e832\u27e9\n  * unicode-bidi\u27e833\u27e9\n  * unicode-segmentation\u27e834\u27e9\n  *  optional \u27e835\u27e9 glutin\u27e836\u27e9 0.31 not wasm32\n  *  optional \u27e837\u27e9 serde\u27e838\u27e9+derive\u27e839\u27e9+rc\u27e840\u27e9\n  * wasm-bindgen\u27e841\u27e9 wasm32\n  * web-sys\u27e842\u27e9+WebGlContextAtt\u2026\u27e843\u27e9+HtmlImageElement\u27e844\u27e9+WebGl2Rendering\u2026\u27e845\u27e9 wasm32\n  *  optional \u27e846\u27e9 wgpu\u27e847\u27e9 24.0+wgsl\u27e848\u27e9\n\n\n  * dev  cosmic-text\u27e849\u27e9 0.12.1\n  * dev  euclid\u27e850\u27e9\n  * dev  glutin-winit\u27e851\u27e9 0.4 not wasm32\n  * dev  instant\u27e852\u27e9 0.1+now\u27e853\u27e9\n  * dev  lazy_static\u27e854\u27e9\n  * dev  rand\u27e855\u27e9 0.8\n  * dev  raw-window-handle\u27e856\u27e9 0.5 not wasm32\n  * dev  resource\u27e857\u27e9\n  * dev  spin_on\u27e858\u27e9\n  * dev  svg\u27e859\u27e9 0.14\n  * dev  swash\u27e860\u27e9 =0.1.17\n  * dev  usvg\u27e861\u27e9 0.33\n  * dev  winit\u27e862\u27e9 0.29.1\n  * dev  console_error_panic_hook\u27e863\u27e9 wasm32\n  * dev  getrandom\u27e864\u27e9 0.2.2+js\u27e865\u27e9 wasm32\n  * dev  wasm-bindgen-futures\u27e866\u27e9 wasm32\n\n\n#### Other feature\u27e867\u27e9\n  * debug_inspector\u27e868\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/femtovg/versions: 43 releases\n\u27e82\u27e9 https://lib.rs/rendering/graphics-api: Crates that provide direct access to the hardware's or the operating system's rendering capabilities. - Graphics APIs\n\u27e83\u27e9 https://lib.rs/crates/femtovg/rev: **34** crates (16 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/femtovg?color=4d76ae: ![Crates.io\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/femtovg/badge.svg: ![API\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://deps.rs/repo/github/femtovg/femtovg/status.svg: ![dependency status\n\u27e87\u27e9 https://img.shields.io/badge/MSRV-1.70-success.svg: ![rust: 1.70\n\u27e88\u27e9 https://img.shields.io/discord/691716054560407592: ![Discord\n\u27e89\u27e9 https://crates.io/crates/femtovg: Cargo crate\n\u27e810\u27e9 https://femtovg.github.io: Book\n\u27e811\u27e9 https://discord.gg/V69VdVu: Join the femtovg Discord channel\n\u27e812\u27e9 https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/demo.png: demo\n\u27e813\u27e9 https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/breakout.png: breakout\n\u27e814\u27e9 https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/svg.png: svg\n\u27e815\u27e9 https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/femtovg/femtovg/658accc4761d1bd812afa6b441b53ede69dc3843/assets/text.png: text\n\u27e816\u27e9 https://github.com/femtovg/femtovg/blob/658accc4761d1bd812afa6b441b53ede69dc3843/docs/LICENSE-APACHE: LICENSE-APACHE\n\u27e817\u27e9 https://github.com/femtovg/femtovg/blob/658accc4761d1bd812afa6b441b53ede69dc3843/docs/LICENSE-MIT: LICENSE-MIT\n\u27e818\u27e9 http://www.apache.org/licenses/LICENSE-2.0: Apache license\n\u27e819\u27e9 http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL: SIL Open Font License, Version 1.1\n\u27e820\u27e9 https://lib.rs/crates/bitflags: new - bitflags\n\u27e821\u27e9 https://lib.rs/crates/bytemuck: 1.16 - bytemuck\n\u27e822\u27e9 https://lib.rs/crates/bytemuck/features#feature-derive: +derive\n\u27e823\u27e9 https://lib.rs/crates/fnv: 1.0.7 - fnv\n\u27e824\u27e9 https://lib.rs/crates/glow: new - glow\n\u27e825\u27e9 https://lib.rs/crates/femtovg/features#feature-image-loading: default feature - image-loading\n\u27e826\u27e9 https://lib.rs/crates/image: new - image\n\u27e827\u27e9 https://lib.rs/crates/imgref: 1.11.0 - imgref\n\u27e828\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e829\u27e9 https://lib.rs/crates/lru: outdated - lru\n\u27e830\u27e9 https://lib.rs/crates/rgb: 0.8.50 - rgb\n\u27e831\u27e9 https://lib.rs/crates/rustybuzz: new - rustybuzz\n\u27e832\u27e9 https://lib.rs/crates/slotmap: 1.0.7 - slotmap\n\u27e833\u27e9 https://lib.rs/crates/unicode-bidi: 0.3.17 - unicode-bidi\n\u27e834\u27e9 https://lib.rs/crates/unicode-segmentation: 1.12.0 - unicode-segmentation\n\u27e835\u27e9 https://lib.rs/crates/femtovg/features#feature-glutin: glutin is optional feature -  optional \n\u27e836\u27e9 https://lib.rs/crates/glutin: obsolete - glutin\n\u27e837\u27e9 https://lib.rs/crates/femtovg/features#feature-serde: serde is optional feature -  optional \n\u27e838\u27e9 https://lib.rs/crates/serde: 1.0 - serde\n\u27e839\u27e9 https://lib.rs/crates/serde/features#feature-derive: +derive\n\u27e840\u27e9 https://lib.rs/crates/serde/features#feature-rc: +rc\n\u27e841\u27e9 https://lib.rs/crates/wasm-bindgen: 0.2 - wasm-bindgen\n\u27e842\u27e9 https://lib.rs/crates/web-sys: renamed web_sys, 0.3 - web-sys\n\u27e843\u27e9 https://lib.rs/crates/web-sys/features#feature-WebGlContextAttributes: +WebGlContextAtt\u2026\n\u27e844\u27e9 https://lib.rs/crates/web-sys/features#feature-HtmlImageElement: +HtmlImageElement\n\u27e845\u27e9 https://lib.rs/crates/web-sys/features#feature-WebGl2RenderingContext: +WebGl2Rendering\u2026\n\u27e846\u27e9 https://lib.rs/crates/femtovg/features#feature-wgpu: wgpu is optional feature -  optional \n\u27e847\u27e9 https://lib.rs/crates/wgpu: outdated - wgpu\n\u27e848\u27e9 https://lib.rs/crates/wgpu/features#feature-wgsl: +wgsl\n\u27e849\u27e9 https://lib.rs/crates/cosmic-text: outdated - cosmic-text\n\u27e850\u27e9 https://lib.rs/crates/euclid: 0.22.3 - euclid\n\u27e851\u27e9 https://lib.rs/crates/glutin-winit: obsolete - glutin-winit\n\u27e852\u27e9 https://lib.rs/crates/instant: deprecated - instant\n\u27e853\u27e9 https://lib.rs/crates/instant/features#feature-now: +now\n\u27e854\u27e9 https://lib.rs/crates/lazy_static: 1.4.0 - lazy_static\n\u27e855\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e856\u27e9 https://lib.rs/crates/raw-window-handle: obsolete - raw-window-handle\n\u27e857\u27e9 https://lib.rs/crates/resource: 0.5.0 - resource\n\u27e858\u27e9 https://lib.rs/crates/spin_on: 0.1 - spin_on\n\u27e859\u27e9 https://lib.rs/crates/svg: obsolete - svg\n\u27e860\u27e9 https://lib.rs/crates/swash: obsolete - swash\n\u27e861\u27e9 https://lib.rs/crates/usvg: obsolete - usvg\n\u27e862\u27e9 https://lib.rs/crates/winit: obsolete - winit\n\u27e863\u27e9 https://lib.rs/crates/console_error_panic_hook: 0.1.5 - console_error_panic_hook\n\u27e864\u27e9 https://lib.rs/crates/getrandom: outdated - getrandom\n\u27e865\u27e9 https://lib.rs/crates/getrandom/features#feature-js: +js\n\u27e866\u27e9 https://lib.rs/crates/wasm-bindgen-futures: 0.4.45 - wasm-bindgen-futures\n\u27e867\u27e9 https://lib.rs/crates/femtovg/features: Other feature\n\u27e868\u27e9 https://lib.rs/crates/femtovg/features#feature-debug_inspector: debug_inspector\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8113,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "119811.1072413"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi-mirroring@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-mirroring-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi_mirroring",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-mirroring-0.4.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_bidi_mirroring-6d01c15b07362ef9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `core`\n  |\n  = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `core`",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `core`\n  |\n  = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `core`",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0462]: found staticlib `std` instead of rlib or dylib\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:71:1\n   |\n71 | extern crate std;\n   | ^^^^^^^^^^^^^^^^^\n   |\n   = note: the following crate versions were found:\n           crate `std`: C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\std-c85e9beb7923f636.dll.lib\n   = help: please recompile that crate using --crate-type lib\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "the following crate versions were found:\ncrate `std`: C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\std-c85e9beb7923f636.dll.lib",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "please recompile that crate using --crate-type lib",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0462",
                  "explanation": "Found `staticlib` `..` instead of `rlib` or `dylib`.\n\nConsider the following two files:\n\n`a.rs`\n```ignore (cannot-link-with-other-tests)\n#![crate_type = \"staticlib\"]\n\nfn foo() {}\n```\n\n`main.rs`\n```ignore (cannot-link-with-other-tests)\nextern crate a;\n\nfn main() {\n    a::foo();\n}\n```\n\nCrate `a` is compiled as a `staticlib`. A `staticlib` is a system-dependant\nlibrary only intended for linking with non-Rust applications (C programs). Note\nthat `staticlib`s include all upstream dependencies (`core`, `std`, other user\ndependencies, etc) which makes them significantly larger than `dylib`s:\nprefer `staticlib` for linking with C programs. Learn more about different\n`crate_type`s in [this section of the Reference](../reference/linkage.html).\n\nThis error can be fixed by:\n * Using [Cargo](../cargo/index.html), the Rust package manager, automatically\n   fixing this issue.\n * Recompiling the crate as a `rlib` or `dylib`; formats suitable for Rust\n   linking.\n"
                },
                "level": "error",
                "message": "found staticlib `std` instead of rlib or dylib",
                "spans": [
                  {
                    "byte_end": 2377,
                    "byte_start": 2360,
                    "column_end": 18,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "extern crate std;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `alloc`\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:73:1\n   |\n73 | extern crate alloc;\n   | ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\liballoc-95e341a3bbb0a38e.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\liballoc-95e341a3bbb0a38e.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `alloc`",
                "spans": [
                  {
                    "byte_end": 2410,
                    "byte_start": 2391,
                    "column_end": 20,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "extern crate alloc;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ccc@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ccc-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ccc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ccc-0.4.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "failed to create encoded metadata from file: The paging file is too small for this operation to complete. (os error 1455)",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `core`\n  |\n  = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-50d17f87cee49b53.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `core`",
                "spans": [
                  {
                    "byte_end": 0,
                    "byte_start": 0,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1,
                    "line_start": 1,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": []
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:243:3\n    |\n243 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 6151,
                    "byte_start": 6145,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 243,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:246:3\n    |\n246 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 6208,
                    "byte_start": 6202,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 246,
                    "line_start": 246,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:305:17\n    |\n305 |                 write!(f, \"unrecognized named flag\")?;\n    |                 ^^^^^\n    |\nhelp: consider importing one of these macros\n    |\n33  + use crate::__private::core::write;\n    |\n33  + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 7682,
                    "byte_start": 7677,
                    "column_end": 22,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 305,
                    "line_start": 305,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unrecognized named flag\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:315:17\n    |\n315 |                 write!(f, \"invalid hex flag\")?;\n    |                 ^^^^^\n    |\nhelp: consider importing one of these macros\n    |\n33  + use crate::__private::core::write;\n    |\n33  + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 7964,
                    "byte_start": 7959,
                    "column_end": 22,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 315,
                    "line_start": 315,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 17,
                        "text": "                write!(f, \"invalid hex flag\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:323:17\n    |\n323 |                 write!(f, \"encountered empty flag\")?;\n    |                 ^^^^^\n    |\nhelp: consider importing one of these macros\n    |\n33  + use crate::__private::core::write;\n    |\n33  + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 8193,
                    "byte_start": 8188,
                    "column_end": 22,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 323,
                    "line_start": 323,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 17,
                        "text": "                write!(f, \"encountered empty flag\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:14:3\n   |\n14 | #[derive(Debug)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 204,
                    "byte_start": 198,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 14,
                    "line_start": 14,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:390:21\n    |\n390 |                       write!(writer, \"{:x}\", self)\n    |                       ^^^^^\n...\n406 | / impl_bits! {\n407 | |     u8, i8,\n408 | |     u16, i16,\n409 | |     u32, i32,\n...   |\n412 | |     usize, isize,\n413 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_bits` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing one of these macros\n    |\n1   + use crate::__private::core::write;\n    |\n1   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10149,
                    "byte_start": 10144,
                    "column_end": 26,
                    "column_start": 21,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 9223,
                        "byte_start": 9201,
                        "column_end": 23,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bits {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bits!",
                      "span": {
                        "byte_end": 10602,
                        "byte_start": 10500,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 413,
                        "line_start": 406,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "impl_bits! {"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "    u8, i8,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u16, i16,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u32, i32,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u64, i64,"
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "    u128, i128,"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "    usize, isize,"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 390,
                    "line_start": 390,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 21,
                        "text": "                    write!(writer, \"{:x}\", self)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:25:3\n   |\n25 | #[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 888,
                    "byte_start": 882,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `unreachable` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2123:18\n     |\n2123 |             _ => unreachable!(),\n     |                  ^^^^^^^^^^^\n     |\nhelp: consider importing this macro\n     |\n19   + use core::unreachable;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::unreachable;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `unreachable` in this scope",
                "spans": [
                  {
                    "byte_end": 88795,
                    "byte_start": 88784,
                    "column_end": 29,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 2123,
                    "line_start": 2123,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 18,
                        "text": "            _ => unreachable!(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:396:21\n    |\n396 |                       write!(writer, \"{:x}\", self)\n    |                       ^^^^^\n...\n406 | / impl_bits! {\n407 | |     u8, i8,\n408 | |     u16, i16,\n409 | |     u32, i32,\n...   |\n412 | |     usize, isize,\n413 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_bits` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing one of these macros\n    |\n1   + use crate::__private::core::write;\n    |\n1   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10349,
                    "byte_start": 10344,
                    "column_end": 26,
                    "column_start": 21,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 9223,
                        "byte_start": 9201,
                        "column_end": 23,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bits {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bits!",
                      "span": {
                        "byte_end": 10602,
                        "byte_start": 10500,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 413,
                        "line_start": 406,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "impl_bits! {"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "    u8, i8,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u16, i16,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u32, i32,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u64, i64,"
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "    u128, i128,"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "    usize, isize,"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 396,
                    "line_start": 396,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 21,
                        "text": "                    write!(writer, \"{:x}\", self)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:130:9\n    |\n130 |         write!(f, \"{}\", self.full_name())\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 4397,
                    "byte_start": 4392,
                    "column_end": 14,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 130,
                    "line_start": 130,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 9,
                        "text": "        write!(f, \"{}\", self.full_name())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:134:3\n    |\n134 | #[derive(Clone, Copy, PartialEq, Eq, Hash)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 4443,
                    "byte_start": 4437,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 134,
                    "line_start": 134,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Clone, Copy, PartialEq, Eq, Hash)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1394:3\n     |\n1394 | #[derive(Debug)]\n     |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 51138,
                    "byte_start": 51132,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1394,
                    "line_start": 1394,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:316:9\n    |\n316 |         write!(f, \"ScriptExtension(\")?;\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10145,
                    "byte_start": 10140,
                    "column_end": 14,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 316,
                    "line_start": 316,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 9,
                        "text": "        write!(f, \"ScriptExtension(\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:318:9\n    |\n318 |         write!(f, \")\")\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10222,
                    "byte_start": 10217,
                    "column_end": 14,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 318,
                    "line_start": 318,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 9,
                        "text": "        write!(f, \")\")"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:325:13\n    |\n325 |             write!(f, \"Common\")?;\n    |             ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10387,
                    "byte_start": 10382,
                    "column_end": 18,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 325,
                    "line_start": 325,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 13,
                        "text": "            write!(f, \"Common\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:327:13\n    |\n327 |             write!(f, \"Inherited\")?;\n    |             ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10461,
                    "byte_start": 10456,
                    "column_end": 18,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 327,
                    "line_start": 327,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 13,
                        "text": "            write!(f, \"Inherited\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:329:13\n    |\n329 |             write!(f, \"Unknown\")?;\n    |             ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10534,
                    "byte_start": 10529,
                    "column_end": 18,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 329,
                    "line_start": 329,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 13,
                        "text": "            write!(f, \"Unknown\")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `write` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:334:21\n    |\n334 |                     write!(f, \" + \")?;\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n9   + use core::write;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::write;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `write` in this scope",
                "spans": [
                  {
                    "byte_end": 10696,
                    "byte_start": 10691,
                    "column_end": 26,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 334,
                    "line_start": 334,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 21,
                        "text": "                    write!(f, \" + \")?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1207:3\n     |\n1207 | #[derive(Debug)]\n     |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 44854,
                    "byte_start": 44848,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1207,
                    "line_start": 1207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert_eq` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1161:17\n     |\n1161 |                 assert_eq!(reset_to, None);\n     |                 ^^^^^^^^^\n     |\nhelp: consider importing this macro\n     |\n88   + use std::assert_eq;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 43299,
                    "byte_start": 43290,
                    "column_end": 26,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1161,
                    "line_start": 1161,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 17,
                        "text": "                assert_eq!(reset_to, None);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `vec` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1037:16\n     |\n1037 |         return vec![];\n     |                ^^^\n     |\nhelp: consider importing one of these macros\n     |\n88   + use std::vec;\n     |\n88   + use alloc::vec;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      },
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use alloc::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `vec` in this scope",
                "spans": [
                  {
                    "byte_end": 39468,
                    "byte_start": 39465,
                    "column_end": 19,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1037,
                    "line_start": 1037,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 16,
                        "text": "        return vec![];"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:785:9\n    |\n785 |         assert!(line.end <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 29964,
                    "byte_start": 29958,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 785,
                    "line_start": 785,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.end <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:784:9\n    |\n784 |         assert!(line.start <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 29914,
                    "byte_start": 29908,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 784,
                    "line_start": 784,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.start <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:692:3\n    |\n692 | #[derive(Debug, PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 26534,
                    "byte_start": 26528,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 692,
                    "line_start": 692,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:548:9\n    |\n548 |         assert!(line.end <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 20542,
                    "byte_start": 20536,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 548,
                    "line_start": 548,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.end <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:547:9\n    |\n547 |         assert!(line.start <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 20492,
                    "byte_start": 20486,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 547,
                    "line_start": 547,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.start <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:453:3\n    |\n453 | #[derive(Debug, PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 16540,
                    "byte_start": 16534,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 453,
                    "line_start": 453,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert_eq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:434:5\n    |\n434 |     debug_assert_eq!(original_classes.len(), text.len());\n    |     ^^^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::debug_assert_eq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::debug_assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 15924,
                    "byte_start": 15909,
                    "column_end": 20,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 434,
                    "line_start": 434,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 5,
                        "text": "    debug_assert_eq!(original_classes.len(), text.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert_eq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:432:9\n    |\n432 |         debug_assert_eq!(paragraphs.len(), flags.len());\n    |         ^^^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::debug_assert_eq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::debug_assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 15865,
                    "byte_start": 15850,
                    "column_end": 24,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 432,
                    "line_start": 432,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 9,
                        "text": "        debug_assert_eq!(paragraphs.len(), flags.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:318:5\n    |\n318 |     debug_assert!(\n    |     ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n88  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 11587,
                    "byte_start": 11575,
                    "column_end": 17,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 318,
                    "line_start": 318,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 5,
                        "text": "    debug_assert!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:255:3\n    |\n255 | #[derive(PartialEq, Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 8844,
                    "byte_start": 8838,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 255,
                    "line_start": 255,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:244:3\n    |\n244 | #[derive(PartialEq, Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 8371,
                    "byte_start": 8365,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 244,
                    "line_start": 244,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:195:3\n    |\n195 | #[derive(PartialEq, Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 6103,
                    "byte_start": 6097,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 195,
                    "line_start": 195,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:172:3\n    |\n172 | #[derive(Clone, Debug, PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 5471,
                    "byte_start": 5465,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Clone, Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:164:3\n    |\n164 | #[derive(PartialEq, Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 5344,
                    "byte_start": 5338,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:309:5\n    |\n309 |     matches!(class, RLE | LRE | RLO | LRO | PDF | BN)\n    |     ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 11119,
                    "byte_start": 11112,
                    "column_end": 12,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 309,
                    "line_start": 309,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 5,
                        "text": "    matches!(class, RLE | LRE | RLO | LRO | PDF | BN)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:268:9\n    |\n268 |         debug_assert!(current.start <= pos && pos <= current.end);\n    |         ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 9913,
                    "byte_start": 9901,
                    "column_end": 21,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 268,
                    "line_start": 268,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        debug_assert!(current.start <= pos && pos <= current.end);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:249:9\n    |\n249 |         debug_assert!(runs[0].start <= pos && pos <= runs[0].end);\n    |         ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 9165,
                    "byte_start": 9153,
                    "column_end": 21,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 249,
                    "line_start": 249,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        debug_assert!(runs[0].start <= pos && pos <= runs[0].end);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:216:29\n    |\n216 |         let succ_level = if matches!(last_non_removed, RLI | LRI | FSI) {\n    |                             ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 8077,
                    "byte_start": 8070,
                    "column_end": 36,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 216,
                    "line_start": 216,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 29,
                        "text": "        let succ_level = if matches!(last_non_removed, RLI | LRI | FSI) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:163:9\n    |\n163 |         assert!(!sequence.is_empty());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 6045,
                    "byte_start": 6039,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 163,
                    "line_start": 163,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(!sequence.is_empty());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:149:12\n    |\n149 |         if matches!(end_class, RLI | LRI | FSI) {\n    |            ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 5526,
                    "byte_start": 5519,
                    "column_end": 19,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 149,
                    "line_start": 149,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 12,
                        "text": "        if matches!(end_class, RLI | LRI | FSI) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:125:9\n    |\n125 |         assert!(!stack.is_empty());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 4674,
                    "byte_start": 4668,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 125,
                    "line_start": 125,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(!stack.is_empty());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:124:9\n    |\n124 |         assert!(!run.is_empty());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n14  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 4640,
                    "byte_start": 4634,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(!run.is_empty());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `vec` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:121:21\n    |\n121 |     let mut stack = vec![vec![]];\n    |                     ^^^\n    |\nhelp: consider importing one of these macros\n    |\n14  + use std::vec;\n    |\n14  + use alloc::vec;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      },
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use alloc::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `vec` in this scope",
                "spans": [
                  {
                    "byte_end": 4592,
                    "byte_start": 4589,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "    let mut stack = vec![vec![]];"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `vec` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:104:23\n    |\n104 |                 runs: vec![run],\n    |                       ^^^\n    |\nhelp: consider importing one of these macros\n    |\n14  + use std::vec;\n    |\n14  + use alloc::vec;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      },
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use alloc::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `vec` in this scope",
                "spans": [
                  {
                    "byte_end": 3944,
                    "byte_start": 3941,
                    "column_end": 26,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 104,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 23,
                        "text": "                runs: vec![run],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:34:3\n   |\n34 | #[derive(Debug, PartialEq)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 1111,
                    "byte_start": 1105,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:605:5\n    |\n605 |     matches!(class, B | S | WS | ON | FSI | LRI | RLI | PDI)\n    |     ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 26556,
                    "byte_start": 26549,
                    "column_end": 12,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 605,
                    "line_start": 605,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 5,
                        "text": "    matches!(class, B | S | WS | ON | FSI | LRI | RLI | PDI)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert_eq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:584:5\n    |\n584 |     assert_eq!(processing_classes.len(), levels.len());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::assert_eq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 25773,
                    "byte_start": 25764,
                    "column_end": 14,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 584,
                    "line_start": 584,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 5,
                        "text": "    assert_eq!(processing_classes.len(), levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:367:16\n    |\n367 |             if matches!(previous_strong, BidiClass::EN | BidiClass::AN) {\n    |                ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 16136,
                    "byte_start": 16129,
                    "column_end": 23,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 367,
                    "line_start": 367,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 16,
                        "text": "            if matches!(previous_strong, BidiClass::EN | BidiClass::AN) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:359:21\n    |\n359 |                     matches!(\n    |                     ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 15828,
                    "byte_start": 15821,
                    "column_end": 28,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 359,
                    "line_start": 359,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 21,
                        "text": "                    matches!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:330:23\n    |\n330 |             } else if matches!(class, BidiClass::EN | BidiClass::AN) {\n    |                       ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 14431,
                    "byte_start": 14424,
                    "column_end": 30,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 330,
                    "line_start": 330,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 23,
                        "text": "            } else if matches!(class, BidiClass::EN | BidiClass::AN) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:319:17\n    |\n319 |                 debug_assert!(\n    |                 ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 14038,
                    "byte_start": 14026,
                    "column_end": 29,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 319,
                    "line_start": 319,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 17,
                        "text": "                debug_assert!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:302:9\n    |\n302 |         debug_assert!(\n    |         ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 13237,
                    "byte_start": 13225,
                    "column_end": 21,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 302,
                    "line_start": 302,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        debug_assert!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:297:9\n    |\n297 |         debug_assert!(\n    |         ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n12  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 13043,
                    "byte_start": 13031,
                    "column_end": 21,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 297,
                    "line_start": 297,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 9,
                        "text": "        debug_assert!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:223:3\n    |\n223 | #[derive(PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 8193,
                    "byte_start": 8187,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 223,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:38:16\n   |\n38 | impl<B: Flags> Iterator for Iter<B> {\n   |                ^^^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these traits\n   |\n5  + use crate::__private::core::iter::Iterator;\n   |\n5  + use core::iter::Iterator;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 862,
                    "byte_start": 854,
                    "column_end": 24,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 38,
                    "line_start": 38,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 16,
                        "text": "impl<B: Flags> Iterator for Iter<B> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:132:28\n    |\n132 |                     while !matches!(\n    |                            ^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n17  + use std::matches;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 4993,
                    "byte_start": 4986,
                    "column_end": 35,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 28,
                        "text": "                    while !matches!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:41:27\n   |\n41 |     fn next(&mut self) -> Option<Self::Item> {\n   |                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these enums\n   |\n5  + use crate::__private::core::option::Option;\n   |\n5  + use core::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these enums",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 929,
                    "byte_start": 923,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:43:13\n   |\n43 |             Some((_, flag)) => Some(flag),\n   |             ^^^^ not found in this scope\n   |\nhelp: consider importing one of these tuple variants\n   |\n5  + use crate::__private::core::option::Option::Some;\n   |\n5  + use core::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 994,
                    "byte_start": 990,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some((_, flag)) => Some(flag),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:43:32\n   |\n43 |             Some((_, flag)) => Some(flag),\n   |                                ^^^^ not found in this scope\n   |\nhelp: consider importing one of these tuple variants\n   |\n5  + use crate::__private::core::option::Option::Some;\n   |\n5  + use core::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 1013,
                    "byte_start": 1009,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            Some((_, flag)) => Some(flag),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:51:21\n   |\n51 |                     Some(B::from_bits_retain(self.inner.remaining.bits()))\n   |                     ^^^^ not found in this scope\n   |\nhelp: consider importing one of these tuple variants\n   |\n5  + use crate::__private::core::option::Option::Some;\n   |\n5  + use core::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 1395,
                    "byte_start": 1391,
                    "column_end": 25,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 51,
                    "line_start": 51,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 21,
                        "text": "                    Some(B::from_bits_retain(self.inner.remaining.bits()))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:107:16\n    |\n107 | impl<B: Flags> Iterator for IterNames<B> {\n    |                ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n5   + use crate::__private::core::iter::Iterator;\n    |\n5   + use core::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 2851,
                    "byte_start": 2843,
                    "column_end": 24,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 107,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 16,
                        "text": "impl<B: Flags> Iterator for IterNames<B> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:110:27\n    |\n110 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these enums\n    |\n5   + use crate::__private::core::option::Option;\n    |\n5   + use core::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these enums",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 2939,
                    "byte_start": 2933,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:73:34\n   |\n73 |                 let is_isolate = matches!(original_classes[i], RLI | LRI | FSI);\n   |                                  ^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n17 + use std::matches;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 2521,
                    "byte_start": 2514,
                    "column_end": 41,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 34,
                        "text": "                let is_isolate = matches!(original_classes[i], RLI | LRI | FSI);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:111:19\n    |\n111 |         while let Some(flag) = self.flags.get(self.idx) {\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n5   + use crate::__private::core::option::Option::Some;\n    |\n5   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 2976,
                    "byte_start": 2972,
                    "column_end": 23,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 111,
                    "line_start": 111,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 19,
                        "text": "        while let Some(flag) = self.flags.get(self.idx) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:114:24\n    |\n114 |                 return None;\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n5   + use crate::__private::core::option::Option::None;\n    |\n5   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these unit variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 3133,
                    "byte_start": 3129,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:139:24\n    |\n139 |                 return Some((flag.name(), B::from_bits_retain(bits)));\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n5   + use crate::__private::core::option::Option::Some;\n    |\n5   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 4093,
                    "byte_start": 4089,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 139,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                return Some((flag.name(), B::from_bits_retain(bits)));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs:143:9\n    |\n143 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n5   + use crate::__private::core::option::Option::None;\n    |\n5   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these unit variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use crate::__private::core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      },
                      {
                        "byte_end": 83,
                        "byte_start": 83,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 5,
                        "line_start": 5,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::{Flag, Flags};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 4174,
                    "byte_start": 4170,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\iter.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 143,
                    "line_start": 143,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:42:66\n   |\n42 | pub fn to_writer<B: Flags>(flags: &B, mut writer: impl Write) -> Result<(), fmt::Error>\n   |                                                                  ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n33 + use crate::__private::core::result::Result;\n   |\n33 + use crate::parser::fmt::Result;\n   |\n33 + use core::fmt::Result;\n   |\n33 + use core::result::Result;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 861,
                    "byte_start": 855,
                    "column_end": 72,
                    "column_start": 66,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 72,
                        "highlight_start": 66,
                        "text": "pub fn to_writer<B: Flags>(flags: &B, mut writer: impl Write) -> Result<(), fmt::Error>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:99:43\n   |\n99 | pub fn from_str<B: Flags>(input: &str) -> Result<B, ParseError>\n   |                                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n33 + use crate::__private::core::result::Result;\n   |\n33 + use crate::parser::fmt::Result;\n   |\n33 + use core::fmt::Result;\n   |\n33 + use core::result::Result;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 2276,
                    "byte_start": 2270,
                    "column_end": 49,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 99,
                    "line_start": 99,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 43,
                        "text": "pub fn from_str<B: Flags>(input: &str) -> Result<B, ParseError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:107:16\n    |\n107 |         return Ok(parsed_flags);\n    |                ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 2476,
                    "byte_start": 2474,
                    "column_end": 18,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 107,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 16,
                        "text": "        return Ok(parsed_flags);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:115:20\n    |\n115 |             return Err(ParseError::empty_flag());\n    |                    ^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Err;\n    |\n33  + use core::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 2679,
                    "byte_start": 2676,
                    "column_end": 23,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 115,
                    "line_start": 115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 20,
                        "text": "            return Err(ParseError::empty_flag());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:120:34\n    |\n120 |         let parsed_flag = if let Some(flag) = flag.strip_prefix(\"0x\") {\n    |                                  ^^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::option::Option::Some;\n    |\n33  + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 2875,
                    "byte_start": 2871,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 120,
                    "line_start": 120,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "        let parsed_flag = if let Some(flag) = flag.strip_prefix(\"0x\") {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:136:5\n    |\n136 |     Ok(parsed_flags)\n    |     ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3382,
                    "byte_start": 3380,
                    "column_end": 7,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 136,
                    "line_start": 136,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 7,
                        "highlight_start": 5,
                        "text": "    Ok(parsed_flags)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:142:71\n    |\n142 | pub fn to_writer_truncate<B: Flags>(flags: &B, writer: impl Write) -> Result<(), fmt::Error>\n    |                                                                       ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n33  + use crate::__private::core::result::Result;\n    |\n33  + use crate::parser::fmt::Result;\n    |\n33  + use core::fmt::Result;\n    |\n33  + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 3539,
                    "byte_start": 3533,
                    "column_end": 77,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 71,
                        "text": "pub fn to_writer_truncate<B: Flags>(flags: &B, writer: impl Write) -> Result<(), fmt::Error>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:155:52\n    |\n155 | pub fn from_str_truncate<B: Flags>(input: &str) -> Result<B, ParseError>\n    |                                                    ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n33  + use crate::__private::core::result::Result;\n    |\n33  + use crate::parser::fmt::Result;\n    |\n33  + use core::fmt::Result;\n    |\n33  + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 3853,
                    "byte_start": 3847,
                    "column_end": 58,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 155,
                    "line_start": 155,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 52,
                        "text": "pub fn from_str_truncate<B: Flags>(input: &str) -> Result<B, ParseError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:159:5\n    |\n159 |     Ok(B::from_bits_truncate(from_str::<B>(input)?.bits()))\n    |     ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3906,
                    "byte_start": 3904,
                    "column_end": 7,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 159,
                    "line_start": 159,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 7,
                        "highlight_start": 5,
                        "text": "    Ok(B::from_bits_truncate(from_str::<B>(input)?.bits()))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:165:73\n    |\n165 | pub fn to_writer_strict<B: Flags>(flags: &B, mut writer: impl Write) -> Result<(), fmt::Error> {\n    |                                                                         ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n33  + use crate::__private::core::result::Result;\n    |\n33  + use crate::parser::fmt::Result;\n    |\n33  + use core::fmt::Result;\n    |\n33  + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 4121,
                    "byte_start": 4115,
                    "column_end": 79,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 165,
                    "line_start": 165,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 73,
                        "text": "pub fn to_writer_strict<B: Flags>(flags: &B, mut writer: impl Write) -> Result<(), fmt::Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:189:50\n    |\n189 | pub fn from_str_strict<B: Flags>(input: &str) -> Result<B, ParseError> {\n    |                                                  ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n33  + use crate::__private::core::result::Result;\n    |\n33  + use crate::parser::fmt::Result;\n    |\n33  + use core::fmt::Result;\n    |\n33  + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 4728,
                    "byte_start": 4722,
                    "column_end": 56,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 189,
                    "line_start": 189,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 50,
                        "text": "pub fn from_str_strict<B: Flags>(input: &str) -> Result<B, ParseError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:197:16\n    |\n197 |         return Ok(parsed_flags);\n    |                ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 5013,
                    "byte_start": 5011,
                    "column_end": 18,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 197,
                    "line_start": 197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 16,
                        "text": "        return Ok(parsed_flags);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:205:20\n    |\n205 |             return Err(ParseError::empty_flag());\n    |                    ^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Err;\n    |\n33  + use core::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 5216,
                    "byte_start": 5213,
                    "column_end": 23,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 205,
                    "line_start": 205,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 20,
                        "text": "            return Err(ParseError::empty_flag());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `vec` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:51:21\n   |\n51 |     let mut stack = vec![Status {\n   |                     ^^^\n   |\nhelp: consider importing one of these macros\n   |\n17 + use std::vec;\n   |\n17 + use alloc::vec;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these macros",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use std::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use alloc::vec;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `vec` in this scope",
                "spans": [
                  {
                    "byte_end": 1740,
                    "byte_start": 1737,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 51,
                    "line_start": 51,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "    let mut stack = vec![Status {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:211:20\n    |\n211 |             return Err(ParseError::invalid_hex_flag(\"unsupported hex flag value\"));\n    |                    ^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Err;\n    |\n33  + use core::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 5431,
                    "byte_start": 5428,
                    "column_end": 23,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 211,
                    "line_start": 211,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 20,
                        "text": "            return Err(ParseError::invalid_hex_flag(\"unsupported hex flag value\"));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:219:5\n    |\n219 |     Ok(parsed_flags)\n    |     ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 5659,
                    "byte_start": 5657,
                    "column_end": 7,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 219,
                    "line_start": 219,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 7,
                        "highlight_start": 5,
                        "text": "    Ok(parsed_flags)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:239:15\n    |\n239 |         Self: Sized;\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n33  + use crate::__private::core::marker::Sized;\n    |\n33  + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 6082,
                    "byte_start": 6077,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 239,
                    "line_start": 239,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:237:34\n    |\n237 |     fn parse_hex(input: &str) -> Result<Self, ParseError>\n    |                                  ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n33  + use crate::__private::core::result::Result;\n    |\n33  + use crate::parser::fmt::Result;\n    |\n33  + use core::fmt::Result;\n    |\n33  + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::parser::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 6034,
                    "byte_start": 6028,
                    "column_end": 40,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 237,
                    "line_start": 237,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 34,
                        "text": "    fn parse_hex(input: &str) -> Result<Self, ParseError>"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs:327:9\n    |\n327 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n33  + use crate::__private::core::result::Result::Ok;\n    |\n33  + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use crate::__private::core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      },
                      {
                        "byte_end": 614,
                        "byte_start": 614,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 33,
                        "line_start": 33,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::fmt::{self, Write};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 8261,
                    "byte_start": 8259,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\parser.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 327,
                    "line_start": 327,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "        Ok(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:132:18\n    |\n132 | pub trait Flags: Sized + 'static {\n    |                  ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 2437,
                    "byte_start": 2432,
                    "column_end": 23,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 18,
                        "text": "pub trait Flags: Sized + 'static {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:168:39\n    |\n168 |     fn from_bits(bits: Self::Bits) -> Option<Self> {\n    |                                       ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these enums\n    |\n1   + use crate::__private::core::option::Option;\n    |\n1   + use core::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these enums",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 3476,
                    "byte_start": 3470,
                    "column_end": 45,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 39,
                        "text": "    fn from_bits(bits: Self::Bits) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:172:13\n    |\n172 |             Some(truncated)\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n1   + use crate::__private::core::option::Option::Some;\n    |\n1   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 3596,
                    "byte_start": 3592,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(truncated)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:174:13\n    |\n174 |             None\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::__private::core::option::Option::None;\n    |\n1   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these unit variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 3641,
                    "byte_start": 3637,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 174,
                    "line_start": 174,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:190:33\n    |\n190 |     fn from_name(name: &str) -> Option<Self> {\n    |                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these enums\n    |\n1   + use crate::__private::core::option::Option;\n    |\n1   + use core::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these enums",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 4164,
                    "byte_start": 4158,
                    "column_end": 39,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 190,
                    "line_start": 190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 33,
                        "text": "    fn from_name(name: &str) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:193:20\n    |\n193 |             return None;\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::__private::core::option::Option::None;\n    |\n1   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these unit variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 4275,
                    "byte_start": 4271,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 193,
                    "line_start": 193,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:198:24\n    |\n198 |                 return Some(Self::from_bits_retain(flag.value().bits()));\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing one of these tuple variants\n    |\n1   + use crate::__private::core::option::Option::Some;\n    |\n1   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these tuple variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 4386,
                    "byte_start": 4382,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 198,
                    "line_start": 198,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                return Some(Self::from_bits_retain(flag.value().bits()));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:202:9\n    |\n202 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::__private::core::option::Option::None;\n    |\n1   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these unit variants",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 4470,
                    "byte_start": 4466,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 202,
                    "line_start": 202,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:236:15\n    |\n236 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 5694,
                    "byte_start": 5689,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 236,
                    "line_start": 236,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:244:15\n    |\n244 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 5929,
                    "byte_start": 5924,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 244,
                    "line_start": 244,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:252:15\n    |\n252 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 6099,
                    "byte_start": 6094,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 252,
                    "line_start": 252,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:260:15\n    |\n260 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 6298,
                    "byte_start": 6293,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 260,
                    "line_start": 260,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:271:15\n    |\n271 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 6715,
                    "byte_start": 6710,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 271,
                    "line_start": 271,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:279:15\n    |\n279 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 6940,
                    "byte_start": 6935,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 279,
                    "line_start": 279,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:287:15\n    |\n287 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 7213,
                    "byte_start": 7208,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 287,
                    "line_start": 287,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:299:15\n    |\n299 |         Self: Sized,\n    |               ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 7429,
                    "byte_start": 7424,
                    "column_end": 20,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 299,
                    "line_start": 299,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 15,
                        "text": "        Self: Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Clone` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:342:5\n    |\n342 |     Clone\n    |     ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::clone::Clone;\n    |\n1   + use core::clone::Clone;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::clone::Clone;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::clone::Clone;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Clone` in this scope",
                "spans": [
                  {
                    "byte_end": 8753,
                    "byte_start": 8748,
                    "column_end": 10,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 342,
                    "line_start": 342,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 5,
                        "text": "    Clone"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert_eq` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:42:5\n   |\n42 |     assert_eq!(text.len(), original_classes.len());\n   |     ^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n17 + use std::assert_eq;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use std::assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 1420,
                    "byte_start": 1411,
                    "column_end": 14,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 5,
                        "text": "    assert_eq!(text.len(), original_classes.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Copy` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:343:7\n    |\n343 |     + Copy\n    |       ^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Copy;\n    |\n1   + use core::marker::Copy;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Copy;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Copy;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Copy` in this scope",
                "spans": [
                  {
                    "byte_end": 8764,
                    "byte_start": 8760,
                    "column_end": 11,
                    "column_start": 7,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 343,
                    "line_start": 343,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 7,
                        "text": "    + Copy"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `PartialEq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:344:7\n    |\n344 |     + PartialEq\n    |       ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::cmp::PartialEq;\n    |\n1   + use core::cmp::PartialEq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `PartialEq` in this scope",
                "spans": [
                  {
                    "byte_end": 8780,
                    "byte_start": 8771,
                    "column_end": 16,
                    "column_start": 7,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 344,
                    "line_start": 344,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 7,
                        "text": "    + PartialEq"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:349:7\n    |\n349 |     + Sized\n    |       ^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::marker::Sized;\n    |\n1   + use core::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 8900,
                    "byte_start": 8895,
                    "column_end": 12,
                    "column_start": 7,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 349,
                    "line_start": 349,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 7,
                        "text": "    + Sized"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:377:46\n    |\n377 |                   fn parse_hex(input: &str) -> Result<Self, ParseError> {\n    |                                                ^^^^^^ not found in this scope\n...\n406 | / impl_bits! {\n407 | |     u8, i8,\n408 | |     u16, i16,\n409 | |     u32, i32,\n...   |\n412 | |     usize, isize,\n413 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_bits` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing one of these items\n    |\n1   + use crate::__private::core::result::Result;\n    |\n1   + use crate::traits::fmt::Result;\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::traits::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 9610,
                    "byte_start": 9604,
                    "column_end": 52,
                    "column_start": 46,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 9223,
                        "byte_start": 9201,
                        "column_end": 23,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bits {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bits!",
                      "span": {
                        "byte_end": 10602,
                        "byte_start": 10500,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 413,
                        "line_start": 406,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "impl_bits! {"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "    u8, i8,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u16, i16,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u32, i32,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u64, i64,"
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "    u128, i128,"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "    usize, isize,"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 377,
                    "line_start": 377,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 46,
                        "text": "                fn parse_hex(input: &str) -> Result<Self, ParseError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:383:46\n    |\n383 |                   fn parse_hex(input: &str) -> Result<Self, ParseError> {\n    |                                                ^^^^^^ not found in this scope\n...\n406 | / impl_bits! {\n407 | |     u8, i8,\n408 | |     u16, i16,\n409 | |     u32, i32,\n...   |\n412 | |     usize, isize,\n413 | | }\n    | |_- in this macro invocation\n    |\n    = note: this error originates in the macro `impl_bits` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing one of these items\n    |\n1   + use crate::__private::core::result::Result;\n    |\n1   + use crate::traits::fmt::Result;\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::traits::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 9851,
                    "byte_start": 9845,
                    "column_end": 52,
                    "column_start": 46,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 9223,
                        "byte_start": 9201,
                        "column_end": 23,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 363,
                        "line_start": 363,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 23,
                            "highlight_start": 1,
                            "text": "macro_rules! impl_bits {"
                          }
                        ]
                      },
                      "macro_decl_name": "impl_bits!",
                      "span": {
                        "byte_end": 10602,
                        "byte_start": 10500,
                        "column_end": 2,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 413,
                        "line_start": 406,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 13,
                            "highlight_start": 1,
                            "text": "impl_bits! {"
                          },
                          {
                            "highlight_end": 12,
                            "highlight_start": 1,
                            "text": "    u8, i8,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u16, i16,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u32, i32,"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "    u64, i64,"
                          },
                          {
                            "highlight_end": 16,
                            "highlight_start": 1,
                            "text": "    u128, i128,"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "    usize, isize,"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          }
                        ]
                      }
                    },
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 383,
                    "line_start": 383,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 46,
                        "text": "                fn parse_hex(input: &str) -> Result<Self, ParseError> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:429:16\n    |\n429 |     type Iter: Iterator<Item = Self>;\n    |                ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::iter::Iterator;\n    |\n1   + use core::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 11107,
                    "byte_start": 11099,
                    "column_end": 24,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 429,
                    "line_start": 429,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 16,
                        "text": "    type Iter: Iterator<Item = Self>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs:432:21\n    |\n432 |     type IterNames: Iterator<Item = (&'static str, Self)>;\n    |                     ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n1   + use crate::__private::core::iter::Iterator;\n    |\n1   + use core::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use crate::__private::core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": "use core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 11245,
                    "byte_start": 11237,
                    "column_end": 29,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\traits.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 432,
                    "line_start": 432,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 21,
                        "text": "    type IterNames: Iterator<Item = (&'static str, Self)>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `matches` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:62:5\n   |\n62 |     matches!(bidi_class, RLE | RLO | RLI)\n   |     ^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n14 + use std::matches;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::matches;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `matches` in this scope",
                "spans": [
                  {
                    "byte_end": 2143,
                    "byte_start": 2136,
                    "column_end": 12,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 62,
                    "line_start": 62,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 5,
                        "text": "    matches!(bidi_class, RLE | RLO | RLI)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:11:3\n   |\n11 | #[derive(Clone, Copy, Debug, PartialEq, Eq)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 357,
                    "byte_start": 351,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 11,
                    "line_start": 11,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Clone, Copy, Debug, PartialEq, Eq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:747:3\n    |\n747 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 28503,
                    "byte_start": 28497,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 747,
                    "line_start": 747,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:720:3\n    |\n720 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 27765,
                    "byte_start": 27759,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 720,
                    "line_start": 720,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:692:3\n    |\n692 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 27069,
                    "byte_start": 27063,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 692,
                    "line_start": 692,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:658:13\n    |\n658 |             debug_assert!(\n    |             ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 26032,
                    "byte_start": 26020,
                    "column_end": 25,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 658,
                    "line_start": 658,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 13,
                        "text": "            debug_assert!("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:654:17\n    |\n654 |                 debug_assert!(ch.len_utf16() == 2, \"BMP should have already been handled\");\n    |                 ^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::debug_assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::debug_assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert` in this scope",
                "spans": [
                  {
                    "byte_end": 25862,
                    "byte_start": 25850,
                    "column_end": 29,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 654,
                    "line_start": 654,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 17,
                        "text": "                debug_assert!(ch.len_utf16() == 2, \"BMP should have already been handled\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:586:3\n    |\n586 | #[derive(Debug)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 23435,
                    "byte_start": 23429,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 586,
                    "line_start": 586,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:461:9\n    |\n461 |         assert!(line.end <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 18922,
                    "byte_start": 18916,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 461,
                    "line_start": 461,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.end <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:460:9\n    |\n460 |         assert!(line.start <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 18872,
                    "byte_start": 18866,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 460,
                    "line_start": 460,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.start <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:368:3\n    |\n368 | #[derive(Debug, PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 15476,
                    "byte_start": 15470,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 368,
                    "line_start": 368,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:228:9\n    |\n228 |         assert!(line.end <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 9490,
                    "byte_start": 9484,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 228,
                    "line_start": 228,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.end <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:227:9\n    |\n227 |         assert!(line.start <= self.levels.len());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n10  + use std::assert;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 9440,
                    "byte_start": 9434,
                    "column_end": 15,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 227,
                    "line_start": 227,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 9,
                        "text": "        assert!(line.start <= self.levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0405, E0412, E0425, E0531, E0786.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0405, E0412, E0425, E0531, E0786.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0405`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0405`.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:133:3\n    |\n133 | #[derive(Debug, PartialEq)]\n    |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 5482,
                    "byte_start": 5476,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 133,
                    "line_start": 133,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:80:3\n   |\n80 | #[derive(PartialEq, Debug)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 3280,
                    "byte_start": 3274,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 80,
                    "line_start": 80,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:31:3\n   |\n31 | #[derive(PartialEq, Debug)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 996,
                    "byte_start": 990,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(PartialEq, Debug)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `debug_assert_eq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:206:9\n    |\n206 |         debug_assert_eq!(core::mem::size_of::<u8>(), core::mem::size_of::<Level>());\n    |         ^^^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n16  + use std::debug_assert_eq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::debug_assert_eq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `debug_assert_eq` in this scope",
                "spans": [
                  {
                    "byte_end": 6251,
                    "byte_start": 6236,
                    "column_end": 24,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 206,
                    "line_start": 206,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 9,
                        "text": "        debug_assert_eq!(core::mem::size_of::<u8>(), core::mem::size_of::<Level>());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:49:3\n   |\n49 | #[derive(Debug, PartialEq)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 1789,
                    "byte_start": 1783,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 49,
                    "line_start": 49,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, PartialEq)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:34:3\n   |\n34 | #[derive(Copy, Clone, Debug, Eq, Ord, PartialEq, PartialOrd)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 1173,
                    "byte_start": 1167,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Copy, Clone, Debug, Eq, Ord, PartialEq, PartialOrd)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs:30:5\n   |\n30 |     assert!(line.end <= levels.len());\n   |     ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n12 + use std::assert;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 474,
                        "byte_start": 474,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::*;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 1234,
                    "byte_start": 1228,
                    "column_end": 11,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 30,
                    "line_start": 30,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 5,
                        "text": "    assert!(line.end <= levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find macro `assert` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs:29:5\n   |\n29 |     assert!(line.start <= levels.len());\n   |     ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n12 + use std::assert;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this macro",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 474,
                        "byte_start": 474,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::assert;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::*;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": null,
                "level": "error",
                "message": "cannot find macro `assert` in this scope",
                "spans": [
                  {
                    "byte_end": 1193,
                    "byte_start": 1187,
                    "column_end": 11,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\deprecated.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 29,
                    "line_start": 29,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 5,
                        "text": "    assert!(line.start <= levels.len());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: cannot find attribute `derive` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\data_source.rs:16:3\n   |\n16 | #[derive(Debug, Copy, Clone)]\n   |   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "cannot find attribute `derive` in this scope",
                "spans": [
                  {
                    "byte_end": 693,
                    "byte_start": 687,
                    "column_end": 9,
                    "column_start": 3,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\data_source.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 16,
                    "line_start": 16,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 3,
                        "text": "#[derive(Debug, Copy, Clone)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1421:56\n     |\n1421 |     pub(crate) fn inner_from_full_name(input: &str) -> Option<Self> {\n     |                                                        ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n19   + use core::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 58625,
                    "byte_start": 58619,
                    "column_end": 62,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1421,
                    "line_start": 1421,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 56,
                        "text": "    pub(crate) fn inner_from_full_name(input: &str) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1423:26\n     |\n1423 |             \"Unknown\" => Some(Script::Unknown),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58685,
                    "byte_start": 58681,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1423,
                    "line_start": 1423,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Unknown\" => Some(Script::Unknown),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1424:25\n     |\n1424 |             \"Common\" => Some(Script::Common),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58732,
                    "byte_start": 58728,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1424,
                    "line_start": 1424,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Common\" => Some(Script::Common),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1425:28\n     |\n1425 |             \"Inherited\" => Some(Script::Inherited),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58781,
                    "byte_start": 58777,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1425,
                    "line_start": 1425,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Inherited\" => Some(Script::Inherited),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1426:24\n     |\n1426 |             \"Adlam\" => Some(Script::Adlam),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58829,
                    "byte_start": 58825,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1426,
                    "line_start": 1426,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Adlam\" => Some(Script::Adlam),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1427:37\n     |\n1427 |             \"Caucasian_Albanian\" => Some(Script::Caucasian_Albanian),\n     |                                     ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58886,
                    "byte_start": 58882,
                    "column_end": 41,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1427,
                    "line_start": 1427,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 37,
                        "text": "            \"Caucasian_Albanian\" => Some(Script::Caucasian_Albanian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1428:23\n     |\n1428 |             \"Ahom\" => Some(Script::Ahom),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58942,
                    "byte_start": 58938,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1428,
                    "line_start": 1428,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ahom\" => Some(Script::Ahom),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1429:25\n     |\n1429 |             \"Arabic\" => Some(Script::Arabic),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 58986,
                    "byte_start": 58982,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1429,
                    "line_start": 1429,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Arabic\" => Some(Script::Arabic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1430:35\n     |\n1430 |             \"Imperial_Aramaic\" => Some(Script::Imperial_Aramaic),\n     |                                   ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59042,
                    "byte_start": 59038,
                    "column_end": 39,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1430,
                    "line_start": 1430,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 35,
                        "text": "            \"Imperial_Aramaic\" => Some(Script::Imperial_Aramaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1431:27\n     |\n1431 |             \"Armenian\" => Some(Script::Armenian),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59100,
                    "byte_start": 59096,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1431,
                    "line_start": 1431,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Armenian\" => Some(Script::Armenian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1432:26\n     |\n1432 |             \"Avestan\" => Some(Script::Avestan),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59149,
                    "byte_start": 59145,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1432,
                    "line_start": 1432,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Avestan\" => Some(Script::Avestan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1433:27\n     |\n1433 |             \"Balinese\" => Some(Script::Balinese),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59198,
                    "byte_start": 59194,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1433,
                    "line_start": 1433,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Balinese\" => Some(Script::Balinese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1434:24\n     |\n1434 |             \"Bamum\" => Some(Script::Bamum),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59245,
                    "byte_start": 59241,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1434,
                    "line_start": 1434,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Bamum\" => Some(Script::Bamum),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1435:28\n     |\n1435 |             \"Bassa_Vah\" => Some(Script::Bassa_Vah),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59293,
                    "byte_start": 59289,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1435,
                    "line_start": 1435,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Bassa_Vah\" => Some(Script::Bassa_Vah),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1436:24\n     |\n1436 |             \"Batak\" => Some(Script::Batak),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59341,
                    "byte_start": 59337,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1436,
                    "line_start": 1436,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Batak\" => Some(Script::Batak),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1437:26\n     |\n1437 |             \"Bengali\" => Some(Script::Bengali),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59387,
                    "byte_start": 59383,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1437,
                    "line_start": 1437,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Bengali\" => Some(Script::Bengali),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1438:28\n     |\n1438 |             \"Bhaiksuki\" => Some(Script::Bhaiksuki),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59437,
                    "byte_start": 59433,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1438,
                    "line_start": 1438,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Bhaiksuki\" => Some(Script::Bhaiksuki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1439:27\n     |\n1439 |             \"Bopomofo\" => Some(Script::Bopomofo),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59488,
                    "byte_start": 59484,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1439,
                    "line_start": 1439,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Bopomofo\" => Some(Script::Bopomofo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1440:25\n     |\n1440 |             \"Brahmi\" => Some(Script::Brahmi),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59536,
                    "byte_start": 59532,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1440,
                    "line_start": 1440,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Brahmi\" => Some(Script::Brahmi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1441:26\n     |\n1441 |             \"Braille\" => Some(Script::Braille),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59583,
                    "byte_start": 59579,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1441,
                    "line_start": 1441,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Braille\" => Some(Script::Braille),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1442:27\n     |\n1442 |             \"Buginese\" => Some(Script::Buginese),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59632,
                    "byte_start": 59628,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1442,
                    "line_start": 1442,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Buginese\" => Some(Script::Buginese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1443:24\n     |\n1443 |             \"Buhid\" => Some(Script::Buhid),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59679,
                    "byte_start": 59675,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1443,
                    "line_start": 1443,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Buhid\" => Some(Script::Buhid),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1444:25\n     |\n1444 |             \"Chakma\" => Some(Script::Chakma),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59724,
                    "byte_start": 59720,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1444,
                    "line_start": 1444,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Chakma\" => Some(Script::Chakma),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1445:38\n     |\n1445 |             \"Canadian_Aboriginal\" => Some(Script::Canadian_Aboriginal),\n     |                                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59783,
                    "byte_start": 59779,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1445,
                    "line_start": 1445,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            \"Canadian_Aboriginal\" => Some(Script::Canadian_Aboriginal),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1446:25\n     |\n1446 |             \"Carian\" => Some(Script::Carian),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59842,
                    "byte_start": 59838,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1446,
                    "line_start": 1446,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Carian\" => Some(Script::Carian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1447:23\n     |\n1447 |             \"Cham\" => Some(Script::Cham),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59886,
                    "byte_start": 59882,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1447,
                    "line_start": 1447,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cham\" => Some(Script::Cham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1448:27\n     |\n1448 |             \"Cherokee\" => Some(Script::Cherokee),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59932,
                    "byte_start": 59928,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1448,
                    "line_start": 1448,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Cherokee\" => Some(Script::Cherokee),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1449:29\n     |\n1449 |             \"Chorasmian\" => Some(Script::Chorasmian),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 59984,
                    "byte_start": 59980,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1449,
                    "line_start": 1449,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Chorasmian\" => Some(Script::Chorasmian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1450:25\n     |\n1450 |             \"Coptic\" => Some(Script::Coptic),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60034,
                    "byte_start": 60030,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1450,
                    "line_start": 1450,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Coptic\" => Some(Script::Coptic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1451:31\n     |\n1451 |             \"Cypro_Minoan\" => Some(Script::Cypro_Minoan),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60086,
                    "byte_start": 60082,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1451,
                    "line_start": 1451,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Cypro_Minoan\" => Some(Script::Cypro_Minoan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1452:26\n     |\n1452 |             \"Cypriot\" => Some(Script::Cypriot),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60139,
                    "byte_start": 60135,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1452,
                    "line_start": 1452,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Cypriot\" => Some(Script::Cypriot),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1453:27\n     |\n1453 |             \"Cyrillic\" => Some(Script::Cyrillic),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60188,
                    "byte_start": 60184,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1453,
                    "line_start": 1453,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Cyrillic\" => Some(Script::Cyrillic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1454:29\n     |\n1454 |             \"Devanagari\" => Some(Script::Devanagari),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60240,
                    "byte_start": 60236,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1454,
                    "line_start": 1454,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Devanagari\" => Some(Script::Devanagari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1455:30\n     |\n1455 |             \"Dives_Akuru\" => Some(Script::Dives_Akuru),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60295,
                    "byte_start": 60291,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1455,
                    "line_start": 1455,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Dives_Akuru\" => Some(Script::Dives_Akuru),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1456:24\n     |\n1456 |             \"Dogra\" => Some(Script::Dogra),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60345,
                    "byte_start": 60341,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1456,
                    "line_start": 1456,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Dogra\" => Some(Script::Dogra),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1457:26\n     |\n1457 |             \"Deseret\" => Some(Script::Deseret),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60391,
                    "byte_start": 60387,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1457,
                    "line_start": 1457,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Deseret\" => Some(Script::Deseret),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1458:27\n     |\n1458 |             \"Duployan\" => Some(Script::Duployan),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60440,
                    "byte_start": 60436,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1458,
                    "line_start": 1458,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Duployan\" => Some(Script::Duployan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1459:39\n     |\n1459 |             \"Egyptian_Hieroglyphs\" => Some(Script::Egyptian_Hieroglyphs),\n     |                                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60502,
                    "byte_start": 60498,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1459,
                    "line_start": 1459,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "            \"Egyptian_Hieroglyphs\" => Some(Script::Egyptian_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1460:26\n     |\n1460 |             \"Elbasan\" => Some(Script::Elbasan),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60563,
                    "byte_start": 60559,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1460,
                    "line_start": 1460,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Elbasan\" => Some(Script::Elbasan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1461:26\n     |\n1461 |             \"Elymaic\" => Some(Script::Elymaic),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60611,
                    "byte_start": 60607,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1461,
                    "line_start": 1461,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Elymaic\" => Some(Script::Elymaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1462:27\n     |\n1462 |             \"Ethiopic\" => Some(Script::Ethiopic),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60660,
                    "byte_start": 60656,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1462,
                    "line_start": 1462,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Ethiopic\" => Some(Script::Ethiopic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1463:24\n     |\n1463 |             \"Garay\" => Some(Script::Garay),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60707,
                    "byte_start": 60703,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1463,
                    "line_start": 1463,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Garay\" => Some(Script::Garay),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1464:27\n     |\n1464 |             \"Georgian\" => Some(Script::Georgian),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60754,
                    "byte_start": 60750,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1464,
                    "line_start": 1464,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Georgian\" => Some(Script::Georgian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1465:29\n     |\n1465 |             \"Glagolitic\" => Some(Script::Glagolitic),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60806,
                    "byte_start": 60802,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1465,
                    "line_start": 1465,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Glagolitic\" => Some(Script::Glagolitic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1466:32\n     |\n1466 |             \"Gunjala_Gondi\" => Some(Script::Gunjala_Gondi),\n     |                                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60863,
                    "byte_start": 60859,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1466,
                    "line_start": 1466,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            \"Gunjala_Gondi\" => Some(Script::Gunjala_Gondi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1467:32\n     |\n1467 |             \"Masaram_Gondi\" => Some(Script::Masaram_Gondi),\n     |                                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60923,
                    "byte_start": 60919,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1467,
                    "line_start": 1467,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            \"Masaram_Gondi\" => Some(Script::Masaram_Gondi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1468:25\n     |\n1468 |             \"Gothic\" => Some(Script::Gothic),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 60976,
                    "byte_start": 60972,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1468,
                    "line_start": 1468,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Gothic\" => Some(Script::Gothic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1469:26\n     |\n1469 |             \"Grantha\" => Some(Script::Grantha),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61023,
                    "byte_start": 61019,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1469,
                    "line_start": 1469,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Grantha\" => Some(Script::Grantha),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1470:24\n     |\n1470 |             \"Greek\" => Some(Script::Greek),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61069,
                    "byte_start": 61065,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1470,
                    "line_start": 1470,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Greek\" => Some(Script::Greek),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1471:27\n     |\n1471 |             \"Gujarati\" => Some(Script::Gujarati),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61116,
                    "byte_start": 61112,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1471,
                    "line_start": 1471,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Gujarati\" => Some(Script::Gujarati),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1472:31\n     |\n1472 |             \"Gurung_Khema\" => Some(Script::Gurung_Khema),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61170,
                    "byte_start": 61166,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1472,
                    "line_start": 1472,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Gurung_Khema\" => Some(Script::Gurung_Khema),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1473:27\n     |\n1473 |             \"Gurmukhi\" => Some(Script::Gurmukhi),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61224,
                    "byte_start": 61220,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1473,
                    "line_start": 1473,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Gurmukhi\" => Some(Script::Gurmukhi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1474:25\n     |\n1474 |             \"Hangul\" => Some(Script::Hangul),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61272,
                    "byte_start": 61268,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1474,
                    "line_start": 1474,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Hangul\" => Some(Script::Hangul),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1475:22\n     |\n1475 |             \"Han\" => Some(Script::Han),\n     |                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61315,
                    "byte_start": 61311,
                    "column_end": 26,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1475,
                    "line_start": 1475,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "            \"Han\" => Some(Script::Han),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1476:26\n     |\n1476 |             \"Hanunoo\" => Some(Script::Hanunoo),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61359,
                    "byte_start": 61355,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1476,
                    "line_start": 1476,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Hanunoo\" => Some(Script::Hanunoo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1477:25\n     |\n1477 |             \"Hatran\" => Some(Script::Hatran),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61406,
                    "byte_start": 61402,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1477,
                    "line_start": 1477,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Hatran\" => Some(Script::Hatran),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1478:25\n     |\n1478 |             \"Hebrew\" => Some(Script::Hebrew),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61452,
                    "byte_start": 61448,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1478,
                    "line_start": 1478,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Hebrew\" => Some(Script::Hebrew),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1479:27\n     |\n1479 |             \"Hiragana\" => Some(Script::Hiragana),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61500,
                    "byte_start": 61496,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1479,
                    "line_start": 1479,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Hiragana\" => Some(Script::Hiragana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1480:40\n     |\n1480 |             \"Anatolian_Hieroglyphs\" => Some(Script::Anatolian_Hieroglyphs),\n     |                                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61563,
                    "byte_start": 61559,
                    "column_end": 44,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1480,
                    "line_start": 1480,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 40,
                        "text": "            \"Anatolian_Hieroglyphs\" => Some(Script::Anatolian_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1481:31\n     |\n1481 |             \"Pahawh_Hmong\" => Some(Script::Pahawh_Hmong),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61630,
                    "byte_start": 61626,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1481,
                    "line_start": 1481,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Pahawh_Hmong\" => Some(Script::Pahawh_Hmong),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1482:41\n     |\n1482 |             \"Nyiakeng_Puachue_Hmong\" => Some(Script::Nyiakeng_Puachue_Hmong),\n     |                                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61698,
                    "byte_start": 61694,
                    "column_end": 45,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1482,
                    "line_start": 1482,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 41,
                        "text": "            \"Nyiakeng_Puachue_Hmong\" => Some(Script::Nyiakeng_Puachue_Hmong),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1483:32\n     |\n1483 |             \"Old_Hungarian\" => Some(Script::Old_Hungarian),\n     |                                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61767,
                    "byte_start": 61763,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1483,
                    "line_start": 1483,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            \"Old_Hungarian\" => Some(Script::Old_Hungarian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1484:29\n     |\n1484 |             \"Old_Italic\" => Some(Script::Old_Italic),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61824,
                    "byte_start": 61820,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1484,
                    "line_start": 1484,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Old_Italic\" => Some(Script::Old_Italic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1485:27\n     |\n1485 |             \"Javanese\" => Some(Script::Javanese),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61876,
                    "byte_start": 61872,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1485,
                    "line_start": 1485,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Javanese\" => Some(Script::Javanese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1486:27\n     |\n1486 |             \"Kayah_Li\" => Some(Script::Kayah_Li),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61926,
                    "byte_start": 61922,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1486,
                    "line_start": 1486,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Kayah_Li\" => Some(Script::Kayah_Li),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1487:27\n     |\n1487 |             \"Katakana\" => Some(Script::Katakana),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 61976,
                    "byte_start": 61972,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1487,
                    "line_start": 1487,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Katakana\" => Some(Script::Katakana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1488:23\n     |\n1488 |             \"Kawi\" => Some(Script::Kawi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62022,
                    "byte_start": 62018,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1488,
                    "line_start": 1488,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kawi\" => Some(Script::Kawi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1489:29\n     |\n1489 |             \"Kharoshthi\" => Some(Script::Kharoshthi),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62070,
                    "byte_start": 62066,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1489,
                    "line_start": 1489,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Kharoshthi\" => Some(Script::Kharoshthi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1490:24\n     |\n1490 |             \"Khmer\" => Some(Script::Khmer),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62119,
                    "byte_start": 62115,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1490,
                    "line_start": 1490,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Khmer\" => Some(Script::Khmer),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1491:25\n     |\n1491 |             \"Khojki\" => Some(Script::Khojki),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62164,
                    "byte_start": 62160,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1491,
                    "line_start": 1491,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Khojki\" => Some(Script::Khojki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1492:38\n     |\n1492 |             \"Khitan_Small_Script\" => Some(Script::Khitan_Small_Script),\n     |                                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62223,
                    "byte_start": 62219,
                    "column_end": 42,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1492,
                    "line_start": 1492,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 38,
                        "text": "            \"Khitan_Small_Script\" => Some(Script::Khitan_Small_Script),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1493:26\n     |\n1493 |             \"Kannada\" => Some(Script::Kannada),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62283,
                    "byte_start": 62279,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1493,
                    "line_start": 1493,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Kannada\" => Some(Script::Kannada),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1494:28\n     |\n1494 |             \"Kirat_Rai\" => Some(Script::Kirat_Rai),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62333,
                    "byte_start": 62329,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1494,
                    "line_start": 1494,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Kirat_Rai\" => Some(Script::Kirat_Rai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1495:25\n     |\n1495 |             \"Kaithi\" => Some(Script::Kaithi),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62382,
                    "byte_start": 62378,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1495,
                    "line_start": 1495,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Kaithi\" => Some(Script::Kaithi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1496:27\n     |\n1496 |             \"Tai_Tham\" => Some(Script::Tai_Tham),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62430,
                    "byte_start": 62426,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1496,
                    "line_start": 1496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Tai_Tham\" => Some(Script::Tai_Tham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1497:22\n     |\n1497 |             \"Lao\" => Some(Script::Lao),\n     |                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62475,
                    "byte_start": 62471,
                    "column_end": 26,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1497,
                    "line_start": 1497,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "            \"Lao\" => Some(Script::Lao),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1498:24\n     |\n1498 |             \"Latin\" => Some(Script::Latin),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62517,
                    "byte_start": 62513,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1498,
                    "line_start": 1498,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Latin\" => Some(Script::Latin),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1499:25\n     |\n1499 |             \"Lepcha\" => Some(Script::Lepcha),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62562,
                    "byte_start": 62558,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1499,
                    "line_start": 1499,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Lepcha\" => Some(Script::Lepcha),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1500:24\n     |\n1500 |             \"Limbu\" => Some(Script::Limbu),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62607,
                    "byte_start": 62603,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1500,
                    "line_start": 1500,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Limbu\" => Some(Script::Limbu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1501:27\n     |\n1501 |             \"Linear_A\" => Some(Script::Linear_A),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62654,
                    "byte_start": 62650,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1501,
                    "line_start": 1501,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Linear_A\" => Some(Script::Linear_A),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1502:27\n     |\n1502 |             \"Linear_B\" => Some(Script::Linear_B),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62704,
                    "byte_start": 62700,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1502,
                    "line_start": 1502,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Linear_B\" => Some(Script::Linear_B),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1503:23\n     |\n1503 |             \"Lisu\" => Some(Script::Lisu),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62750,
                    "byte_start": 62746,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1503,
                    "line_start": 1503,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lisu\" => Some(Script::Lisu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1504:25\n     |\n1504 |             \"Lycian\" => Some(Script::Lycian),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62794,
                    "byte_start": 62790,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1504,
                    "line_start": 1504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Lycian\" => Some(Script::Lycian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1505:25\n     |\n1505 |             \"Lydian\" => Some(Script::Lydian),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62840,
                    "byte_start": 62836,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1505,
                    "line_start": 1505,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Lydian\" => Some(Script::Lydian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1506:27\n     |\n1506 |             \"Mahajani\" => Some(Script::Mahajani),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62888,
                    "byte_start": 62884,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1506,
                    "line_start": 1506,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Mahajani\" => Some(Script::Mahajani),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1507:26\n     |\n1507 |             \"Makasar\" => Some(Script::Makasar),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62937,
                    "byte_start": 62933,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1507,
                    "line_start": 1507,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Makasar\" => Some(Script::Makasar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1508:26\n     |\n1508 |             \"Mandaic\" => Some(Script::Mandaic),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 62985,
                    "byte_start": 62981,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1508,
                    "line_start": 1508,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Mandaic\" => Some(Script::Mandaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1509:29\n     |\n1509 |             \"Manichaean\" => Some(Script::Manichaean),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63036,
                    "byte_start": 63032,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1509,
                    "line_start": 1509,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Manichaean\" => Some(Script::Manichaean),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1510:26\n     |\n1510 |             \"Marchen\" => Some(Script::Marchen),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63087,
                    "byte_start": 63083,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1510,
                    "line_start": 1510,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Marchen\" => Some(Script::Marchen),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1511:30\n     |\n1511 |             \"Medefaidrin\" => Some(Script::Medefaidrin),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63139,
                    "byte_start": 63135,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1511,
                    "line_start": 1511,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Medefaidrin\" => Some(Script::Medefaidrin),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1512:32\n     |\n1512 |             \"Mende_Kikakui\" => Some(Script::Mende_Kikakui),\n     |                                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63197,
                    "byte_start": 63193,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1512,
                    "line_start": 1512,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            \"Mende_Kikakui\" => Some(Script::Mende_Kikakui),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1513:35\n     |\n1513 |             \"Meroitic_Cursive\" => Some(Script::Meroitic_Cursive),\n     |                                   ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63260,
                    "byte_start": 63256,
                    "column_end": 39,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1513,
                    "line_start": 1513,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 35,
                        "text": "            \"Meroitic_Cursive\" => Some(Script::Meroitic_Cursive),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1514:39\n     |\n1514 |             \"Meroitic_Hieroglyphs\" => Some(Script::Meroitic_Hieroglyphs),\n     |                                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63330,
                    "byte_start": 63326,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1514,
                    "line_start": 1514,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "            \"Meroitic_Hieroglyphs\" => Some(Script::Meroitic_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1515:28\n     |\n1515 |             \"Malayalam\" => Some(Script::Malayalam),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63393,
                    "byte_start": 63389,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1515,
                    "line_start": 1515,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Malayalam\" => Some(Script::Malayalam),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1516:23\n     |\n1516 |             \"Modi\" => Some(Script::Modi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63440,
                    "byte_start": 63436,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1516,
                    "line_start": 1516,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Modi\" => Some(Script::Modi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1517:28\n     |\n1517 |             \"Mongolian\" => Some(Script::Mongolian),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63487,
                    "byte_start": 63483,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1517,
                    "line_start": 1517,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Mongolian\" => Some(Script::Mongolian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1518:22\n     |\n1518 |             \"Mro\" => Some(Script::Mro),\n     |                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63533,
                    "byte_start": 63529,
                    "column_end": 26,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1518,
                    "line_start": 1518,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "            \"Mro\" => Some(Script::Mro),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1519:31\n     |\n1519 |             \"Meetei_Mayek\" => Some(Script::Meetei_Mayek),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63582,
                    "byte_start": 63578,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1519,
                    "line_start": 1519,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Meetei_Mayek\" => Some(Script::Meetei_Mayek),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1520:26\n     |\n1520 |             \"Multani\" => Some(Script::Multani),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63635,
                    "byte_start": 63631,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1520,
                    "line_start": 1520,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Multani\" => Some(Script::Multani),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1521:26\n     |\n1521 |             \"Myanmar\" => Some(Script::Myanmar),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63683,
                    "byte_start": 63679,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1521,
                    "line_start": 1521,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Myanmar\" => Some(Script::Myanmar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1522:30\n     |\n1522 |             \"Nag_Mundari\" => Some(Script::Nag_Mundari),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63735,
                    "byte_start": 63731,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1522,
                    "line_start": 1522,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Nag_Mundari\" => Some(Script::Nag_Mundari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1523:30\n     |\n1523 |             \"Nandinagari\" => Some(Script::Nandinagari),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63791,
                    "byte_start": 63787,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1523,
                    "line_start": 1523,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Nandinagari\" => Some(Script::Nandinagari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1524:36\n     |\n1524 |             \"Old_North_Arabian\" => Some(Script::Old_North_Arabian),\n     |                                    ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63853,
                    "byte_start": 63849,
                    "column_end": 40,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1524,
                    "line_start": 1524,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 36,
                        "text": "            \"Old_North_Arabian\" => Some(Script::Old_North_Arabian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1525:28\n     |\n1525 |             \"Nabataean\" => Some(Script::Nabataean),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63913,
                    "byte_start": 63909,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1525,
                    "line_start": 1525,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Nabataean\" => Some(Script::Nabataean),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1526:23\n     |\n1526 |             \"Newa\" => Some(Script::Newa),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 63960,
                    "byte_start": 63956,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1526,
                    "line_start": 1526,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Newa\" => Some(Script::Newa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1527:22\n     |\n1527 |             \"Nko\" => Some(Script::Nko),\n     |                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64001,
                    "byte_start": 63997,
                    "column_end": 26,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1527,
                    "line_start": 1527,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "            \"Nko\" => Some(Script::Nko),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1528:24\n     |\n1528 |             \"Nushu\" => Some(Script::Nushu),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64043,
                    "byte_start": 64039,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1528,
                    "line_start": 1528,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Nushu\" => Some(Script::Nushu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1529:24\n     |\n1529 |             \"Ogham\" => Some(Script::Ogham),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64087,
                    "byte_start": 64083,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1529,
                    "line_start": 1529,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Ogham\" => Some(Script::Ogham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1530:27\n     |\n1530 |             \"Ol_Chiki\" => Some(Script::Ol_Chiki),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64134,
                    "byte_start": 64130,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1530,
                    "line_start": 1530,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Ol_Chiki\" => Some(Script::Ol_Chiki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1531:26\n     |\n1531 |             \"Ol_Onal\" => Some(Script::Ol_Onal),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64183,
                    "byte_start": 64179,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1531,
                    "line_start": 1531,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Ol_Onal\" => Some(Script::Ol_Onal),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1532:29\n     |\n1532 |             \"Old_Turkic\" => Some(Script::Old_Turkic),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64234,
                    "byte_start": 64230,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1532,
                    "line_start": 1532,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Old_Turkic\" => Some(Script::Old_Turkic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1533:24\n     |\n1533 |             \"Oriya\" => Some(Script::Oriya),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64283,
                    "byte_start": 64279,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1533,
                    "line_start": 1533,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Oriya\" => Some(Script::Oriya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1534:24\n     |\n1534 |             \"Osage\" => Some(Script::Osage),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64327,
                    "byte_start": 64323,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1534,
                    "line_start": 1534,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Osage\" => Some(Script::Osage),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1535:26\n     |\n1535 |             \"Osmanya\" => Some(Script::Osmanya),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64373,
                    "byte_start": 64369,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1535,
                    "line_start": 1535,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Osmanya\" => Some(Script::Osmanya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1536:29\n     |\n1536 |             \"Old_Uyghur\" => Some(Script::Old_Uyghur),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64424,
                    "byte_start": 64420,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1536,
                    "line_start": 1536,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Old_Uyghur\" => Some(Script::Old_Uyghur),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1537:28\n     |\n1537 |             \"Palmyrene\" => Some(Script::Palmyrene),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64477,
                    "byte_start": 64473,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1537,
                    "line_start": 1537,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Palmyrene\" => Some(Script::Palmyrene),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1538:30\n     |\n1538 |             \"Pau_Cin_Hau\" => Some(Script::Pau_Cin_Hau),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64531,
                    "byte_start": 64527,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1538,
                    "line_start": 1538,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Pau_Cin_Hau\" => Some(Script::Pau_Cin_Hau),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1539:29\n     |\n1539 |             \"Old_Permic\" => Some(Script::Old_Permic),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64586,
                    "byte_start": 64582,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1539,
                    "line_start": 1539,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Old_Permic\" => Some(Script::Old_Permic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1540:27\n     |\n1540 |             \"Phags_Pa\" => Some(Script::Phags_Pa),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64638,
                    "byte_start": 64634,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1540,
                    "line_start": 1540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Phags_Pa\" => Some(Script::Phags_Pa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1541:40\n     |\n1541 |             \"Inscriptional_Pahlavi\" => Some(Script::Inscriptional_Pahlavi),\n     |                                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64701,
                    "byte_start": 64697,
                    "column_end": 44,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1541,
                    "line_start": 1541,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 40,
                        "text": "            \"Inscriptional_Pahlavi\" => Some(Script::Inscriptional_Pahlavi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1542:34\n     |\n1542 |             \"Psalter_Pahlavi\" => Some(Script::Psalter_Pahlavi),\n     |                                  ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64771,
                    "byte_start": 64767,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1542,
                    "line_start": 1542,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "            \"Psalter_Pahlavi\" => Some(Script::Psalter_Pahlavi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1543:29\n     |\n1543 |             \"Phoenician\" => Some(Script::Phoenician),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64830,
                    "byte_start": 64826,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1543,
                    "line_start": 1543,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Phoenician\" => Some(Script::Phoenician),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1544:23\n     |\n1544 |             \"Miao\" => Some(Script::Miao),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64878,
                    "byte_start": 64874,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1544,
                    "line_start": 1544,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Miao\" => Some(Script::Miao),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1545:41\n     |\n1545 |             \"Inscriptional_Parthian\" => Some(Script::Inscriptional_Parthian),\n     |                                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 64938,
                    "byte_start": 64934,
                    "column_end": 45,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1545,
                    "line_start": 1545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 41,
                        "text": "            \"Inscriptional_Parthian\" => Some(Script::Inscriptional_Parthian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1546:25\n     |\n1546 |             \"Rejang\" => Some(Script::Rejang),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65000,
                    "byte_start": 64996,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1546,
                    "line_start": 1546,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Rejang\" => Some(Script::Rejang),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1547:34\n     |\n1547 |             \"Hanifi_Rohingya\" => Some(Script::Hanifi_Rohingya),\n     |                                  ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65055,
                    "byte_start": 65051,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1547,
                    "line_start": 1547,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "            \"Hanifi_Rohingya\" => Some(Script::Hanifi_Rohingya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1548:24\n     |\n1548 |             \"Runic\" => Some(Script::Runic),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65109,
                    "byte_start": 65105,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1548,
                    "line_start": 1548,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Runic\" => Some(Script::Runic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1549:28\n     |\n1549 |             \"Samaritan\" => Some(Script::Samaritan),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65157,
                    "byte_start": 65153,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1549,
                    "line_start": 1549,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Samaritan\" => Some(Script::Samaritan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1550:36\n     |\n1550 |             \"Old_South_Arabian\" => Some(Script::Old_South_Arabian),\n     |                                    ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65217,
                    "byte_start": 65213,
                    "column_end": 40,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1550,
                    "line_start": 1550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 36,
                        "text": "            \"Old_South_Arabian\" => Some(Script::Old_South_Arabian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1551:29\n     |\n1551 |             \"Saurashtra\" => Some(Script::Saurashtra),\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65278,
                    "byte_start": 65274,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1551,
                    "line_start": 1551,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            \"Saurashtra\" => Some(Script::Saurashtra),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1552:30\n     |\n1552 |             \"SignWriting\" => Some(Script::SignWriting),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65333,
                    "byte_start": 65329,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1552,
                    "line_start": 1552,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"SignWriting\" => Some(Script::SignWriting),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1553:26\n     |\n1553 |             \"Shavian\" => Some(Script::Shavian),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65385,
                    "byte_start": 65381,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1553,
                    "line_start": 1553,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Shavian\" => Some(Script::Shavian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1554:26\n     |\n1554 |             \"Sharada\" => Some(Script::Sharada),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65433,
                    "byte_start": 65429,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1554,
                    "line_start": 1554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Sharada\" => Some(Script::Sharada),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1555:26\n     |\n1555 |             \"Siddham\" => Some(Script::Siddham),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65481,
                    "byte_start": 65477,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1555,
                    "line_start": 1555,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Siddham\" => Some(Script::Siddham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1556:28\n     |\n1556 |             \"Khudawadi\" => Some(Script::Khudawadi),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65531,
                    "byte_start": 65527,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1556,
                    "line_start": 1556,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Khudawadi\" => Some(Script::Khudawadi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1557:26\n     |\n1557 |             \"Sinhala\" => Some(Script::Sinhala),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65581,
                    "byte_start": 65577,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1557,
                    "line_start": 1557,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Sinhala\" => Some(Script::Sinhala),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1558:26\n     |\n1558 |             \"Sogdian\" => Some(Script::Sogdian),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65629,
                    "byte_start": 65625,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1558,
                    "line_start": 1558,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Sogdian\" => Some(Script::Sogdian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1559:30\n     |\n1559 |             \"Old_Sogdian\" => Some(Script::Old_Sogdian),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65681,
                    "byte_start": 65677,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1559,
                    "line_start": 1559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Old_Sogdian\" => Some(Script::Old_Sogdian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1560:31\n     |\n1560 |             \"Sora_Sompeng\" => Some(Script::Sora_Sompeng),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65738,
                    "byte_start": 65734,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1560,
                    "line_start": 1560,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Sora_Sompeng\" => Some(Script::Sora_Sompeng),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1561:26\n     |\n1561 |             \"Soyombo\" => Some(Script::Soyombo),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65791,
                    "byte_start": 65787,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1561,
                    "line_start": 1561,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Soyombo\" => Some(Script::Soyombo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1562:28\n     |\n1562 |             \"Sundanese\" => Some(Script::Sundanese),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65841,
                    "byte_start": 65837,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1562,
                    "line_start": 1562,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Sundanese\" => Some(Script::Sundanese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1563:26\n     |\n1563 |             \"Sunuwar\" => Some(Script::Sunuwar),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65891,
                    "byte_start": 65887,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1563,
                    "line_start": 1563,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Sunuwar\" => Some(Script::Sunuwar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1564:31\n     |\n1564 |             \"Syloti_Nagri\" => Some(Script::Syloti_Nagri),\n     |                               ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65944,
                    "byte_start": 65940,
                    "column_end": 35,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1564,
                    "line_start": 1564,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 31,
                        "text": "            \"Syloti_Nagri\" => Some(Script::Syloti_Nagri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1565:25\n     |\n1565 |             \"Syriac\" => Some(Script::Syriac),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 65996,
                    "byte_start": 65992,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1565,
                    "line_start": 1565,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Syriac\" => Some(Script::Syriac),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1566:27\n     |\n1566 |             \"Tagbanwa\" => Some(Script::Tagbanwa),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66044,
                    "byte_start": 66040,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1566,
                    "line_start": 1566,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Tagbanwa\" => Some(Script::Tagbanwa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1567:24\n     |\n1567 |             \"Takri\" => Some(Script::Takri),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66091,
                    "byte_start": 66087,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1567,
                    "line_start": 1567,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Takri\" => Some(Script::Takri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1568:25\n     |\n1568 |             \"Tai_Le\" => Some(Script::Tai_Le),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66136,
                    "byte_start": 66132,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1568,
                    "line_start": 1568,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Tai_Le\" => Some(Script::Tai_Le),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1569:30\n     |\n1569 |             \"New_Tai_Lue\" => Some(Script::New_Tai_Lue),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66187,
                    "byte_start": 66183,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1569,
                    "line_start": 1569,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"New_Tai_Lue\" => Some(Script::New_Tai_Lue),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1570:24\n     |\n1570 |             \"Tamil\" => Some(Script::Tamil),\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66237,
                    "byte_start": 66233,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1570,
                    "line_start": 1570,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            \"Tamil\" => Some(Script::Tamil),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1571:25\n     |\n1571 |             \"Tangut\" => Some(Script::Tangut),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66282,
                    "byte_start": 66278,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1571,
                    "line_start": 1571,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Tangut\" => Some(Script::Tangut),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1572:27\n     |\n1572 |             \"Tai_Viet\" => Some(Script::Tai_Viet),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66330,
                    "byte_start": 66326,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1572,
                    "line_start": 1572,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Tai_Viet\" => Some(Script::Tai_Viet),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1573:25\n     |\n1573 |             \"Telugu\" => Some(Script::Telugu),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66378,
                    "byte_start": 66374,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1573,
                    "line_start": 1573,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Telugu\" => Some(Script::Telugu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1574:27\n     |\n1574 |             \"Tifinagh\" => Some(Script::Tifinagh),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66426,
                    "byte_start": 66422,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1574,
                    "line_start": 1574,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Tifinagh\" => Some(Script::Tifinagh),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1575:26\n     |\n1575 |             \"Tagalog\" => Some(Script::Tagalog),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66475,
                    "byte_start": 66471,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1575,
                    "line_start": 1575,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Tagalog\" => Some(Script::Tagalog),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1576:25\n     |\n1576 |             \"Thaana\" => Some(Script::Thaana),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66522,
                    "byte_start": 66518,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1576,
                    "line_start": 1576,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Thaana\" => Some(Script::Thaana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1577:23\n     |\n1577 |             \"Thai\" => Some(Script::Thai),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66566,
                    "byte_start": 66562,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1577,
                    "line_start": 1577,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Thai\" => Some(Script::Thai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1578:26\n     |\n1578 |             \"Tibetan\" => Some(Script::Tibetan),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66611,
                    "byte_start": 66607,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1578,
                    "line_start": 1578,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Tibetan\" => Some(Script::Tibetan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1579:26\n     |\n1579 |             \"Tirhuta\" => Some(Script::Tirhuta),\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66659,
                    "byte_start": 66655,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1579,
                    "line_start": 1579,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            \"Tirhuta\" => Some(Script::Tirhuta),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1580:25\n     |\n1580 |             \"Tangsa\" => Some(Script::Tangsa),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66706,
                    "byte_start": 66702,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1580,
                    "line_start": 1580,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Tangsa\" => Some(Script::Tangsa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1581:25\n     |\n1581 |             \"Todhri\" => Some(Script::Todhri),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66752,
                    "byte_start": 66748,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1581,
                    "line_start": 1581,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Todhri\" => Some(Script::Todhri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1582:23\n     |\n1582 |             \"Toto\" => Some(Script::Toto),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66796,
                    "byte_start": 66792,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1582,
                    "line_start": 1582,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Toto\" => Some(Script::Toto),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1583:32\n     |\n1583 |             \"Tulu_Tigalari\" => Some(Script::Tulu_Tigalari),\n     |                                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66847,
                    "byte_start": 66843,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1583,
                    "line_start": 1583,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "            \"Tulu_Tigalari\" => Some(Script::Tulu_Tigalari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1584:27\n     |\n1584 |             \"Ugaritic\" => Some(Script::Ugaritic),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66902,
                    "byte_start": 66898,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1584,
                    "line_start": 1584,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Ugaritic\" => Some(Script::Ugaritic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1585:22\n     |\n1585 |             \"Vai\" => Some(Script::Vai),\n     |                      ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66947,
                    "byte_start": 66943,
                    "column_end": 26,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1585,
                    "line_start": 1585,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 22,
                        "text": "            \"Vai\" => Some(Script::Vai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1586:27\n     |\n1586 |             \"Vithkuqi\" => Some(Script::Vithkuqi),\n     |                           ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 66992,
                    "byte_start": 66988,
                    "column_end": 31,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1586,
                    "line_start": 1586,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 27,
                        "text": "            \"Vithkuqi\" => Some(Script::Vithkuqi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1587:30\n     |\n1587 |             \"Warang_Citi\" => Some(Script::Warang_Citi),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67045,
                    "byte_start": 67041,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1587,
                    "line_start": 1587,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Warang_Citi\" => Some(Script::Warang_Citi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1588:25\n     |\n1588 |             \"Wancho\" => Some(Script::Wancho),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67096,
                    "byte_start": 67092,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1588,
                    "line_start": 1588,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Wancho\" => Some(Script::Wancho),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1589:30\n     |\n1589 |             \"Old_Persian\" => Some(Script::Old_Persian),\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67147,
                    "byte_start": 67143,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1589,
                    "line_start": 1589,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "            \"Old_Persian\" => Some(Script::Old_Persian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1590:28\n     |\n1590 |             \"Cuneiform\" => Some(Script::Cuneiform),\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67201,
                    "byte_start": 67197,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1590,
                    "line_start": 1590,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            \"Cuneiform\" => Some(Script::Cuneiform),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1591:25\n     |\n1591 |             \"Yezidi\" => Some(Script::Yezidi),\n     |                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67250,
                    "byte_start": 67246,
                    "column_end": 29,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1591,
                    "line_start": 1591,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 25,
                        "text": "            \"Yezidi\" => Some(Script::Yezidi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1592:21\n     |\n1592 |             \"Yi\" => Some(Script::Yi),\n     |                     ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67292,
                    "byte_start": 67288,
                    "column_end": 25,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1592,
                    "line_start": 1592,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 21,
                        "text": "            \"Yi\" => Some(Script::Yi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1593:35\n     |\n1593 |             \"Zanabazar_Square\" => Some(Script::Zanabazar_Square),\n     |                                   ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 67344,
                    "byte_start": 67340,
                    "column_end": 39,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1593,
                    "line_start": 1593,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 35,
                        "text": "            \"Zanabazar_Square\" => Some(Script::Zanabazar_Square),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1594:18\n     |\n1594 |             _ => None,\n     |                  ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n19   + use core::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 67393,
                    "byte_start": 67389,
                    "column_end": 22,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1594,
                    "line_start": 1594,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 18,
                        "text": "            _ => None,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1776:57\n     |\n1776 |     pub(crate) fn inner_from_short_name(input: &str) -> Option<Self> {\n     |                                                         ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n19   + use core::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 74518,
                    "byte_start": 74512,
                    "column_end": 63,
                    "column_start": 57,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1776,
                    "line_start": 1776,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 63,
                        "highlight_start": 57,
                        "text": "    pub(crate) fn inner_from_short_name(input: &str) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1778:23\n     |\n1778 |             \"Zyyy\" => Some(Script::Common),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74575,
                    "byte_start": 74571,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1778,
                    "line_start": 1778,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Zyyy\" => Some(Script::Common),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1779:23\n     |\n1779 |             \"Zinh\" => Some(Script::Inherited),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74619,
                    "byte_start": 74615,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1779,
                    "line_start": 1779,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Zinh\" => Some(Script::Inherited),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1780:23\n     |\n1780 |             \"Adlm\" => Some(Script::Adlam),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74666,
                    "byte_start": 74662,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1780,
                    "line_start": 1780,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Adlm\" => Some(Script::Adlam),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1781:23\n     |\n1781 |             \"Aghb\" => Some(Script::Caucasian_Albanian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74709,
                    "byte_start": 74705,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1781,
                    "line_start": 1781,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Aghb\" => Some(Script::Caucasian_Albanian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1782:23\n     |\n1782 |             \"Ahom\" => Some(Script::Ahom),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74765,
                    "byte_start": 74761,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1782,
                    "line_start": 1782,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ahom\" => Some(Script::Ahom),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1783:23\n     |\n1783 |             \"Arab\" => Some(Script::Arabic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74807,
                    "byte_start": 74803,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1783,
                    "line_start": 1783,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Arab\" => Some(Script::Arabic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1784:23\n     |\n1784 |             \"Armi\" => Some(Script::Imperial_Aramaic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74851,
                    "byte_start": 74847,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1784,
                    "line_start": 1784,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Armi\" => Some(Script::Imperial_Aramaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1785:23\n     |\n1785 |             \"Armn\" => Some(Script::Armenian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74905,
                    "byte_start": 74901,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1785,
                    "line_start": 1785,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Armn\" => Some(Script::Armenian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1786:23\n     |\n1786 |             \"Avst\" => Some(Script::Avestan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74951,
                    "byte_start": 74947,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1786,
                    "line_start": 1786,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Avst\" => Some(Script::Avestan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1787:23\n     |\n1787 |             \"Bali\" => Some(Script::Balinese),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 74996,
                    "byte_start": 74992,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1787,
                    "line_start": 1787,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bali\" => Some(Script::Balinese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1788:23\n     |\n1788 |             \"Bamu\" => Some(Script::Bamum),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75042,
                    "byte_start": 75038,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1788,
                    "line_start": 1788,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bamu\" => Some(Script::Bamum),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1789:23\n     |\n1789 |             \"Bass\" => Some(Script::Bassa_Vah),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75085,
                    "byte_start": 75081,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1789,
                    "line_start": 1789,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bass\" => Some(Script::Bassa_Vah),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1790:23\n     |\n1790 |             \"Batk\" => Some(Script::Batak),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75132,
                    "byte_start": 75128,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1790,
                    "line_start": 1790,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Batk\" => Some(Script::Batak),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1791:23\n     |\n1791 |             \"Beng\" => Some(Script::Bengali),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75175,
                    "byte_start": 75171,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1791,
                    "line_start": 1791,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Beng\" => Some(Script::Bengali),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1792:23\n     |\n1792 |             \"Bhks\" => Some(Script::Bhaiksuki),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75220,
                    "byte_start": 75216,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1792,
                    "line_start": 1792,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bhks\" => Some(Script::Bhaiksuki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1793:23\n     |\n1793 |             \"Bopo\" => Some(Script::Bopomofo),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75267,
                    "byte_start": 75263,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1793,
                    "line_start": 1793,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bopo\" => Some(Script::Bopomofo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1794:23\n     |\n1794 |             \"Brah\" => Some(Script::Brahmi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75313,
                    "byte_start": 75309,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1794,
                    "line_start": 1794,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Brah\" => Some(Script::Brahmi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1795:23\n     |\n1795 |             \"Brai\" => Some(Script::Braille),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75357,
                    "byte_start": 75353,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1795,
                    "line_start": 1795,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Brai\" => Some(Script::Braille),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1796:23\n     |\n1796 |             \"Bugi\" => Some(Script::Buginese),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75402,
                    "byte_start": 75398,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1796,
                    "line_start": 1796,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Bugi\" => Some(Script::Buginese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1797:23\n     |\n1797 |             \"Buhd\" => Some(Script::Buhid),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75448,
                    "byte_start": 75444,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1797,
                    "line_start": 1797,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Buhd\" => Some(Script::Buhid),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1798:23\n     |\n1798 |             \"Cakm\" => Some(Script::Chakma),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75491,
                    "byte_start": 75487,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1798,
                    "line_start": 1798,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cakm\" => Some(Script::Chakma),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1799:23\n     |\n1799 |             \"Cans\" => Some(Script::Canadian_Aboriginal),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75535,
                    "byte_start": 75531,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1799,
                    "line_start": 1799,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cans\" => Some(Script::Canadian_Aboriginal),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1800:23\n     |\n1800 |             \"Cari\" => Some(Script::Carian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75592,
                    "byte_start": 75588,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1800,
                    "line_start": 1800,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cari\" => Some(Script::Carian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1801:23\n     |\n1801 |             \"Cham\" => Some(Script::Cham),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75636,
                    "byte_start": 75632,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1801,
                    "line_start": 1801,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cham\" => Some(Script::Cham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1802:23\n     |\n1802 |             \"Cher\" => Some(Script::Cherokee),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75678,
                    "byte_start": 75674,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1802,
                    "line_start": 1802,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cher\" => Some(Script::Cherokee),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1803:23\n     |\n1803 |             \"Chrs\" => Some(Script::Chorasmian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75724,
                    "byte_start": 75720,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1803,
                    "line_start": 1803,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Chrs\" => Some(Script::Chorasmian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1804:23\n     |\n1804 |             \"Copt\" => Some(Script::Coptic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75772,
                    "byte_start": 75768,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1804,
                    "line_start": 1804,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Copt\" => Some(Script::Coptic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1805:23\n     |\n1805 |             \"Cpmn\" => Some(Script::Cypro_Minoan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75816,
                    "byte_start": 75812,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1805,
                    "line_start": 1805,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cpmn\" => Some(Script::Cypro_Minoan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1806:23\n     |\n1806 |             \"Cprt\" => Some(Script::Cypriot),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75866,
                    "byte_start": 75862,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1806,
                    "line_start": 1806,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cprt\" => Some(Script::Cypriot),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1807:23\n     |\n1807 |             \"Cyrl\" => Some(Script::Cyrillic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75911,
                    "byte_start": 75907,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1807,
                    "line_start": 1807,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Cyrl\" => Some(Script::Cyrillic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1808:23\n     |\n1808 |             \"Deva\" => Some(Script::Devanagari),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 75957,
                    "byte_start": 75953,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1808,
                    "line_start": 1808,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Deva\" => Some(Script::Devanagari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1809:23\n     |\n1809 |             \"Diak\" => Some(Script::Dives_Akuru),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76005,
                    "byte_start": 76001,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1809,
                    "line_start": 1809,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Diak\" => Some(Script::Dives_Akuru),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1810:23\n     |\n1810 |             \"Dogr\" => Some(Script::Dogra),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76054,
                    "byte_start": 76050,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1810,
                    "line_start": 1810,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Dogr\" => Some(Script::Dogra),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1811:23\n     |\n1811 |             \"Dsrt\" => Some(Script::Deseret),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76097,
                    "byte_start": 76093,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1811,
                    "line_start": 1811,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Dsrt\" => Some(Script::Deseret),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1812:23\n     |\n1812 |             \"Dupl\" => Some(Script::Duployan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76142,
                    "byte_start": 76138,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1812,
                    "line_start": 1812,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Dupl\" => Some(Script::Duployan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1813:23\n     |\n1813 |             \"Egyp\" => Some(Script::Egyptian_Hieroglyphs),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76188,
                    "byte_start": 76184,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1813,
                    "line_start": 1813,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Egyp\" => Some(Script::Egyptian_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1814:23\n     |\n1814 |             \"Elba\" => Some(Script::Elbasan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76246,
                    "byte_start": 76242,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1814,
                    "line_start": 1814,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Elba\" => Some(Script::Elbasan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1815:23\n     |\n1815 |             \"Elym\" => Some(Script::Elymaic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76291,
                    "byte_start": 76287,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1815,
                    "line_start": 1815,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Elym\" => Some(Script::Elymaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1816:23\n     |\n1816 |             \"Ethi\" => Some(Script::Ethiopic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76336,
                    "byte_start": 76332,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1816,
                    "line_start": 1816,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ethi\" => Some(Script::Ethiopic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1817:23\n     |\n1817 |             \"Gara\" => Some(Script::Garay),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76382,
                    "byte_start": 76378,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1817,
                    "line_start": 1817,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gara\" => Some(Script::Garay),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1818:23\n     |\n1818 |             \"Geor\" => Some(Script::Georgian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76425,
                    "byte_start": 76421,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1818,
                    "line_start": 1818,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Geor\" => Some(Script::Georgian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1819:23\n     |\n1819 |             \"Glag\" => Some(Script::Glagolitic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76471,
                    "byte_start": 76467,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1819,
                    "line_start": 1819,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Glag\" => Some(Script::Glagolitic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1820:23\n     |\n1820 |             \"Gong\" => Some(Script::Gunjala_Gondi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76519,
                    "byte_start": 76515,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1820,
                    "line_start": 1820,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gong\" => Some(Script::Gunjala_Gondi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1821:23\n     |\n1821 |             \"Gonm\" => Some(Script::Masaram_Gondi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76570,
                    "byte_start": 76566,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1821,
                    "line_start": 1821,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gonm\" => Some(Script::Masaram_Gondi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1822:23\n     |\n1822 |             \"Goth\" => Some(Script::Gothic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76621,
                    "byte_start": 76617,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1822,
                    "line_start": 1822,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Goth\" => Some(Script::Gothic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1823:23\n     |\n1823 |             \"Gran\" => Some(Script::Grantha),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76665,
                    "byte_start": 76661,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1823,
                    "line_start": 1823,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gran\" => Some(Script::Grantha),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1824:23\n     |\n1824 |             \"Grek\" => Some(Script::Greek),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76710,
                    "byte_start": 76706,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1824,
                    "line_start": 1824,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Grek\" => Some(Script::Greek),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1825:23\n     |\n1825 |             \"Gujr\" => Some(Script::Gujarati),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76753,
                    "byte_start": 76749,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1825,
                    "line_start": 1825,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gujr\" => Some(Script::Gujarati),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1826:23\n     |\n1826 |             \"Gukh\" => Some(Script::Gurung_Khema),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76799,
                    "byte_start": 76795,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1826,
                    "line_start": 1826,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Gukh\" => Some(Script::Gurung_Khema),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1827:23\n     |\n1827 |             \"Guru\" => Some(Script::Gurmukhi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76849,
                    "byte_start": 76845,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1827,
                    "line_start": 1827,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Guru\" => Some(Script::Gurmukhi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1828:23\n     |\n1828 |             \"Hang\" => Some(Script::Hangul),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76895,
                    "byte_start": 76891,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1828,
                    "line_start": 1828,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hang\" => Some(Script::Hangul),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1829:23\n     |\n1829 |             \"Hani\" => Some(Script::Han),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76939,
                    "byte_start": 76935,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1829,
                    "line_start": 1829,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hani\" => Some(Script::Han),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1830:23\n     |\n1830 |             \"Hano\" => Some(Script::Hanunoo),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 76980,
                    "byte_start": 76976,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1830,
                    "line_start": 1830,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hano\" => Some(Script::Hanunoo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1831:23\n     |\n1831 |             \"Hatr\" => Some(Script::Hatran),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77025,
                    "byte_start": 77021,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1831,
                    "line_start": 1831,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hatr\" => Some(Script::Hatran),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1832:23\n     |\n1832 |             \"Hebr\" => Some(Script::Hebrew),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77069,
                    "byte_start": 77065,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1832,
                    "line_start": 1832,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hebr\" => Some(Script::Hebrew),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1833:23\n     |\n1833 |             \"Hira\" => Some(Script::Hiragana),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77113,
                    "byte_start": 77109,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1833,
                    "line_start": 1833,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hira\" => Some(Script::Hiragana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1834:23\n     |\n1834 |             \"Hluw\" => Some(Script::Anatolian_Hieroglyphs),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77159,
                    "byte_start": 77155,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1834,
                    "line_start": 1834,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hluw\" => Some(Script::Anatolian_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1835:23\n     |\n1835 |             \"Hmng\" => Some(Script::Pahawh_Hmong),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77218,
                    "byte_start": 77214,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1835,
                    "line_start": 1835,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hmng\" => Some(Script::Pahawh_Hmong),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1836:23\n     |\n1836 |             \"Hmnp\" => Some(Script::Nyiakeng_Puachue_Hmong),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77268,
                    "byte_start": 77264,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1836,
                    "line_start": 1836,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hmnp\" => Some(Script::Nyiakeng_Puachue_Hmong),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1837:23\n     |\n1837 |             \"Hung\" => Some(Script::Old_Hungarian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77328,
                    "byte_start": 77324,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1837,
                    "line_start": 1837,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Hung\" => Some(Script::Old_Hungarian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1838:23\n     |\n1838 |             \"Ital\" => Some(Script::Old_Italic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77379,
                    "byte_start": 77375,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1838,
                    "line_start": 1838,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ital\" => Some(Script::Old_Italic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1839:23\n     |\n1839 |             \"Java\" => Some(Script::Javanese),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77427,
                    "byte_start": 77423,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1839,
                    "line_start": 1839,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Java\" => Some(Script::Javanese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1840:23\n     |\n1840 |             \"Kali\" => Some(Script::Kayah_Li),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77473,
                    "byte_start": 77469,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1840,
                    "line_start": 1840,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kali\" => Some(Script::Kayah_Li),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1841:23\n     |\n1841 |             \"Kana\" => Some(Script::Katakana),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77519,
                    "byte_start": 77515,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1841,
                    "line_start": 1841,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kana\" => Some(Script::Katakana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1842:23\n     |\n1842 |             \"Kawi\" => Some(Script::Kawi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77565,
                    "byte_start": 77561,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1842,
                    "line_start": 1842,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kawi\" => Some(Script::Kawi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1843:23\n     |\n1843 |             \"Khar\" => Some(Script::Kharoshthi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77607,
                    "byte_start": 77603,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1843,
                    "line_start": 1843,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Khar\" => Some(Script::Kharoshthi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1844:23\n     |\n1844 |             \"Khmr\" => Some(Script::Khmer),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77655,
                    "byte_start": 77651,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1844,
                    "line_start": 1844,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Khmr\" => Some(Script::Khmer),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1845:23\n     |\n1845 |             \"Khoj\" => Some(Script::Khojki),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77698,
                    "byte_start": 77694,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1845,
                    "line_start": 1845,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Khoj\" => Some(Script::Khojki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1846:23\n     |\n1846 |             \"Kits\" => Some(Script::Khitan_Small_Script),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77742,
                    "byte_start": 77738,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1846,
                    "line_start": 1846,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kits\" => Some(Script::Khitan_Small_Script),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1847:23\n     |\n1847 |             \"Knda\" => Some(Script::Kannada),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77799,
                    "byte_start": 77795,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1847,
                    "line_start": 1847,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Knda\" => Some(Script::Kannada),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1848:23\n     |\n1848 |             \"Krai\" => Some(Script::Kirat_Rai),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77844,
                    "byte_start": 77840,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1848,
                    "line_start": 1848,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Krai\" => Some(Script::Kirat_Rai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1849:23\n     |\n1849 |             \"Kthi\" => Some(Script::Kaithi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77891,
                    "byte_start": 77887,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1849,
                    "line_start": 1849,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Kthi\" => Some(Script::Kaithi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1850:23\n     |\n1850 |             \"Lana\" => Some(Script::Tai_Tham),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77935,
                    "byte_start": 77931,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1850,
                    "line_start": 1850,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lana\" => Some(Script::Tai_Tham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1851:23\n     |\n1851 |             \"Laoo\" => Some(Script::Lao),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 77981,
                    "byte_start": 77977,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1851,
                    "line_start": 1851,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Laoo\" => Some(Script::Lao),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1852:23\n     |\n1852 |             \"Latn\" => Some(Script::Latin),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78022,
                    "byte_start": 78018,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1852,
                    "line_start": 1852,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Latn\" => Some(Script::Latin),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1853:23\n     |\n1853 |             \"Lepc\" => Some(Script::Lepcha),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78065,
                    "byte_start": 78061,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1853,
                    "line_start": 1853,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lepc\" => Some(Script::Lepcha),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1854:23\n     |\n1854 |             \"Limb\" => Some(Script::Limbu),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78109,
                    "byte_start": 78105,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1854,
                    "line_start": 1854,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Limb\" => Some(Script::Limbu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1855:23\n     |\n1855 |             \"Lina\" => Some(Script::Linear_A),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78152,
                    "byte_start": 78148,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1855,
                    "line_start": 1855,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lina\" => Some(Script::Linear_A),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1856:23\n     |\n1856 |             \"Linb\" => Some(Script::Linear_B),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78198,
                    "byte_start": 78194,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1856,
                    "line_start": 1856,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Linb\" => Some(Script::Linear_B),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1857:23\n     |\n1857 |             \"Lisu\" => Some(Script::Lisu),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78244,
                    "byte_start": 78240,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1857,
                    "line_start": 1857,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lisu\" => Some(Script::Lisu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1858:23\n     |\n1858 |             \"Lyci\" => Some(Script::Lycian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78286,
                    "byte_start": 78282,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1858,
                    "line_start": 1858,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lyci\" => Some(Script::Lycian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1859:23\n     |\n1859 |             \"Lydi\" => Some(Script::Lydian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78330,
                    "byte_start": 78326,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1859,
                    "line_start": 1859,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Lydi\" => Some(Script::Lydian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1860:23\n     |\n1860 |             \"Mahj\" => Some(Script::Mahajani),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78374,
                    "byte_start": 78370,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1860,
                    "line_start": 1860,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mahj\" => Some(Script::Mahajani),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1861:23\n     |\n1861 |             \"Maka\" => Some(Script::Makasar),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78420,
                    "byte_start": 78416,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1861,
                    "line_start": 1861,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Maka\" => Some(Script::Makasar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1862:23\n     |\n1862 |             \"Mand\" => Some(Script::Mandaic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78465,
                    "byte_start": 78461,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1862,
                    "line_start": 1862,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mand\" => Some(Script::Mandaic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1863:23\n     |\n1863 |             \"Mani\" => Some(Script::Manichaean),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78510,
                    "byte_start": 78506,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1863,
                    "line_start": 1863,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mani\" => Some(Script::Manichaean),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1864:23\n     |\n1864 |             \"Marc\" => Some(Script::Marchen),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78558,
                    "byte_start": 78554,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1864,
                    "line_start": 1864,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Marc\" => Some(Script::Marchen),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1865:23\n     |\n1865 |             \"Medf\" => Some(Script::Medefaidrin),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78603,
                    "byte_start": 78599,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1865,
                    "line_start": 1865,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Medf\" => Some(Script::Medefaidrin),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1866:23\n     |\n1866 |             \"Mend\" => Some(Script::Mende_Kikakui),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78652,
                    "byte_start": 78648,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1866,
                    "line_start": 1866,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mend\" => Some(Script::Mende_Kikakui),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1867:23\n     |\n1867 |             \"Merc\" => Some(Script::Meroitic_Cursive),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78703,
                    "byte_start": 78699,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1867,
                    "line_start": 1867,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Merc\" => Some(Script::Meroitic_Cursive),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1868:23\n     |\n1868 |             \"Mero\" => Some(Script::Meroitic_Hieroglyphs),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78757,
                    "byte_start": 78753,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1868,
                    "line_start": 1868,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mero\" => Some(Script::Meroitic_Hieroglyphs),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1869:23\n     |\n1869 |             \"Mlym\" => Some(Script::Malayalam),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78815,
                    "byte_start": 78811,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1869,
                    "line_start": 1869,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mlym\" => Some(Script::Malayalam),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1870:23\n     |\n1870 |             \"Modi\" => Some(Script::Modi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78862,
                    "byte_start": 78858,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1870,
                    "line_start": 1870,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Modi\" => Some(Script::Modi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1871:23\n     |\n1871 |             \"Mong\" => Some(Script::Mongolian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78904,
                    "byte_start": 78900,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1871,
                    "line_start": 1871,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mong\" => Some(Script::Mongolian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1872:23\n     |\n1872 |             \"Mroo\" => Some(Script::Mro),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78951,
                    "byte_start": 78947,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1872,
                    "line_start": 1872,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mroo\" => Some(Script::Mro),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1873:23\n     |\n1873 |             \"Mtei\" => Some(Script::Meetei_Mayek),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 78992,
                    "byte_start": 78988,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1873,
                    "line_start": 1873,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mtei\" => Some(Script::Meetei_Mayek),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1874:23\n     |\n1874 |             \"Mult\" => Some(Script::Multani),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79042,
                    "byte_start": 79038,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1874,
                    "line_start": 1874,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mult\" => Some(Script::Multani),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1875:23\n     |\n1875 |             \"Mymr\" => Some(Script::Myanmar),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79087,
                    "byte_start": 79083,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1875,
                    "line_start": 1875,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Mymr\" => Some(Script::Myanmar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1876:23\n     |\n1876 |             \"Nagm\" => Some(Script::Nag_Mundari),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79132,
                    "byte_start": 79128,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1876,
                    "line_start": 1876,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Nagm\" => Some(Script::Nag_Mundari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1877:23\n     |\n1877 |             \"Nand\" => Some(Script::Nandinagari),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79181,
                    "byte_start": 79177,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1877,
                    "line_start": 1877,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Nand\" => Some(Script::Nandinagari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1878:23\n     |\n1878 |             \"Narb\" => Some(Script::Old_North_Arabian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79230,
                    "byte_start": 79226,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1878,
                    "line_start": 1878,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Narb\" => Some(Script::Old_North_Arabian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1879:23\n     |\n1879 |             \"Nbat\" => Some(Script::Nabataean),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79285,
                    "byte_start": 79281,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1879,
                    "line_start": 1879,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Nbat\" => Some(Script::Nabataean),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1880:23\n     |\n1880 |             \"Newa\" => Some(Script::Newa),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79332,
                    "byte_start": 79328,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1880,
                    "line_start": 1880,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Newa\" => Some(Script::Newa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1881:23\n     |\n1881 |             \"Nkoo\" => Some(Script::Nko),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79374,
                    "byte_start": 79370,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1881,
                    "line_start": 1881,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Nkoo\" => Some(Script::Nko),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1882:23\n     |\n1882 |             \"Nshu\" => Some(Script::Nushu),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79415,
                    "byte_start": 79411,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1882,
                    "line_start": 1882,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Nshu\" => Some(Script::Nushu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1883:23\n     |\n1883 |             \"Ogam\" => Some(Script::Ogham),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79458,
                    "byte_start": 79454,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1883,
                    "line_start": 1883,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ogam\" => Some(Script::Ogham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1884:23\n     |\n1884 |             \"Olck\" => Some(Script::Ol_Chiki),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79501,
                    "byte_start": 79497,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1884,
                    "line_start": 1884,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Olck\" => Some(Script::Ol_Chiki),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1885:23\n     |\n1885 |             \"Onao\" => Some(Script::Ol_Onal),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79547,
                    "byte_start": 79543,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1885,
                    "line_start": 1885,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Onao\" => Some(Script::Ol_Onal),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1886:23\n     |\n1886 |             \"Orkh\" => Some(Script::Old_Turkic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79592,
                    "byte_start": 79588,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1886,
                    "line_start": 1886,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Orkh\" => Some(Script::Old_Turkic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1887:23\n     |\n1887 |             \"Orya\" => Some(Script::Oriya),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79640,
                    "byte_start": 79636,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1887,
                    "line_start": 1887,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Orya\" => Some(Script::Oriya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1888:23\n     |\n1888 |             \"Osge\" => Some(Script::Osage),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79683,
                    "byte_start": 79679,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1888,
                    "line_start": 1888,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Osge\" => Some(Script::Osage),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1889:23\n     |\n1889 |             \"Osma\" => Some(Script::Osmanya),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79726,
                    "byte_start": 79722,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1889,
                    "line_start": 1889,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Osma\" => Some(Script::Osmanya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1890:23\n     |\n1890 |             \"Ougr\" => Some(Script::Old_Uyghur),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79771,
                    "byte_start": 79767,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1890,
                    "line_start": 1890,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ougr\" => Some(Script::Old_Uyghur),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1891:23\n     |\n1891 |             \"Palm\" => Some(Script::Palmyrene),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79819,
                    "byte_start": 79815,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1891,
                    "line_start": 1891,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Palm\" => Some(Script::Palmyrene),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1892:23\n     |\n1892 |             \"Pauc\" => Some(Script::Pau_Cin_Hau),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79866,
                    "byte_start": 79862,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1892,
                    "line_start": 1892,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Pauc\" => Some(Script::Pau_Cin_Hau),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1893:23\n     |\n1893 |             \"Perm\" => Some(Script::Old_Permic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79915,
                    "byte_start": 79911,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1893,
                    "line_start": 1893,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Perm\" => Some(Script::Old_Permic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1894:23\n     |\n1894 |             \"Phag\" => Some(Script::Phags_Pa),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 79963,
                    "byte_start": 79959,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1894,
                    "line_start": 1894,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Phag\" => Some(Script::Phags_Pa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1895:23\n     |\n1895 |             \"Phli\" => Some(Script::Inscriptional_Pahlavi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80009,
                    "byte_start": 80005,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1895,
                    "line_start": 1895,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Phli\" => Some(Script::Inscriptional_Pahlavi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1896:23\n     |\n1896 |             \"Phlp\" => Some(Script::Psalter_Pahlavi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80068,
                    "byte_start": 80064,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1896,
                    "line_start": 1896,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Phlp\" => Some(Script::Psalter_Pahlavi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1897:23\n     |\n1897 |             \"Phnx\" => Some(Script::Phoenician),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80121,
                    "byte_start": 80117,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1897,
                    "line_start": 1897,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Phnx\" => Some(Script::Phoenician),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1898:23\n     |\n1898 |             \"Plrd\" => Some(Script::Miao),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80169,
                    "byte_start": 80165,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1898,
                    "line_start": 1898,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Plrd\" => Some(Script::Miao),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1899:23\n     |\n1899 |             \"Prti\" => Some(Script::Inscriptional_Parthian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80211,
                    "byte_start": 80207,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1899,
                    "line_start": 1899,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Prti\" => Some(Script::Inscriptional_Parthian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1900:23\n     |\n1900 |             \"Rjng\" => Some(Script::Rejang),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80271,
                    "byte_start": 80267,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1900,
                    "line_start": 1900,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Rjng\" => Some(Script::Rejang),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1901:23\n     |\n1901 |             \"Rohg\" => Some(Script::Hanifi_Rohingya),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80315,
                    "byte_start": 80311,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1901,
                    "line_start": 1901,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Rohg\" => Some(Script::Hanifi_Rohingya),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1902:23\n     |\n1902 |             \"Runr\" => Some(Script::Runic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80368,
                    "byte_start": 80364,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1902,
                    "line_start": 1902,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Runr\" => Some(Script::Runic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1903:23\n     |\n1903 |             \"Samr\" => Some(Script::Samaritan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80411,
                    "byte_start": 80407,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1903,
                    "line_start": 1903,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Samr\" => Some(Script::Samaritan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1904:23\n     |\n1904 |             \"Sarb\" => Some(Script::Old_South_Arabian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80458,
                    "byte_start": 80454,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1904,
                    "line_start": 1904,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sarb\" => Some(Script::Old_South_Arabian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1905:23\n     |\n1905 |             \"Saur\" => Some(Script::Saurashtra),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80513,
                    "byte_start": 80509,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1905,
                    "line_start": 1905,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Saur\" => Some(Script::Saurashtra),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1906:23\n     |\n1906 |             \"Sgnw\" => Some(Script::SignWriting),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80561,
                    "byte_start": 80557,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1906,
                    "line_start": 1906,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sgnw\" => Some(Script::SignWriting),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1907:23\n     |\n1907 |             \"Shaw\" => Some(Script::Shavian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80610,
                    "byte_start": 80606,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1907,
                    "line_start": 1907,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Shaw\" => Some(Script::Shavian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1908:23\n     |\n1908 |             \"Shrd\" => Some(Script::Sharada),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80655,
                    "byte_start": 80651,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1908,
                    "line_start": 1908,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Shrd\" => Some(Script::Sharada),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1909:23\n     |\n1909 |             \"Sidd\" => Some(Script::Siddham),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80700,
                    "byte_start": 80696,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1909,
                    "line_start": 1909,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sidd\" => Some(Script::Siddham),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1910:23\n     |\n1910 |             \"Sind\" => Some(Script::Khudawadi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80745,
                    "byte_start": 80741,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1910,
                    "line_start": 1910,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sind\" => Some(Script::Khudawadi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1911:23\n     |\n1911 |             \"Sinh\" => Some(Script::Sinhala),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80792,
                    "byte_start": 80788,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1911,
                    "line_start": 1911,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sinh\" => Some(Script::Sinhala),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1912:23\n     |\n1912 |             \"Sogd\" => Some(Script::Sogdian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80837,
                    "byte_start": 80833,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1912,
                    "line_start": 1912,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sogd\" => Some(Script::Sogdian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1913:23\n     |\n1913 |             \"Sogo\" => Some(Script::Old_Sogdian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80882,
                    "byte_start": 80878,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1913,
                    "line_start": 1913,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sogo\" => Some(Script::Old_Sogdian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1914:23\n     |\n1914 |             \"Sora\" => Some(Script::Sora_Sompeng),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80931,
                    "byte_start": 80927,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1914,
                    "line_start": 1914,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sora\" => Some(Script::Sora_Sompeng),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1915:23\n     |\n1915 |             \"Soyo\" => Some(Script::Soyombo),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 80981,
                    "byte_start": 80977,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1915,
                    "line_start": 1915,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Soyo\" => Some(Script::Soyombo),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1916:23\n     |\n1916 |             \"Sund\" => Some(Script::Sundanese),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81026,
                    "byte_start": 81022,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1916,
                    "line_start": 1916,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sund\" => Some(Script::Sundanese),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1917:23\n     |\n1917 |             \"Sunu\" => Some(Script::Sunuwar),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81073,
                    "byte_start": 81069,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1917,
                    "line_start": 1917,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sunu\" => Some(Script::Sunuwar),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1918:23\n     |\n1918 |             \"Sylo\" => Some(Script::Syloti_Nagri),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81118,
                    "byte_start": 81114,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1918,
                    "line_start": 1918,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Sylo\" => Some(Script::Syloti_Nagri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1919:23\n     |\n1919 |             \"Syrc\" => Some(Script::Syriac),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81168,
                    "byte_start": 81164,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1919,
                    "line_start": 1919,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Syrc\" => Some(Script::Syriac),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1920:23\n     |\n1920 |             \"Tagb\" => Some(Script::Tagbanwa),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81212,
                    "byte_start": 81208,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1920,
                    "line_start": 1920,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tagb\" => Some(Script::Tagbanwa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1921:23\n     |\n1921 |             \"Takr\" => Some(Script::Takri),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81258,
                    "byte_start": 81254,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1921,
                    "line_start": 1921,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Takr\" => Some(Script::Takri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1922:23\n     |\n1922 |             \"Tale\" => Some(Script::Tai_Le),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81301,
                    "byte_start": 81297,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1922,
                    "line_start": 1922,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tale\" => Some(Script::Tai_Le),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1923:23\n     |\n1923 |             \"Talu\" => Some(Script::New_Tai_Lue),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81345,
                    "byte_start": 81341,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1923,
                    "line_start": 1923,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Talu\" => Some(Script::New_Tai_Lue),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1924:23\n     |\n1924 |             \"Taml\" => Some(Script::Tamil),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81394,
                    "byte_start": 81390,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1924,
                    "line_start": 1924,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Taml\" => Some(Script::Tamil),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1925:23\n     |\n1925 |             \"Tang\" => Some(Script::Tangut),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81437,
                    "byte_start": 81433,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1925,
                    "line_start": 1925,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tang\" => Some(Script::Tangut),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1926:23\n     |\n1926 |             \"Tavt\" => Some(Script::Tai_Viet),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81481,
                    "byte_start": 81477,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1926,
                    "line_start": 1926,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tavt\" => Some(Script::Tai_Viet),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1927:23\n     |\n1927 |             \"Telu\" => Some(Script::Telugu),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81527,
                    "byte_start": 81523,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1927,
                    "line_start": 1927,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Telu\" => Some(Script::Telugu),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1928:23\n     |\n1928 |             \"Tfng\" => Some(Script::Tifinagh),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81571,
                    "byte_start": 81567,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1928,
                    "line_start": 1928,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tfng\" => Some(Script::Tifinagh),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1929:23\n     |\n1929 |             \"Tglg\" => Some(Script::Tagalog),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81617,
                    "byte_start": 81613,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1929,
                    "line_start": 1929,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tglg\" => Some(Script::Tagalog),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1930:23\n     |\n1930 |             \"Thaa\" => Some(Script::Thaana),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81662,
                    "byte_start": 81658,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1930,
                    "line_start": 1930,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Thaa\" => Some(Script::Thaana),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1931:23\n     |\n1931 |             \"Thai\" => Some(Script::Thai),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81706,
                    "byte_start": 81702,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1931,
                    "line_start": 1931,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Thai\" => Some(Script::Thai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1932:23\n     |\n1932 |             \"Tibt\" => Some(Script::Tibetan),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81748,
                    "byte_start": 81744,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1932,
                    "line_start": 1932,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tibt\" => Some(Script::Tibetan),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1933:23\n     |\n1933 |             \"Tirh\" => Some(Script::Tirhuta),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81793,
                    "byte_start": 81789,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1933,
                    "line_start": 1933,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tirh\" => Some(Script::Tirhuta),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1934:23\n     |\n1934 |             \"Tnsa\" => Some(Script::Tangsa),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81838,
                    "byte_start": 81834,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1934,
                    "line_start": 1934,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tnsa\" => Some(Script::Tangsa),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1935:23\n     |\n1935 |             \"Todr\" => Some(Script::Todhri),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81882,
                    "byte_start": 81878,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1935,
                    "line_start": 1935,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Todr\" => Some(Script::Todhri),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1936:23\n     |\n1936 |             \"Toto\" => Some(Script::Toto),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81926,
                    "byte_start": 81922,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1936,
                    "line_start": 1936,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Toto\" => Some(Script::Toto),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1937:23\n     |\n1937 |             \"Tutg\" => Some(Script::Tulu_Tigalari),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 81968,
                    "byte_start": 81964,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1937,
                    "line_start": 1937,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Tutg\" => Some(Script::Tulu_Tigalari),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1938:23\n     |\n1938 |             \"Ugar\" => Some(Script::Ugaritic),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82019,
                    "byte_start": 82015,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1938,
                    "line_start": 1938,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Ugar\" => Some(Script::Ugaritic),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1939:23\n     |\n1939 |             \"Vaii\" => Some(Script::Vai),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82065,
                    "byte_start": 82061,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1939,
                    "line_start": 1939,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Vaii\" => Some(Script::Vai),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1940:23\n     |\n1940 |             \"Vith\" => Some(Script::Vithkuqi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82106,
                    "byte_start": 82102,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1940,
                    "line_start": 1940,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Vith\" => Some(Script::Vithkuqi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1941:23\n     |\n1941 |             \"Wara\" => Some(Script::Warang_Citi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82152,
                    "byte_start": 82148,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1941,
                    "line_start": 1941,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Wara\" => Some(Script::Warang_Citi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1942:23\n     |\n1942 |             \"Wcho\" => Some(Script::Wancho),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82201,
                    "byte_start": 82197,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1942,
                    "line_start": 1942,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Wcho\" => Some(Script::Wancho),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1943:23\n     |\n1943 |             \"Xpeo\" => Some(Script::Old_Persian),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82245,
                    "byte_start": 82241,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1943,
                    "line_start": 1943,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Xpeo\" => Some(Script::Old_Persian),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1944:23\n     |\n1944 |             \"Xsux\" => Some(Script::Cuneiform),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82294,
                    "byte_start": 82290,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1944,
                    "line_start": 1944,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Xsux\" => Some(Script::Cuneiform),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1945:23\n     |\n1945 |             \"Yezi\" => Some(Script::Yezidi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82341,
                    "byte_start": 82337,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1945,
                    "line_start": 1945,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Yezi\" => Some(Script::Yezidi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1946:23\n     |\n1946 |             \"Yiii\" => Some(Script::Yi),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82385,
                    "byte_start": 82381,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1946,
                    "line_start": 1946,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Yiii\" => Some(Script::Yi),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1947:23\n     |\n1947 |             \"Zanb\" => Some(Script::Zanabazar_Square),\n     |                       ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 82425,
                    "byte_start": 82421,
                    "column_end": 27,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1947,
                    "line_start": 1947,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 23,
                        "text": "            \"Zanb\" => Some(Script::Zanabazar_Square),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:1948:14\n     |\n1948 |         _ => None,\n     |              ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n19   + use core::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 82470,
                    "byte_start": 82466,
                    "column_end": 18,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1948,
                    "line_start": 1948,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 14,
                        "text": "        _ => None,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Copy` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2129:37\n     |\n2129 | pub fn bsearch_range_value_table<T: Copy>(c: char, r: &'static [(char, char, T)]) -> Option<T> {\n     |                                     ^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n19   + use core::marker::Copy;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::marker::Copy;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Copy` in this scope",
                "spans": [
                  {
                    "byte_end": 88860,
                    "byte_start": 88856,
                    "column_end": 41,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2129,
                    "line_start": 2129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 37,
                        "text": "pub fn bsearch_range_value_table<T: Copy>(c: char, r: &'static [(char, char, T)]) -> Option<T> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2129:86\n     |\n2129 | pub fn bsearch_range_value_table<T: Copy>(c: char, r: &'static [(char, char, T)]) -> Option<T> {\n     |                                                                                      ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n19   + use core::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 88911,
                    "byte_start": 88905,
                    "column_end": 92,
                    "column_start": 86,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2129,
                    "line_start": 2129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 92,
                        "highlight_start": 86,
                        "text": "pub fn bsearch_range_value_table<T: Copy>(c: char, r: &'static [(char, char, T)]) -> Option<T> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2136:9\n     |\n2136 |         Ok(idx) => {\n     |         ^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::result::Result::Ok;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 89132,
                    "byte_start": 89130,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2136,
                    "line_start": 2136,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "        Ok(idx) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2138:13\n     |\n2138 |             Some(cat)\n     |             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 89197,
                    "byte_start": 89193,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2138,
                    "line_start": 2138,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(cat)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2140:9\n     |\n2140 |         Err(_) => None\n     |         ^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n19   + use core::result::Result::Err;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 89224,
                    "byte_start": 89221,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2140,
                    "line_start": 2140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "        Err(_) => None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2140:19\n     |\n2140 |         Err(_) => None\n     |                   ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n19   + use core::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 89235,
                    "byte_start": 89231,
                    "column_end": 23,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2140,
                    "line_start": 2140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 19,
                        "text": "        Err(_) => None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2145:31\n     |\n2145 | pub fn get_script(c: char) -> Option<Script> {\n     |                               ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n19   + use core::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 89291,
                    "byte_start": 89285,
                    "column_end": 37,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2145,
                    "line_start": 2145,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 31,
                        "text": "pub fn get_script(c: char) -> Option<Script> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs:2150:41\n     |\n2150 | pub fn get_script_extension(c: char) -> Option<ScriptExtension> {\n     |                                         ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n19   + use core::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 686,
                        "byte_start": 686,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 19,
                        "line_start": 19,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::ScriptExtension;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 89403,
                    "byte_start": 89397,
                    "column_end": 47,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 2150,
                    "line_start": 2150,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 41,
                        "text": "pub fn get_script_extension(c: char) -> Option<ScriptExtension> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:25:43\n   |\n25 |     pub fn from_full_name(input: &str) -> Option<Self> {\n   |                                           ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n9  + use core::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 774,
                    "byte_start": 768,
                    "column_end": 49,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 25,
                    "line_start": 25,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 43,
                        "text": "    pub fn from_full_name(input: &str) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:37:44\n   |\n37 |     pub fn from_short_name(input: &str) -> Option<Self> {\n   |                                            ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n9  + use core::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 1200,
                    "byte_start": 1194,
                    "column_end": 50,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 37,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 44,
                        "text": "    pub fn from_short_name(input: &str) -> Option<Self> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:55:6\n   |\n55 | impl From<Script> for ScriptExtension {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n9  + use core::convert::From;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 1877,
                    "byte_start": 1873,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 55,
                    "line_start": 55,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<Script> for ScriptExtension {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:85:42\n   |\n85 |     fn try_from(ext: ScriptExtension) -> Result<Self, ()> {\n   |                                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n9  + use crate::fmt::Result;\n   |\n9  + use core::fmt::Result;\n   |\n9  + use core::result::Result;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use crate::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      },
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      },
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 2965,
                    "byte_start": 2959,
                    "column_end": 48,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 85,
                    "line_start": 85,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 42,
                        "text": "    fn try_from(ext: ScriptExtension) -> Result<Self, ()> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:88:17\n   |\n88 |                 Ok(Script::Common)\n   |                 ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n9  + use core::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3066,
                    "byte_start": 3064,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(Script::Common)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:90:17\n   |\n90 |                 Ok(Script::Inherited)\n   |                 ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n9  + use core::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3122,
                    "byte_start": 3120,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 90,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(Script::Inherited)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:93:13\n   |\n93 |             Ok(Script::Unknown)\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n9  + use core::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3205,
                    "byte_start": 3203,
                    "column_end": 15,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 93,
                    "line_start": 93,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 13,
                        "text": "            Ok(Script::Unknown)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:102:17\n    |\n102 |                 Ok(Script::for_integer(ext.first.trailing_zeros() as u8))\n    |                 ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3614,
                    "byte_start": 3612,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 102,
                    "line_start": 102,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(Script::for_integer(ext.first.trailing_zeros() as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:105:17\n    |\n105 |                 Ok(Script::for_integer(64 + ext.second.trailing_zeros() as u8))\n    |                 ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3795,
                    "byte_start": 3793,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(Script::for_integer(64 + ext.second.trailing_zeros() as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:108:17\n    |\n108 |                 Ok(Script::for_integer(128 + ext.third.trailing_zeros() as u8))\n    |                 ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3981,
                    "byte_start": 3979,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 108,
                    "line_start": 108,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(Script::for_integer(128 + ext.third.trailing_zeros() as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:110:17\n    |\n110 |                 Err(())\n    |                 ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 4083,
                    "byte_start": 4080,
                    "column_end": 20,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 17,
                        "text": "                Err(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Default` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:116:6\n    |\n116 | impl Default for Script {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::default::Default;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::default::Default;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Default` in this scope",
                "spans": [
                  {
                    "byte_end": 4133,
                    "byte_start": 4126,
                    "column_end": 13,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 116,
                    "line_start": 116,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 6,
                        "text": "impl Default for Script {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:122:6\n    |\n122 | impl From<char> for Script {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::convert::From;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 4215,
                    "byte_start": 4211,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 122,
                    "line_start": 122,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<char> for Script {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Default` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:296:6\n    |\n296 | impl Default for ScriptExtension {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::default::Default;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::default::Default;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Default` in this scope",
                "spans": [
                  {
                    "byte_end": 9722,
                    "byte_start": 9715,
                    "column_end": 13,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 296,
                    "line_start": 296,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 6,
                        "text": "impl Default for ScriptExtension {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:302:6\n    |\n302 | impl From<char> for ScriptExtension {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::convert::From;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 9828,
                    "byte_start": 9824,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 302,
                    "line_start": 302,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<char> for ScriptExtension {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:308:6\n    |\n308 | impl From<&'_ str> for ScriptExtension {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::convert::From;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 9935,
                    "byte_start": 9931,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 308,
                    "line_start": 308,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<&'_ str> for ScriptExtension {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:340:9\n    |\n340 |         Ok(())\n    |         ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 10841,
                    "byte_start": 10839,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 340,
                    "line_start": 340,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "        Ok(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:369:6\n    |\n369 | impl Iterator for ScriptIterator {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n9   + use core::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 11564,
                    "byte_start": 11556,
                    "column_end": 14,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 369,
                    "line_start": 369,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 6,
                        "text": "impl Iterator for ScriptIterator {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:372:27\n    |\n372 |     fn next(&mut self) -> Option<Script> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n9   + use core::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 11643,
                    "byte_start": 11637,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 372,
                    "line_start": 372,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Script> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:377:17\n    |\n377 |                 Some(Script::Common)\n    |                 ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 11842,
                    "byte_start": 11838,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 377,
                    "line_start": 377,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "                Some(Script::Common)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:379:17\n    |\n379 |                 Some(Script::Inherited)\n    |                 ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 11900,
                    "byte_start": 11896,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 379,
                    "line_start": 379,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "                Some(Script::Inherited)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:387:13\n    |\n387 |             Some(Script::for_integer(bit as u8))\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 12207,
                    "byte_start": 12203,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 387,
                    "line_start": 387,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(Script::for_integer(bit as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:392:13\n    |\n392 |             Some(Script::for_integer(64 + bit as u8))\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 12449,
                    "byte_start": 12445,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 392,
                    "line_start": 392,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(Script::for_integer(64 + bit as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:397:13\n    |\n397 |             Some(Script::for_integer(128 + bit as u8))\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n9   + use core::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 12692,
                    "byte_start": 12688,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 397,
                    "line_start": 397,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(Script::for_integer(128 + bit as u8))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs:400:13\n    |\n400 |             None\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n9   + use core::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 229,
                        "byte_start": 229,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 9,
                        "line_start": 9,
                        "suggested_replacement": "use core::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use core::convert::TryFrom;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 12795,
                    "byte_start": 12791,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 400,
                    "line_start": 400,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0405, E0412, E0425, E0531, E0786.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0405, E0412, E0425, E0531, E0786.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-script@0.5.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_script",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-script-0.5.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0405`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0405`.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\data_source.rs:43:56\n   |\n43 |     fn bidi_matched_opening_bracket(&self, c: char) -> Option<BidiMatchedOpeningBracket> {\n   |                                                        ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n10 + use std::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 427,
                        "byte_start": 427,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\data_source.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use crate::BidiClass;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 2148,
                    "byte_start": 2142,
                    "column_end": 62,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\data_source.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 56,
                        "text": "    fn bidi_matched_opening_bracket(&self, c: char) -> Option<BidiMatchedOpeningBracket> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:82:31\n   |\n82 |     pub fn new(number: u8) -> Result<Level, Error> {\n   |                               ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n16 + use std::fmt::Result;\n   |\n16 + use std::io::Result;\n   |\n16 + use std::result::Result;\n   |\n16 + use std::thread::Result;\n   |\n     and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 2622,
                    "byte_start": 2616,
                    "column_end": 37,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 31,
                        "text": "    pub fn new(number: u8) -> Result<Level, Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:84:13\n   |\n84 |             Ok(Level(number))\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use std::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 2695,
                    "byte_start": 2693,
                    "column_end": 15,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 13,
                        "text": "            Ok(Level(number))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:86:13\n   |\n86 |             Err(Error::OutOfRangeNumber)\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use std::result::Result::Err;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 2743,
                    "byte_start": 2740,
                    "column_end": 16,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 86,
                    "line_start": 86,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 13,
                        "text": "            Err(Error::OutOfRangeNumber)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:92:40\n   |\n92 |     pub fn new_explicit(number: u8) -> Result<Level, Error> {\n   |                                        ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n16 + use std::fmt::Result;\n   |\n16 + use std::io::Result;\n   |\n16 + use std::result::Result;\n   |\n16 + use std::thread::Result;\n   |\n     and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 2914,
                    "byte_start": 2908,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 92,
                    "line_start": 92,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "    pub fn new_explicit(number: u8) -> Result<Level, Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:94:13\n   |\n94 |             Ok(Level(number))\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use std::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 2987,
                    "byte_start": 2985,
                    "column_end": 15,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 94,
                    "line_start": 94,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 13,
                        "text": "            Ok(Level(number))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:96:13\n   |\n96 |             Err(Error::OutOfRangeNumber)\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n16 + use std::result::Result::Err;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 3035,
                    "byte_start": 3032,
                    "column_end": 16,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 96,
                    "line_start": 96,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 13,
                        "text": "            Err(Error::OutOfRangeNumber)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:124:44\n    |\n124 |     pub fn raise(&mut self, amount: u8) -> Result<(), Error> {\n    |                                            ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 3603,
                    "byte_start": 3597,
                    "column_end": 50,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 124,
                    "line_start": 124,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 44,
                        "text": "    pub fn raise(&mut self, amount: u8) -> Result<(), Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:126:13\n    |\n126 |             Some(number) => {\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 3676,
                    "byte_start": 3672,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 126,
                    "line_start": 126,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(number) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:129:21\n    |\n129 |                     Ok(())\n    |                     ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 3799,
                    "byte_start": 3797,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 129,
                    "line_start": 129,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "                    Ok(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:131:21\n    |\n131 |                     Err(Error::OutOfRangeNumber)\n    |                     ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 3852,
                    "byte_start": 3849,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "                    Err(Error::OutOfRangeNumber)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:134:21\n    |\n134 |             None => Err(Error::OutOfRangeNumber),\n    |                     ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 3933,
                    "byte_start": 3930,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 134,
                    "line_start": 134,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "            None => Err(Error::OutOfRangeNumber),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:140:53\n    |\n140 |     pub fn raise_explicit(&mut self, amount: u8) -> Result<(), Error> {\n    |                                                     ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 4125,
                    "byte_start": 4119,
                    "column_end": 59,
                    "column_start": 53,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 140,
                    "line_start": 140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 53,
                        "text": "    pub fn raise_explicit(&mut self, amount: u8) -> Result<(), Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:142:13\n    |\n142 |             Some(number) => {\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 4198,
                    "byte_start": 4194,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 142,
                    "line_start": 142,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(number) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:145:21\n    |\n145 |                     Ok(())\n    |                     ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 4321,
                    "byte_start": 4319,
                    "column_end": 23,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 145,
                    "line_start": 145,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 21,
                        "text": "                    Ok(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:147:21\n    |\n147 |                     Err(Error::OutOfRangeNumber)\n    |                     ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 4374,
                    "byte_start": 4371,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 147,
                    "line_start": 147,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "                    Err(Error::OutOfRangeNumber)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:150:21\n    |\n150 |             None => Err(Error::OutOfRangeNumber),\n    |                     ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 4455,
                    "byte_start": 4452,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 150,
                    "line_start": 150,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "            None => Err(Error::OutOfRangeNumber),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:156:44\n    |\n156 |     pub fn lower(&mut self, amount: u8) -> Result<(), Error> {\n    |                                            ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 4627,
                    "byte_start": 4621,
                    "column_end": 50,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 156,
                    "line_start": 156,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 44,
                        "text": "    pub fn lower(&mut self, amount: u8) -> Result<(), Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:158:13\n    |\n158 |             Some(number) => {\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 4700,
                    "byte_start": 4696,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 158,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(number) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:160:17\n    |\n160 |                 Ok(())\n    |                 ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 4765,
                    "byte_start": 4763,
                    "column_end": 19,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 160,
                    "line_start": 160,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 17,
                        "text": "                Ok(())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Err` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:162:21\n    |\n162 |             None => Err(Error::OutOfRangeNumber),\n    |                     ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n16  + use std::result::Result::Err;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 4807,
                    "byte_start": 4804,
                    "column_end": 24,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 162,
                    "line_start": 162,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 21,
                        "text": "            None => Err(Error::OutOfRangeNumber),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:170:44\n    |\n170 |     pub fn new_explicit_next_ltr(&self) -> Result<Level, Error> {\n    |                                            ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 5035,
                    "byte_start": 5029,
                    "column_end": 50,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 170,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 44,
                        "text": "    pub fn new_explicit_next_ltr(&self) -> Result<Level, Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:176:44\n    |\n176 |     pub fn new_explicit_next_rtl(&self) -> Result<Level, Error> {\n    |                                            ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 5267,
                    "byte_start": 5261,
                    "column_end": 50,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 176,
                    "line_start": 176,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 44,
                        "text": "    pub fn new_explicit_next_rtl(&self) -> Result<Level, Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Result` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:183:40\n    |\n183 |     pub fn new_lowest_ge_rtl(&self) -> Result<Level, Error> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n16  + use std::fmt::Result;\n    |\n16  + use std::io::Result;\n    |\n16  + use std::result::Result;\n    |\n16  + use std::thread::Result;\n    |\n      and 3 other candidates\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these items",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::io::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::thread::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use core::result::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use alloc::fmt::Result;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Result` in this scope",
                "spans": [
                  {
                    "byte_end": 5520,
                    "byte_start": 5514,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 183,
                    "line_start": 183,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "    pub fn new_lowest_ge_rtl(&self) -> Result<Level, Error> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:223:6\n    |\n223 | impl From<Level> for u8 {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n16  + use std::convert::From;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 6821,
                    "byte_start": 6817,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 223,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<Level> for u8 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `From` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:231:6\n    |\n231 | impl From<u8> for Level {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n16  + use std::convert::From;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::convert::From;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `From` in this scope",
                "spans": [
                  {
                    "byte_end": 6961,
                    "byte_start": 6957,
                    "column_end": 10,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 231,
                    "line_start": 231,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 10,
                        "highlight_start": 6,
                        "text": "impl From<u8> for Level {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `PartialEq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:240:10\n    |\n240 | impl<'a> PartialEq<&'a str> for Level {\n    |          ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n16  + use crate::cmp::PartialEq;\n    |\n16  + use std::cmp::PartialEq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use crate::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `PartialEq` in this scope",
                "spans": [
                  {
                    "byte_end": 7191,
                    "byte_start": 7182,
                    "column_end": 19,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 240,
                    "line_start": 240,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 10,
                        "text": "impl<'a> PartialEq<&'a str> for Level {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `PartialEq` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs:248:6\n    |\n248 | impl PartialEq<String> for Level {\n    |      ^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these traits\n    |\n16  + use crate::cmp::PartialEq;\n    |\n16  + use std::cmp::PartialEq;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing one of these traits",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use crate::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      },
                      {
                        "byte_end": 562,
                        "byte_start": 562,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 16,
                        "line_start": 16,
                        "suggested_replacement": "use std::cmp::PartialEq;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `PartialEq` in this scope",
                "spans": [
                  {
                    "byte_end": 7386,
                    "byte_start": 7377,
                    "column_end": 15,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\level.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 248,
                    "line_start": 248,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 15,
                        "highlight_start": 6,
                        "text": "impl PartialEq<String> for Level {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:56:50\n   |\n56 |     pub fn new(text: &[u16], default_para_level: Option<Level>) -> InitialInfo<'_> {\n   |                                                  ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n10 + use std::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 2129,
                    "byte_start": 2123,
                    "column_end": 56,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 56,
                    "line_start": 56,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 50,
                        "text": "    pub fn new(text: &[u16], default_para_level: Option<Level>) -> InitialInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:73:29\n   |\n73 |         default_para_level: Option<Level>,\n   |                             ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n10 + use std::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 3084,
                    "byte_start": 3078,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:105:29\n    |\n105 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 4565,
                    "byte_start": 4559,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:113:13\n    |\n113 |             Some((&mut paragraphs, &mut flags)),\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 4875,
                    "byte_start": 4871,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 113,
                    "line_start": 113,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some((&mut paragraphs, &mut flags)),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:164:50\n    |\n164 |     pub fn new(text: &[u16], default_para_level: Option<Level>) -> BidiInfo<'_> {\n    |                                                  ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 6739,
                    "byte_start": 6733,
                    "column_end": 56,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 164,
                    "line_start": 164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 50,
                        "text": "    pub fn new(text: &[u16], default_para_level: Option<Level>) -> BidiInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:180:29\n    |\n180 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 7602,
                    "byte_start": 7596,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 180,
                    "line_start": 180,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:399:50\n    |\n399 |     pub fn new(text: &[u16], default_para_level: Option<Level>) -> ParagraphBidiInfo<'_> {\n    |                                                  ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 16528,
                    "byte_start": 16522,
                    "column_end": 56,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 399,
                    "line_start": 399,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 50,
                        "text": "    pub fn new(text: &[u16], default_para_level: Option<Level>) -> ParagraphBidiInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:413:29\n    |\n413 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 17236,
                    "byte_start": 17230,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 413,
                    "line_start": 413,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:418:73\n    |\n418 |             compute_initial_info(data_source, text, default_para_level, None);\n    |                                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 17603,
                    "byte_start": 17599,
                    "column_end": 77,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 418,
                    "line_start": 418,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 73,
                        "text": "            compute_initial_info(data_source, text, default_para_level, None);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:634:40\n    |\n634 |     fn char_at(&self, index: usize) -> Option<(char, usize)> {\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 24869,
                    "byte_start": 24863,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 634,
                    "line_start": 634,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "    fn char_at(&self, index: usize) -> Option<(char, usize)> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:636:20\n    |\n636 |             return None;\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 24943,
                    "byte_start": 24939,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 636,
                    "line_start": 636,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:641:16\n    |\n641 |         if let Some(ch) = char::from_u32(c.into()) {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 25143,
                    "byte_start": 25139,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 641,
                    "line_start": 641,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some(ch) = char::from_u32(c.into()) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:642:20\n    |\n642 |             return Some((ch, 1));\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 25200,
                    "byte_start": 25196,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 642,
                    "line_start": 642,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some((ch, 1));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:647:20\n    |\n647 |             return None;\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 25498,
                    "byte_start": 25494,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 647,
                    "line_start": 647,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:650:16\n    |\n650 |         if let Some(ch) = char::decode_utf16(self[index..].iter().cloned()).next() {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 25610,
                    "byte_start": 25606,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 650,
                    "line_start": 650,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some(ch) = char::decode_utf16(self[index..].iter().cloned()).next() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:651:20\n    |\n651 |             if let Ok(ch) = ch {\n    |                    ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::result::Result::Ok;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 25697,
                    "byte_start": 25695,
                    "column_end": 22,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 651,
                    "line_start": 651,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 20,
                        "text": "            if let Ok(ch) = ch {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:655:24\n    |\n655 |                 return Some((ch, ch.len_utf16()));\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 25953,
                    "byte_start": 25949,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 655,
                    "line_start": 655,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                return Some((ch, ch.len_utf16()));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:662:20\n    |\n662 |             return None;\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 26174,
                    "byte_start": 26170,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 662,
                    "line_start": 662,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:667:9\n    |\n667 |         Some((char::REPLACEMENT_CHARACTER, 1))\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 26414,
                    "byte_start": 26410,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 667,
                    "line_start": 667,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        Some((char::REPLACEMENT_CHARACTER, 1))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:705:6\n    |\n705 | impl Iterator for Utf16IndexLenIter<'_> {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n10  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 27330,
                    "byte_start": 27322,
                    "column_end": 14,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 705,
                    "line_start": 705,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 6,
                        "text": "impl Iterator for Utf16IndexLenIter<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:709:27\n    |\n709 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 27438,
                    "byte_start": 27432,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 709,
                    "line_start": 709,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:710:16\n    |\n710 |         if let Some((_, char_len)) = self.text.char_at(self.cur_pos) {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 27472,
                    "byte_start": 27468,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 710,
                    "line_start": 710,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some((_, char_len)) = self.text.char_at(self.cur_pos) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:713:20\n    |\n713 |             return Some(result);\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 27636,
                    "byte_start": 27632,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 713,
                    "line_start": 713,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some(result);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:715:9\n    |\n715 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 27668,
                    "byte_start": 27664,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 715,
                    "line_start": 715,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:732:6\n    |\n732 | impl Iterator for Utf16CharIndexIter<'_> {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n10  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 28015,
                    "byte_start": 28007,
                    "column_end": 14,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 732,
                    "line_start": 732,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 6,
                        "text": "impl Iterator for Utf16CharIndexIter<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:735:27\n    |\n735 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 28109,
                    "byte_start": 28103,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 735,
                    "line_start": 735,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:736:16\n    |\n736 |         if let Some((ch, char_len)) = self.text.char_at(self.cur_pos) {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 28143,
                    "byte_start": 28139,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 736,
                    "line_start": 736,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some((ch, char_len)) = self.text.char_at(self.cur_pos) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:739:20\n    |\n739 |             return Some(result);\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 28302,
                    "byte_start": 28298,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 739,
                    "line_start": 739,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some(result);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:741:9\n    |\n741 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 28334,
                    "byte_start": 28330,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 741,
                    "line_start": 741,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:764:6\n    |\n764 | impl Iterator for Utf16CharIter<'_> {\n    |      ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n10  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 28824,
                    "byte_start": 28816,
                    "column_end": 14,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 764,
                    "line_start": 764,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 6,
                        "text": "impl Iterator for Utf16CharIter<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:767:27\n    |\n767 |     fn next(&mut self) -> Option<Self::Item> {\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 28904,
                    "byte_start": 28898,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 767,
                    "line_start": 767,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:768:16\n    |\n768 |         if let Some((ch, char_len)) = self.text.char_at(self.cur_pos) {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 28938,
                    "byte_start": 28934,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 768,
                    "line_start": 768,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some((ch, char_len)) = self.text.char_at(self.cur_pos) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:770:20\n    |\n770 |             return Some(ch);\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29052,
                    "byte_start": 29048,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 770,
                    "line_start": 770,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some(ch);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:772:9\n    |\n772 |         None\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 29080,
                    "byte_start": 29076,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 772,
                    "line_start": 772,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `DoubleEndedIterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:776:6\n    |\n776 | impl DoubleEndedIterator for Utf16CharIter<'_> {\n    |      ^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n10  + use std::iter::DoubleEndedIterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::iter::DoubleEndedIterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `DoubleEndedIterator` in this scope",
                "spans": [
                  {
                    "byte_end": 29114,
                    "byte_start": 29095,
                    "column_end": 25,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 776,
                    "line_start": 776,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 6,
                        "text": "impl DoubleEndedIterator for Utf16CharIter<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:777:32\n    |\n777 |     fn next_back(&mut self) -> Option<Self::Item> {\n    |                                ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n10  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 29176,
                    "byte_start": 29170,
                    "column_end": 38,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 777,
                    "line_start": 777,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 32,
                        "text": "    fn next_back(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:779:20\n    |\n779 |             return None;\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n10  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 29256,
                    "byte_start": 29252,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 779,
                    "line_start": 779,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:782:16\n    |\n782 |         if let Some(ch) = char::from_u32(self.text[self.end_pos] as u32) {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29314,
                    "byte_start": 29310,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 782,
                    "line_start": 782,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some(ch) = char::from_u32(self.text[self.end_pos] as u32) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:783:20\n    |\n783 |             return Some(ch);\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29393,
                    "byte_start": 29389,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 783,
                    "line_start": 783,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some(ch);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:786:20\n    |\n786 |             if let Some((ch, char_len)) = self.text.char_at(self.end_pos - 1) {\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29473,
                    "byte_start": 29469,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 786,
                    "line_start": 786,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            if let Some((ch, char_len)) = self.text.char_at(self.end_pos - 1) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:789:28\n    |\n789 |                     return Some(ch);\n    |                            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29635,
                    "byte_start": 29631,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 789,
                    "line_start": 789,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "                    return Some(ch);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs:793:9\n    |\n793 |         Some(char::REPLACEMENT_CHARACTER)\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n10  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 421,
                        "byte_start": 421,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 10,
                        "line_start": 10,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::TextSource;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 29695,
                    "byte_start": 29691,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\utf16.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 793,
                    "line_start": 793,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        Some(char::REPLACEMENT_CHARACTER)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:539:52\n    |\n539 | pub const bidi_pairs_table: &'static [(char, char, Option<char>)] = &[\n    |                                                    ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n44  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 48073,
                    "byte_start": 48067,
                    "column_end": 58,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 539,
                    "line_start": 539,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 52,
                        "text": "pub const bidi_pairs_table: &'static [(char, char, Option<char>)] = &["
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:540:26\n    |\n540 |     ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',\n    |                          ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48116,
                    "byte_start": 48112,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 540,
                    "line_start": 540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "    ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:540:54\n    |\n540 |     ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',\n    |                                                      ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48144,
                    "byte_start": 48140,
                    "column_end": 58,
                    "column_start": 54,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 540,
                    "line_start": 540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 54,
                        "text": "    ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:540:82\n    |\n540 |     ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',\n    |                                                                                  ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48172,
                    "byte_start": 48168,
                    "column_end": 86,
                    "column_start": 82,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 540,
                    "line_start": 540,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 82,
                        "text": "    ('\\u{28}', '\\u{29}', None), ('\\u{5b}', '\\u{5d}', None), ('\\u{7b}', '\\u{7d}', None), ('\\u{f3a}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:541:16\n    |\n541 |     '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48206,
                    "byte_start": 48202,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 541,
                    "line_start": 541,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "    '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:541:46\n    |\n541 |     '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',\n    |                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48236,
                    "byte_start": 48232,
                    "column_end": 50,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 541,
                    "line_start": 541,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 46,
                        "text": "    '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:541:78\n    |\n541 |     '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',\n    |                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48268,
                    "byte_start": 48264,
                    "column_end": 82,
                    "column_start": 78,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 541,
                    "line_start": 541,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 82,
                        "highlight_start": 78,
                        "text": "    '\\u{f3b}', None), ('\\u{f3c}', '\\u{f3d}', None), ('\\u{169b}', '\\u{169c}', None), ('\\u{2045}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:542:17\n    |\n542 |     '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',\n    |                 ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48304,
                    "byte_start": 48300,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 542,
                    "line_start": 542,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "    '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:542:49\n    |\n542 |     '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',\n    |                                                 ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48336,
                    "byte_start": 48332,
                    "column_end": 53,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 542,
                    "line_start": 542,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 49,
                        "text": "    '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:542:81\n    |\n542 |     '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',\n    |                                                                                 ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48368,
                    "byte_start": 48364,
                    "column_end": 85,
                    "column_start": 81,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 542,
                    "line_start": 542,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 81,
                        "text": "    '\\u{2046}', None), ('\\u{207d}', '\\u{207e}', None), ('\\u{208d}', '\\u{208e}', None), ('\\u{2308}',"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:543:17\n    |\n543 |     '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),\n    |                 ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48404,
                    "byte_start": 48400,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 543,
                    "line_start": 543,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "    '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:543:49\n    |\n543 |     '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),\n    |                                                 ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48436,
                    "byte_start": 48432,
                    "column_end": 53,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 543,
                    "line_start": 543,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 49,
                        "text": "    '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:543:81\n    |\n543 |     '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),\n    |                                                                                 ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n44  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 48468,
                    "byte_start": 48464,
                    "column_end": 85,
                    "column_start": 81,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 543,
                    "line_start": 543,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 81,
                        "text": "    '\\u{2309}', None), ('\\u{230a}', '\\u{230b}', None), ('\\u{2329}', '\\u{232a}', Some('\\u{3008}')),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:544:30\n    |\n544 |     ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48516,
                    "byte_start": 48512,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 544,
                    "line_start": 544,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:544:62\n    |\n544 |     ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48548,
                    "byte_start": 48544,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 544,
                    "line_start": 544,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:544:94\n    |\n544 |     ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48580,
                    "byte_start": 48576,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 544,
                    "line_start": 544,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2768}', '\\u{2769}', None), ('\\u{276a}', '\\u{276b}', None), ('\\u{276c}', '\\u{276d}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:545:30\n    |\n545 |     ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48616,
                    "byte_start": 48612,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 545,
                    "line_start": 545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:545:62\n    |\n545 |     ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48648,
                    "byte_start": 48644,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 545,
                    "line_start": 545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:545:94\n    |\n545 |     ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48680,
                    "byte_start": 48676,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 545,
                    "line_start": 545,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{276e}', '\\u{276f}', None), ('\\u{2770}', '\\u{2771}', None), ('\\u{2772}', '\\u{2773}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:546:30\n    |\n546 |     ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48716,
                    "byte_start": 48712,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 546,
                    "line_start": 546,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:546:62\n    |\n546 |     ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48748,
                    "byte_start": 48744,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 546,
                    "line_start": 546,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:546:94\n    |\n546 |     ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48780,
                    "byte_start": 48776,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 546,
                    "line_start": 546,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2774}', '\\u{2775}', None), ('\\u{27c5}', '\\u{27c6}', None), ('\\u{27e6}', '\\u{27e7}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:547:30\n    |\n547 |     ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48816,
                    "byte_start": 48812,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 547,
                    "line_start": 547,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:547:62\n    |\n547 |     ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48848,
                    "byte_start": 48844,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 547,
                    "line_start": 547,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:547:94\n    |\n547 |     ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48880,
                    "byte_start": 48876,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 547,
                    "line_start": 547,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{27e8}', '\\u{27e9}', None), ('\\u{27ea}', '\\u{27eb}', None), ('\\u{27ec}', '\\u{27ed}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:548:30\n    |\n548 |     ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48916,
                    "byte_start": 48912,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 548,
                    "line_start": 548,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:548:62\n    |\n548 |     ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48948,
                    "byte_start": 48944,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 548,
                    "line_start": 548,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:548:94\n    |\n548 |     ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 48980,
                    "byte_start": 48976,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 548,
                    "line_start": 548,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{27ee}', '\\u{27ef}', None), ('\\u{2983}', '\\u{2984}', None), ('\\u{2985}', '\\u{2986}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:549:30\n    |\n549 |     ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49016,
                    "byte_start": 49012,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 549,
                    "line_start": 549,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:549:62\n    |\n549 |     ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49048,
                    "byte_start": 49044,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 549,
                    "line_start": 549,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:549:94\n    |\n549 |     ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49080,
                    "byte_start": 49076,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 549,
                    "line_start": 549,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2987}', '\\u{2988}', None), ('\\u{2989}', '\\u{298a}', None), ('\\u{298b}', '\\u{298c}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:550:30\n    |\n550 |     ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49116,
                    "byte_start": 49112,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 550,
                    "line_start": 550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:550:62\n    |\n550 |     ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49148,
                    "byte_start": 49144,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 550,
                    "line_start": 550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:550:94\n    |\n550 |     ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49180,
                    "byte_start": 49176,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 550,
                    "line_start": 550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{298d}', '\\u{2990}', None), ('\\u{298f}', '\\u{298e}', None), ('\\u{2991}', '\\u{2992}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:551:30\n    |\n551 |     ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49216,
                    "byte_start": 49212,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 551,
                    "line_start": 551,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:551:62\n    |\n551 |     ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49248,
                    "byte_start": 49244,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 551,
                    "line_start": 551,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:551:94\n    |\n551 |     ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49280,
                    "byte_start": 49276,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 551,
                    "line_start": 551,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2993}', '\\u{2994}', None), ('\\u{2995}', '\\u{2996}', None), ('\\u{2997}', '\\u{2998}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:552:30\n    |\n552 |     ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49316,
                    "byte_start": 49312,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 552,
                    "line_start": 552,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:552:62\n    |\n552 |     ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49348,
                    "byte_start": 49344,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 552,
                    "line_start": 552,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:552:94\n    |\n552 |     ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49380,
                    "byte_start": 49376,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 552,
                    "line_start": 552,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{29d8}', '\\u{29d9}', None), ('\\u{29da}', '\\u{29db}', None), ('\\u{29fc}', '\\u{29fd}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:553:30\n    |\n553 |     ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49416,
                    "byte_start": 49412,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 553,
                    "line_start": 553,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:553:62\n    |\n553 |     ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49448,
                    "byte_start": 49444,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 553,
                    "line_start": 553,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:553:94\n    |\n553 |     ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49480,
                    "byte_start": 49476,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 553,
                    "line_start": 553,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2e22}', '\\u{2e23}', None), ('\\u{2e24}', '\\u{2e25}', None), ('\\u{2e26}', '\\u{2e27}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:554:30\n    |\n554 |     ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49516,
                    "byte_start": 49512,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 554,
                    "line_start": 554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:554:62\n    |\n554 |     ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49548,
                    "byte_start": 49544,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 554,
                    "line_start": 554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:554:94\n    |\n554 |     ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49580,
                    "byte_start": 49576,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 554,
                    "line_start": 554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2e28}', '\\u{2e29}', None), ('\\u{2e55}', '\\u{2e56}', None), ('\\u{2e57}', '\\u{2e58}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:555:30\n    |\n555 |     ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49616,
                    "byte_start": 49612,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 555,
                    "line_start": 555,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:555:62\n    |\n555 |     ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49648,
                    "byte_start": 49644,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 555,
                    "line_start": 555,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:555:94\n    |\n555 |     ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49680,
                    "byte_start": 49676,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 555,
                    "line_start": 555,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{2e59}', '\\u{2e5a}', None), ('\\u{2e5b}', '\\u{2e5c}', None), ('\\u{3008}', '\\u{3009}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:556:30\n    |\n556 |     ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49716,
                    "byte_start": 49712,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 556,
                    "line_start": 556,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:556:62\n    |\n556 |     ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49748,
                    "byte_start": 49744,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 556,
                    "line_start": 556,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:556:94\n    |\n556 |     ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49780,
                    "byte_start": 49776,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 556,
                    "line_start": 556,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{300a}', '\\u{300b}', None), ('\\u{300c}', '\\u{300d}', None), ('\\u{300e}', '\\u{300f}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:557:30\n    |\n557 |     ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49816,
                    "byte_start": 49812,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 557,
                    "line_start": 557,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:557:62\n    |\n557 |     ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49848,
                    "byte_start": 49844,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 557,
                    "line_start": 557,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:557:94\n    |\n557 |     ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49880,
                    "byte_start": 49876,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 557,
                    "line_start": 557,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{3010}', '\\u{3011}', None), ('\\u{3014}', '\\u{3015}', None), ('\\u{3016}', '\\u{3017}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:558:30\n    |\n558 |     ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49916,
                    "byte_start": 49912,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 558,
                    "line_start": 558,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:558:62\n    |\n558 |     ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49948,
                    "byte_start": 49944,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 558,
                    "line_start": 558,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:558:94\n    |\n558 |     ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 49980,
                    "byte_start": 49976,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 558,
                    "line_start": 558,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{3018}', '\\u{3019}', None), ('\\u{301a}', '\\u{301b}', None), ('\\u{fe59}', '\\u{fe5a}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:559:30\n    |\n559 |     ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50016,
                    "byte_start": 50012,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:559:62\n    |\n559 |     ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50048,
                    "byte_start": 50044,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:559:94\n    |\n559 |     ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50080,
                    "byte_start": 50076,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 559,
                    "line_start": 559,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{fe5b}', '\\u{fe5c}', None), ('\\u{fe5d}', '\\u{fe5e}', None), ('\\u{ff08}', '\\u{ff09}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:560:30\n    |\n560 |     ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50116,
                    "byte_start": 50112,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 560,
                    "line_start": 560,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:560:62\n    |\n560 |     ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),\n    |                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50148,
                    "byte_start": 50144,
                    "column_end": 66,
                    "column_start": 62,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 560,
                    "line_start": 560,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 62,
                        "text": "    ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:560:94\n    |\n560 |     ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),\n    |                                                                                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50180,
                    "byte_start": 50176,
                    "column_end": 98,
                    "column_start": 94,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 560,
                    "line_start": 560,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 98,
                        "highlight_start": 94,
                        "text": "    ('\\u{ff3b}', '\\u{ff3d}', None), ('\\u{ff5b}', '\\u{ff5d}', None), ('\\u{ff5f}', '\\u{ff60}', None),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs:561:30\n    |\n561 |     ('\\u{ff62}', '\\u{ff63}', None)\n    |                              ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n44  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 928,
                        "byte_start": 928,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 44,
                        "line_start": 44,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(feature = \"hardcoded-data\")]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50216,
                    "byte_start": 50212,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\tables.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 561,
                    "line_start": 561,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "    ('\\u{ff62}', '\\u{ff63}', None)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:48:56\n   |\n48 | pub(crate) fn bidi_matched_opening_bracket(c: char) -> Option<BidiMatchedOpeningBracket> {\n   |                                                        ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n14 + use std::option::Option;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 1744,
                    "byte_start": 1738,
                    "column_end": 62,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 56,
                        "text": "pub(crate) fn bidi_matched_opening_bracket(c: char) -> Option<BidiMatchedOpeningBracket> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:52:20\n   |\n52 |             return Some(BidiMatchedOpeningBracket {\n   |                    ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n14 + use std::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 1939,
                    "byte_start": 1935,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 52,
                    "line_start": 52,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some(BidiMatchedOpeningBracket {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:58:5\n   |\n58 |     None\n   |     ^^^^ not found in this scope\n   |\nhelp: consider importing this unit variant\n   |\n14 + use std::option::Option::None;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 2081,
                    "byte_start": 2077,
                    "column_end": 9,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 9,
                        "highlight_start": 5,
                        "text": "    None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:76:9\n   |\n76 |         Ok(idx) => {\n   |         ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n14 + use std::result::Result::Ok;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::result::Result::Ok;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Ok` in this scope",
                "spans": [
                  {
                    "byte_end": 2510,
                    "byte_start": 2508,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 76,
                    "line_start": 76,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 11,
                        "highlight_start": 9,
                        "text": "        Ok(idx) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs:82:9\n   |\n82 |         Err(_) => L,\n   |         ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n14 + use std::result::Result::Err;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 518,
                        "byte_start": 518,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::result::Result::Err;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use self::tables::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Err` in this scope",
                "spans": [
                  {
                    "byte_end": 2743,
                    "byte_start": 2740,
                    "column_end": 12,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\char_data\\mod.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 82,
                    "line_start": 82,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 12,
                        "highlight_start": 9,
                        "text": "        Err(_) => L,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:34:41\n   |\n34 | pub fn compute<'a, T: TextSource<'a> + ?Sized>(\n   |                                         ^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n17 + use std::marker::Sized;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 612,
                        "byte_start": 612,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 17,
                        "line_start": 17,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use super::char_data::{"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 1228,
                    "byte_start": 1223,
                    "column_end": 46,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 41,
                        "text": "pub fn compute<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:27:46\n   |\n27 | pub fn resolve_weak<'a, T: TextSource<'a> + ?Sized>(\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n12 + use std::marker::Sized;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 982,
                    "byte_start": 977,
                    "column_end": 51,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 46,
                        "text": "pub fn resolve_weak<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:132:28\n    |\n132 |                     if let Some((_, char_len)) = text.char_at(i) {\n    |                            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 5770,
                    "byte_start": 5766,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 132,
                    "line_start": 132,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "                    if let Some((_, char_len)) = text.char_at(i) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:263:68\n    |\n263 | pub fn resolve_neutral<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n    |                                                                    ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n12  + use std::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 11915,
                    "byte_start": 11910,
                    "column_end": 73,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 68,
                        "text": "pub fn resolve_neutral<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:308:32\n    |\n308 |         let mut class_to_set = None;\n    |                                ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n12  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 13482,
                    "byte_start": 13478,
                    "column_end": 36,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 308,
                    "line_start": 308,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 32,
                        "text": "        let mut class_to_set = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:348:28\n    |\n348 |             class_to_set = Some(e);\n    |                            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 15164,
                    "byte_start": 15160,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 348,
                    "line_start": 348,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            class_to_set = Some(e);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:379:28\n    |\n379 |             class_to_set = Some(previous_strong);\n    |                            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 16760,
                    "byte_start": 16756,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 379,
                    "line_start": 379,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "            class_to_set = Some(previous_strong);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:382:16\n    |\n382 |         if let Some(class_to_set) = class_to_set {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 16809,
                    "byte_start": 16805,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 382,
                    "line_start": 382,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some(class_to_set) = class_to_set {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of undeclared type `Clone`\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:431:53\n    |\n431 |     let mut indices = sequence.runs.iter().flat_map(Clone::clone);\n    |                                                     ^^^^^ use of undeclared type `Clone`\n    |\nhelp: consider importing this trait\n    |\n12  + use std::clone::Clone;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::clone::Clone;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of undeclared type `Clone`",
                "spans": [
                  {
                    "byte_end": 19423,
                    "byte_start": 19418,
                    "column_end": 58,
                    "column_start": 53,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "use of undeclared type `Clone`",
                    "line_end": 431,
                    "line_start": 431,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 53,
                        "text": "    let mut indices = sequence.runs.iter().flat_map(Clone::clone);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:433:15\n    |\n433 |     while let Some(mut i) = indices.next() {\n    |               ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 19490,
                    "byte_start": 19486,
                    "column_end": 19,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 433,
                    "line_start": 433,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 15,
                        "text": "    while let Some(mut i) = indices.next() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:446:21\n    |\n446 |                     Some(j) => {\n    |                     ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 20115,
                    "byte_start": 20111,
                    "column_end": 25,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 446,
                    "line_start": 446,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 21,
                        "text": "                    Some(j) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:504:52\n    |\n504 | fn identify_bracket_pairs<'a, T: TextSource<'a> + ?Sized, D: BidiDataSource>(\n    |                                                    ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n12  + use std::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 22051,
                    "byte_start": 22046,
                    "column_end": 57,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 504,
                    "line_start": 504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 52,
                        "text": "fn identify_bracket_pairs<'a, T: TextSource<'a> + ?Sized, D: BidiDataSource>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:528:20\n    |\n528 |             if let Some(matched) = data_source.bidi_matched_opening_bracket(ch) {\n    |                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n12  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 482,
                        "byte_start": 482,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "#[cfg(not(feature = \"smallvec\"))]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 22972,
                    "byte_start": 22968,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 528,
                    "line_start": 528,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            if let Some(matched) = data_source.bidi_matched_opening_bracket(ch) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:90:17\n   |\n90 |                 Some(idx) => levels[idx],\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n14 + use std::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 3458,
                    "byte_start": 3454,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 90,
                    "line_start": 90,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "                Some(idx) => levels[idx],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:99:17\n   |\n99 |                 Some(idx) => levels[run.end + idx],\n   |                 ^^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n14 + use std::option::Option::Some;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 3771,
                    "byte_start": 3767,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 99,
                    "line_start": 99,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "                Some(idx) => levels[run.end + idx],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:200:13\n    |\n200 |             Some(idx) => levels[idx],\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n14  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 7361,
                    "byte_start": 7357,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 200,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some(idx) => levels[idx],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:223:17\n    |\n223 |                 Some(idx) => levels[end_of_seq + idx],\n    |                 ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n14  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 8308,
                    "byte_start": 8304,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 223,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "                Some(idx) => levels[end_of_seq + idx],"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:243:15\n    |\n243 |     ) -> impl Iterator<Item = usize> + '_ {\n    |               ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n14  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 8933,
                    "byte_start": 8925,
                    "column_end": 23,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 243,
                    "line_start": 243,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 15,
                        "text": "    ) -> impl Iterator<Item = usize> + '_ {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of undeclared type `Clone`\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:251:60\n    |\n251 |         (pos..runs[0].end).chain(runs[1..].iter().flat_map(Clone::clone))\n    |                                                            ^^^^^ use of undeclared type `Clone`\n    |\nhelp: consider importing this trait\n    |\n14  + use std::clone::Clone;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::clone::Clone;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of undeclared type `Clone`",
                "spans": [
                  {
                    "byte_end": 9277,
                    "byte_start": 9272,
                    "column_end": 65,
                    "column_start": 60,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "use of undeclared type `Clone`",
                    "line_end": 251,
                    "line_start": 251,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 60,
                        "text": "        (pos..runs[0].end).chain(runs[1..].iter().flat_map(Clone::clone))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:261:15\n    |\n261 |     ) -> impl Iterator<Item = usize> + '_ {\n    |               ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n14  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 9625,
                    "byte_start": 9617,
                    "column_end": 23,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 261,
                    "line_start": 261,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 15,
                        "text": "    ) -> impl Iterator<Item = usize> + '_ {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0433]: failed to resolve: use of undeclared type `Clone`\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs:272:52\n    |\n272 |             .chain(prev_runs.iter().rev().flat_map(Clone::clone))\n    |                                                    ^^^^^ use of undeclared type `Clone`\n    |\nhelp: consider importing this trait\n    |\n14  + use std::clone::Clone;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 558,
                        "byte_start": 558,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 14,
                        "line_start": 14,
                        "suggested_replacement": "use std::clone::Clone;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "use alloc::vec::Vec;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0433",
                  "explanation": "An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"
                },
                "level": "error",
                "message": "failed to resolve: use of undeclared type `Clone`",
                "spans": [
                  {
                    "byte_end": 10065,
                    "byte_start": 10060,
                    "column_end": 57,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\prepare.rs",
                    "is_primary": true,
                    "label": "use of undeclared type `Clone`",
                    "line_end": 272,
                    "line_start": 272,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 52,
                        "text": "            .chain(prev_runs.iter().rev().flat_map(Clone::clone))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:115:20\n    |\n115 |     type CharIter: Iterator<Item = char>;\n    |                    ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n88  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 3570,
                    "byte_start": 3562,
                    "column_end": 28,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 115,
                    "line_start": 115,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 20,
                        "text": "    type CharIter: Iterator<Item = char>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:116:25\n    |\n116 |     type CharIndexIter: Iterator<Item = (usize, char)>;\n    |                         ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n88  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 3617,
                    "byte_start": 3609,
                    "column_end": 33,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 116,
                    "line_start": 116,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 25,
                        "text": "    type CharIndexIter: Iterator<Item = (usize, char)>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:117:24\n    |\n117 |     type IndexLenIter: Iterator<Item = (usize, usize)>;\n    |                        ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n88  + use std::iter::Iterator;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 3672,
                    "byte_start": 3664,
                    "column_end": 32,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 117,
                    "line_start": 117,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 24,
                        "text": "    type IndexLenIter: Iterator<Item = (usize, usize)>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:127:40\n    |\n127 |     fn char_at(&self, index: usize) -> Option<(char, usize)>;\n    |                                        ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 4124,
                    "byte_start": 4118,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 127,
                    "line_start": 127,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "    fn char_at(&self, index: usize) -> Option<(char, usize)>;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:220:48\n    |\n220 |     pub fn new(text: &str, default_para_level: Option<Level>) -> InitialInfo<'_> {\n    |                                                ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 7222,
                    "byte_start": 7216,
                    "column_end": 54,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 220,
                    "line_start": 220,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 48,
                        "text": "    pub fn new(text: &str, default_para_level: Option<Level>) -> InitialInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:237:29\n    |\n237 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 8175,
                    "byte_start": 8169,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 237,
                    "line_start": 237,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:275:29\n    |\n275 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 9821,
                    "byte_start": 9815,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 275,
                    "line_start": 275,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:283:13\n    |\n283 |             Some((&mut paragraphs, &mut flags)),\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n88  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 10131,
                    "byte_start": 10127,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 283,
                    "line_start": 283,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "            Some((&mut paragraphs, &mut flags)),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:304:69\n    |\n304 | fn compute_initial_info<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n    |                                                                     ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n88  + use std::marker::Sized;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 11029,
                    "byte_start": 11024,
                    "column_end": 74,
                    "column_start": 69,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 304,
                    "line_start": 304,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 69,
                        "text": "fn compute_initial_info<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:307:25\n    |\n307 |     default_para_level: Option<Level>,\n    |                         ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 11100,
                    "byte_start": 11094,
                    "column_end": 31,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 307,
                    "line_start": 307,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 25,
                        "text": "    default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:308:27\n    |\n308 |     mut split_paragraphs: Option<(&mut Vec<ParagraphInfo>, &mut Vec<ParagraphInfoFlags>)>,\n    |                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 11141,
                    "byte_start": 11135,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 308,
                    "line_start": 308,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    mut split_paragraphs: Option<(&mut Vec<ParagraphInfo>, &mut Vec<ParagraphInfoFlags>)>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:352:24\n    |\n352 |                 if let Some((ref mut paragraphs, ref mut flags)) = split_paragraphs {\n    |                        ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n88  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 12692,
                    "byte_start": 12688,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 352,
                    "line_start": 352,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                if let Some((ref mut paragraphs, ref mut flags)) = split_paragraphs {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:382:21\n    |\n382 |                     Some(&start) => {\n    |                     ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n88  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 14088,
                    "byte_start": 14084,
                    "column_end": 25,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 382,
                    "line_start": 382,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 21,
                        "text": "                    Some(&start) => {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:397:42\n    |\n397 | ...                   para_level = Some(if class != L { RTL_LEVEL } else { LTR_LEVEL });\n    |                                    ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n88  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 14941,
                    "byte_start": 14937,
                    "column_end": 46,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 397,
                    "line_start": 397,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 42,
                        "text": "                            para_level = Some(if class != L { RTL_LEVEL } else { LTR_LEVEL });"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:421:12\n    |\n421 |     if let Some((paragraphs, flags)) = split_paragraphs {\n    |            ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n88  + use std::option::Option::Some;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 15462,
                    "byte_start": 15458,
                    "column_end": 16,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 421,
                    "line_start": 421,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "    if let Some((paragraphs, flags)) = split_paragraphs {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:484:48\n    |\n484 |     pub fn new(text: &str, default_para_level: Option<Level>) -> BidiInfo<'_> {\n    |                                                ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 17793,
                    "byte_start": 17787,
                    "column_end": 54,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 484,
                    "line_start": 484,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 48,
                        "text": "    pub fn new(text: &str, default_para_level: Option<Level>) -> BidiInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:500:29\n    |\n500 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 18654,
                    "byte_start": 18648,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 500,
                    "line_start": 500,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:723:48\n    |\n723 |     pub fn new(text: &str, default_para_level: Option<Level>) -> ParagraphBidiInfo<'_> {\n    |                                                ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 27582,
                    "byte_start": 27576,
                    "column_end": 54,
                    "column_start": 48,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 723,
                    "line_start": 723,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 48,
                        "text": "    pub fn new(text: &str, default_para_level: Option<Level>) -> ParagraphBidiInfo<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:737:29\n    |\n737 |         default_para_level: Option<Level>,\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n88  + use std::option::Option;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 28288,
                    "byte_start": 28282,
                    "column_end": 35,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 737,
                    "line_start": 737,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 29,
                        "text": "        default_para_level: Option<Level>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:742:73\n    |\n742 |             compute_initial_info(data_source, text, default_para_level, None);\n    |                                                                         ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n88  + use std::option::Option::None;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 28655,
                    "byte_start": 28651,
                    "column_end": 77,
                    "column_start": 73,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 742,
                    "line_start": 742,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 73,
                        "text": "            compute_initial_info(data_source, text, default_para_level, None);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1009:19\n     |\n1009 |         while let Some(l) = levels.get(start_index) {\n     |                   ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 38637,
                    "byte_start": 38633,
                    "column_end": 23,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1009,
                    "line_start": 1009,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 19,
                        "text": "        while let Some(l) = levels.get(start_index) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1023:19\n     |\n1023 |         while let Some(l) = levels.get(end_index) {\n     |                   ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 39054,
                    "byte_start": 39050,
                    "column_end": 23,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1023,
                    "line_start": 1023,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 23,
                        "highlight_start": 19,
                        "text": "        while let Some(l) = levels.get(end_index) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1084:75\n     |\n1084 | fn compute_bidi_info_for_para<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                           ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 40958,
                    "byte_start": 40953,
                    "column_end": 80,
                    "column_start": 75,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1084,
                    "line_start": 1084,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 75,
                        "text": "fn compute_bidi_info_for_para<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1146:44\n     |\n1146 | fn reorder_levels<'a, T: TextSource<'a> + ?Sized>(\n     |                                            ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 42724,
                    "byte_start": 42719,
                    "column_end": 49,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1146,
                    "line_start": 1146,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 44,
                        "text": "fn reorder_levels<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1154:25\n     |\n1154 |     let mut reset_from: Option<usize> = Some(0);\n     |                         ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n88   + use std::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 42972,
                    "byte_start": 42966,
                    "column_end": 31,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1154,
                    "line_start": 1154,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 25,
                        "text": "    let mut reset_from: Option<usize> = Some(0);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1154:41\n     |\n1154 |     let mut reset_from: Option<usize> = Some(0);\n     |                                         ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 42986,
                    "byte_start": 42982,
                    "column_end": 45,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1154,
                    "line_start": 1154,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 41,
                        "text": "    let mut reset_from: Option<usize> = Some(0);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1155:23\n     |\n1155 |     let mut reset_to: Option<usize> = None;\n     |                       ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n88   + use std::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 43019,
                    "byte_start": 43013,
                    "column_end": 29,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1155,
                    "line_start": 1155,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 23,
                        "text": "    let mut reset_to: Option<usize> = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1155:39\n     |\n1155 |     let mut reset_to: Option<usize> = None;\n     |                                       ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 43033,
                    "byte_start": 43029,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1155,
                    "line_start": 1155,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "    let mut reset_to: Option<usize> = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1162:28\n     |\n1162 |                 reset_to = Some(i + T::char_len(c));\n     |                            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 43349,
                    "byte_start": 43345,
                    "column_end": 32,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1162,
                    "line_start": 1162,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 28,
                        "text": "                reset_to = Some(i + T::char_len(c));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1164:34\n     |\n1164 |                     reset_from = Some(i);\n     |                                  ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 43450,
                    "byte_start": 43446,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1164,
                    "line_start": 1164,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "                    reset_from = Some(i);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1170:34\n     |\n1170 |                     reset_from = Some(i);\n     |                                  ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 43656,
                    "byte_start": 43652,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1170,
                    "line_start": 1170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "                    reset_from = Some(i);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1177:34\n     |\n1177 |                     reset_from = Some(i);\n     |                                  ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 43962,
                    "byte_start": 43958,
                    "column_end": 38,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1177,
                    "line_start": 1177,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 34,
                        "text": "                    reset_from = Some(i);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1185:30\n     |\n1185 |                 reset_from = None;\n     |                              ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 44223,
                    "byte_start": 44219,
                    "column_end": 34,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1185,
                    "line_start": 1185,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 30,
                        "text": "                reset_from = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1188:17\n     |\n1188 |         if let (Some(from), Some(to)) = (reset_from, reset_to) {\n     |                 ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 44269,
                    "byte_start": 44265,
                    "column_end": 21,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1188,
                    "line_start": 1188,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "        if let (Some(from), Some(to)) = (reset_from, reset_to) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1188:29\n     |\n1188 |         if let (Some(from), Some(to)) = (reset_from, reset_to) {\n     |                             ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 44281,
                    "byte_start": 44277,
                    "column_end": 33,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1188,
                    "line_start": 1188,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "        if let (Some(from), Some(to)) = (reset_from, reset_to) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1192:26\n     |\n1192 |             reset_from = None;\n     |                          ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 44448,
                    "byte_start": 44444,
                    "column_end": 30,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1192,
                    "line_start": 1192,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 26,
                        "text": "            reset_from = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1193:24\n     |\n1193 |             reset_to = None;\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 44477,
                    "byte_start": 44473,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1193,
                    "line_start": 1193,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "            reset_to = None;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1197:12\n     |\n1197 |     if let Some(from) = reset_from {\n     |            ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 44547,
                    "byte_start": 44543,
                    "column_end": 16,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1197,
                    "line_start": 1197,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "    if let Some(from) = reset_from {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1292:52\n     |\n1292 | pub fn get_base_direction<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {\n     |                                                    ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 47760,
                    "byte_start": 47755,
                    "column_end": 57,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1292,
                    "line_start": 1292,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 52,
                        "text": "pub fn get_base_direction<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1305:57\n     |\n1305 | pub fn get_base_direction_full<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {\n     |                                                         ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 48450,
                    "byte_start": 48445,
                    "column_end": 62,
                    "column_start": 57,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1305,
                    "line_start": 1305,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 57,
                        "text": "pub fn get_base_direction_full<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1310:88\n     |\n1310 | pub fn get_base_direction_with_data_source<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                                        ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 48656,
                    "byte_start": 48651,
                    "column_end": 93,
                    "column_start": 88,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1310,
                    "line_start": 1310,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 93,
                        "highlight_start": 88,
                        "text": "pub fn get_base_direction_with_data_source<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1321:26\n     |\n1321 |     T: TextSource<'a> + ?Sized,\n     |                          ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 48891,
                    "byte_start": 48886,
                    "column_end": 31,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1321,
                    "line_start": 1321,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 26,
                        "text": "    T: TextSource<'a> + ?Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Sized` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1329:72\n     |\n1329 | fn get_base_direction_impl<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                        ^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::marker::Sized;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::marker::Sized;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Sized` in this scope",
                "spans": [
                  {
                    "byte_end": 49083,
                    "byte_start": 49078,
                    "column_end": 77,
                    "column_start": 72,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1329,
                    "line_start": 1329,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 72,
                        "text": "fn get_base_direction_impl<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1363:40\n     |\n1363 |     fn char_at(&self, index: usize) -> Option<(char, usize)> {\n     |                                        ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n88   + use std::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 50325,
                    "byte_start": 50319,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1363,
                    "line_start": 1363,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "    fn char_at(&self, index: usize) -> Option<(char, usize)> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1364:16\n     |\n1364 |         if let Some(slice) = self.get(index..) {\n     |                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 50362,
                    "byte_start": 50358,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1364,
                    "line_start": 1364,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some(slice) = self.get(index..) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1365:20\n     |\n1365 |             if let Some(ch) = slice.chars().next() {\n     |                    ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 50415,
                    "byte_start": 50411,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1365,
                    "line_start": 1365,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            if let Some(ch) = slice.chars().next() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1366:24\n     |\n1366 |                 return Some((ch, ch.len_utf8()));\n     |                        ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 50472,
                    "byte_start": 50468,
                    "column_end": 28,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1366,
                    "line_start": 1366,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 24,
                        "text": "                return Some((ch, ch.len_utf8()));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1369:9\n     |\n1369 |         None\n     |         ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 50531,
                    "byte_start": 50527,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1369,
                    "line_start": 1369,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0405]: cannot find trait `Iterator` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1408:6\n     |\n1408 | impl Iterator for Utf8IndexLenIter<'_> {\n     |      ^^^^^^^^ not found in this scope\n     |\nhelp: consider importing this trait\n     |\n88   + use std::iter::Iterator;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this trait",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::iter::Iterator;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0405",
                  "explanation": "The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find trait `Iterator` in this scope",
                "spans": [
                  {
                    "byte_end": 51410,
                    "byte_start": 51402,
                    "column_end": 14,
                    "column_start": 6,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1408,
                    "line_start": 1408,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 14,
                        "highlight_start": 6,
                        "text": "impl Iterator for Utf8IndexLenIter<'_> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0412]: cannot find type `Option` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1412:27\n     |\n1412 |     fn next(&mut self) -> Option<Self::Item> {\n     |                           ^^^^^^ not found in this scope\n     |\nhelp: consider importing this enum\n     |\n88   + use std::option::Option;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this enum",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0412",
                  "explanation": "A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"
                },
                "level": "error",
                "message": "cannot find type `Option` in this scope",
                "spans": [
                  {
                    "byte_end": 51517,
                    "byte_start": 51511,
                    "column_end": 33,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1412,
                    "line_start": 1412,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 27,
                        "text": "    fn next(&mut self) -> Option<Self::Item> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1413:16\n     |\n1413 |         if let Some((pos, ch)) = self.iter.next() {\n     |                ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0531",
                  "explanation": "An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"
                },
                "level": "error",
                "message": "cannot find tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 51551,
                    "byte_start": 51547,
                    "column_end": 20,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1413,
                    "line_start": 1413,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "        if let Some((pos, ch)) = self.iter.next() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1414:20\n     |\n1414 |             return Some((pos, ch.len_utf8()));\n     |                    ^^^^ not found in this scope\n     |\nhelp: consider importing this tuple variant\n     |\n88   + use std::option::Option::Some;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this tuple variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::Some;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find function, tuple struct or tuple variant `Some` in this scope",
                "spans": [
                  {
                    "byte_end": 51607,
                    "byte_start": 51603,
                    "column_end": 24,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1414,
                    "line_start": 1414,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 20,
                        "text": "            return Some((pos, ch.len_utf8()));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0425]: cannot find value `None` in this scope\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1416:9\n     |\n1416 |         None\n     |         ^^^^ not found in this scope\n     |\nhelp: consider importing this unit variant\n     |\n88   + use std::option::Option::None;\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider importing this unit variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2615,
                        "byte_start": 2615,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "use std::option::Option::None;\n",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub use crate::char_data::{BidiClass, UNICODE_VERSION};"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "E0425",
                  "explanation": "An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"
                },
                "level": "error",
                "message": "cannot find value `None` in this scope",
                "spans": [
                  {
                    "byte_end": 51653,
                    "byte_start": 51649,
                    "column_end": 13,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": "not found in this scope",
                    "line_end": 1416,
                    "line_start": 1416,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 13,
                        "highlight_start": 9,
                        "text": "        None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:304:68\n    |\n304 | fn compute_initial_info<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n    |                                                                    ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 11029,
                    "byte_start": 11023,
                    "column_end": 74,
                    "column_start": 68,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 304,
                    "line_start": 304,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 68,
                        "text": "fn compute_initial_info<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1084:74\n     |\n1084 | fn compute_bidi_info_for_para<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                          ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 40958,
                    "byte_start": 40952,
                    "column_end": 80,
                    "column_start": 74,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1084,
                    "line_start": 1084,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 74,
                        "text": "fn compute_bidi_info_for_para<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1146:43\n     |\n1146 | fn reorder_levels<'a, T: TextSource<'a> + ?Sized>(\n     |                                           ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 42724,
                    "byte_start": 42718,
                    "column_end": 49,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1146,
                    "line_start": 1146,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 43,
                        "text": "fn reorder_levels<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1292:51\n     |\n1292 | pub fn get_base_direction<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {\n     |                                                   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 47760,
                    "byte_start": 47754,
                    "column_end": 57,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1292,
                    "line_start": 1292,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 51,
                        "text": "pub fn get_base_direction<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1305:56\n     |\n1305 | pub fn get_base_direction_full<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {\n     |                                                        ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 48450,
                    "byte_start": 48444,
                    "column_end": 62,
                    "column_start": 56,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1305,
                    "line_start": 1305,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 56,
                        "text": "pub fn get_base_direction_full<'a, T: TextSource<'a> + ?Sized>(text: &'a T) -> Direction {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1310:87\n     |\n1310 | pub fn get_base_direction_with_data_source<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                                       ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 48656,
                    "byte_start": 48650,
                    "column_end": 93,
                    "column_start": 87,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1310,
                    "line_start": 1310,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 93,
                        "highlight_start": 87,
                        "text": "pub fn get_base_direction_with_data_source<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1321:25\n     |\n1321 |     T: TextSource<'a> + ?Sized,\n     |                         ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 48891,
                    "byte_start": 48885,
                    "column_end": 31,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1321,
                    "line_start": 1321,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 25,
                        "text": "    T: TextSource<'a> + ?Sized,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n    --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:1329:71\n     |\n1329 | fn get_base_direction_impl<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n     |                                                                       ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 49083,
                    "byte_start": 49077,
                    "column_end": 77,
                    "column_start": 71,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1329,
                    "line_start": 1329,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 71,
                        "text": "fn get_base_direction_impl<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs:34:40\n   |\n34 | pub fn compute<'a, T: TextSource<'a> + ?Sized>(\n   |                                        ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 1228,
                    "byte_start": 1222,
                    "column_end": 46,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\explicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 34,
                    "line_start": 34,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 40,
                        "text": "pub fn compute<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:27:45\n   |\n27 | pub fn resolve_weak<'a, T: TextSource<'a> + ?Sized>(\n   |                                             ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 982,
                    "byte_start": 976,
                    "column_end": 51,
                    "column_start": 45,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 27,
                    "line_start": 27,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 45,
                        "text": "pub fn resolve_weak<'a, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:263:67\n    |\n263 | pub fn resolve_neutral<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>(\n    |                                                                   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 11915,
                    "byte_start": 11909,
                    "column_end": 73,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 67,
                        "text": "pub fn resolve_neutral<'a, D: BidiDataSource, T: TextSource<'a> + ?Sized>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default\n   --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs:504:51\n    |\n504 | fn identify_bracket_pairs<'a, T: TextSource<'a> + ?Sized, D: BidiDataSource>(\n    |                                                   ^^^^^^\n\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "error",
                "message": "relaxing a default bound only does something for `?Sized`; all other traits are not bound by default",
                "spans": [
                  {
                    "byte_end": 22051,
                    "byte_start": 22045,
                    "column_end": 57,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\implicit.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 504,
                    "line_start": 504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 51,
                        "text": "fn identify_bracket_pairs<'a, T: TextSource<'a> + ?Sized, D: BidiDataSource>("
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0462, E0531, E0786.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "Some errors have detailed explanations: E0405, E0412, E0425, E0433, E0462, E0531, E0786.",
                "spans": []
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about an error, try `rustc --explain E0405`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about an error, try `rustc --explain E0405`.",
                "spans": []
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libsmallvec-eb9c68e8246af032.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\build\\libm-69a4b882bcecec71\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\build\\libm-69a4b882bcecec71\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\build\\libm-69a4b882bcecec71\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\build\\libm-69a4b882bcecec71\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libsmallvec-eb9c68e8246af032.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi-mirroring@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-mirroring-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi_mirroring",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-mirroring-0.4.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_bidi_mirroring-6d01c15b07362ef9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ccc@0.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ccc-0.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ccc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ccc-0.4.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libunicode_ccc-9f0b5dc57d379dc8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "arch_enabled"
              ],
              "env": [
                [
                  "CFG_CARGO_FEATURES",
                  "[\"arch\", \"default\"]"
                ],
                [
                  "CFG_OPT_LEVEL",
                  "0"
                ],
                [
                  "CFG_TARGET_FEATURES",
                  "[\"cmpxchg16b\", \"fxsr\", \"sse\", \"sse2\", \"sse3\"]"
                ]
              ],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\build\\libm-a1eed56d2fada026\\out"
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-bidi@0.3.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_bidi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `hashbrown` which `std` depends on\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs:71:1\n   |\n71 | extern crate std;\n   | ^^^^^^^^^^^^^^^^^\n   |\n   = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libhashbrown-d20509d97af05356.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libhashbrown-d20509d97af05356.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `hashbrown` which `std` depends on",
                "spans": [
                  {
                    "byte_end": 2377,
                    "byte_start": 2360,
                    "column_end": 18,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-bidi-0.3.18\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 71,
                    "line_start": 71,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "extern crate std;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error[E0786]: found invalid metadata files for crate `compiler_builtins`\n  --> C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs:11:1\n   |\n11 | //! Iterators which split strings on Grapheme Cluster, Word or Sentence boundaries, according\n   | ^\n   |\n   = note: failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcompiler_builtins-c7e124f7b7770f1f.rlib': The paging file is too small for this operation to complete. (os error 1455)\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "failed to mmap file 'C:\\Users\\davet\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcompiler_builtins-c7e124f7b7770f1f.rlib': The paging file is too small for this operation to complete. (os error 1455)",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "E0786",
                  "explanation": "A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"
                },
                "level": "error",
                "message": "found invalid metadata files for crate `compiler_builtins`",
                "spans": [
                  {
                    "byte_end": 472,
                    "byte_start": 472,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 11,
                    "line_start": 11,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": "//! Iterators which split strings on Grapheme Cluster, Word or Sentence boundaries, according"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder-lite@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-lite-0.1.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libbyteorder_lite-340e52b9803e9185.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\liblog-1786323f854c511b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-2.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libbitflags-b84dcc06ac5e612b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_segmentation",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-segmentation-1.12.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "For more information about this error, try `rustc --explain E0786`.\n",
                "$message_type": "diagnostic",
                "children": [],
                "code": null,
                "level": "failure-note",
                "message": "For more information about this error, try `rustc --explain E0786`.",
                "spans": []
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\libautocfg-962de8d6b4bbcb9a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libm",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libm-0.2.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "arch",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdgfu4vm5\\femtovg-0.14.1\\target\\debug\\deps\\liblibm-1085711180e0b97c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 324
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unmaintained": [
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "instant",
                    "version": "0.1.13",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222",
                    "dependencies": [
                      {
                        "name": "cfg-if",
                        "version": "1.0.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "js-sys",
                        "version": "0.3.77",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "wasm-bindgen",
                        "version": "0.2.100",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "web-sys",
                        "version": "0.3.77",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0384",
                    "package": "instant",
                    "title": "`instant` is unmaintained",
                    "description": "This crate is no longer maintained, and the author recommends using the maintained [`web-time`] crate instead.\n\n[`web-time`]: https://crates.io/crates/web-time",
                    "date": "2024-09-01",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [
                      "https://crates.io/crates/instant/0.1.13",
                      "https://github.com/sebcrozet/instant/issues/52"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                },
                {
                  "kind": "unmaintained",
                  "package": {
                    "name": "paste",
                    "version": "1.0.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2024-0436",
                    "package": "paste",
                    "title": "paste - no longer maintained",
                    "description": "The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \nthat this project is not longer maintained as well as archived the repository",
                    "date": "2024-10-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unmaintained",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/dtolnay/paste",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "femtovg",
          "version": "0.14.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\n[Settings](https://docs.rs/femtovg/latest/settings.html)\n[Help](https://docs.rs/femtovg/latest/help.html)\nSummary[Source](https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637)\nExpand description\nThe femtovg API is (like [NanoVG](https://github.com/memononen/nanovg)) loosely modeled on the [HTML5 Canvas API](https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html).\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports[\u00a7](https://docs.rs/femtovg/latest/femtovg/#reexports)\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules[\u00a7](https://docs.rs/femtovg/latest/femtovg/#modules)\n\n[renderer](https://docs.rs/femtovg/latest/femtovg/renderer/index.html \"mod femtovg::renderer\")\n    Module containing renderer implementations.\n## Structs[\u00a7](https://docs.rs/femtovg/latest/femtovg/#structs)\n\n[Atlas](https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html \"struct femtovg::Atlas\")\n    Represents an atlas for packing rectangles.\n\n[Canvas](https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html \"struct femtovg::Canvas\")\n    Main 2D drawing context.\n\n[Color](https://docs.rs/femtovg/latest/femtovg/struct.Color.html \"struct femtovg::Color\")\n    Struct representing a color with red, green, blue, and alpha components.\n\n[CompositeOperationState](https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html \"struct femtovg::CompositeOperationState\")\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\n[DrawCommand](https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html \"struct femtovg::DrawCommand\")\n    Represents a command to draw an image with a set of quads.\n\n[FontId](https://docs.rs/femtovg/latest/femtovg/struct.FontId.html \"struct femtovg::FontId\")\n    A font handle.\n\n[FontMetrics](https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html \"struct femtovg::FontMetrics\")\n    Information about a font.\n\n[GlyphDrawCommands](https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html \"struct femtovg::GlyphDrawCommands\")\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\n[ImageFlags](https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html \"struct femtovg::ImageFlags\")\n    Represents a set of flags that modify the behavior of an image.\n\n[ImageId](https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html \"struct femtovg::ImageId\")\n    An image handle.\n\n[ImageInfo](https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html \"struct femtovg::ImageInfo\")\n    Information about an image.\n\n[Paint](https://docs.rs/femtovg/latest/femtovg/struct.Paint.html \"struct femtovg::Paint\")\n    Struct controlling how graphical shapes are rendered.\n\n[Path](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\")\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\n[PathIter](https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html \"struct femtovg::PathIter\")\n    An iterator over the verbs and coordinates of a path.\n\n[Quad](https://docs.rs/femtovg/latest/femtovg/struct.Quad.html \"struct femtovg::Quad\")\n    Represents a quad with position and texture coordinates.\n\n[TextContext](https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html \"struct femtovg::TextContext\")\n    `TextContext` provides functionality for text processing in femtovg.\n\n[TextMetrics](https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html \"struct femtovg::TextMetrics\")\n    Represents the result of a text shaping run.\n\n[Transform2D](https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html \"struct femtovg::Transform2D\")\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums[\u00a7](https://docs.rs/femtovg/latest/femtovg/#enums)\n\n[Align](https://docs.rs/femtovg/latest/femtovg/enum.Align.html \"enum femtovg::Align\")\n    Represents the horizontal alignment of text.\n\n[Baseline](https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html \"enum femtovg::Baseline\")\n    Represents the vertical alignment of a text baseline.\n\n[BlendFactor](https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html \"enum femtovg::BlendFactor\")\n    Blend factors.\n\n[CompositeOperation](https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html \"enum femtovg::CompositeOperation\")\n    Predefined composite oprations.\n\n[ErrorKind](https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html \"enum femtovg::ErrorKind\")\n    Enum representing different types of errors that can occur in the canvas.\n\n[FillRule](https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html \"enum femtovg::FillRule\")\n    Determines the fill rule used when filling paths.\n\n[ImageFilter](https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html \"enum femtovg::ImageFilter\")\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\n[ImageSource](https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html \"enum femtovg::ImageSource\")\n    Represents the source of an image.\n\n[LineCap](https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html \"enum femtovg::LineCap\")\n    Determines the shape used to draw the end points of lines.\n\n[LineJoin](https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html \"enum femtovg::LineJoin\")\n    Determines the shape used to join two line segments where they meet.\n\n[PixelFormat](https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html \"enum femtovg::PixelFormat\")\n    Specifies the format of an image\u2019s pixels.\n\n[RenderMode](https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html \"enum femtovg::RenderMode\")\n    Represents the rendering mode for a path.\n\n[Solidity](https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html \"enum femtovg::Solidity\")\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\n[Verb](https://docs.rs/femtovg/latest/femtovg/enum.Verb.html \"enum femtovg::Verb\")\n    A verb describes how to interpret one or more points to continue the countour of a [`Path`](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\").\n",
            "markdown_with_citations": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe femtovg API is (like NanoVG\u27e84\u27e9) loosely modeled on the HTML5 Canvas API\u27e85\u27e9.\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nrenderer\u27e88\u27e9\n    Module containing renderer implementations.\n## Structs\u00a7\u27e89\u27e9\n\nAtlas\u27e810\u27e9\n    Represents an atlas for packing rectangles.\n\nCanvas\u27e811\u27e9\n    Main 2D drawing context.\n\nColor\u27e812\u27e9\n    Struct representing a color with red, green, blue, and alpha components.\n\nCompositeOperationState\u27e813\u27e9\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\nDrawCommand\u27e814\u27e9\n    Represents a command to draw an image with a set of quads.\n\nFontId\u27e815\u27e9\n    A font handle.\n\nFontMetrics\u27e816\u27e9\n    Information about a font.\n\nGlyphDrawCommands\u27e817\u27e9\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\nImageFlags\u27e818\u27e9\n    Represents a set of flags that modify the behavior of an image.\n\nImageId\u27e819\u27e9\n    An image handle.\n\nImageInfo\u27e820\u27e9\n    Information about an image.\n\nPaint\u27e821\u27e9\n    Struct controlling how graphical shapes are rendered.\n\nPath\u27e822\u27e9\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\nPathIter\u27e823\u27e9\n    An iterator over the verbs and coordinates of a path.\n\nQuad\u27e824\u27e9\n    Represents a quad with position and texture coordinates.\n\nTextContext\u27e825\u27e9\n    `TextContext` provides functionality for text processing in femtovg.\n\nTextMetrics\u27e826\u27e9\n    Represents the result of a text shaping run.\n\nTransform2D\u27e827\u27e9\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums\u00a7\u27e828\u27e9\n\nAlign\u27e829\u27e9\n    Represents the horizontal alignment of text.\n\nBaseline\u27e830\u27e9\n    Represents the vertical alignment of a text baseline.\n\nBlendFactor\u27e831\u27e9\n    Blend factors.\n\nCompositeOperation\u27e832\u27e9\n    Predefined composite oprations.\n\nErrorKind\u27e833\u27e9\n    Enum representing different types of errors that can occur in the canvas.\n\nFillRule\u27e834\u27e9\n    Determines the fill rule used when filling paths.\n\nImageFilter\u27e835\u27e9\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\nImageSource\u27e836\u27e9\n    Represents the source of an image.\n\nLineCap\u27e837\u27e9\n    Determines the shape used to draw the end points of lines.\n\nLineJoin\u27e838\u27e9\n    Determines the shape used to join two line segments where they meet.\n\nPixelFormat\u27e839\u27e9\n    Specifies the format of an image\u2019s pixels.\n\nRenderMode\u27e840\u27e9\n    Represents the rendering mode for a path.\n\nSolidity\u27e841\u27e9\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\nVerb\u27e842\u27e9\n    A verb describes how to interpret one or more points to continue the countour of a `Path`\u27e822\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/femtovg/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/femtovg/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637: Source\n\u27e84\u27e9 https://github.com/memononen/nanovg: NanoVG\n\u27e85\u27e9 https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html: HTML5 Canvas API\n\u27e86\u27e9 https://docs.rs/femtovg/latest/femtovg/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/femtovg/latest/femtovg/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/femtovg/latest/femtovg/renderer/index.html: mod femtovg::renderer - renderer\n\u27e89\u27e9 https://docs.rs/femtovg/latest/femtovg/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html: struct femtovg::Atlas - Atlas\n\u27e811\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html: struct femtovg::Canvas - Canvas\n\u27e812\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Color.html: struct femtovg::Color - Color\n\u27e813\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html: struct femtovg::CompositeOperationState - CompositeOperationState\n\u27e814\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html: struct femtovg::DrawCommand - DrawCommand\n\u27e815\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontId.html: struct femtovg::FontId - FontId\n\u27e816\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html: struct femtovg::FontMetrics - FontMetrics\n\u27e817\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html: struct femtovg::GlyphDrawCommands - GlyphDrawCommands\n\u27e818\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html: struct femtovg::ImageFlags - ImageFlags\n\u27e819\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html: struct femtovg::ImageId - ImageId\n\u27e820\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html: struct femtovg::ImageInfo - ImageInfo\n\u27e821\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Paint.html: struct femtovg::Paint - Paint\n\u27e822\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Path.html: struct femtovg::Path - Path\n\u27e823\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html: struct femtovg::PathIter - PathIter\n\u27e824\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Quad.html: struct femtovg::Quad - Quad\n\u27e825\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html: struct femtovg::TextContext - TextContext\n\u27e826\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html: struct femtovg::TextMetrics - TextMetrics\n\u27e827\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html: struct femtovg::Transform2D - Transform2D\n\u27e828\u27e9 https://docs.rs/femtovg/latest/femtovg/#enums: \u00a7\n\u27e829\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Align.html: enum femtovg::Align - Align\n\u27e830\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html: enum femtovg::Baseline - Baseline\n\u27e831\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html: enum femtovg::BlendFactor - BlendFactor\n\u27e832\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html: enum femtovg::CompositeOperation - CompositeOperation\n\u27e833\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html: enum femtovg::ErrorKind - ErrorKind\n\u27e834\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html: enum femtovg::FillRule - FillRule\n\u27e835\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html: enum femtovg::ImageFilter - ImageFilter\n\u27e836\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html: enum femtovg::ImageSource - ImageSource\n\u27e837\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html: enum femtovg::LineCap - LineCap\n\u27e838\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html: enum femtovg::LineJoin - LineJoin\n\u27e839\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html: enum femtovg::PixelFormat - PixelFormat\n\u27e840\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html: enum femtovg::RenderMode - RenderMode\n\u27e841\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html: enum femtovg::Solidity - Solidity\n\u27e842\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Verb.html: enum femtovg::Verb - Verb\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "femtovg",
          "version": "0.14.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\n[Settings](https://docs.rs/femtovg/latest/settings.html)\n[Help](https://docs.rs/femtovg/latest/help.html)\nSummary[Source](https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637)\nExpand description\nThe femtovg API is (like [NanoVG](https://github.com/memononen/nanovg)) loosely modeled on the [HTML5 Canvas API](https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html).\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports[\u00a7](https://docs.rs/femtovg/latest/femtovg/#reexports)\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules[\u00a7](https://docs.rs/femtovg/latest/femtovg/#modules)\n\n[renderer](https://docs.rs/femtovg/latest/femtovg/renderer/index.html \"mod femtovg::renderer\")\n    Module containing renderer implementations.\n## Structs[\u00a7](https://docs.rs/femtovg/latest/femtovg/#structs)\n\n[Atlas](https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html \"struct femtovg::Atlas\")\n    Represents an atlas for packing rectangles.\n\n[Canvas](https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html \"struct femtovg::Canvas\")\n    Main 2D drawing context.\n\n[Color](https://docs.rs/femtovg/latest/femtovg/struct.Color.html \"struct femtovg::Color\")\n    Struct representing a color with red, green, blue, and alpha components.\n\n[CompositeOperationState](https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html \"struct femtovg::CompositeOperationState\")\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\n[DrawCommand](https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html \"struct femtovg::DrawCommand\")\n    Represents a command to draw an image with a set of quads.\n\n[FontId](https://docs.rs/femtovg/latest/femtovg/struct.FontId.html \"struct femtovg::FontId\")\n    A font handle.\n\n[FontMetrics](https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html \"struct femtovg::FontMetrics\")\n    Information about a font.\n\n[GlyphDrawCommands](https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html \"struct femtovg::GlyphDrawCommands\")\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\n[ImageFlags](https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html \"struct femtovg::ImageFlags\")\n    Represents a set of flags that modify the behavior of an image.\n\n[ImageId](https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html \"struct femtovg::ImageId\")\n    An image handle.\n\n[ImageInfo](https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html \"struct femtovg::ImageInfo\")\n    Information about an image.\n\n[Paint](https://docs.rs/femtovg/latest/femtovg/struct.Paint.html \"struct femtovg::Paint\")\n    Struct controlling how graphical shapes are rendered.\n\n[Path](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\")\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\n[PathIter](https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html \"struct femtovg::PathIter\")\n    An iterator over the verbs and coordinates of a path.\n\n[Quad](https://docs.rs/femtovg/latest/femtovg/struct.Quad.html \"struct femtovg::Quad\")\n    Represents a quad with position and texture coordinates.\n\n[TextContext](https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html \"struct femtovg::TextContext\")\n    `TextContext` provides functionality for text processing in femtovg.\n\n[TextMetrics](https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html \"struct femtovg::TextMetrics\")\n    Represents the result of a text shaping run.\n\n[Transform2D](https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html \"struct femtovg::Transform2D\")\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums[\u00a7](https://docs.rs/femtovg/latest/femtovg/#enums)\n\n[Align](https://docs.rs/femtovg/latest/femtovg/enum.Align.html \"enum femtovg::Align\")\n    Represents the horizontal alignment of text.\n\n[Baseline](https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html \"enum femtovg::Baseline\")\n    Represents the vertical alignment of a text baseline.\n\n[BlendFactor](https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html \"enum femtovg::BlendFactor\")\n    Blend factors.\n\n[CompositeOperation](https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html \"enum femtovg::CompositeOperation\")\n    Predefined composite oprations.\n\n[ErrorKind](https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html \"enum femtovg::ErrorKind\")\n    Enum representing different types of errors that can occur in the canvas.\n\n[FillRule](https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html \"enum femtovg::FillRule\")\n    Determines the fill rule used when filling paths.\n\n[ImageFilter](https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html \"enum femtovg::ImageFilter\")\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\n[ImageSource](https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html \"enum femtovg::ImageSource\")\n    Represents the source of an image.\n\n[LineCap](https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html \"enum femtovg::LineCap\")\n    Determines the shape used to draw the end points of lines.\n\n[LineJoin](https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html \"enum femtovg::LineJoin\")\n    Determines the shape used to join two line segments where they meet.\n\n[PixelFormat](https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html \"enum femtovg::PixelFormat\")\n    Specifies the format of an image\u2019s pixels.\n\n[RenderMode](https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html \"enum femtovg::RenderMode\")\n    Represents the rendering mode for a path.\n\n[Solidity](https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html \"enum femtovg::Solidity\")\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\n[Verb](https://docs.rs/femtovg/latest/femtovg/enum.Verb.html \"enum femtovg::Verb\")\n    A verb describes how to interpret one or more points to continue the countour of a [`Path`](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\").\n",
            "markdown_with_citations": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe femtovg API is (like NanoVG\u27e84\u27e9) loosely modeled on the HTML5 Canvas API\u27e85\u27e9.\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nrenderer\u27e88\u27e9\n    Module containing renderer implementations.\n## Structs\u00a7\u27e89\u27e9\n\nAtlas\u27e810\u27e9\n    Represents an atlas for packing rectangles.\n\nCanvas\u27e811\u27e9\n    Main 2D drawing context.\n\nColor\u27e812\u27e9\n    Struct representing a color with red, green, blue, and alpha components.\n\nCompositeOperationState\u27e813\u27e9\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\nDrawCommand\u27e814\u27e9\n    Represents a command to draw an image with a set of quads.\n\nFontId\u27e815\u27e9\n    A font handle.\n\nFontMetrics\u27e816\u27e9\n    Information about a font.\n\nGlyphDrawCommands\u27e817\u27e9\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\nImageFlags\u27e818\u27e9\n    Represents a set of flags that modify the behavior of an image.\n\nImageId\u27e819\u27e9\n    An image handle.\n\nImageInfo\u27e820\u27e9\n    Information about an image.\n\nPaint\u27e821\u27e9\n    Struct controlling how graphical shapes are rendered.\n\nPath\u27e822\u27e9\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\nPathIter\u27e823\u27e9\n    An iterator over the verbs and coordinates of a path.\n\nQuad\u27e824\u27e9\n    Represents a quad with position and texture coordinates.\n\nTextContext\u27e825\u27e9\n    `TextContext` provides functionality for text processing in femtovg.\n\nTextMetrics\u27e826\u27e9\n    Represents the result of a text shaping run.\n\nTransform2D\u27e827\u27e9\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums\u00a7\u27e828\u27e9\n\nAlign\u27e829\u27e9\n    Represents the horizontal alignment of text.\n\nBaseline\u27e830\u27e9\n    Represents the vertical alignment of a text baseline.\n\nBlendFactor\u27e831\u27e9\n    Blend factors.\n\nCompositeOperation\u27e832\u27e9\n    Predefined composite oprations.\n\nErrorKind\u27e833\u27e9\n    Enum representing different types of errors that can occur in the canvas.\n\nFillRule\u27e834\u27e9\n    Determines the fill rule used when filling paths.\n\nImageFilter\u27e835\u27e9\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\nImageSource\u27e836\u27e9\n    Represents the source of an image.\n\nLineCap\u27e837\u27e9\n    Determines the shape used to draw the end points of lines.\n\nLineJoin\u27e838\u27e9\n    Determines the shape used to join two line segments where they meet.\n\nPixelFormat\u27e839\u27e9\n    Specifies the format of an image\u2019s pixels.\n\nRenderMode\u27e840\u27e9\n    Represents the rendering mode for a path.\n\nSolidity\u27e841\u27e9\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\nVerb\u27e842\u27e9\n    A verb describes how to interpret one or more points to continue the countour of a `Path`\u27e822\u27e9.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/femtovg/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/femtovg/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637: Source\n\u27e84\u27e9 https://github.com/memononen/nanovg: NanoVG\n\u27e85\u27e9 https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html: HTML5 Canvas API\n\u27e86\u27e9 https://docs.rs/femtovg/latest/femtovg/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/femtovg/latest/femtovg/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/femtovg/latest/femtovg/renderer/index.html: mod femtovg::renderer - renderer\n\u27e89\u27e9 https://docs.rs/femtovg/latest/femtovg/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html: struct femtovg::Atlas - Atlas\n\u27e811\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html: struct femtovg::Canvas - Canvas\n\u27e812\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Color.html: struct femtovg::Color - Color\n\u27e813\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html: struct femtovg::CompositeOperationState - CompositeOperationState\n\u27e814\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html: struct femtovg::DrawCommand - DrawCommand\n\u27e815\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontId.html: struct femtovg::FontId - FontId\n\u27e816\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html: struct femtovg::FontMetrics - FontMetrics\n\u27e817\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html: struct femtovg::GlyphDrawCommands - GlyphDrawCommands\n\u27e818\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html: struct femtovg::ImageFlags - ImageFlags\n\u27e819\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html: struct femtovg::ImageId - ImageId\n\u27e820\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html: struct femtovg::ImageInfo - ImageInfo\n\u27e821\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Paint.html: struct femtovg::Paint - Paint\n\u27e822\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Path.html: struct femtovg::Path - Path\n\u27e823\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html: struct femtovg::PathIter - PathIter\n\u27e824\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Quad.html: struct femtovg::Quad - Quad\n\u27e825\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html: struct femtovg::TextContext - TextContext\n\u27e826\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html: struct femtovg::TextMetrics - TextMetrics\n\u27e827\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html: struct femtovg::Transform2D - Transform2D\n\u27e828\u27e9 https://docs.rs/femtovg/latest/femtovg/#enums: \u00a7\n\u27e829\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Align.html: enum femtovg::Align - Align\n\u27e830\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html: enum femtovg::Baseline - Baseline\n\u27e831\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html: enum femtovg::BlendFactor - BlendFactor\n\u27e832\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html: enum femtovg::CompositeOperation - CompositeOperation\n\u27e833\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html: enum femtovg::ErrorKind - ErrorKind\n\u27e834\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html: enum femtovg::FillRule - FillRule\n\u27e835\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html: enum femtovg::ImageFilter - ImageFilter\n\u27e836\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html: enum femtovg::ImageSource - ImageSource\n\u27e837\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html: enum femtovg::LineCap - LineCap\n\u27e838\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html: enum femtovg::LineJoin - LineJoin\n\u27e839\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html: enum femtovg::PixelFormat - PixelFormat\n\u27e840\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html: enum femtovg::RenderMode - RenderMode\n\u27e841\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html: enum femtovg::Solidity - Solidity\n\u27e842\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Verb.html: enum femtovg::Verb - Verb\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `femtovg` crate is a lightweight, GPU-accelerated 2D graphics library inspired by the HTML5 Canvas API and NanoVG. It provides a flexible drawing context (`Canvas`) for rendering shapes, paths, text, and images, with support for transformations, compositing, and custom paint styles. Key features include text processing, image manipulation, path-based drawing, and configurable rendering options, making it ideal for high-performance graphical applications.",
          "feature_summary": null,
          "use_case": "Unknown",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Canvas API and Coordinate System  \n\u2705 **Factual:** The `femtovg` crate's API is modeled after the HTML5 Canvas API, with a coordinate system where the origin is at the top-left corner, positive X extends rightwards, and positive Y extends downwards.  \n\u274c **Counterfactual:** The `femtovg` crate uses a coordinate system where the origin is at the bottom-left corner, positive X extends leftwards, and positive Y extends upwards.  \n\n---\n\n### Pair 2: Text Rendering Support  \n\u2705 **Factual:** The `TextContext` struct in `femtovg` provides functionality for text processing, including shaping and metrics calculation for rendering text.  \n\u274c **Counterfactual:** The `femtovg` crate does not support text rendering or shaping and relies entirely on external libraries for text-related functionality.  \n\n---\n\n### Pair 3: Image Handling Features  \n\u2705 **Factual:** The `ImageFlags` struct in `femtovg` allows users to modify the behavior of images, such as enabling tiling or mipmap generation.  \n\u274c **Counterfactual:** The `femtovg` crate does not support any flags or options for modifying image behavior, requiring users to preprocess images externally.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-80e4177d-45dff75a-1751266019",
      "timestamp": "2025-06-30T06:46:59.952021+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]