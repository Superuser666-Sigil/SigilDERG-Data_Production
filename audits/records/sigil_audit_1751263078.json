[
  {
    "execution_id": "exec-b8cf774f-00902149-1751263069",
    "timestamp": "2025-06-30T05:57:49.128944+00:00",
    "sacred_chain": {
      "input_data": "flume",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'flume' -> 'flume'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "flume",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/flume",
            "title": "flume v0.11.1",
            "content": {
              "raw_markdown": "#  flume v0.11.1\nA blazingly fast multi-producer channel \n  * [ #channel ](https://crates.io/keywords/channel)\n  * [ #fifo ](https://crates.io/keywords/fifo)\n  * [ #mpmc ](https://crates.io/keywords/mpmc)\n  * [ #mpsc ](https://crates.io/keywords/mpsc)\n  * [ #thread ](https://crates.io/keywords/thread)\n\n\n  * [ Readme ](https://crates.io/crates/flume)\n  * [ 38 Versions ](https://crates.io/crates/flume/versions)\n  * [ Dependencies ](https://crates.io/crates/flume/dependencies)\n  * [ Dependents ](https://crates.io/crates/flume/reverse_dependencies)\n\n\n## Metadata\n8 months ago \n2018 edition \n[ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0) OR [ MIT ](https://choosealicense.com/licenses/mit)\n66.4 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add flume\nOr add the following line to your Cargo.toml:\nflume = \"0.11.1\"\n## Documentation\n[ docs.rs/flume ](https://docs.rs/flume)\n## Repository\n[ github.com/zesterer/flume ](https://github.com/zesterer/flume)\n## Owners\n## Categories\n  * [Concurrency](https://crates.io/categories/concurrency)\n  * [Data structures](https://crates.io/categories/data-structures)\n\n\n[ Report crate ](https://crates.io/support?crate=flume&inquire=crate-violation)\n### Stats Overview\n75,201,415 Downloads all time\n38 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  flume v0.11.1\nA blazingly fast multi-producer channel \n  *  #channel \u27e81\u27e9\n  *  #fifo \u27e82\u27e9\n  *  #mpmc \u27e83\u27e9\n  *  #mpsc \u27e84\u27e9\n  *  #thread \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  38 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n8 months ago \n2018 edition \n Apache-2.0 \u27e810\u27e9 OR  MIT \u27e811\u27e9\n66.4 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add flume\nOr add the following line to your Cargo.toml:\nflume = \"0.11.1\"\n## Documentation\n docs.rs/flume \u27e812\u27e9\n## Repository\n github.com/zesterer/flume \u27e813\u27e9\n## Owners\n## Categories\n  * Concurrency\u27e814\u27e9\n  * Data structures\u27e815\u27e9\n\n\n Report crate \u27e816\u27e9\n### Stats Overview\n75,201,415 Downloads all time\n38 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/channel:  #channel \n\u27e82\u27e9 https://crates.io/keywords/fifo:  #fifo \n\u27e83\u27e9 https://crates.io/keywords/mpmc:  #mpmc \n\u27e84\u27e9 https://crates.io/keywords/mpsc:  #mpsc \n\u27e85\u27e9 https://crates.io/keywords/thread:  #thread \n\u27e86\u27e9 https://crates.io/crates/flume:  Readme \n\u27e87\u27e9 https://crates.io/crates/flume/versions:  38 Versions \n\u27e88\u27e9 https://crates.io/crates/flume/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/flume/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e812\u27e9 https://docs.rs/flume:  docs.rs/flume \n\u27e813\u27e9 https://github.com/zesterer/flume:  github.com/zesterer/flume \n\u27e814\u27e9 https://crates.io/categories/concurrency: Concurrency\n\u27e815\u27e9 https://crates.io/categories/data-structures: Data structures\n\u27e816\u27e9 https://crates.io/support?crate=flume&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1406,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116859.1452804"
          },
          "docs_rs": {
            "url": "https://docs.rs/flume",
            "title": "Crate flumeCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\n[Settings](https://docs.rs/flume/latest/settings.html)\n[Help](https://docs.rs/flume/latest/help.html)\nSummary[Source](https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182)\nExpand description\n## [\u00a7](https://docs.rs/flume/latest/flume/#flume)Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### [\u00a7](https://docs.rs/flume/latest/flume/#why-flume)Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### [\u00a7](https://docs.rs/flume/latest/flume/#example)Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports[\u00a7](https://docs.rs/flume/latest/flume/#reexports)\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules[\u00a7](https://docs.rs/flume/latest/flume/#modules)\n\n[async](https://docs.rs/flume/latest/flume/async/index.html \"mod flume::async\")`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\n[select](https://docs.rs/flume/latest/flume/select/index.html \"mod flume::select\")`select`\n    Types that permit waiting upon multiple blocking operations using the [`Selector`](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\") interface.\n## Structs[\u00a7](https://docs.rs/flume/latest/flume/#structs)\n\n[Drain](https://docs.rs/flume/latest/flume/struct.Drain.html \"struct flume::Drain\")\n    An fixed-sized iterator over the msgs drained from a channel.\n\n[IntoIter](https://docs.rs/flume/latest/flume/struct.IntoIter.html \"struct flume::IntoIter\")\n    An owned iterator over the msgs received from a channel.\n\n[Iter](https://docs.rs/flume/latest/flume/struct.Iter.html \"struct flume::Iter\")\n    An iterator over the msgs received from a channel.\n\n[Receiver](https://docs.rs/flume/latest/flume/struct.Receiver.html \"struct flume::Receiver\")\n    The receiving end of a channel.\n\n[SendError](https://docs.rs/flume/latest/flume/struct.SendError.html \"struct flume::SendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\n[Sender](https://docs.rs/flume/latest/flume/struct.Sender.html \"struct flume::Sender\")\n    A transmitting end of a channel.\n\n[TryIter](https://docs.rs/flume/latest/flume/struct.TryIter.html \"struct flume::TryIter\")\n    An non-blocking iterator over the msgs received from a channel.\n\n[WeakSender](https://docs.rs/flume/latest/flume/struct.WeakSender.html \"struct flume::WeakSender\")\n    A sender that does not prevent the channel from being closed.\n## Enums[\u00a7](https://docs.rs/flume/latest/flume/#enums)\n\n[RecvError](https://docs.rs/flume/latest/flume/enum.RecvError.html \"enum flume::RecvError\")\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\n[RecvTimeoutError](https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html \"enum flume::RecvTimeoutError\")\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\n[SendTimeoutError](https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html \"enum flume::SendTimeoutError\")\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\n[TryRecvError](https://docs.rs/flume/latest/flume/enum.TryRecvError.html \"enum flume::TryRecvError\")\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\n[TrySendError](https://docs.rs/flume/latest/flume/enum.TrySendError.html \"enum flume::TrySendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions[\u00a7](https://docs.rs/flume/latest/flume/#functions)\n\n[bounded](https://docs.rs/flume/latest/flume/fn.bounded.html \"fn flume::bounded\")\n    Create a channel with a maximum capacity.\n\n[unbounded](https://docs.rs/flume/latest/flume/fn.unbounded.html \"fn flume::unbounded\")\n    Create a channel with no maximum capacity.\n",
              "markdown_with_citations": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### \u00a7\u27e85\u27e9Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### \u00a7\u27e86\u27e9Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports\u00a7\u27e87\u27e9\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules\u00a7\u27e88\u27e9\n\nasync\u27e89\u27e9`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\nselect\u27e810\u27e9`select`\n    Types that permit waiting upon multiple blocking operations using the `Selector`\u27e811\u27e9 interface.\n## Structs\u00a7\u27e812\u27e9\n\nDrain\u27e813\u27e9\n    An fixed-sized iterator over the msgs drained from a channel.\n\nIntoIter\u27e814\u27e9\n    An owned iterator over the msgs received from a channel.\n\nIter\u27e815\u27e9\n    An iterator over the msgs received from a channel.\n\nReceiver\u27e816\u27e9\n    The receiving end of a channel.\n\nSendError\u27e817\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\nSender\u27e818\u27e9\n    A transmitting end of a channel.\n\nTryIter\u27e819\u27e9\n    An non-blocking iterator over the msgs received from a channel.\n\nWeakSender\u27e820\u27e9\n    A sender that does not prevent the channel from being closed.\n## Enums\u00a7\u27e821\u27e9\n\nRecvError\u27e822\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\nRecvTimeoutError\u27e823\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\nSendTimeoutError\u27e824\u27e9\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\nTryRecvError\u27e825\u27e9\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\nTrySendError\u27e826\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions\u00a7\u27e827\u27e9\n\nbounded\u27e828\u27e9\n    Create a channel with a maximum capacity.\n\nunbounded\u27e829\u27e9\n    Create a channel with no maximum capacity.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/flume/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/flume/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182: Source\n\u27e84\u27e9 https://docs.rs/flume/latest/flume/#flume: \u00a7\n\u27e85\u27e9 https://docs.rs/flume/latest/flume/#why-flume: \u00a7\n\u27e86\u27e9 https://docs.rs/flume/latest/flume/#example: \u00a7\n\u27e87\u27e9 https://docs.rs/flume/latest/flume/#reexports: \u00a7\n\u27e88\u27e9 https://docs.rs/flume/latest/flume/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/flume/latest/flume/async/index.html: mod flume::async - async\n\u27e810\u27e9 https://docs.rs/flume/latest/flume/select/index.html: mod flume::select - select\n\u27e811\u27e9 https://docs.rs/flume/latest/flume/select/struct.Selector.html: struct flume::select::Selector - `Selector`\n\u27e812\u27e9 https://docs.rs/flume/latest/flume/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/flume/latest/flume/struct.Drain.html: struct flume::Drain - Drain\n\u27e814\u27e9 https://docs.rs/flume/latest/flume/struct.IntoIter.html: struct flume::IntoIter - IntoIter\n\u27e815\u27e9 https://docs.rs/flume/latest/flume/struct.Iter.html: struct flume::Iter - Iter\n\u27e816\u27e9 https://docs.rs/flume/latest/flume/struct.Receiver.html: struct flume::Receiver - Receiver\n\u27e817\u27e9 https://docs.rs/flume/latest/flume/struct.SendError.html: struct flume::SendError - SendError\n\u27e818\u27e9 https://docs.rs/flume/latest/flume/struct.Sender.html: struct flume::Sender - Sender\n\u27e819\u27e9 https://docs.rs/flume/latest/flume/struct.TryIter.html: struct flume::TryIter - TryIter\n\u27e820\u27e9 https://docs.rs/flume/latest/flume/struct.WeakSender.html: struct flume::WeakSender - WeakSender\n\u27e821\u27e9 https://docs.rs/flume/latest/flume/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/flume/latest/flume/enum.RecvError.html: enum flume::RecvError - RecvError\n\u27e823\u27e9 https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html: enum flume::RecvTimeoutError - RecvTimeoutError\n\u27e824\u27e9 https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html: enum flume::SendTimeoutError - SendTimeoutError\n\u27e825\u27e9 https://docs.rs/flume/latest/flume/enum.TryRecvError.html: enum flume::TryRecvError - TryRecvError\n\u27e826\u27e9 https://docs.rs/flume/latest/flume/enum.TrySendError.html: enum flume::TrySendError - TrySendError\n\u27e827\u27e9 https://docs.rs/flume/latest/flume/#functions: \u00a7\n\u27e828\u27e9 https://docs.rs/flume/latest/flume/fn.bounded.html: fn flume::bounded - bounded\n\u27e829\u27e9 https://docs.rs/flume/latest/flume/fn.unbounded.html: fn flume::unbounded - unbounded\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 5183,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116859.850802"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/flume",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [37 releases](https://lib.rs/crates/flume/versions)\n0.11.1 |  Oct 19, 2024   \n---|---  \n0.11.0 |  Aug 16, 2023   \n0.10.14 |  Jul 21, 2022   \n0.10.12 |  Mar 10, 2022   \n0.2.0 |  Jul 31, 2019   \n#**9** in [Concurrency](https://lib.rs/concurrency \"Crates for implementing concurrent and parallel computation.\")\nDownload history 1315540/week @ 2025-03-03 1330456/week @ 2025-03-10 1200951/week @ 2025-03-17 1214813/week @ 2025-03-24 1161855/week @ 2025-03-31 1205120/week @ 2025-04-07 1052543/week @ 2025-04-14 1041179/week @ 2025-04-21 954246/week @ 2025-04-28 1039514/week @ 2025-05-05 1086783/week @ 2025-05-12 1069192/week @ 2025-05-19 945680/week @ 2025-05-26 1114920/week @ 2025-06-02 1056407/week @ 2025-06-09 1117737/week @ 2025-06-16\n**4,272,904** downloads per month Used in [**2,725** crates (596 directly)](https://lib.rs/crates/flume/rev)\n**Apache-2.0/MIT**\n80KB  1.5K  SLoC\n# Flume\nA blazingly fast multi-producer, multi-consumer channel.\n[![Cargo](https://img.shields.io/crates/v/flume.svg)](https://crates.io/crates/flume) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/flume/badge.svg)](https://docs.rs/flume) [![License](https://img.shields.io/badge/license-MIT%2FApache--2.0-blue.svg)](https://github.com/zesterer/flume) ![actions-badge](https://img.gs/czjpqfbdkz/full/https://github.com/zesterer/flume/workflows/Rust/badge.svg?branch=master) [![Casual Maintenance Intended](https://img.gs/czjpqfbdkz/full/https://casuallymaintained.tech/badge.svg)](https://casuallymaintained.tech/)\n```\n``use` `std`::``thread`;`\n``fn` `main`````(````)``````{`\n  `println!``(```\"`Hello, world!`\"```)``;`\n  `let` `(`tx`,` rx`)` `=` `flume`::``unbounded`(``)``;`\n  `thread`::``spawn`(``move` `||` `{`\n    `(``0``..``10``)``.``for_each``(````|``````i``|`` ```{`\n      tx`.``send``(`i`)``.``unwrap``(``)``;`\n    `}```)`\n  `}``)``;`\n  `let` received`:` `u32` `=` rx`.``iter``(``)``.``sum``(``)``;`\n  `assert_eq!``(``(``0``..``10``)``.``sum`::````<``u32``>```(``)``,` received`)``;`\n```}```\n`\n```\n\n## Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than ```std`::```sync`::``mpsc`` and sometimes ``crossbeam-channel``\n  * **Safe** : No ```unsafe``` code anywhere in the codebase!\n  * **Flexible** : ``Sender`` and ``Receiver`` both implement ```Send` `+` `Sync` `+` `Clone```\n  * **Familiar** : Drop-in replacement for ```std`::```sync`::``mpsc``\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : ``async`` support, including mix 'n match with sync code\n  * **Ergonomic** : Powerful ``select``-like interface\n\n\n## Usage\nTo use Flume, place the following line under the ````[``dependencies``]```` section in your ``Cargo.toml``:\n```\n`flume = \"x.y\"\n`\n```\n\n## Cargo Features\nFlume comes with several optional features:\n  * ``spin``: use spinlocks instead of OS-level synchronisation primitives internally for some kind of data access (may be more performant on a small number of platforms for specific workloads)\n  * ``select``: Adds support for the [``Selector``](https://docs.rs/flume/latest/flume/select/struct.Selector.html) API, allowing a thread to wait on several channels/operations at once\n  * ``async``: Adds support for the [async API](https://docs.rs/flume/latest/flume/async/index.html), including on otherwise synchronous channels\n  * ``eventual-fairness``: Use randomness in the implementation of ``Selector`` to avoid biasing/saturating certain events over others\n\n\nYou can enable these features by changing the dependency in your ``Cargo.toml`` like so:\n```\n`flume = { version = \"x.y\", default-features = false, features = [\"async\", \"select\"] }\n`\n```\n\n## [Benchmarks](https://what-if.xkcd.com/147/)\nAlthough Flume has its own extensive benchmarks, don't take it from here that Flume is quick. The following graph is from the ``crossbeam-channel`` benchmark suite.\nTests were performed on an AMD Ryzen 7 3700x with 8/16 cores running Linux kernel 5.11.2 with the bfq scheduler.\n# ![Flume benchmarks \\(crossbeam benchmark suite\\)](https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/zesterer/flume/master/misc/benchmarks.png)\n## Status\nFlume is in [casual maintenance mode](https://casuallymaintained.tech/). This means that the crate will continue to receive critical security and bug fixes, but heavy feature development has stopped. If you're looking for a new feature, you're welcome to open a PR and I'll try to find the time to review it.\nFlume has been great fun to work on, and I'm happy that it's being used successfully by so many people. I consider the crate to be largely feature-complete at this point (bar small details here and there).\n## License\nFlume is licensed under either of:\n  * Apache License 2.0, (<http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (<http://opensource.org/licenses/MIT>)\n\n\n#### Dependencies\n~145\u2013540KB \n  * [async](https://lib.rs/crates/flume/features#feature-async \"default feature\") [futures-core](https://lib.rs/crates/futures-core \"0.3\")\n  * [async](https://lib.rs/crates/flume/features#feature-async \"default feature\") [futures-sink](https://lib.rs/crates/futures-sink \"0.3\")\n  * [eventual-fairness](https://lib.rs/crates/flume/features#feature-eventual-fairness \"default feature\") [nanorand](https://lib.rs/crates/nanorand \"0.7\")[+getrandom](https://lib.rs/crates/nanorand/features#feature-getrandom)\n  * [spin](https://lib.rs/crates/spin \"renamed spin1, outdated\") 0.9.8[+mutex](https://lib.rs/crates/spin/features#feature-mutex)\n\n\n  * dev  [async-std](https://lib.rs/crates/async-std \"outdated\") 1.13[+attributes](https://lib.rs/crates/async-std/features#feature-attributes)[+unstable](https://lib.rs/crates/async-std/features#feature-unstable)\n  * dev  [criterion](https://lib.rs/crates/criterion \"outdated\") 0.5.1\n  * dev  [crossbeam-channel](https://lib.rs/crates/crossbeam-channel \"0.5.5\")\n  * dev  [crossbeam-utils](https://lib.rs/crates/crossbeam-utils \"0.8.10\")\n  * dev  [futures](https://lib.rs/crates/futures \"^0.3\")[+std](https://lib.rs/crates/futures/features#feature-std)\n  * dev  [getrandom](https://lib.rs/crates/getrandom \"outdated\") 0.2.15[+js](https://lib.rs/crates/getrandom/features#feature-js)\n  * dev  [rand](https://lib.rs/crates/rand \"outdated\") 0.8.3\n  * dev  [tokio](https://lib.rs/crates/tokio \"^1.16.1\")[+rt](https://lib.rs/crates/tokio/features#feature-rt)[+macros](https://lib.rs/crates/tokio/features#feature-macros)\n  * dev  [waker-fn](https://lib.rs/crates/waker-fn \"1.1.0\")\n\n\n#### [Other features](https://lib.rs/crates/flume/features)\n  * [select](https://lib.rs/crates/flume/features#feature-select)\n  * [spin](https://lib.rs/crates/flume/features#feature-spin)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  37 releases\u27e81\u27e9\n0.11.1 |  Oct 19, 2024   \n---|---  \n0.11.0 |  Aug 16, 2023   \n0.10.14 |  Jul 21, 2022   \n0.10.12 |  Mar 10, 2022   \n0.2.0 |  Jul 31, 2019   \n#**9** in Concurrency\u27e82\u27e9\nDownload history 1315540/week @ 2025-03-03 1330456/week @ 2025-03-10 1200951/week @ 2025-03-17 1214813/week @ 2025-03-24 1161855/week @ 2025-03-31 1205120/week @ 2025-04-07 1052543/week @ 2025-04-14 1041179/week @ 2025-04-21 954246/week @ 2025-04-28 1039514/week @ 2025-05-05 1086783/week @ 2025-05-12 1069192/week @ 2025-05-19 945680/week @ 2025-05-26 1114920/week @ 2025-06-02 1056407/week @ 2025-06-09 1117737/week @ 2025-06-16\n**4,272,904** downloads per month Used in **2,725** crates (596 directly)\u27e83\u27e9\n**Apache-2.0/MIT**\n80KB  1.5K  SLoC\n# Flume\nA blazingly fast multi-producer, multi-consumer channel.\n![Cargo\u27e84\u27e9](https://crates.io/crates/flume) ![Documentation\u27e85\u27e9](https://docs.rs/flume) ![License\u27e86\u27e9](https://github.com/zesterer/flume) ![actions-badge\u27e87\u27e9] ![Casual Maintenance Intended\u27e88\u27e9](https://casuallymaintained.tech/)\n```\n``use` `std`::``thread`;`\n``fn` `main`````(````)``````{`\n  `println!``(```\"`Hello, world!`\"```)``;`\n  `let` `(`tx`,` rx`)` `=` `flume`::``unbounded`(``)``;`\n  `thread`::``spawn`(``move` `||` `{`\n    `(``0``..``10``)``.``for_each``(````|``````i``|`` ```{`\n      tx`.``send``(`i`)``.``unwrap``(``)``;`\n    `}```)`\n  `}``)``;`\n  `let` received`:` `u32` `=` rx`.``iter``(``)``.``sum``(``)``;`\n  `assert_eq!``(``(``0``..``10``)``.``sum`::````<``u32``>```(``)``,` received`)``;`\n```}```\n`\n```\n\n## Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than ```std`::```sync`::``mpsc`` and sometimes ``crossbeam-channel``\n  * **Safe** : No ```unsafe``` code anywhere in the codebase!\n  * **Flexible** : ``Sender`` and ``Receiver`` both implement ```Send` `+` `Sync` `+` `Clone```\n  * **Familiar** : Drop-in replacement for ```std`::```sync`::``mpsc``\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : ``async`` support, including mix 'n match with sync code\n  * **Ergonomic** : Powerful ``select``-like interface\n\n\n## Usage\nTo use Flume, place the following line under the ````[``dependencies``]```` section in your ``Cargo.toml``:\n```\n`flume = \"x.y\"\n`\n```\n\n## Cargo Features\nFlume comes with several optional features:\n  * ``spin``: use spinlocks instead of OS-level synchronisation primitives internally for some kind of data access (may be more performant on a small number of platforms for specific workloads)\n  * ``select``: Adds support for the ``Selector``\u27e89\u27e9 API, allowing a thread to wait on several channels/operations at once\n  * ``async``: Adds support for the async API\u27e810\u27e9, including on otherwise synchronous channels\n  * ``eventual-fairness``: Use randomness in the implementation of ``Selector`` to avoid biasing/saturating certain events over others\n\n\nYou can enable these features by changing the dependency in your ``Cargo.toml`` like so:\n```\n`flume = { version = \"x.y\", default-features = false, features = [\"async\", \"select\"] }\n`\n```\n\n## Benchmarks\u27e811\u27e9\nAlthough Flume has its own extensive benchmarks, don't take it from here that Flume is quick. The following graph is from the ``crossbeam-channel`` benchmark suite.\nTests were performed on an AMD Ryzen 7 3700x with 8/16 cores running Linux kernel 5.11.2 with the bfq scheduler.\n# ![Flume benchmarks \\(crossbeam benchmark suite\\)\u27e812\u27e9]\n## Status\nFlume is in casual maintenance mode\u27e813\u27e9. This means that the crate will continue to receive critical security and bug fixes, but heavy feature development has stopped. If you're looking for a new feature, you're welcome to open a PR and I'll try to find the time to review it.\nFlume has been great fun to work on, and I'm happy that it's being used successfully by so many people. I consider the crate to be largely feature-complete at this point (bar small details here and there).\n## License\nFlume is licensed under either of:\n  * Apache License 2.0, (<http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (<http://opensource.org/licenses/MIT>)\n\n\n#### Dependencies\n~145\u2013540KB \n  * async\u27e814\u27e9 futures-core\u27e815\u27e9\n  * async\u27e814\u27e9 futures-sink\u27e816\u27e9\n  * eventual-fairness\u27e817\u27e9 nanorand\u27e818\u27e9+getrandom\u27e819\u27e9\n  * spin\u27e820\u27e9 0.9.8+mutex\u27e821\u27e9\n\n\n  * dev  async-std\u27e822\u27e9 1.13+attributes\u27e823\u27e9+unstable\u27e824\u27e9\n  * dev  criterion\u27e825\u27e9 0.5.1\n  * dev  crossbeam-channel\u27e826\u27e9\n  * dev  crossbeam-utils\u27e827\u27e9\n  * dev  futures\u27e828\u27e9+std\u27e829\u27e9\n  * dev  getrandom\u27e830\u27e9 0.2.15+js\u27e831\u27e9\n  * dev  rand\u27e832\u27e9 0.8.3\n  * dev  tokio\u27e833\u27e9+rt\u27e834\u27e9+macros\u27e835\u27e9\n  * dev  waker-fn\u27e836\u27e9\n\n\n#### Other features\u27e837\u27e9\n  * select\u27e838\u27e9\n  * spin\u27e839\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/flume/versions: 37 releases\n\u27e82\u27e9 https://lib.rs/concurrency: Crates for implementing concurrent and parallel computation. - Concurrency\n\u27e83\u27e9 https://lib.rs/crates/flume/rev: **2,725** crates (596 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/flume.svg: ![Cargo\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/flume/badge.svg: ![Documentation\n\u27e86\u27e9 https://img.shields.io/badge/license-MIT%2FApache--2.0-blue.svg: ![License\n\u27e87\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/zesterer/flume/workflows/Rust/badge.svg?branch=master: actions-badge\n\u27e88\u27e9 https://img.gs/czjpqfbdkz/full/https://casuallymaintained.tech/badge.svg: ![Casual Maintenance Intended\n\u27e89\u27e9 https://docs.rs/flume/latest/flume/select/struct.Selector.html: ``Selector``\n\u27e810\u27e9 https://docs.rs/flume/latest/flume/async/index.html: async API\n\u27e811\u27e9 https://what-if.xkcd.com/147/: Benchmarks\n\u27e812\u27e9 https://img.gs/czjpqfbdkz/full/https://raw.githubusercontent.com/zesterer/flume/master/misc/benchmarks.png: Flume benchmarks \\(crossbeam benchmark suite\\)\n\u27e813\u27e9 https://casuallymaintained.tech/: casual maintenance mode\n\u27e814\u27e9 https://lib.rs/crates/flume/features#feature-async: default feature - async\n\u27e815\u27e9 https://lib.rs/crates/futures-core: 0.3 - futures-core\n\u27e816\u27e9 https://lib.rs/crates/futures-sink: 0.3 - futures-sink\n\u27e817\u27e9 https://lib.rs/crates/flume/features#feature-eventual-fairness: default feature - eventual-fairness\n\u27e818\u27e9 https://lib.rs/crates/nanorand: 0.7 - nanorand\n\u27e819\u27e9 https://lib.rs/crates/nanorand/features#feature-getrandom: +getrandom\n\u27e820\u27e9 https://lib.rs/crates/spin: renamed spin1, outdated - spin\n\u27e821\u27e9 https://lib.rs/crates/spin/features#feature-mutex: +mutex\n\u27e822\u27e9 https://lib.rs/crates/async-std: outdated - async-std\n\u27e823\u27e9 https://lib.rs/crates/async-std/features#feature-attributes: +attributes\n\u27e824\u27e9 https://lib.rs/crates/async-std/features#feature-unstable: +unstable\n\u27e825\u27e9 https://lib.rs/crates/criterion: outdated - criterion\n\u27e826\u27e9 https://lib.rs/crates/crossbeam-channel: 0.5.5 - crossbeam-channel\n\u27e827\u27e9 https://lib.rs/crates/crossbeam-utils: 0.8.10 - crossbeam-utils\n\u27e828\u27e9 https://lib.rs/crates/futures: ^0.3 - futures\n\u27e829\u27e9 https://lib.rs/crates/futures/features#feature-std: +std\n\u27e830\u27e9 https://lib.rs/crates/getrandom: outdated - getrandom\n\u27e831\u27e9 https://lib.rs/crates/getrandom/features#feature-js: +js\n\u27e832\u27e9 https://lib.rs/crates/rand: outdated - rand\n\u27e833\u27e9 https://lib.rs/crates/tokio: ^1.16.1 - tokio\n\u27e834\u27e9 https://lib.rs/crates/tokio/features#feature-rt: +rt\n\u27e835\u27e9 https://lib.rs/crates/tokio/features#feature-macros: +macros\n\u27e836\u27e9 https://lib.rs/crates/waker-fn: 1.1.0 - waker-fn\n\u27e837\u27e9 https://lib.rs/crates/flume/features: Other features\n\u27e838\u27e9 https://lib.rs/crates/flume/features#feature-select: select\n\u27e839\u27e9 https://lib.rs/crates/flume/features#feature-spin: spin\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6825,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "116860.2303207"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libscopeguard-b9c5b28c83a30656.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libfutures_sink-b716961c885ee4ed.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "js",
                "js-sys",
                "rdrand",
                "std",
                "wasm-bindgen"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libgetrandom-2ece703aad69edfd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\liblock_api-3173cd84095e13bd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "barrier",
                "default",
                "lazy",
                "lock_api",
                "lock_api_crate",
                "mutex",
                "once",
                "rwlock",
                "spin_mutex"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libspin-e79ac162dd62c10d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanorand@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanorand-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanorand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanorand-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "chacha",
                "default",
                "getrandom",
                "pcg64",
                "std",
                "tls",
                "wyrand"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libnanorand-7e056d79ccfeaa43.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async",
                "default",
                "eventual-fairness",
                "futures-core",
                "futures-sink",
                "nanorand",
                "select"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libflume-1da77f162238ea70.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libscopeguard-b9c5b28c83a30656.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.2.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "js",
                "js-sys",
                "rdrand",
                "std",
                "wasm-bindgen"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libgetrandom-2ece703aad69edfd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\liblock_api-3173cd84095e13bd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#nanorand@0.7.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanorand-0.7.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "nanorand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\nanorand-0.7.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "chacha",
                "default",
                "getrandom",
                "pcg64",
                "std",
                "tls",
                "wyrand"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libnanorand-7e056d79ccfeaa43.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libfutures_sink-b716961c885ee4ed.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "spin",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\spin-0.9.8\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "barrier",
                "default",
                "lazy",
                "lock_api",
                "lock_api_crate",
                "mutex",
                "once",
                "rwlock",
                "spin_mutex"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\target\\debug\\deps\\libspin-e79ac162dd62c10d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of `default` to create a unit struct\n   --> src\\select.rs:107:22\n    |\n107 |             phantom: PhantomData::default(),\n    |                      ^^^^^^^^^^^-----------\n    |                                 |\n    |                                 help: remove this call to `default`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_constructed_unit_structs\n    = note: `#[warn(clippy::default_constructed_unit_structs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_constructed_unit_structs",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::default_constructed_unit_structs)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove this call to `default`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2782,
                        "byte_start": 2771,
                        "column_end": 44,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\select.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 107,
                        "line_start": 107,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 33,
                            "text": "            phantom: PhantomData::default(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::default_constructed_unit_structs",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of `default` to create a unit struct",
                "spans": [
                  {
                    "byte_end": 2782,
                    "byte_start": 2760,
                    "column_end": 44,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\select.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 107,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 44,
                        "highlight_start": 22,
                        "text": "            phantom: PhantomData::default(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression borrows a value the compiler would automatically borrow\n   --> src\\select.rs:186:22\n    |\n186 |                 Some((&mut self.mapper)(res))\n    |                      ^^^^^^^^^^^^^^^^^^ help: change this to: `(self.mapper)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_borrow)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5574,
                        "byte_start": 5556,
                        "column_end": 40,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\select.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": "(self.mapper)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 22,
                            "text": "                Some((&mut self.mapper)(res))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression borrows a value the compiler would automatically borrow",
                "spans": [
                  {
                    "byte_end": 5574,
                    "byte_start": 5556,
                    "column_end": 40,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\select.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 22,
                        "text": "                Some((&mut self.mapper)(res))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression borrows a value the compiler would automatically borrow\n   --> src\\select.rs:280:22\n    |\n280 |                 Some((&mut self.mapper)(res))\n    |                      ^^^^^^^^^^^^^^^^^^ help: change this to: `(self.mapper)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8738,
                        "byte_start": 8720,
                        "column_end": 40,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\select.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 280,
                        "line_start": 280,
                        "suggested_replacement": "(self.mapper)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 22,
                            "text": "                Some((&mut self.mapper)(res))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression borrows a value the compiler would automatically borrow",
                "spans": [
                  {
                    "byte_end": 8738,
                    "byte_start": 8720,
                    "column_end": 40,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\select.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 280,
                    "line_start": 280,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 22,
                        "text": "                Some((&mut self.mapper)(res))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "error: this loop never actually loops\n   --> src\\select.rs:326:19\n    |\n326 |           let res = 'outer: loop {\n    |  ___________________^\n327 | |             // Init signals\n328 | |             for _ in 0..self.selections.len() {\n329 | |                 if let Some(val) = self.selections[self.next_poll].init() {\n...   |\n365 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[deny(clippy::never_loop)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::never_loop",
                  "explanation": null
                },
                "level": "error",
                "message": "this loop never actually loops",
                "spans": [
                  {
                    "byte_end": 11621,
                    "byte_start": 10274,
                    "column_end": 10,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\select.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 365,
                    "line_start": 326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 19,
                        "text": "        let res = 'outer: loop {"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            // Init signals"
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "            for _ in 0..self.selections.len() {"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                if let Some(val) = self.selections[self.next_poll].init() {"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    break 'outer Some(val);"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                self.next_poll = (self.next_poll + 1) % self.selections.len();"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            // Speculatively poll"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "            if let Some(msg) = self.poll() {"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "                break 'outer Some(msg);"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "            loop {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                if let Some(deadline) = deadline {"
                      },
                      {
                        "highlight_end": 89,
                        "highlight_start": 1,
                        "text": "                    if let Some(dur) = deadline.checked_duration_since(Instant::now()) {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                        thread::park_timeout(dur);"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                    }"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                } else {"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "                    thread::park();"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                if deadline.map(|d| Instant::now() >= d).unwrap_or(false) {"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    break 'outer self.poll();"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 85,
                        "highlight_start": 1,
                        "text": "                let token = if let Some(token) = self.signalled.lock().pop_front() {"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                    token"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                } else {"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    // Spurious wakeup, park again"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                    continue;"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                };"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 48,
                        "highlight_start": 1,
                        "text": "                // Attempt to receive a message"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                if let Some(msg) = self.selections[token].poll() {"
                      },
                      {
                        "highlight_end": 44,
                        "highlight_start": 1,
                        "text": "                    break 'outer Some(msg);"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\async.rs:73:39\n   |\n73 |             OwnedOrRef::Owned(arc) => &arc,\n   |                                       ^^^^ help: change this to: `arc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1822,
                        "byte_start": 1818,
                        "column_end": 43,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\async.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 73,
                        "line_start": 73,
                        "suggested_replacement": "arc",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 39,
                            "text": "            OwnedOrRef::Owned(arc) => &arc,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 1822,
                    "byte_start": 1818,
                    "column_end": 43,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 39,
                        "text": "            OwnedOrRef::Owned(arc) => &arc,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src\\async.rs:88:37\n   |\n88 |             sender: OwnedOrRef::Ref(&self),\n   |                                     ^^^^^ help: change this to: `self`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2405,
                        "byte_start": 2400,
                        "column_end": 42,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\async.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 37,
                            "text": "            sender: OwnedOrRef::Ref(&self),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 2405,
                    "byte_start": 2400,
                    "column_end": 42,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 37,
                        "text": "            sender: OwnedOrRef::Ref(&self),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\async.rs:113:37\n    |\n113 |             sender: OwnedOrRef::Ref(&self),\n    |                                     ^^^^^ help: change this to: `self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3582,
                        "byte_start": 3577,
                        "column_end": 42,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\async.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 113,
                        "line_start": 113,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 37,
                            "text": "            sender: OwnedOrRef::Ref(&self),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 3582,
                    "byte_start": 3577,
                    "column_end": 42,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\async.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 113,
                    "line_start": 113,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 37,
                        "text": "            sender: OwnedOrRef::Ref(&self),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:933:26\n    |\n933 |         Iter { receiver: &self }\n    |                          ^^^^^ help: change this to: `self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31639,
                        "byte_start": 31634,
                        "column_end": 31,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 933,
                        "line_start": 933,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 26,
                            "text": "        Iter { receiver: &self }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 31639,
                    "byte_start": 31634,
                    "column_end": 31,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 933,
                    "line_start": 933,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 26,
                        "text": "        Iter { receiver: &self }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpa7qvuyg0/flume-0.11.1#flume@0.11.1",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flume",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpa7qvuyg0\\flume-0.11.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src\\lib.rs:939:29\n    |\n939 |         TryIter { receiver: &self }\n    |                             ^^^^^ help: change this to: `self`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31889,
                        "byte_start": 31884,
                        "column_end": 34,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 939,
                        "line_start": 939,
                        "suggested_replacement": "self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 29,
                            "text": "        TryIter { receiver: &self }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_borrow",
                  "explanation": null
                },
                "level": "warning",
                "message": "this expression creates a reference which is immediately dereferenced by the compiler",
                "spans": [
                  {
                    "byte_end": 31889,
                    "byte_start": 31884,
                    "column_end": 34,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 939,
                    "line_start": 939,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 29,
                        "text": "        TryIter { receiver: &self }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "build-finished",
              "success": false
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 129
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": true,
              "count": 2,
              "list": [
                {
                  "advisory": {
                    "id": "RUSTSEC-2022-0013",
                    "package": "regex",
                    "title": "Regexes with large repetitions on empty sub-expressions take a very long time to parse",
                    "description": "The Rust Security Response WG was notified that the `regex` crate did not\nproperly limit the complexity of the regular expressions (regex) it parses. An\nattacker could use this security issue to perform a denial of service, by\nsending a specially crafted regex to a service accepting untrusted regexes. No\nknown vulnerability is present when parsing untrusted input with trusted\nregexes.\n\nThis issue has been assigned CVE-2022-24713. The severity of this vulnerability\nis \"high\" when the `regex` crate is used to parse untrusted regexes. Other uses\nof the `regex` crate are not affected by this vulnerability.\n\n## Overview\n\nThe `regex` crate features built-in mitigations to prevent denial of service\nattacks caused by untrusted regexes, or untrusted input matched by trusted\nregexes. Those (tunable) mitigations already provide sane defaults to prevent\nattacks. This guarantee is documented and it's considered part of the crate's\nAPI.\n\nUnfortunately a bug was discovered in the mitigations designed to prevent\nuntrusted regexes to take an arbitrary amount of time during parsing, and it's\npossible to craft regexes that bypass such mitigations. This makes it possible\nto perform denial of service attacks by sending specially crafted regexes to\nservices accepting user-controlled, untrusted regexes.\n\n## Affected versions\n\nAll versions of the `regex` crate before or equal to 1.5.4 are affected by this\nissue. The fix is include starting from  `regex` 1.5.5.\n\n## Mitigations\n\nWe recommend everyone accepting user-controlled regexes to upgrade immediately\nto the latest version of the `regex` crate.\n\nUnfortunately there is no fixed set of problematic regexes, as there are\npractically infinite regexes that could be crafted to exploit this\nvulnerability. Because of this, we do not recommend denying known problematic\nregexes.\n\n## Acknowledgements\n\nWe want to thank Addison Crump for responsibly disclosing this to us according\nto the [Rust security policy][1], and for helping review the fix.\n\nWe also want to thank Andrew Gallant for developing the fix, and Pietro Albini\nfor coordinating the disclosure and writing this advisory.\n\n[1]: https://www.rust-lang.org/policies/security",
                    "date": "2022-03-08",
                    "aliases": [
                      "CVE-2022-24713",
                      "GHSA-m5pq-gvj9-9vr8"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "denial-of-service"
                    ],
                    "keywords": [],
                    "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                    "informational": null,
                    "references": [],
                    "source": null,
                    "url": "https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=1.5.5"
                    ],
                    "unaffected": []
                  },
                  "affected": null,
                  "package": {
                    "name": "regex",
                    "version": "1.5.4",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "d07a8629359eb56f1e2fb1652bb04212c072a87ba68546a04065d525673ac461",
                    "dependencies": [
                      {
                        "name": "regex-syntax",
                        "version": "0.6.25",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                },
                {
                  "advisory": {
                    "id": "RUSTSEC-2023-0001",
                    "package": "tokio",
                    "title": "reject_remote_clients Configuration corruption",
                    "description": "On Windows, configuring a named pipe server with [pipe_mode] will force [ServerOptions]::[reject_remote_clients] as `false`.\n\nThis drops any intended explicit configuration for the [reject_remote_clients] that may have been set as `true` previously.\n\nThe default setting of [reject_remote_clients] is normally `true` meaning the default is also overridden as `false`.\n\n## Workarounds\n\nEnsure that [pipe_mode] is set first after initializing a [ServerOptions]. For example:\n\n```rust\nlet mut opts = ServerOptions::new();\nopts.pipe_mode(PipeMode::Message);\nopts.reject_remote_clients(true);\n```\n\n[ServerOptions]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html\n[pipe_mode]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.pipe_mode\n[reject_remote_clients]: https://docs.rs/tokio/latest/tokio/net/windows/named_pipe/struct.ServerOptions.html#method.reject_remote_clients",
                    "date": "2023-01-04",
                    "aliases": [
                      "CVE-2023-22466",
                      "GHSA-7rrj-xr53-82p7"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [],
                    "keywords": [
                      "configuration failure"
                    ],
                    "cvss": null,
                    "informational": null,
                    "references": [
                      "https://github.com/tokio-rs/tokio/pull/5336",
                      "https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createnamedpipea#pipe_reject_remote_clients"
                    ],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/security/advisories/GHSA-7rrj-xr53-82p7",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "versions": {
                    "patched": [
                      ">=1.18.4, <1.19.0",
                      ">=1.20.3, <1.21.0",
                      ">=1.23.1"
                    ],
                    "unaffected": [
                      "<1.7.0"
                    ]
                  },
                  "affected": {
                    "arch": [],
                    "os": [
                      "windows"
                    ],
                    "functions": {}
                  },
                  "package": {
                    "name": "tokio",
                    "version": "1.19.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c51a52ed6686dd62c320f9b89299e9dfb46f730c7a48e635c19f21d116cb1439",
                    "dependencies": [
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "1.8.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  }
                }
              ]
            },
            "warnings": {
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "bumpalo",
                    "version": "3.7.0",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "9c59e7af012c713f529e7a3ee57ce9b31ddd858d4b512923602f74608b009631",
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2022-0078",
                    "package": "bumpalo",
                    "title": "Use-after-free due to a lifetime error in `Vec::into_iter()`",
                    "description": "In affected versions of this crate, the lifetime of the iterator produced by\n`Vec::into_iter()` is not constrained to the lifetime of the `Bump` that\nallocated the vector's memory. Using the iterator after the `Bump` is dropped\ncauses use-after-free accesses.\n\nThe following example demonstrates memory corruption arising from a misuse of\nthis unsoundness.\n\n```rust\nuse bumpalo::{collections::Vec, Bump};\n\nfn main() {\n    let bump = Bump::new();\n    let mut vec = Vec::new_in(&bump);\n    vec.extend([0x01u8; 32]);\n    let into_iter = vec.into_iter();\n    drop(bump);\n\n    for _ in 0..100 {\n        let reuse_bump = Bump::new();\n        let _reuse_alloc = reuse_bump.alloc([0x41u8; 10]);\n    }\n\n    for x in into_iter {\n        print!(\"0x{:02x} \", x);\n    }\n    println!();\n}\n```\n\nThe issue was corrected in version 3.11.1 by adding a lifetime to the `IntoIter`\ntype, and updating the signature of `Vec::into_iter()` to constrain this\nlifetime.",
                    "date": "2022-01-14",
                    "aliases": [
                      "GHSA-f85w-wvc7-crwc"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption",
                      "memory-exposure"
                    ],
                    "keywords": [
                      "use-after-free"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/fitzgen/bumpalo/blob/main/CHANGELOG.md#3111",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": {
                    "arch": [],
                    "os": [],
                    "functions": {
                      "bumpalo::collections::vec::Vec::into_iter": [
                        "<3.11.1"
                      ]
                    }
                  },
                  "versions": {
                    "patched": [
                      ">=3.11.1"
                    ],
                    "unaffected": [
                      "<1.1.0"
                    ]
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.19.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c51a52ed6686dd62c320f9b89299e9dfb46f730c7a48e635c19f21d116cb1439",
                    "dependencies": [
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "1.8.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2023-0005",
                    "package": "tokio",
                    "title": "`tokio::io::ReadHalf<T>::unsplit` is Unsound",
                    "description": "`tokio::io::ReadHalf<T>::unsplit` can violate the `Pin` contract\n\nThe soundness issue is described in the [tokio/issues#5372](https://github.com/tokio-rs/tokio/issues/5372)\n\nSpecific set of conditions needed to trigger an issue (a !Unpin type in ReadHalf)\nis unusual, combined with the difficulty of making any arbitrary use-after-free\nexploitable in Rust without doing a lot of careful alignment of data types in\nthe surrounding code.\n\nThe `tokio` feature `io-util` is also required to be enabled to trigger this\nsoundness issue.\n\nThanks to zachs18 reporting the issue to Tokio team responsibly and taiki-e\nand carllerche appropriately responding and fixing the soundness bug.\n\nTokio before 0.2.0 used `futures` 0.1 that did not have `Pin`, so it is not\naffected by this issue.",
                    "date": "2023-01-11",
                    "aliases": [
                      "GHSA-4q83-7cq4-p6wg"
                    ],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-exposure"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/issues/5372",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.18.5, <1.19.0",
                      ">=1.20.4, <1.21.0",
                      ">=1.24.2"
                    ],
                    "unaffected": [
                      "<0.2.0"
                    ]
                  }
                },
                {
                  "kind": "unsound",
                  "package": {
                    "name": "tokio",
                    "version": "1.19.2",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "c51a52ed6686dd62c320f9b89299e9dfb46f730c7a48e635c19f21d116cb1439",
                    "dependencies": [
                      {
                        "name": "once_cell",
                        "version": "1.20.2",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "tokio-macros",
                        "version": "1.8.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0023",
                    "package": "tokio",
                    "title": "Broadcast channel calls clone in parallel, but does not require `Sync`",
                    "description": "The broadcast channel internally calls `clone` on the stored value when\nreceiving it, and only requires `T:Send`. This means that using the broadcast\nchannel with values that are `Send` but not `Sync` can trigger unsoundness if\nthe `clone` implementation makes use of the value being `!Sync`.\n\nThank you to Austin Bonander for finding and reporting this issue.",
                    "date": "2025-04-07",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [],
                    "source": null,
                    "url": "https://github.com/tokio-rs/tokio/pull/7232",
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [
                      ">=1.38.2, <1.39.0",
                      ">=1.42.1, <1.43.0",
                      ">=1.43.1, <1.44.0",
                      ">=1.44.2"
                    ],
                    "unaffected": [
                      "<0.2.5"
                    ]
                  }
                }
              ],
              "yanked": [
                {
                  "kind": "yanked",
                  "package": {
                    "name": "futures-util",
                    "version": "0.3.15",
                    "source": "registry+https://github.com/rust-lang/crates.io-index",
                    "checksum": "feb5c238d27e2bf94ffdfd27b2c29e3df4a68c4193bb6427384259e2bf191967",
                    "dependencies": [
                      {
                        "name": "autocfg",
                        "version": "1.0.1",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-channel",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-core",
                        "version": "0.3.31",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-io",
                        "version": "0.3.31",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-macro",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-sink",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "futures-task",
                        "version": "0.3.15",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "memchr",
                        "version": "2.4.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-project-lite",
                        "version": "0.2.14",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "pin-utils",
                        "version": "0.1.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "proc-macro-hack",
                        "version": "0.5.19",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "proc-macro-nested",
                        "version": "0.1.7",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "slab",
                        "version": "0.4.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": null,
                  "affected": null,
                  "versions": null
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "flume",
          "version": "0.11.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\n[Settings](https://docs.rs/flume/latest/settings.html)\n[Help](https://docs.rs/flume/latest/help.html)\nSummary[Source](https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182)\nExpand description\n## [\u00a7](https://docs.rs/flume/latest/flume/#flume)Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### [\u00a7](https://docs.rs/flume/latest/flume/#why-flume)Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### [\u00a7](https://docs.rs/flume/latest/flume/#example)Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports[\u00a7](https://docs.rs/flume/latest/flume/#reexports)\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules[\u00a7](https://docs.rs/flume/latest/flume/#modules)\n\n[async](https://docs.rs/flume/latest/flume/async/index.html \"mod flume::async\")`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\n[select](https://docs.rs/flume/latest/flume/select/index.html \"mod flume::select\")`select`\n    Types that permit waiting upon multiple blocking operations using the [`Selector`](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\") interface.\n## Structs[\u00a7](https://docs.rs/flume/latest/flume/#structs)\n\n[Drain](https://docs.rs/flume/latest/flume/struct.Drain.html \"struct flume::Drain\")\n    An fixed-sized iterator over the msgs drained from a channel.\n\n[IntoIter](https://docs.rs/flume/latest/flume/struct.IntoIter.html \"struct flume::IntoIter\")\n    An owned iterator over the msgs received from a channel.\n\n[Iter](https://docs.rs/flume/latest/flume/struct.Iter.html \"struct flume::Iter\")\n    An iterator over the msgs received from a channel.\n\n[Receiver](https://docs.rs/flume/latest/flume/struct.Receiver.html \"struct flume::Receiver\")\n    The receiving end of a channel.\n\n[SendError](https://docs.rs/flume/latest/flume/struct.SendError.html \"struct flume::SendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\n[Sender](https://docs.rs/flume/latest/flume/struct.Sender.html \"struct flume::Sender\")\n    A transmitting end of a channel.\n\n[TryIter](https://docs.rs/flume/latest/flume/struct.TryIter.html \"struct flume::TryIter\")\n    An non-blocking iterator over the msgs received from a channel.\n\n[WeakSender](https://docs.rs/flume/latest/flume/struct.WeakSender.html \"struct flume::WeakSender\")\n    A sender that does not prevent the channel from being closed.\n## Enums[\u00a7](https://docs.rs/flume/latest/flume/#enums)\n\n[RecvError](https://docs.rs/flume/latest/flume/enum.RecvError.html \"enum flume::RecvError\")\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\n[RecvTimeoutError](https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html \"enum flume::RecvTimeoutError\")\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\n[SendTimeoutError](https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html \"enum flume::SendTimeoutError\")\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\n[TryRecvError](https://docs.rs/flume/latest/flume/enum.TryRecvError.html \"enum flume::TryRecvError\")\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\n[TrySendError](https://docs.rs/flume/latest/flume/enum.TrySendError.html \"enum flume::TrySendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions[\u00a7](https://docs.rs/flume/latest/flume/#functions)\n\n[bounded](https://docs.rs/flume/latest/flume/fn.bounded.html \"fn flume::bounded\")\n    Create a channel with a maximum capacity.\n\n[unbounded](https://docs.rs/flume/latest/flume/fn.unbounded.html \"fn flume::unbounded\")\n    Create a channel with no maximum capacity.\n",
            "markdown_with_citations": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### \u00a7\u27e85\u27e9Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### \u00a7\u27e86\u27e9Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports\u00a7\u27e87\u27e9\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules\u00a7\u27e88\u27e9\n\nasync\u27e89\u27e9`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\nselect\u27e810\u27e9`select`\n    Types that permit waiting upon multiple blocking operations using the `Selector`\u27e811\u27e9 interface.\n## Structs\u00a7\u27e812\u27e9\n\nDrain\u27e813\u27e9\n    An fixed-sized iterator over the msgs drained from a channel.\n\nIntoIter\u27e814\u27e9\n    An owned iterator over the msgs received from a channel.\n\nIter\u27e815\u27e9\n    An iterator over the msgs received from a channel.\n\nReceiver\u27e816\u27e9\n    The receiving end of a channel.\n\nSendError\u27e817\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\nSender\u27e818\u27e9\n    A transmitting end of a channel.\n\nTryIter\u27e819\u27e9\n    An non-blocking iterator over the msgs received from a channel.\n\nWeakSender\u27e820\u27e9\n    A sender that does not prevent the channel from being closed.\n## Enums\u00a7\u27e821\u27e9\n\nRecvError\u27e822\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\nRecvTimeoutError\u27e823\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\nSendTimeoutError\u27e824\u27e9\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\nTryRecvError\u27e825\u27e9\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\nTrySendError\u27e826\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions\u00a7\u27e827\u27e9\n\nbounded\u27e828\u27e9\n    Create a channel with a maximum capacity.\n\nunbounded\u27e829\u27e9\n    Create a channel with no maximum capacity.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/flume/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/flume/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182: Source\n\u27e84\u27e9 https://docs.rs/flume/latest/flume/#flume: \u00a7\n\u27e85\u27e9 https://docs.rs/flume/latest/flume/#why-flume: \u00a7\n\u27e86\u27e9 https://docs.rs/flume/latest/flume/#example: \u00a7\n\u27e87\u27e9 https://docs.rs/flume/latest/flume/#reexports: \u00a7\n\u27e88\u27e9 https://docs.rs/flume/latest/flume/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/flume/latest/flume/async/index.html: mod flume::async - async\n\u27e810\u27e9 https://docs.rs/flume/latest/flume/select/index.html: mod flume::select - select\n\u27e811\u27e9 https://docs.rs/flume/latest/flume/select/struct.Selector.html: struct flume::select::Selector - `Selector`\n\u27e812\u27e9 https://docs.rs/flume/latest/flume/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/flume/latest/flume/struct.Drain.html: struct flume::Drain - Drain\n\u27e814\u27e9 https://docs.rs/flume/latest/flume/struct.IntoIter.html: struct flume::IntoIter - IntoIter\n\u27e815\u27e9 https://docs.rs/flume/latest/flume/struct.Iter.html: struct flume::Iter - Iter\n\u27e816\u27e9 https://docs.rs/flume/latest/flume/struct.Receiver.html: struct flume::Receiver - Receiver\n\u27e817\u27e9 https://docs.rs/flume/latest/flume/struct.SendError.html: struct flume::SendError - SendError\n\u27e818\u27e9 https://docs.rs/flume/latest/flume/struct.Sender.html: struct flume::Sender - Sender\n\u27e819\u27e9 https://docs.rs/flume/latest/flume/struct.TryIter.html: struct flume::TryIter - TryIter\n\u27e820\u27e9 https://docs.rs/flume/latest/flume/struct.WeakSender.html: struct flume::WeakSender - WeakSender\n\u27e821\u27e9 https://docs.rs/flume/latest/flume/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/flume/latest/flume/enum.RecvError.html: enum flume::RecvError - RecvError\n\u27e823\u27e9 https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html: enum flume::RecvTimeoutError - RecvTimeoutError\n\u27e824\u27e9 https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html: enum flume::SendTimeoutError - SendTimeoutError\n\u27e825\u27e9 https://docs.rs/flume/latest/flume/enum.TryRecvError.html: enum flume::TryRecvError - TryRecvError\n\u27e826\u27e9 https://docs.rs/flume/latest/flume/enum.TrySendError.html: enum flume::TrySendError - TrySendError\n\u27e827\u27e9 https://docs.rs/flume/latest/flume/#functions: \u00a7\n\u27e828\u27e9 https://docs.rs/flume/latest/flume/fn.bounded.html: fn flume::bounded - bounded\n\u27e829\u27e9 https://docs.rs/flume/latest/flume/fn.unbounded.html: fn flume::unbounded - unbounded\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "flume",
          "version": "0.11.1",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\n[Settings](https://docs.rs/flume/latest/settings.html)\n[Help](https://docs.rs/flume/latest/help.html)\nSummary[Source](https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182)\nExpand description\n## [\u00a7](https://docs.rs/flume/latest/flume/#flume)Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### [\u00a7](https://docs.rs/flume/latest/flume/#why-flume)Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### [\u00a7](https://docs.rs/flume/latest/flume/#example)Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports[\u00a7](https://docs.rs/flume/latest/flume/#reexports)\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules[\u00a7](https://docs.rs/flume/latest/flume/#modules)\n\n[async](https://docs.rs/flume/latest/flume/async/index.html \"mod flume::async\")`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\n[select](https://docs.rs/flume/latest/flume/select/index.html \"mod flume::select\")`select`\n    Types that permit waiting upon multiple blocking operations using the [`Selector`](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\") interface.\n## Structs[\u00a7](https://docs.rs/flume/latest/flume/#structs)\n\n[Drain](https://docs.rs/flume/latest/flume/struct.Drain.html \"struct flume::Drain\")\n    An fixed-sized iterator over the msgs drained from a channel.\n\n[IntoIter](https://docs.rs/flume/latest/flume/struct.IntoIter.html \"struct flume::IntoIter\")\n    An owned iterator over the msgs received from a channel.\n\n[Iter](https://docs.rs/flume/latest/flume/struct.Iter.html \"struct flume::Iter\")\n    An iterator over the msgs received from a channel.\n\n[Receiver](https://docs.rs/flume/latest/flume/struct.Receiver.html \"struct flume::Receiver\")\n    The receiving end of a channel.\n\n[SendError](https://docs.rs/flume/latest/flume/struct.SendError.html \"struct flume::SendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\n[Sender](https://docs.rs/flume/latest/flume/struct.Sender.html \"struct flume::Sender\")\n    A transmitting end of a channel.\n\n[TryIter](https://docs.rs/flume/latest/flume/struct.TryIter.html \"struct flume::TryIter\")\n    An non-blocking iterator over the msgs received from a channel.\n\n[WeakSender](https://docs.rs/flume/latest/flume/struct.WeakSender.html \"struct flume::WeakSender\")\n    A sender that does not prevent the channel from being closed.\n## Enums[\u00a7](https://docs.rs/flume/latest/flume/#enums)\n\n[RecvError](https://docs.rs/flume/latest/flume/enum.RecvError.html \"enum flume::RecvError\")\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\n[RecvTimeoutError](https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html \"enum flume::RecvTimeoutError\")\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\n[SendTimeoutError](https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html \"enum flume::SendTimeoutError\")\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\n[TryRecvError](https://docs.rs/flume/latest/flume/enum.TryRecvError.html \"enum flume::TryRecvError\")\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\n[TrySendError](https://docs.rs/flume/latest/flume/enum.TrySendError.html \"enum flume::TrySendError\")\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions[\u00a7](https://docs.rs/flume/latest/flume/#functions)\n\n[bounded](https://docs.rs/flume/latest/flume/fn.bounded.html \"fn flume::bounded\")\n    Create a channel with a maximum capacity.\n\n[unbounded](https://docs.rs/flume/latest/flume/fn.unbounded.html \"fn flume::unbounded\")\n    Create a channel with no maximum capacity.\n",
            "markdown_with_citations": "[](https://docs.rs/flume/latest/flume/all.html \"show sidebar\")\n# Crate flumeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Flume\nA blazingly fast multi-producer, multi-consumer channel.\n_\u201cDo not communicate by sharing memory; instead, share memory by communicating.\u201d_\n### \u00a7\u27e85\u27e9Why Flume?\n  * **Featureful** : Unbounded, bounded and rendezvous queues\n  * **Fast** : Always faster than `std::sync::mpsc` and sometimes `crossbeam-channel`\n  * **Safe** : No `unsafe` code anywhere in the codebase!\n  * **Flexible** : `Sender` and `Receiver` both implement `Send + Sync + Clone`\n  * **Familiar** : Drop-in replacement for `std::sync::mpsc`\n  * **Capable** : Additional features like MPMC support and send timeouts/deadlines\n  * **Simple** : Few dependencies, minimal codebase, fast to compile\n  * **Asynchronous** : `async` support, including mix \u2019n match with sync code\n  * **Ergonomic** : Powerful `select`-like interface\n\n\n### \u00a7\u27e86\u27e9Example\n```\nlet (tx, rx) = flume::unbounded();\ntx.send(42).unwrap();\nassert_eq!(rx.recv().unwrap(), 42);\n```\n\n## Re-exports\u00a7\u27e87\u27e9\n\n`pub use select::Selector[](https://docs.rs/flume/latest/flume/select/struct.Selector.html \"struct flume::select::Selector\");``select`\n\n## Modules\u00a7\u27e88\u27e9\n\nasync\u27e89\u27e9`async`\n    Futures and other types that allow asynchronous interaction with channels.\n\nselect\u27e810\u27e9`select`\n    Types that permit waiting upon multiple blocking operations using the `Selector`\u27e811\u27e9 interface.\n## Structs\u00a7\u27e812\u27e9\n\nDrain\u27e813\u27e9\n    An fixed-sized iterator over the msgs drained from a channel.\n\nIntoIter\u27e814\u27e9\n    An owned iterator over the msgs received from a channel.\n\nIter\u27e815\u27e9\n    An iterator over the msgs received from a channel.\n\nReceiver\u27e816\u27e9\n    The receiving end of a channel.\n\nSendError\u27e817\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when all receivers are dropped.\n\nSender\u27e818\u27e9\n    A transmitting end of a channel.\n\nTryIter\u27e819\u27e9\n    An non-blocking iterator over the msgs received from a channel.\n\nWeakSender\u27e820\u27e9\n    A sender that does not prevent the channel from being closed.\n## Enums\u00a7\u27e821\u27e9\n\nRecvError\u27e822\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver when all senders are dropped and there are no more messages in the channel.\n\nRecvTimeoutError\u27e823\u27e9\n    An error that may be emitted when attempting to wait for a value on a receiver with a timeout when the receive operation times out or all senders are dropped and there are no values left in the channel.\n\nSendTimeoutError\u27e824\u27e9\n    An error that may be emitted when sending a value into a channel on a sender with a timeout when the send operation times out or all receivers are dropped.\n\nTryRecvError\u27e825\u27e9\n    An error that may be emitted when attempting to fetch a value on a receiver when there are no messages in the channel. If there are no messages in the channel and all senders are dropped, then `TryRecvError::Disconnected` will be returned.\n\nTrySendError\u27e826\u27e9\n    An error that may be emitted when attempting to send a value into a channel on a sender when the channel is full or all receivers are dropped.\n## Functions\u00a7\u27e827\u27e9\n\nbounded\u27e828\u27e9\n    Create a channel with a maximum capacity.\n\nunbounded\u27e829\u27e9\n    Create a channel with no maximum capacity.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/flume/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/flume/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/flume/latest/src/flume/lib.rs.html#1-1182: Source\n\u27e84\u27e9 https://docs.rs/flume/latest/flume/#flume: \u00a7\n\u27e85\u27e9 https://docs.rs/flume/latest/flume/#why-flume: \u00a7\n\u27e86\u27e9 https://docs.rs/flume/latest/flume/#example: \u00a7\n\u27e87\u27e9 https://docs.rs/flume/latest/flume/#reexports: \u00a7\n\u27e88\u27e9 https://docs.rs/flume/latest/flume/#modules: \u00a7\n\u27e89\u27e9 https://docs.rs/flume/latest/flume/async/index.html: mod flume::async - async\n\u27e810\u27e9 https://docs.rs/flume/latest/flume/select/index.html: mod flume::select - select\n\u27e811\u27e9 https://docs.rs/flume/latest/flume/select/struct.Selector.html: struct flume::select::Selector - `Selector`\n\u27e812\u27e9 https://docs.rs/flume/latest/flume/#structs: \u00a7\n\u27e813\u27e9 https://docs.rs/flume/latest/flume/struct.Drain.html: struct flume::Drain - Drain\n\u27e814\u27e9 https://docs.rs/flume/latest/flume/struct.IntoIter.html: struct flume::IntoIter - IntoIter\n\u27e815\u27e9 https://docs.rs/flume/latest/flume/struct.Iter.html: struct flume::Iter - Iter\n\u27e816\u27e9 https://docs.rs/flume/latest/flume/struct.Receiver.html: struct flume::Receiver - Receiver\n\u27e817\u27e9 https://docs.rs/flume/latest/flume/struct.SendError.html: struct flume::SendError - SendError\n\u27e818\u27e9 https://docs.rs/flume/latest/flume/struct.Sender.html: struct flume::Sender - Sender\n\u27e819\u27e9 https://docs.rs/flume/latest/flume/struct.TryIter.html: struct flume::TryIter - TryIter\n\u27e820\u27e9 https://docs.rs/flume/latest/flume/struct.WeakSender.html: struct flume::WeakSender - WeakSender\n\u27e821\u27e9 https://docs.rs/flume/latest/flume/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/flume/latest/flume/enum.RecvError.html: enum flume::RecvError - RecvError\n\u27e823\u27e9 https://docs.rs/flume/latest/flume/enum.RecvTimeoutError.html: enum flume::RecvTimeoutError - RecvTimeoutError\n\u27e824\u27e9 https://docs.rs/flume/latest/flume/enum.SendTimeoutError.html: enum flume::SendTimeoutError - SendTimeoutError\n\u27e825\u27e9 https://docs.rs/flume/latest/flume/enum.TryRecvError.html: enum flume::TryRecvError - TryRecvError\n\u27e826\u27e9 https://docs.rs/flume/latest/flume/enum.TrySendError.html: enum flume::TrySendError - TrySendError\n\u27e827\u27e9 https://docs.rs/flume/latest/flume/#functions: \u00a7\n\u27e828\u27e9 https://docs.rs/flume/latest/flume/fn.bounded.html: fn flume::bounded - bounded\n\u27e829\u27e9 https://docs.rs/flume/latest/flume/fn.unbounded.html: fn flume::unbounded - unbounded\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `flume` crate provides a fast, feature-rich, and safe multi-producer, multi-consumer (MPMC) channel implementation for Rust. It supports unbounded, bounded, and rendezvous queues, offers both synchronous and asynchronous communication, and includes advanced features like send timeouts, deadlines, and a powerful `select`-like interface. Designed as a drop-in replacement for `std::sync::mpsc`, it emphasizes performance, safety (no `unsafe` code), and ergonomic usage.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Channel Types  \n\u2705 Factual: Flume supports unbounded, bounded, and rendezvous channels, allowing developers to choose the most appropriate type for their use case.  \n\u274c Counterfactual: Flume only supports unbounded channels, making it unsuitable for scenarios requiring strict capacity limits.  \n\n---\n\n### Pair 2: Performance  \n\u2705 Factual: Flume is consistently faster than `std::sync::mpsc` and often outperforms `crossbeam-channel` in benchmarks.  \n\u274c Counterfactual: Flume is slower than `std::sync::mpsc` and only matches the performance of `crossbeam-channel` in specific scenarios.  \n\n---\n\n### Pair 3: Safety and Code Quality  \n\u2705 Factual: Flume's entire codebase is written without using `unsafe` code, ensuring memory safety and reliability.  \n\u274c Counterfactual: Flume relies on `unsafe` code in critical sections to achieve its high performance and flexibility.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-b8cf774f-00902149-1751263069",
      "timestamp": "2025-06-30T05:57:49.128944+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]