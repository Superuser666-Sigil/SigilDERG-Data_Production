[
  {
    "execution_id": "exec-73cf2b40-edd56927-1751260750",
    "timestamp": "2025-06-30T05:19:10.871666+00:00",
    "sacred_chain": {
      "input_data": "dirs",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'dirs' -> 'dirs'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "dirs",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/dirs",
            "title": "dirs v6.0.0",
            "content": {
              "raw_markdown": "#  dirs v6.0.0\nA tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS. \n  * [ #app_dirs ](https://crates.io/keywords/app_dirs)\n  * [ #basedir ](https://crates.io/keywords/basedir)\n  * [ #folder ](https://crates.io/keywords/folder)\n  * [ #path ](https://crates.io/keywords/path)\n  * [ #xdg ](https://crates.io/keywords/xdg)\n\n\n  * [ Readme ](https://crates.io/crates/dirs)\n  * [ 20 Versions ](https://crates.io/crates/dirs/versions)\n  * [ Dependencies ](https://crates.io/crates/dirs/dependencies)\n  * [ Dependents ](https://crates.io/crates/dirs/reverse_dependencies)\n\n\n## Metadata\n6 months ago \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n13.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add dirs\nOr add the following line to your Cargo.toml:\ndirs = \"6.0.0\"\n## Repository\n[ github.com/soc/dirs-rs ](https://github.com/soc/dirs-rs)\n## Owners\n[ Report crate ](https://crates.io/support?crate=dirs&inquire=crate-violation)\n### Stats Overview\n120,571,764 Downloads all time\n20 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  dirs v6.0.0\nA tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS. \n  *  #app_dirs \u27e81\u27e9\n  *  #basedir \u27e82\u27e9\n  *  #folder \u27e83\u27e9\n  *  #path \u27e84\u27e9\n  *  #xdg \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  20 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n6 months ago \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n13.9 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add dirs\nOr add the following line to your Cargo.toml:\ndirs = \"6.0.0\"\n## Repository\n github.com/soc/dirs-rs \u27e812\u27e9\n## Owners\n Report crate \u27e813\u27e9\n### Stats Overview\n120,571,764 Downloads all time\n20 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/app_dirs:  #app_dirs \n\u27e82\u27e9 https://crates.io/keywords/basedir:  #basedir \n\u27e83\u27e9 https://crates.io/keywords/folder:  #folder \n\u27e84\u27e9 https://crates.io/keywords/path:  #path \n\u27e85\u27e9 https://crates.io/keywords/xdg:  #xdg \n\u27e86\u27e9 https://crates.io/crates/dirs:  Readme \n\u27e87\u27e9 https://crates.io/crates/dirs/versions:  20 Versions \n\u27e88\u27e9 https://crates.io/crates/dirs/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/dirs/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://github.com/soc/dirs-rs:  github.com/soc/dirs-rs \n\u27e813\u27e9 https://crates.io/support?crate=dirs&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1474,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114540.694513"
          },
          "docs_rs": {
            "url": "https://docs.rs/dirs",
            "title": "Crate dirsCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\n[Settings](https://docs.rs/dirs/latest/settings.html)\n[Help](https://docs.rs/dirs/latest/help.html)\nSummary[Source](https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328)\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the [XDG base directory](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) and the [XDG user directory](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) specifications on Linux,\n  * the [Known Folder](https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\).aspx) system on Windows, and\n  * the [Standard Directories](https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6) on macOS.\n\n\n## Functions[\u00a7](https://docs.rs/dirs/latest/dirs/#functions)\n\n[audio_dir](https://docs.rs/dirs/latest/dirs/fn.audio_dir.html \"fn dirs::audio_dir\")\n    Returns the path to the user\u2019s audio directory.\n\n[cache_dir](https://docs.rs/dirs/latest/dirs/fn.cache_dir.html \"fn dirs::cache_dir\")\n    Returns the path to the user\u2019s cache directory.\n\n[config_dir](https://docs.rs/dirs/latest/dirs/fn.config_dir.html \"fn dirs::config_dir\")\n    Returns the path to the user\u2019s config directory.\n\n[config_local_dir](https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html \"fn dirs::config_local_dir\")\n    Returns the path to the user\u2019s local config directory.\n\n[data_dir](https://docs.rs/dirs/latest/dirs/fn.data_dir.html \"fn dirs::data_dir\")\n    Returns the path to the user\u2019s data directory.\n\n[data_local_dir](https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html \"fn dirs::data_local_dir\")\n    Returns the path to the user\u2019s local data directory.\n\n[desktop_dir](https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html \"fn dirs::desktop_dir\")\n    Returns the path to the user\u2019s desktop directory.\n\n[document_dir](https://docs.rs/dirs/latest/dirs/fn.document_dir.html \"fn dirs::document_dir\")\n    Returns the path to the user\u2019s document directory.\n\n[download_dir](https://docs.rs/dirs/latest/dirs/fn.download_dir.html \"fn dirs::download_dir\")\n    Returns the path to the user\u2019s download directory.\n\n[executable_dir](https://docs.rs/dirs/latest/dirs/fn.executable_dir.html \"fn dirs::executable_dir\")\n    Returns the path to the user\u2019s executable directory.\n\n[font_dir](https://docs.rs/dirs/latest/dirs/fn.font_dir.html \"fn dirs::font_dir\")\n    Returns the path to the user\u2019s font directory.\n\n[home_dir](https://docs.rs/dirs/latest/dirs/fn.home_dir.html \"fn dirs::home_dir\")\n    Returns the path to the user\u2019s home directory.\n\n[picture_dir](https://docs.rs/dirs/latest/dirs/fn.picture_dir.html \"fn dirs::picture_dir\")\n    Returns the path to the user\u2019s picture directory.\n\n[preference_dir](https://docs.rs/dirs/latest/dirs/fn.preference_dir.html \"fn dirs::preference_dir\")\n    Returns the path to the user\u2019s preference directory.\n\n[public_dir](https://docs.rs/dirs/latest/dirs/fn.public_dir.html \"fn dirs::public_dir\")\n    Returns the path to the user\u2019s public directory.\n\n[runtime_dir](https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html \"fn dirs::runtime_dir\")\n    Returns the path to the user\u2019s runtime directory.\n\n[state_dir](https://docs.rs/dirs/latest/dirs/fn.state_dir.html \"fn dirs::state_dir\")\n    Returns the path to the user\u2019s state directory.\n\n[template_dir](https://docs.rs/dirs/latest/dirs/fn.template_dir.html \"fn dirs::template_dir\")\n    Returns the path to the user\u2019s template directory.\n\n[video_dir](https://docs.rs/dirs/latest/dirs/fn.video_dir.html \"fn dirs::video_dir\")\n    Returns the path to the user\u2019s video directory.\n",
              "markdown_with_citations": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the XDG base directory\u27e84\u27e9 and the XDG user directory\u27e85\u27e9 specifications on Linux,\n  * the Known Folder\u27e86\u27e9.aspx) system on Windows, and\n  * the Standard Directories\u27e87\u27e9 on macOS.\n\n\n## Functions\u00a7\u27e88\u27e9\n\naudio_dir\u27e89\u27e9\n    Returns the path to the user\u2019s audio directory.\n\ncache_dir\u27e810\u27e9\n    Returns the path to the user\u2019s cache directory.\n\nconfig_dir\u27e811\u27e9\n    Returns the path to the user\u2019s config directory.\n\nconfig_local_dir\u27e812\u27e9\n    Returns the path to the user\u2019s local config directory.\n\ndata_dir\u27e813\u27e9\n    Returns the path to the user\u2019s data directory.\n\ndata_local_dir\u27e814\u27e9\n    Returns the path to the user\u2019s local data directory.\n\ndesktop_dir\u27e815\u27e9\n    Returns the path to the user\u2019s desktop directory.\n\ndocument_dir\u27e816\u27e9\n    Returns the path to the user\u2019s document directory.\n\ndownload_dir\u27e817\u27e9\n    Returns the path to the user\u2019s download directory.\n\nexecutable_dir\u27e818\u27e9\n    Returns the path to the user\u2019s executable directory.\n\nfont_dir\u27e819\u27e9\n    Returns the path to the user\u2019s font directory.\n\nhome_dir\u27e820\u27e9\n    Returns the path to the user\u2019s home directory.\n\npicture_dir\u27e821\u27e9\n    Returns the path to the user\u2019s picture directory.\n\npreference_dir\u27e822\u27e9\n    Returns the path to the user\u2019s preference directory.\n\npublic_dir\u27e823\u27e9\n    Returns the path to the user\u2019s public directory.\n\nruntime_dir\u27e824\u27e9\n    Returns the path to the user\u2019s runtime directory.\n\nstate_dir\u27e825\u27e9\n    Returns the path to the user\u2019s state directory.\n\ntemplate_dir\u27e826\u27e9\n    Returns the path to the user\u2019s template directory.\n\nvideo_dir\u27e827\u27e9\n    Returns the path to the user\u2019s video directory.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dirs/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dirs/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328: Source\n\u27e84\u27e9 https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html: XDG base directory\n\u27e85\u27e9 https://www.freedesktop.org/wiki/Software/xdg-user-dirs/: XDG user directory\n\u27e86\u27e9 https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\: Known Folder\n\u27e87\u27e9 https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6: Standard Directories\n\u27e88\u27e9 https://docs.rs/dirs/latest/dirs/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/dirs/latest/dirs/fn.audio_dir.html: fn dirs::audio_dir - audio_dir\n\u27e810\u27e9 https://docs.rs/dirs/latest/dirs/fn.cache_dir.html: fn dirs::cache_dir - cache_dir\n\u27e811\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_dir.html: fn dirs::config_dir - config_dir\n\u27e812\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html: fn dirs::config_local_dir - config_local_dir\n\u27e813\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_dir.html: fn dirs::data_dir - data_dir\n\u27e814\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html: fn dirs::data_local_dir - data_local_dir\n\u27e815\u27e9 https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html: fn dirs::desktop_dir - desktop_dir\n\u27e816\u27e9 https://docs.rs/dirs/latest/dirs/fn.document_dir.html: fn dirs::document_dir - document_dir\n\u27e817\u27e9 https://docs.rs/dirs/latest/dirs/fn.download_dir.html: fn dirs::download_dir - download_dir\n\u27e818\u27e9 https://docs.rs/dirs/latest/dirs/fn.executable_dir.html: fn dirs::executable_dir - executable_dir\n\u27e819\u27e9 https://docs.rs/dirs/latest/dirs/fn.font_dir.html: fn dirs::font_dir - font_dir\n\u27e820\u27e9 https://docs.rs/dirs/latest/dirs/fn.home_dir.html: fn dirs::home_dir - home_dir\n\u27e821\u27e9 https://docs.rs/dirs/latest/dirs/fn.picture_dir.html: fn dirs::picture_dir - picture_dir\n\u27e822\u27e9 https://docs.rs/dirs/latest/dirs/fn.preference_dir.html: fn dirs::preference_dir - preference_dir\n\u27e823\u27e9 https://docs.rs/dirs/latest/dirs/fn.public_dir.html: fn dirs::public_dir - public_dir\n\u27e824\u27e9 https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html: fn dirs::runtime_dir - runtime_dir\n\u27e825\u27e9 https://docs.rs/dirs/latest/dirs/fn.state_dir.html: fn dirs::state_dir - state_dir\n\u27e826\u27e9 https://docs.rs/dirs/latest/dirs/fn.template_dir.html: fn dirs::template_dir - template_dir\n\u27e827\u27e9 https://docs.rs/dirs/latest/dirs/fn.video_dir.html: fn dirs::video_dir - video_dir\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 4044,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114541.449137"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/dirs",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [16 stable releases](https://lib.rs/crates/dirs/versions) (6 major)\nUses old Rust 2015\n6.0.0 |  Jan 12, 2025   \n---|---  \n5.0.1 |  Apr 30, 2023   \n5.0.0 |  Mar 19, 2023   \n4.0.0 |  Sep 15, 2021   \n0.1.0 |  Nov 24, 2015   \n#**2** in [Filesystem](https://lib.rs/filesystem \"Crates for dealing with files and filesystems.\")\nDownload history 1171802/week @ 2025-03-07 1181840/week @ 2025-03-14 1171801/week @ 2025-03-21 1175768/week @ 2025-03-28 1318356/week @ 2025-04-04 1320017/week @ 2025-04-11 1352686/week @ 2025-04-18 1275405/week @ 2025-04-25 1207157/week @ 2025-05-02 1223670/week @ 2025-05-09 1300237/week @ 2025-05-16 1108181/week @ 2025-05-23 1225781/week @ 2025-05-30 1324935/week @ 2025-06-06 1268515/week @ 2025-06-13 1277605/week @ 2025-06-20\n**5,297,053** downloads per month Used in [**7,711** crates (3,437 directly)](https://lib.rs/crates/dirs/rev)\n**MIT/Apache**\n40KB  202 lines\n[![crates.io](https://img.shields.io/crates/v/dirs.svg?style=for-the-badge)](https://crates.io/crates/dirs) [![API documentation](https://img.shields.io/docsrs/dirs/latest?style=for-the-badge)](https://docs.rs/dirs/) ![actively developed](https://img.shields.io/badge/maintenance-actively--developed-brightgreen.svg?style=for-the-badge) ![License: MIT/Apache-2.0](https://img.shields.io/badge/license-MIT%2FApache--2.0-orange.svg?style=for-the-badge)\n# ``dirs``\n## Introduction\n  * a tiny low-level library with a minimal API\n  * that provides the platform-specific, user-accessible locations\n  * for retrieving and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista), macOS and other platforms.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the [XDG base directory](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) and the [XDG user directory](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) specifications on Linux and Redox\n  * the [Known Folder](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457.aspx) API on Windows\n  * the [Standard Directories](https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6) guidelines on macOS\n\n\n## Platforms\nThis library is written in Rust, and supports Linux, Redox, macOS and Windows. Other platforms are also supported; they use the Linux conventions.\nThe minimal required version of Rust is 1.13 except for Redox, where the minimum Rust version depends on the [``redox_users``](https://lib.rs/crates/redox_users) crate.\nIt's mid-level sister library, _directories_ , is available for Rust ([directories-rs](https://github.com/dirs-dev/directories-rs)) and on the JVM ([directories-jvm](https://github.com/dirs-dev/directories-jvm)).\n## Usage\n#### Dependency\nAdd the library as a dependency to your project by inserting\n```\n`dirs = \"5.0\"\n`\n```\n\ninto the ````[``dependencies``]```` section of your Cargo.toml file.\nIf you are upgrading from version 2, please read the [section on breaking changes](https://lib.rs/crates/dirs#readme-3) first.\n#### Example\nLibrary run by user Alice:\n```\n``extern` `crate` dirs`;`\n`dirs`::``home_dir`(``)``;`\n``//` Lin: Some(/home/alice)`\n``//` Win: Some(C:\\Users\\Alice)`\n``//` Mac: Some(/Users/Alice)`\n`dirs`::``audio_dir`(``)``;`\n``//` Lin: Some(/home/alice/Music)`\n``//` Win: Some(C:\\Users\\Alice\\Music)`\n``//` Mac: Some(/Users/Alice/Music)`\n`dirs`::``config_dir`(``)``;`\n``//` Lin: Some(/home/alice/.config)`\n``//` Win: Some(C:\\Users\\Alice\\AppData\\Roaming)`\n``//` Mac: Some(/Users/Alice/Library/Application Support)`\n`dirs`::``executable_dir`(``)``;`\n``//` Lin: Some(/home/alice/.local/bin)`\n``//` Win: None`\n``//` Mac: None`\n`\n```\n\n## Design Goals\n  * The _dirs_ library is a low-level crate designed to provide the paths to standard directories as defined by operating systems rules or conventions. If your requirements are more complex, e. g. computing cache, config, etc. paths for specific applications or projects, consider using [directories](https://github.com/dirs-dev/directories-rs) instead.\n  * This library does not create directories or check for their existence. The library only provides information on what the path to a certain directory _should_ be. How this information is used is a decision that developers need to make based on the requirements of each individual application.\n  * This library is intentionally focused on providing information on user-writable directories only, as there is no discernible benefit in returning a path that points to a user-level, writable directory on one operating system, but a system-level, read-only directory on another. The confusion and unexpected failure modes of such an approach would be immense. \n    * ``executable_dir`` is specified to provide the path to a user-writable directory for binaries. As such a directory only commonly exists on Linux, it returns ```None``` on macOS and Windows.\n    * ``font_dir`` is specified to provide the path to a user-writable directory for fonts. As such a directory only exists on Linux and macOS, it returns ```None``` on Windows.\n    * ``runtime_dir`` is specified to provide the path to a directory for non-essential runtime data. It is required that this directory is created when the user logs in, is only accessible by the user itself, is deleted when the user logs out, and supports all filesystem features of the operating system. As such a directory only commonly exists on Linux, it returns ```None``` on macOS and Windows.\n\n\n## Features\n**If you want to compute the location of cache, config or data directories for your own application or project, use``ProjectDirs`` of the [directories](https://github.com/dirs-dev/directories-rs) project instead.**\nFunction name | Value on Linux/Redox | Value on Windows | Value on macOS  \n---|---|---|---  \n``home_dir`` | ```Some``(``$HOME``)``` | ```Some``(```{`FOLDERID_Profile```}```)``` | ```Some``(``$HOME``)```  \n``cache_dir`` | ```Some``(``$XDG_CACHE_HOME``)``` or ```Some``(``$HOME```/.cache``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Caches``)``  \n``config_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``config_local_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``data_dir`` | ```Some``(``$XDG_DATA_HOME``)``` or ```Some``(``$HOME```/.local/share``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``data_local_dir`` | ```Some``(``$XDG_DATA_HOME``)``` or ```Some``(``$HOME```/.local/share``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``executable_dir`` | ```Some``(``$XDG_BIN_HOME``)``` or ```Some``(``$HOME```/.local/bin``)`` | ```None``` | ```None```  \n``preference_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Preferences``)``  \n``runtime_dir`` | ```Some``(``$XDG_RUNTIME_DIR``)``` or ```None``` | ```None``` | ```None```  \n``state_dir`` | ```Some``(``$XDG_STATE_HOME``)``` or ```Some``(``$HOME```/.local/state``)`` | ```None``` | ```None```  \n``audio_dir`` | ```Some``(``XDG_MUSIC_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Music```}```)``` | ```Some``(``$HOME```/Music/``)``  \n``desktop_dir`` | ```Some``(``XDG_DESKTOP_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Desktop```}```)``` | ```Some``(``$HOME```/Desktop/``)``  \n``document_dir`` | ```Some``(``XDG_DOCUMENTS_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Documents```}```)``` | ```Some``(``$HOME```/Documents/``)``  \n``download_dir`` | ```Some``(``XDG_DOWNLOAD_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Downloads```}```)``` | ```Some``(``$HOME```/Downloads/``)``  \n``font_dir`` | ```Some``(``$XDG_DATA_HOME```/fonts/``)`` or ```Some``(``$HOME```/.local/share/fonts/``)`` | ```None``` | ```Some``(``$HOME```/Library/Fonts/``)``  \n``picture_dir`` | ```Some``(``XDG_PICTURES_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Pictures```}```)``` | ```Some``(``$HOME```/Pictures/``)``  \n``public_dir`` | ```Some``(``XDG_PUBLICSHARE_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Public```}```)``` | ```Some``(``$HOME```/Public/``)``  \n``template_dir`` | ```Some``(``XDG_TEMPLATES_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Templates```}```)``` | ```None```  \n``video_dir`` | ```Some``(``XDG_VIDEOS_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Videos```}```)``` | ```Some``(``$HOME```/Movies/``)``  \n## Comparison\nThere are other crates in the Rust ecosystem that try similar or related things. Here is an overview of them, combined with ratings on properties that guided the design of this crate.\nPlease take this table with a grain of salt: a different crate might very well be more suitable for your specific use case. (Of course _my_ crate achieves _my_ design goals better than other crates, which might have had different design goals.)\nLibrary | Status | Lin | Mac | Win | Base | User | Proj | Conv  \n---|---|---|---|---|---|---|---|---  \n[app_dirs](https://lib.rs/crates/app_dirs) | Unmaintained | \u2714 | \u2714 | \u2714 | \ud83d\udf88 | \u2716 | \u2714 | \u2716  \n[app_dirs2](https://lib.rs/crates/app_dirs2) | Maintained | \u2714 | \u2714 | \u2714 | \ud83d\udf88 | \u2716 | \u2714 | \u2716  \n**dirs** | **Developed** | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2716 | \u2714  \n[directories](https://lib.rs/crates/directories) | Developed | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2714  \n[s_app_dir](https://lib.rs/crates/s_app_dir) | Unmaintained? | \u2714 | \u2716 | \ud83d\udf88 | \u2716 | \u2716 | \ud83d\udf88 | \u2716  \n[standard_paths](https://lib.rs/crates/standard_paths) | Maintained | \u2714 | \u2716 | \u2714 | \u2714 | \u2714 | \u2714 | \u2716  \n[xdg](https://lib.rs/crates/xdg) | Maintained | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2714 | \ud83d\udf88  \n[xdg-basedir](https://lib.rs/crates/xdg-basedir) | Unmaintained? | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2716 | \ud83d\udf88  \n[xdg-rs](https://lib.rs/crates/xdg-rs) | Obsolete | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2716 | \ud83d\udf88  \n  * Lin: Linux support\n  * Mac: macOS support\n  * Win: Windows support\n  * Base: Supports [generic base directories](https://github.com/dirs-dev/directories-rs#basedirs)\n  * User: Supports [user directories](https://github.com/dirs-dev/directories-rs#userdirs)\n  * Proj: Supports [project-specific base directories](https://github.com/dirs-dev/directories-rs#projectdirs)\n  * Conv: Follows naming conventions of the operating system it runs on\n\n\n## Build\nIt's possible to cross-compile this library if the necessary toolchains are installed with rustup. This is helpful to ensure a change hasn't broken code on a different platform.\nThe following commands will build this library on Linux, macOS and Windows:\n```\n```cargo``` build`` --`target``=`x86_64-unknown-linux-gnu`\n``cargo``` build`` --`target``=`x86_64-pc-windows-gnu`\n``cargo``` build`` --`target``=`x86_64-apple-darwin`\n``cargo``` build`` --`target``=`x86_64-unknown-redox`\n`\n```\n\n## Changelog\n### 6\n  * Update ``dirs-sys`` dependency to ```0.``5``.``0```, which in turn updates ``windows-sys`` dependency to ```0.``59``.``0```.\n\n\n### 5\n  * Update ``dirs-sys`` dependency to ```0.``4``.``0```.\n  * Add ``config_local_dir`` for non-roaming configuration on Windows. On non-Windows platforms the behavior is identical to ``config dir``.\n\n\n### 4\n  * **BREAKING CHANGE** The behavior of ``executable_dir`` has been adjusted to not depend on `````$``XDG_DATA_HOME`````. Code, which assumed that setting the `````$``XDG_DATA_HOME````` environment variable also impacted ``executable_dir`` if the `````$``XDG_BIN_HOME````` environment variable was not set, requires adjustment.\n  * Add support for ``XDG_STATE_HOME``.\n\n\n### 3\n  * **BREAKING CHANGE** The behavior of ``config_dir`` on macOS has been adjusted (thanks to [everyone involved](https://github.com/dirs-dev/directories-rs/issues/62)): \n    * The existing ``config_dir`` function has been changed to return the ``Application Support`` directory on macOS, as suggested by Apple documentation.\n    * The behavior of the ``config_dir`` function on non-macOS platforms has not been changed.\n    * If you have used the ``config_dir`` function to store files, it may be necessary to write code that migrates the files to the new location on macOS. (Alternative: change uses of the ``config_dir`` function to uses of the ``preference_dir`` function to retain the old behavior.)\n  * The newly added ``preference_dir`` function returns the ``Preferences`` directory on macOS now, which \u2013 according to Apple documentation \u2013 shall only be used to store .plist files using Apple-proprietary APIs. \u2013 ``preference_dir`` and ``config_dir`` behave identical on non-macOS platforms.\n\n\n### 2\n**BREAKING CHANGE** The behavior of deactivated, missing or invalid [_XDG User Dirs_](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) entries on Linux has been improved (contributed by @tmiasko, thank you!):\n  * Version 1 returned the user's home directory (```Some``(``$HOME``)```) for such faulty entries, except for a faulty ``XDG_DESKTOP_DIR`` entry which returned (```Some``(``$HOME``/`Desktop`)```).\n  * Version 2 returns ```None``` for such entries.\n\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 ([LICENSE-APACHE](https://github.com/soc/dirs-rs/blob/HEAD/LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license ([LICENSE-MIT](https://github.com/soc/dirs-rs/blob/HEAD/LICENSE-MIT) or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n## Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~0\u201311MB  ~55K SLoC\n  * [dirs-sys](https://lib.rs/crates/dirs-sys \"new\") 0.5\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  16 stable releases\u27e81\u27e9 (6 major)\nUses old Rust 2015\n6.0.0 |  Jan 12, 2025   \n---|---  \n5.0.1 |  Apr 30, 2023   \n5.0.0 |  Mar 19, 2023   \n4.0.0 |  Sep 15, 2021   \n0.1.0 |  Nov 24, 2015   \n#**2** in Filesystem\u27e82\u27e9\nDownload history 1171802/week @ 2025-03-07 1181840/week @ 2025-03-14 1171801/week @ 2025-03-21 1175768/week @ 2025-03-28 1318356/week @ 2025-04-04 1320017/week @ 2025-04-11 1352686/week @ 2025-04-18 1275405/week @ 2025-04-25 1207157/week @ 2025-05-02 1223670/week @ 2025-05-09 1300237/week @ 2025-05-16 1108181/week @ 2025-05-23 1225781/week @ 2025-05-30 1324935/week @ 2025-06-06 1268515/week @ 2025-06-13 1277605/week @ 2025-06-20\n**5,297,053** downloads per month Used in **7,711** crates (3,437 directly)\u27e83\u27e9\n**MIT/Apache**\n40KB  202 lines\n![crates.io\u27e84\u27e9](https://crates.io/crates/dirs) ![API documentation\u27e85\u27e9](https://docs.rs/dirs/) ![actively developed\u27e86\u27e9] ![License: MIT/Apache-2.0\u27e87\u27e9]\n# ``dirs``\n## Introduction\n  * a tiny low-level library with a minimal API\n  * that provides the platform-specific, user-accessible locations\n  * for retrieving and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista), macOS and other platforms.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the XDG base directory\u27e88\u27e9 and the XDG user directory\u27e89\u27e9 specifications on Linux and Redox\n  * the Known Folder\u27e810\u27e9 API on Windows\n  * the Standard Directories\u27e811\u27e9 guidelines on macOS\n\n\n## Platforms\nThis library is written in Rust, and supports Linux, Redox, macOS and Windows. Other platforms are also supported; they use the Linux conventions.\nThe minimal required version of Rust is 1.13 except for Redox, where the minimum Rust version depends on the ``redox_users``\u27e812\u27e9 crate.\nIt's mid-level sister library, _directories_ , is available for Rust (directories-rs\u27e813\u27e9) and on the JVM (directories-jvm\u27e814\u27e9).\n## Usage\n#### Dependency\nAdd the library as a dependency to your project by inserting\n```\n`dirs = \"5.0\"\n`\n```\n\ninto the ````[``dependencies``]```` section of your Cargo.toml file.\nIf you are upgrading from version 2, please read the section on breaking changes\u27e815\u27e9 first.\n#### Example\nLibrary run by user Alice:\n```\n``extern` `crate` dirs`;`\n`dirs`::``home_dir`(``)``;`\n``//` Lin: Some(/home/alice)`\n``//` Win: Some(C:\\Users\\Alice)`\n``//` Mac: Some(/Users/Alice)`\n`dirs`::``audio_dir`(``)``;`\n``//` Lin: Some(/home/alice/Music)`\n``//` Win: Some(C:\\Users\\Alice\\Music)`\n``//` Mac: Some(/Users/Alice/Music)`\n`dirs`::``config_dir`(``)``;`\n``//` Lin: Some(/home/alice/.config)`\n``//` Win: Some(C:\\Users\\Alice\\AppData\\Roaming)`\n``//` Mac: Some(/Users/Alice/Library/Application Support)`\n`dirs`::``executable_dir`(``)``;`\n``//` Lin: Some(/home/alice/.local/bin)`\n``//` Win: None`\n``//` Mac: None`\n`\n```\n\n## Design Goals\n  * The _dirs_ library is a low-level crate designed to provide the paths to standard directories as defined by operating systems rules or conventions. If your requirements are more complex, e. g. computing cache, config, etc. paths for specific applications or projects, consider using directories\u27e813\u27e9 instead.\n  * This library does not create directories or check for their existence. The library only provides information on what the path to a certain directory _should_ be. How this information is used is a decision that developers need to make based on the requirements of each individual application.\n  * This library is intentionally focused on providing information on user-writable directories only, as there is no discernible benefit in returning a path that points to a user-level, writable directory on one operating system, but a system-level, read-only directory on another. The confusion and unexpected failure modes of such an approach would be immense. \n    * ``executable_dir`` is specified to provide the path to a user-writable directory for binaries. As such a directory only commonly exists on Linux, it returns ```None``` on macOS and Windows.\n    * ``font_dir`` is specified to provide the path to a user-writable directory for fonts. As such a directory only exists on Linux and macOS, it returns ```None``` on Windows.\n    * ``runtime_dir`` is specified to provide the path to a directory for non-essential runtime data. It is required that this directory is created when the user logs in, is only accessible by the user itself, is deleted when the user logs out, and supports all filesystem features of the operating system. As such a directory only commonly exists on Linux, it returns ```None``` on macOS and Windows.\n\n\n## Features\n**If you want to compute the location of cache, config or data directories for your own application or project, use``ProjectDirs`` of the directories\u27e813\u27e9 project instead.**\nFunction name | Value on Linux/Redox | Value on Windows | Value on macOS  \n---|---|---|---  \n``home_dir`` | ```Some``(``$HOME``)``` | ```Some``(```{`FOLDERID_Profile```}```)``` | ```Some``(``$HOME``)```  \n``cache_dir`` | ```Some``(``$XDG_CACHE_HOME``)``` or ```Some``(``$HOME```/.cache``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Caches``)``  \n``config_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``config_local_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``data_dir`` | ```Some``(``$XDG_DATA_HOME``)``` or ```Some``(``$HOME```/.local/share``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``data_local_dir`` | ```Some``(``$XDG_DATA_HOME``)``` or ```Some``(``$HOME```/.local/share``)`` | ```Some``(```{`FOLDERID_LocalAppData```}```)``` | ```Some``(``$HOME```/Library/Application Support``)``  \n``executable_dir`` | ```Some``(``$XDG_BIN_HOME``)``` or ```Some``(``$HOME```/.local/bin``)`` | ```None``` | ```None```  \n``preference_dir`` | ```Some``(``$XDG_CONFIG_HOME``)``` or ```Some``(``$HOME```/.config``)`` | ```Some``(```{`FOLDERID_RoamingAppData```}```)``` | ```Some``(``$HOME```/Library/Preferences``)``  \n``runtime_dir`` | ```Some``(``$XDG_RUNTIME_DIR``)``` or ```None``` | ```None``` | ```None```  \n``state_dir`` | ```Some``(``$XDG_STATE_HOME``)``` or ```Some``(``$HOME```/.local/state``)`` | ```None``` | ```None```  \n``audio_dir`` | ```Some``(``XDG_MUSIC_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Music```}```)``` | ```Some``(``$HOME```/Music/``)``  \n``desktop_dir`` | ```Some``(``XDG_DESKTOP_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Desktop```}```)``` | ```Some``(``$HOME```/Desktop/``)``  \n``document_dir`` | ```Some``(``XDG_DOCUMENTS_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Documents```}```)``` | ```Some``(``$HOME```/Documents/``)``  \n``download_dir`` | ```Some``(``XDG_DOWNLOAD_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Downloads```}```)``` | ```Some``(``$HOME```/Downloads/``)``  \n``font_dir`` | ```Some``(``$XDG_DATA_HOME```/fonts/``)`` or ```Some``(``$HOME```/.local/share/fonts/``)`` | ```None``` | ```Some``(``$HOME```/Library/Fonts/``)``  \n``picture_dir`` | ```Some``(``XDG_PICTURES_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Pictures```}```)``` | ```Some``(``$HOME```/Pictures/``)``  \n``public_dir`` | ```Some``(``XDG_PUBLICSHARE_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Public```}```)``` | ```Some``(``$HOME```/Public/``)``  \n``template_dir`` | ```Some``(``XDG_TEMPLATES_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Templates```}```)``` | ```None```  \n``video_dir`` | ```Some``(``XDG_VIDEOS_DIR``)``` or ```None``` | ```Some``(```{`FOLDERID_Videos```}```)``` | ```Some``(``$HOME```/Movies/``)``  \n## Comparison\nThere are other crates in the Rust ecosystem that try similar or related things. Here is an overview of them, combined with ratings on properties that guided the design of this crate.\nPlease take this table with a grain of salt: a different crate might very well be more suitable for your specific use case. (Of course _my_ crate achieves _my_ design goals better than other crates, which might have had different design goals.)\nLibrary | Status | Lin | Mac | Win | Base | User | Proj | Conv  \n---|---|---|---|---|---|---|---|---  \napp_dirs\u27e816\u27e9 | Unmaintained | \u2714 | \u2714 | \u2714 | \ud83d\udf88 | \u2716 | \u2714 | \u2716  \napp_dirs2\u27e817\u27e9 | Maintained | \u2714 | \u2714 | \u2714 | \ud83d\udf88 | \u2716 | \u2714 | \u2716  \n**dirs** | **Developed** | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2716 | \u2714  \ndirectories\u27e818\u27e9 | Developed | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2714 | \u2714  \ns_app_dir\u27e819\u27e9 | Unmaintained? | \u2714 | \u2716 | \ud83d\udf88 | \u2716 | \u2716 | \ud83d\udf88 | \u2716  \nstandard_paths\u27e820\u27e9 | Maintained | \u2714 | \u2716 | \u2714 | \u2714 | \u2714 | \u2714 | \u2716  \nxdg\u27e821\u27e9 | Maintained | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2714 | \ud83d\udf88  \nxdg-basedir\u27e822\u27e9 | Unmaintained? | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2716 | \ud83d\udf88  \nxdg-rs\u27e823\u27e9 | Obsolete | \u2714 | \u2716 | \u2716 | \u2714 | \u2716 | \u2716 | \ud83d\udf88  \n  * Lin: Linux support\n  * Mac: macOS support\n  * Win: Windows support\n  * Base: Supports generic base directories\u27e824\u27e9\n  * User: Supports user directories\u27e825\u27e9\n  * Proj: Supports project-specific base directories\u27e826\u27e9\n  * Conv: Follows naming conventions of the operating system it runs on\n\n\n## Build\nIt's possible to cross-compile this library if the necessary toolchains are installed with rustup. This is helpful to ensure a change hasn't broken code on a different platform.\nThe following commands will build this library on Linux, macOS and Windows:\n```\n```cargo``` build`` --`target``=`x86_64-unknown-linux-gnu`\n``cargo``` build`` --`target``=`x86_64-pc-windows-gnu`\n``cargo``` build`` --`target``=`x86_64-apple-darwin`\n``cargo``` build`` --`target``=`x86_64-unknown-redox`\n`\n```\n\n## Changelog\n### 6\n  * Update ``dirs-sys`` dependency to ```0.``5``.``0```, which in turn updates ``windows-sys`` dependency to ```0.``59``.``0```.\n\n\n### 5\n  * Update ``dirs-sys`` dependency to ```0.``4``.``0```.\n  * Add ``config_local_dir`` for non-roaming configuration on Windows. On non-Windows platforms the behavior is identical to ``config dir``.\n\n\n### 4\n  * **BREAKING CHANGE** The behavior of ``executable_dir`` has been adjusted to not depend on `````$``XDG_DATA_HOME`````. Code, which assumed that setting the `````$``XDG_DATA_HOME````` environment variable also impacted ``executable_dir`` if the `````$``XDG_BIN_HOME````` environment variable was not set, requires adjustment.\n  * Add support for ``XDG_STATE_HOME``.\n\n\n### 3\n  * **BREAKING CHANGE** The behavior of ``config_dir`` on macOS has been adjusted (thanks to everyone involved\u27e827\u27e9): \n    * The existing ``config_dir`` function has been changed to return the ``Application Support`` directory on macOS, as suggested by Apple documentation.\n    * The behavior of the ``config_dir`` function on non-macOS platforms has not been changed.\n    * If you have used the ``config_dir`` function to store files, it may be necessary to write code that migrates the files to the new location on macOS. (Alternative: change uses of the ``config_dir`` function to uses of the ``preference_dir`` function to retain the old behavior.)\n  * The newly added ``preference_dir`` function returns the ``Preferences`` directory on macOS now, which \u2013 according to Apple documentation \u2013 shall only be used to store .plist files using Apple-proprietary APIs. \u2013 ``preference_dir`` and ``config_dir`` behave identical on non-macOS platforms.\n\n\n### 2\n**BREAKING CHANGE** The behavior of deactivated, missing or invalid _XDG User Dirs_\u27e89\u27e9 entries on Linux has been improved (contributed by @tmiasko, thank you!):\n  * Version 1 returned the user's home directory (```Some``(``$HOME``)```) for such faulty entries, except for a faulty ``XDG_DESKTOP_DIR`` entry which returned (```Some``(``$HOME``/`Desktop`)```).\n  * Version 2 returns ```None``` for such entries.\n\n\n## License\nLicensed under either of\n  * Apache License, Version 2.0 (LICENSE-APACHE\u27e828\u27e9 or <http://www.apache.org/licenses/LICENSE-2.0>)\n  * MIT license (LICENSE-MIT\u27e829\u27e9 or <http://opensource.org/licenses/MIT>)\n\n\nat your option.\n## Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~0\u201311MB  ~55K SLoC\n  * dirs-sys\u27e830\u27e9 0.5\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/dirs/versions: 16 stable releases\n\u27e82\u27e9 https://lib.rs/filesystem: Crates for dealing with files and filesystems. - Filesystem\n\u27e83\u27e9 https://lib.rs/crates/dirs/rev: **7,711** crates (3,437 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/dirs.svg?style=for-the-badge: ![crates.io\n\u27e85\u27e9 https://img.shields.io/docsrs/dirs/latest?style=for-the-badge: ![API documentation\n\u27e86\u27e9 https://img.shields.io/badge/maintenance-actively--developed-brightgreen.svg?style=for-the-badge: actively developed\n\u27e87\u27e9 https://img.shields.io/badge/license-MIT%2FApache--2.0-orange.svg?style=for-the-badge: License: MIT/Apache-2.0\n\u27e88\u27e9 https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html: XDG base directory\n\u27e89\u27e9 https://www.freedesktop.org/wiki/Software/xdg-user-dirs/: XDG user directory\n\u27e810\u27e9 https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457.aspx: Known Folder\n\u27e811\u27e9 https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6: Standard Directories\n\u27e812\u27e9 https://lib.rs/crates/redox_users: ``redox_users``\n\u27e813\u27e9 https://github.com/dirs-dev/directories-rs: directories-rs\n\u27e814\u27e9 https://github.com/dirs-dev/directories-jvm: directories-jvm\n\u27e815\u27e9 https://lib.rs/crates/dirs#readme-3: section on breaking changes\n\u27e816\u27e9 https://lib.rs/crates/app_dirs: app_dirs\n\u27e817\u27e9 https://lib.rs/crates/app_dirs2: app_dirs2\n\u27e818\u27e9 https://lib.rs/crates/directories: directories\n\u27e819\u27e9 https://lib.rs/crates/s_app_dir: s_app_dir\n\u27e820\u27e9 https://lib.rs/crates/standard_paths: standard_paths\n\u27e821\u27e9 https://lib.rs/crates/xdg: xdg\n\u27e822\u27e9 https://lib.rs/crates/xdg-basedir: xdg-basedir\n\u27e823\u27e9 https://lib.rs/crates/xdg-rs: xdg-rs\n\u27e824\u27e9 https://github.com/dirs-dev/directories-rs#basedirs: generic base directories\n\u27e825\u27e9 https://github.com/dirs-dev/directories-rs#userdirs: user directories\n\u27e826\u27e9 https://github.com/dirs-dev/directories-rs#projectdirs: project-specific base directories\n\u27e827\u27e9 https://github.com/dirs-dev/directories-rs/issues/62: everyone involved\n\u27e828\u27e9 https://github.com/soc/dirs-rs/blob/HEAD/LICENSE-APACHE: LICENSE-APACHE\n\u27e829\u27e9 https://github.com/soc/dirs-rs/blob/HEAD/LICENSE-MIT: LICENSE-MIT\n\u27e830\u27e9 https://lib.rs/crates/dirs-sys: new - dirs-sys\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 14069,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "114541.9481503"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#option-ext@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\option-ext-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "option_ext",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\option-ext-0.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\liboption_ext-e580221b7ed2d440.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_System",
                "Win32_System_Com",
                "Win32_UI",
                "Win32_UI_Shell",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_sys-32889baace750406.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dirs-sys@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dirs-sys-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dirs_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dirs-sys-0.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libdirs_sys-99b8487024ba5993.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdnlmq2cm/dirs-6.0.0#dirs@6.0.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dirs",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libdirs-e7f35cd6af2f40fd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#option-ext@0.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\option-ext-0.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "option_ext",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\option-ext-0.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\liboption_ext-e580221b7ed2d440.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Globalization",
                "Win32_System",
                "Win32_System_Com",
                "Win32_UI",
                "Win32_UI_Shell",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libwindows_sys-32889baace750406.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#dirs-sys@0.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dirs-sys-0.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dirs_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\dirs-sys-0.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libdirs_sys-99b8487024ba5993.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdnlmq2cm/dirs-6.0.0#dirs@6.0.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "dirs",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdnlmq2cm\\dirs-6.0.0\\target\\debug\\deps\\libdirs-6c468270031f7379.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 26
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "dirs",
          "version": "6.0.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\n[Settings](https://docs.rs/dirs/latest/settings.html)\n[Help](https://docs.rs/dirs/latest/help.html)\nSummary[Source](https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328)\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the [XDG base directory](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) and the [XDG user directory](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) specifications on Linux,\n  * the [Known Folder](https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\).aspx) system on Windows, and\n  * the [Standard Directories](https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6) on macOS.\n\n\n## Functions[\u00a7](https://docs.rs/dirs/latest/dirs/#functions)\n\n[audio_dir](https://docs.rs/dirs/latest/dirs/fn.audio_dir.html \"fn dirs::audio_dir\")\n    Returns the path to the user\u2019s audio directory.\n\n[cache_dir](https://docs.rs/dirs/latest/dirs/fn.cache_dir.html \"fn dirs::cache_dir\")\n    Returns the path to the user\u2019s cache directory.\n\n[config_dir](https://docs.rs/dirs/latest/dirs/fn.config_dir.html \"fn dirs::config_dir\")\n    Returns the path to the user\u2019s config directory.\n\n[config_local_dir](https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html \"fn dirs::config_local_dir\")\n    Returns the path to the user\u2019s local config directory.\n\n[data_dir](https://docs.rs/dirs/latest/dirs/fn.data_dir.html \"fn dirs::data_dir\")\n    Returns the path to the user\u2019s data directory.\n\n[data_local_dir](https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html \"fn dirs::data_local_dir\")\n    Returns the path to the user\u2019s local data directory.\n\n[desktop_dir](https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html \"fn dirs::desktop_dir\")\n    Returns the path to the user\u2019s desktop directory.\n\n[document_dir](https://docs.rs/dirs/latest/dirs/fn.document_dir.html \"fn dirs::document_dir\")\n    Returns the path to the user\u2019s document directory.\n\n[download_dir](https://docs.rs/dirs/latest/dirs/fn.download_dir.html \"fn dirs::download_dir\")\n    Returns the path to the user\u2019s download directory.\n\n[executable_dir](https://docs.rs/dirs/latest/dirs/fn.executable_dir.html \"fn dirs::executable_dir\")\n    Returns the path to the user\u2019s executable directory.\n\n[font_dir](https://docs.rs/dirs/latest/dirs/fn.font_dir.html \"fn dirs::font_dir\")\n    Returns the path to the user\u2019s font directory.\n\n[home_dir](https://docs.rs/dirs/latest/dirs/fn.home_dir.html \"fn dirs::home_dir\")\n    Returns the path to the user\u2019s home directory.\n\n[picture_dir](https://docs.rs/dirs/latest/dirs/fn.picture_dir.html \"fn dirs::picture_dir\")\n    Returns the path to the user\u2019s picture directory.\n\n[preference_dir](https://docs.rs/dirs/latest/dirs/fn.preference_dir.html \"fn dirs::preference_dir\")\n    Returns the path to the user\u2019s preference directory.\n\n[public_dir](https://docs.rs/dirs/latest/dirs/fn.public_dir.html \"fn dirs::public_dir\")\n    Returns the path to the user\u2019s public directory.\n\n[runtime_dir](https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html \"fn dirs::runtime_dir\")\n    Returns the path to the user\u2019s runtime directory.\n\n[state_dir](https://docs.rs/dirs/latest/dirs/fn.state_dir.html \"fn dirs::state_dir\")\n    Returns the path to the user\u2019s state directory.\n\n[template_dir](https://docs.rs/dirs/latest/dirs/fn.template_dir.html \"fn dirs::template_dir\")\n    Returns the path to the user\u2019s template directory.\n\n[video_dir](https://docs.rs/dirs/latest/dirs/fn.video_dir.html \"fn dirs::video_dir\")\n    Returns the path to the user\u2019s video directory.\n",
            "markdown_with_citations": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the XDG base directory\u27e84\u27e9 and the XDG user directory\u27e85\u27e9 specifications on Linux,\n  * the Known Folder\u27e86\u27e9.aspx) system on Windows, and\n  * the Standard Directories\u27e87\u27e9 on macOS.\n\n\n## Functions\u00a7\u27e88\u27e9\n\naudio_dir\u27e89\u27e9\n    Returns the path to the user\u2019s audio directory.\n\ncache_dir\u27e810\u27e9\n    Returns the path to the user\u2019s cache directory.\n\nconfig_dir\u27e811\u27e9\n    Returns the path to the user\u2019s config directory.\n\nconfig_local_dir\u27e812\u27e9\n    Returns the path to the user\u2019s local config directory.\n\ndata_dir\u27e813\u27e9\n    Returns the path to the user\u2019s data directory.\n\ndata_local_dir\u27e814\u27e9\n    Returns the path to the user\u2019s local data directory.\n\ndesktop_dir\u27e815\u27e9\n    Returns the path to the user\u2019s desktop directory.\n\ndocument_dir\u27e816\u27e9\n    Returns the path to the user\u2019s document directory.\n\ndownload_dir\u27e817\u27e9\n    Returns the path to the user\u2019s download directory.\n\nexecutable_dir\u27e818\u27e9\n    Returns the path to the user\u2019s executable directory.\n\nfont_dir\u27e819\u27e9\n    Returns the path to the user\u2019s font directory.\n\nhome_dir\u27e820\u27e9\n    Returns the path to the user\u2019s home directory.\n\npicture_dir\u27e821\u27e9\n    Returns the path to the user\u2019s picture directory.\n\npreference_dir\u27e822\u27e9\n    Returns the path to the user\u2019s preference directory.\n\npublic_dir\u27e823\u27e9\n    Returns the path to the user\u2019s public directory.\n\nruntime_dir\u27e824\u27e9\n    Returns the path to the user\u2019s runtime directory.\n\nstate_dir\u27e825\u27e9\n    Returns the path to the user\u2019s state directory.\n\ntemplate_dir\u27e826\u27e9\n    Returns the path to the user\u2019s template directory.\n\nvideo_dir\u27e827\u27e9\n    Returns the path to the user\u2019s video directory.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dirs/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dirs/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328: Source\n\u27e84\u27e9 https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html: XDG base directory\n\u27e85\u27e9 https://www.freedesktop.org/wiki/Software/xdg-user-dirs/: XDG user directory\n\u27e86\u27e9 https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\: Known Folder\n\u27e87\u27e9 https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6: Standard Directories\n\u27e88\u27e9 https://docs.rs/dirs/latest/dirs/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/dirs/latest/dirs/fn.audio_dir.html: fn dirs::audio_dir - audio_dir\n\u27e810\u27e9 https://docs.rs/dirs/latest/dirs/fn.cache_dir.html: fn dirs::cache_dir - cache_dir\n\u27e811\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_dir.html: fn dirs::config_dir - config_dir\n\u27e812\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html: fn dirs::config_local_dir - config_local_dir\n\u27e813\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_dir.html: fn dirs::data_dir - data_dir\n\u27e814\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html: fn dirs::data_local_dir - data_local_dir\n\u27e815\u27e9 https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html: fn dirs::desktop_dir - desktop_dir\n\u27e816\u27e9 https://docs.rs/dirs/latest/dirs/fn.document_dir.html: fn dirs::document_dir - document_dir\n\u27e817\u27e9 https://docs.rs/dirs/latest/dirs/fn.download_dir.html: fn dirs::download_dir - download_dir\n\u27e818\u27e9 https://docs.rs/dirs/latest/dirs/fn.executable_dir.html: fn dirs::executable_dir - executable_dir\n\u27e819\u27e9 https://docs.rs/dirs/latest/dirs/fn.font_dir.html: fn dirs::font_dir - font_dir\n\u27e820\u27e9 https://docs.rs/dirs/latest/dirs/fn.home_dir.html: fn dirs::home_dir - home_dir\n\u27e821\u27e9 https://docs.rs/dirs/latest/dirs/fn.picture_dir.html: fn dirs::picture_dir - picture_dir\n\u27e822\u27e9 https://docs.rs/dirs/latest/dirs/fn.preference_dir.html: fn dirs::preference_dir - preference_dir\n\u27e823\u27e9 https://docs.rs/dirs/latest/dirs/fn.public_dir.html: fn dirs::public_dir - public_dir\n\u27e824\u27e9 https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html: fn dirs::runtime_dir - runtime_dir\n\u27e825\u27e9 https://docs.rs/dirs/latest/dirs/fn.state_dir.html: fn dirs::state_dir - state_dir\n\u27e826\u27e9 https://docs.rs/dirs/latest/dirs/fn.template_dir.html: fn dirs::template_dir - template_dir\n\u27e827\u27e9 https://docs.rs/dirs/latest/dirs/fn.video_dir.html: fn dirs::video_dir - video_dir\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "dirs",
          "version": "6.0.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\n[Settings](https://docs.rs/dirs/latest/settings.html)\n[Help](https://docs.rs/dirs/latest/help.html)\nSummary[Source](https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328)\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the [XDG base directory](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html) and the [XDG user directory](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/) specifications on Linux,\n  * the [Known Folder](https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\).aspx) system on Windows, and\n  * the [Standard Directories](https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6) on macOS.\n\n\n## Functions[\u00a7](https://docs.rs/dirs/latest/dirs/#functions)\n\n[audio_dir](https://docs.rs/dirs/latest/dirs/fn.audio_dir.html \"fn dirs::audio_dir\")\n    Returns the path to the user\u2019s audio directory.\n\n[cache_dir](https://docs.rs/dirs/latest/dirs/fn.cache_dir.html \"fn dirs::cache_dir\")\n    Returns the path to the user\u2019s cache directory.\n\n[config_dir](https://docs.rs/dirs/latest/dirs/fn.config_dir.html \"fn dirs::config_dir\")\n    Returns the path to the user\u2019s config directory.\n\n[config_local_dir](https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html \"fn dirs::config_local_dir\")\n    Returns the path to the user\u2019s local config directory.\n\n[data_dir](https://docs.rs/dirs/latest/dirs/fn.data_dir.html \"fn dirs::data_dir\")\n    Returns the path to the user\u2019s data directory.\n\n[data_local_dir](https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html \"fn dirs::data_local_dir\")\n    Returns the path to the user\u2019s local data directory.\n\n[desktop_dir](https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html \"fn dirs::desktop_dir\")\n    Returns the path to the user\u2019s desktop directory.\n\n[document_dir](https://docs.rs/dirs/latest/dirs/fn.document_dir.html \"fn dirs::document_dir\")\n    Returns the path to the user\u2019s document directory.\n\n[download_dir](https://docs.rs/dirs/latest/dirs/fn.download_dir.html \"fn dirs::download_dir\")\n    Returns the path to the user\u2019s download directory.\n\n[executable_dir](https://docs.rs/dirs/latest/dirs/fn.executable_dir.html \"fn dirs::executable_dir\")\n    Returns the path to the user\u2019s executable directory.\n\n[font_dir](https://docs.rs/dirs/latest/dirs/fn.font_dir.html \"fn dirs::font_dir\")\n    Returns the path to the user\u2019s font directory.\n\n[home_dir](https://docs.rs/dirs/latest/dirs/fn.home_dir.html \"fn dirs::home_dir\")\n    Returns the path to the user\u2019s home directory.\n\n[picture_dir](https://docs.rs/dirs/latest/dirs/fn.picture_dir.html \"fn dirs::picture_dir\")\n    Returns the path to the user\u2019s picture directory.\n\n[preference_dir](https://docs.rs/dirs/latest/dirs/fn.preference_dir.html \"fn dirs::preference_dir\")\n    Returns the path to the user\u2019s preference directory.\n\n[public_dir](https://docs.rs/dirs/latest/dirs/fn.public_dir.html \"fn dirs::public_dir\")\n    Returns the path to the user\u2019s public directory.\n\n[runtime_dir](https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html \"fn dirs::runtime_dir\")\n    Returns the path to the user\u2019s runtime directory.\n\n[state_dir](https://docs.rs/dirs/latest/dirs/fn.state_dir.html \"fn dirs::state_dir\")\n    Returns the path to the user\u2019s state directory.\n\n[template_dir](https://docs.rs/dirs/latest/dirs/fn.template_dir.html \"fn dirs::template_dir\")\n    Returns the path to the user\u2019s template directory.\n\n[video_dir](https://docs.rs/dirs/latest/dirs/fn.video_dir.html \"fn dirs::video_dir\")\n    Returns the path to the user\u2019s video directory.\n",
            "markdown_with_citations": "[](https://docs.rs/dirs/latest/dirs/all.html \"show sidebar\")\n# Crate dirsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe _dirs_ crate is\n  * a tiny library with a minimal API (18 public functions)\n  * that provides the platform-specific, user-accessible locations\n  * for finding and storing configuration, cache and other data\n  * on Linux, Redox, Windows (\u2265 Vista) and macOS.\n\n\nThe library provides the location of these directories by leveraging the mechanisms defined by\n  * the XDG base directory\u27e84\u27e9 and the XDG user directory\u27e85\u27e9 specifications on Linux,\n  * the Known Folder\u27e86\u27e9.aspx) system on Windows, and\n  * the Standard Directories\u27e87\u27e9 on macOS.\n\n\n## Functions\u00a7\u27e88\u27e9\n\naudio_dir\u27e89\u27e9\n    Returns the path to the user\u2019s audio directory.\n\ncache_dir\u27e810\u27e9\n    Returns the path to the user\u2019s cache directory.\n\nconfig_dir\u27e811\u27e9\n    Returns the path to the user\u2019s config directory.\n\nconfig_local_dir\u27e812\u27e9\n    Returns the path to the user\u2019s local config directory.\n\ndata_dir\u27e813\u27e9\n    Returns the path to the user\u2019s data directory.\n\ndata_local_dir\u27e814\u27e9\n    Returns the path to the user\u2019s local data directory.\n\ndesktop_dir\u27e815\u27e9\n    Returns the path to the user\u2019s desktop directory.\n\ndocument_dir\u27e816\u27e9\n    Returns the path to the user\u2019s document directory.\n\ndownload_dir\u27e817\u27e9\n    Returns the path to the user\u2019s download directory.\n\nexecutable_dir\u27e818\u27e9\n    Returns the path to the user\u2019s executable directory.\n\nfont_dir\u27e819\u27e9\n    Returns the path to the user\u2019s font directory.\n\nhome_dir\u27e820\u27e9\n    Returns the path to the user\u2019s home directory.\n\npicture_dir\u27e821\u27e9\n    Returns the path to the user\u2019s picture directory.\n\npreference_dir\u27e822\u27e9\n    Returns the path to the user\u2019s preference directory.\n\npublic_dir\u27e823\u27e9\n    Returns the path to the user\u2019s public directory.\n\nruntime_dir\u27e824\u27e9\n    Returns the path to the user\u2019s runtime directory.\n\nstate_dir\u27e825\u27e9\n    Returns the path to the user\u2019s state directory.\n\ntemplate_dir\u27e826\u27e9\n    Returns the path to the user\u2019s template directory.\n\nvideo_dir\u27e827\u27e9\n    Returns the path to the user\u2019s video directory.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dirs/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dirs/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dirs/latest/src/dirs/lib.rs.html#1-328: Source\n\u27e84\u27e9 https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html: XDG base directory\n\u27e85\u27e9 https://www.freedesktop.org/wiki/Software/xdg-user-dirs/: XDG user directory\n\u27e86\u27e9 https://msdn.microsoft.com/en-us/library/windows/desktop/bb776911\\(v=vs.85\\: Known Folder\n\u27e87\u27e9 https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6: Standard Directories\n\u27e88\u27e9 https://docs.rs/dirs/latest/dirs/#functions: \u00a7\n\u27e89\u27e9 https://docs.rs/dirs/latest/dirs/fn.audio_dir.html: fn dirs::audio_dir - audio_dir\n\u27e810\u27e9 https://docs.rs/dirs/latest/dirs/fn.cache_dir.html: fn dirs::cache_dir - cache_dir\n\u27e811\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_dir.html: fn dirs::config_dir - config_dir\n\u27e812\u27e9 https://docs.rs/dirs/latest/dirs/fn.config_local_dir.html: fn dirs::config_local_dir - config_local_dir\n\u27e813\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_dir.html: fn dirs::data_dir - data_dir\n\u27e814\u27e9 https://docs.rs/dirs/latest/dirs/fn.data_local_dir.html: fn dirs::data_local_dir - data_local_dir\n\u27e815\u27e9 https://docs.rs/dirs/latest/dirs/fn.desktop_dir.html: fn dirs::desktop_dir - desktop_dir\n\u27e816\u27e9 https://docs.rs/dirs/latest/dirs/fn.document_dir.html: fn dirs::document_dir - document_dir\n\u27e817\u27e9 https://docs.rs/dirs/latest/dirs/fn.download_dir.html: fn dirs::download_dir - download_dir\n\u27e818\u27e9 https://docs.rs/dirs/latest/dirs/fn.executable_dir.html: fn dirs::executable_dir - executable_dir\n\u27e819\u27e9 https://docs.rs/dirs/latest/dirs/fn.font_dir.html: fn dirs::font_dir - font_dir\n\u27e820\u27e9 https://docs.rs/dirs/latest/dirs/fn.home_dir.html: fn dirs::home_dir - home_dir\n\u27e821\u27e9 https://docs.rs/dirs/latest/dirs/fn.picture_dir.html: fn dirs::picture_dir - picture_dir\n\u27e822\u27e9 https://docs.rs/dirs/latest/dirs/fn.preference_dir.html: fn dirs::preference_dir - preference_dir\n\u27e823\u27e9 https://docs.rs/dirs/latest/dirs/fn.public_dir.html: fn dirs::public_dir - public_dir\n\u27e824\u27e9 https://docs.rs/dirs/latest/dirs/fn.runtime_dir.html: fn dirs::runtime_dir - runtime_dir\n\u27e825\u27e9 https://docs.rs/dirs/latest/dirs/fn.state_dir.html: fn dirs::state_dir - state_dir\n\u27e826\u27e9 https://docs.rs/dirs/latest/dirs/fn.template_dir.html: fn dirs::template_dir - template_dir\n\u27e827\u27e9 https://docs.rs/dirs/latest/dirs/fn.video_dir.html: fn dirs::video_dir - video_dir\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `dirs` crate is a lightweight library that provides platform-specific functions to retrieve user-accessible directory paths for configuration, cache, data, and other purposes across Linux, Windows, macOS, and Redox. It supports 18 public functions, including paths for directories like `config_dir`, `data_dir`, `home_dir`, and `download_dir`, leveraging standards such as XDG specifications, Known Folders, and macOS Standard Directories. This makes it ideal for applications needing consistent directory management across operating systems.",
          "feature_summary": null,
          "use_case": "Utilities",
          "score": 4.0,
          "factual_counterfactual": "### Pair 1: Platform Support  \n\u2705 Factual: The `dirs` crate provides platform-specific directory paths for Linux, Windows (Vista and later), macOS, and Redox OS, using established standards like XDG specifications and Known Folders.  \n\u274c Counterfactual: The `dirs` crate supports all major platforms, including Android and iOS, by providing directory paths tailored to mobile environments.  \n\n---\n\n### Pair 2: API Size  \n\u2705 Factual: The `dirs` crate has a minimal API with 18 public functions, each dedicated to retrieving specific user-accessible directory paths such as `cache_dir`, `config_dir`, and `data_dir`.  \n\u274c Counterfactual: The `dirs` crate includes over 50 public functions, covering advanced directory manipulation and creation utilities in addition to directory path retrieval.  \n\n---\n\n### Pair 3: Directory Standards  \n\u2705 Factual: On Linux, the `dirs` crate uses the XDG Base Directory and XDG User Directory specifications to determine paths for configuration, cache, and data storage.  \n\u274c Counterfactual: On Linux, the `dirs` crate uses hardcoded directory paths instead of adhering to the XDG specifications, making it less flexible for custom setups.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-73cf2b40-edd56927-1751260750",
      "timestamp": "2025-06-30T05:19:10.871666+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]