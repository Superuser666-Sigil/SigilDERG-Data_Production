[
  {
    "execution_id": "exec-587a4f56-3e6bb217-1751259176",
    "timestamp": "2025-06-30T04:52:56.241456+00:00",
    "sacred_chain": {
      "input_data": "roxmltree",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'roxmltree' -> 'roxmltree'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "roxmltree",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/roxmltree",
            "title": "roxmltree v0.20.0",
            "content": {
              "raw_markdown": "#  roxmltree v0.20.0\nRepresent an XML as a read-only tree. \n  * [ #xml ](https://crates.io/keywords/xml)\n  * [ #tree ](https://crates.io/keywords/tree)\n  * [ #dom ](https://crates.io/keywords/dom)\n  * [ #parser ](https://crates.io/keywords/parser)\n\n\n  * [ Readme ](https://crates.io/crates/roxmltree)\n  * [ 32 Versions ](https://crates.io/crates/roxmltree/versions)\n  * [ Dependencies ](https://crates.io/crates/roxmltree/dependencies)\n  * [ Dependents ](https://crates.io/crates/roxmltree/reverse_dependencies)\n\n\n## Metadata\nabout 1 year ago \nv1.60.0 \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n53.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add roxmltree\nOr add the following line to your Cargo.toml:\nroxmltree = \"0.20.0\"\n## Documentation\n[ docs.rs/roxmltree ](https://docs.rs/roxmltree/)\n## Repository\n[ github.com/RazrFalcon/roxmltree ](https://github.com/RazrFalcon/roxmltree)\n## Owners\n## Categories\n  * [Parser implementations](https://crates.io/categories/parser-implementations)\n\n\n[ Report crate ](https://crates.io/support?crate=roxmltree&inquire=crate-violation)\n### Stats Overview\n16,585,161 Downloads all time\n32 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  roxmltree v0.20.0\nRepresent an XML as a read-only tree. \n  *  #xml \u27e81\u27e9\n  *  #tree \u27e82\u27e9\n  *  #dom \u27e83\u27e9\n  *  #parser \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  32 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\nabout 1 year ago \nv1.60.0 \n MIT \u27e89\u27e9 OR  Apache-2.0 \u27e810\u27e9\n53.3 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add roxmltree\nOr add the following line to your Cargo.toml:\nroxmltree = \"0.20.0\"\n## Documentation\n docs.rs/roxmltree \u27e811\u27e9\n## Repository\n github.com/RazrFalcon/roxmltree \u27e812\u27e9\n## Owners\n## Categories\n  * Parser implementations\u27e813\u27e9\n\n\n Report crate \u27e814\u27e9\n### Stats Overview\n16,585,161 Downloads all time\n32 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/xml:  #xml \n\u27e82\u27e9 https://crates.io/keywords/tree:  #tree \n\u27e83\u27e9 https://crates.io/keywords/dom:  #dom \n\u27e84\u27e9 https://crates.io/keywords/parser:  #parser \n\u27e85\u27e9 https://crates.io/crates/roxmltree:  Readme \n\u27e86\u27e9 https://crates.io/crates/roxmltree/versions:  32 Versions \n\u27e87\u27e9 https://crates.io/crates/roxmltree/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/roxmltree/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e811\u27e9 https://docs.rs/roxmltree/:  docs.rs/roxmltree \n\u27e812\u27e9 https://github.com/RazrFalcon/roxmltree:  github.com/RazrFalcon/roxmltree \n\u27e813\u27e9 https://crates.io/categories/parser-implementations: Parser implementations\n\u27e814\u27e9 https://crates.io/support?crate=roxmltree&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1353,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112966.1519553"
          },
          "docs_rs": {
            "url": "https://docs.rs/roxmltree",
            "title": "Crate roxmltreeCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\n[Settings](https://docs.rs/roxmltree/latest/settings.html)\n[Help](https://docs.rs/roxmltree/latest/help.html)\nSummary[Source](https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746)\nExpand description\nRepresent an [XML](https://www.w3.org/TR/xml/) document as a read-only tree.\nThe root point of the documentations is [`Document::parse`](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse).\nYou can find more details in the [README](https://github.com/RazrFalcon/roxmltree/blob/master/README.md) and the [parsing doc](https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md).\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#structs)\n\n[Attribute](https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html \"struct roxmltree::Attribute\")\n    An attribute.\n\n[Attributes](https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html \"struct roxmltree::Attributes\")\n    Iterator over a node\u2019s attributes\n\n[AxisIter](https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html \"struct roxmltree::AxisIter\")\n    Iterator over specified axis.\n\n[Children](https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html \"struct roxmltree::Children\")\n    Iterator over children.\n\n[Descendants](https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html \"struct roxmltree::Descendants\")\n    Iterator over a node and its descendants.\n\n[Document](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html \"struct roxmltree::Document\")\n    An XML tree container.\n\n[ExpandedName](https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html \"struct roxmltree::ExpandedName\")\n    An expanded name.\n\n[Namespace](https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html \"struct roxmltree::Namespace\")\n    A namespace.\n\n[NamespaceIter](https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html \"struct roxmltree::NamespaceIter\")\n    Iterator over the namespaces attached to a node.\n\n[Node](https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html \"struct roxmltree::Node\")\n    A node in a document.\n\n[NodeId](https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html \"struct roxmltree::NodeId\")\n    A node ID stored as `u32`.\n\n[PI](https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html \"struct roxmltree::PI\")\n    A processing instruction.\n\n[ParsingOptions](https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html \"struct roxmltree::ParsingOptions\")\n    Parsing options.\n\n[TextPos](https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html \"struct roxmltree::TextPos\")\n    Position in text.\n## Enums[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#enums)\n\n[Error](https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html \"enum roxmltree::Error\")\n    A list of all possible errors.\n\n[NodeType](https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html \"enum roxmltree::NodeType\")\n    A list of supported node types.\n\n[StringStorage](https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html \"enum roxmltree::StringStorage\")\n    A string storage.\n## Constants[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#constants)\n\n[NS_XMLNS_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html \"constant roxmltree::NS_XMLNS_URI\")\n    The <http://www.w3.org/2000/xmlns/> URI.\n\n[NS_XML_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html \"constant roxmltree::NS_XML_URI\")\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
              "markdown_with_citations": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRepresent an XML\u27e84\u27e9 document as a read-only tree.\nThe root point of the documentations is `Document::parse`\u27e85\u27e9.\nYou can find more details in the README\u27e86\u27e9 and the parsing doc\u27e87\u27e9.\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs\u00a7\u27e88\u27e9\n\nAttribute\u27e89\u27e9\n    An attribute.\n\nAttributes\u27e810\u27e9\n    Iterator over a node\u2019s attributes\n\nAxisIter\u27e811\u27e9\n    Iterator over specified axis.\n\nChildren\u27e812\u27e9\n    Iterator over children.\n\nDescendants\u27e813\u27e9\n    Iterator over a node and its descendants.\n\nDocument\u27e814\u27e9\n    An XML tree container.\n\nExpandedName\u27e815\u27e9\n    An expanded name.\n\nNamespace\u27e816\u27e9\n    A namespace.\n\nNamespaceIter\u27e817\u27e9\n    Iterator over the namespaces attached to a node.\n\nNode\u27e818\u27e9\n    A node in a document.\n\nNodeId\u27e819\u27e9\n    A node ID stored as `u32`.\n\nPI\u27e820\u27e9\n    A processing instruction.\n\nParsingOptions\u27e821\u27e9\n    Parsing options.\n\nTextPos\u27e822\u27e9\n    Position in text.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    A list of all possible errors.\n\nNodeType\u27e825\u27e9\n    A list of supported node types.\n\nStringStorage\u27e826\u27e9\n    A string storage.\n## Constants\u00a7\u27e827\u27e9\n\nNS_XMLNS_URI\u27e828\u27e9\n    The <http://www.w3.org/2000/xmlns/> URI.\n\nNS_XML_URI\u27e829\u27e9\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/roxmltree/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/roxmltree/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746: Source\n\u27e84\u27e9 https://www.w3.org/TR/xml/: XML\n\u27e85\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse: `Document::parse`\n\u27e86\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/README.md: README\n\u27e87\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md: parsing doc\n\u27e88\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#structs: \u00a7\n\u27e89\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html: struct roxmltree::Attribute - Attribute\n\u27e810\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html: struct roxmltree::Attributes - Attributes\n\u27e811\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html: struct roxmltree::AxisIter - AxisIter\n\u27e812\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html: struct roxmltree::Children - Children\n\u27e813\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html: struct roxmltree::Descendants - Descendants\n\u27e814\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html: struct roxmltree::Document - Document\n\u27e815\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html: struct roxmltree::ExpandedName - ExpandedName\n\u27e816\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html: struct roxmltree::Namespace - Namespace\n\u27e817\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html: struct roxmltree::NamespaceIter - NamespaceIter\n\u27e818\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html: struct roxmltree::Node - Node\n\u27e819\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html: struct roxmltree::NodeId - NodeId\n\u27e820\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html: struct roxmltree::PI - PI\n\u27e821\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html: struct roxmltree::ParsingOptions - ParsingOptions\n\u27e822\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html: struct roxmltree::TextPos - TextPos\n\u27e823\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html: enum roxmltree::Error - Error\n\u27e825\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html: enum roxmltree::NodeType - NodeType\n\u27e826\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html: enum roxmltree::StringStorage - StringStorage\n\u27e827\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#constants: \u00a7\n\u27e828\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html: constant roxmltree::NS_XMLNS_URI - NS_XMLNS_URI\n\u27e829\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html: constant roxmltree::NS_XML_URI - NS_XML_URI\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3698,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112966.8780028"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/roxmltree",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [31 releases](https://lib.rs/crates/roxmltree/versions) (19 breaking)\n0.20.0 |  May 23, 2024   \n---|---  \n0.19.0 |  Nov 18, 2023   \n0.18.1 |  Sep 30, 2023   \n0.18.0 |  Feb 4, 2023   \n0.3.0 |  Oct 29, 2018   \n#**6** in [Parser implementations](https://lib.rs/parser-implementations \"Parsers implemented for particular formats or languages.\")\nDownload history 191886/week @ 2025-01-28 230021/week @ 2025-02-04 219485/week @ 2025-02-11 203690/week @ 2025-02-18 210761/week @ 2025-02-25 212375/week @ 2025-03-04 227190/week @ 2025-03-11 236770/week @ 2025-03-18 238919/week @ 2025-03-25 226629/week @ 2025-04-01 254212/week @ 2025-04-08 245553/week @ 2025-04-15 256301/week @ 2025-04-22 233057/week @ 2025-04-29 250569/week @ 2025-05-06 203111/week @ 2025-05-13\n**979,977** downloads per month Used in [**1,416** crates (187 directly)](https://lib.rs/crates/roxmltree/rev)\n**MIT/Apache**\n165KB  4K  SLoC\n# roxmltree\n![Build Status](https://img.gs/czjpqfbdkz/full/https://github.com/RazrFalcon/roxmltree/workflows/Rust/badge.svg) [![Crates.io](https://img.shields.io/crates/v/roxmltree.svg)](https://crates.io/crates/roxmltree) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/roxmltree/badge.svg)](https://docs.rs/roxmltree) [![Rust 1.60+](https://img.shields.io/badge/rust-1.60+-orange.svg)](https://www.rust-lang.org)\nRepresents an [XML](https://www.w3.org/TR/xml/) document as a read-only tree.\n```\n```//` Find element by id.`\n`let` doc `=` `roxmltree`::```Document`::``parse`(```\"`<rect id='rect1'/>`\"```)``?``;`\n`let` elem `=` doc`.``descendants``(``)``.``find``(````|``````n``|`` ``n`.``attribute``(```\"`id`\"```)` `==` `Some``(```\"`rect1`\"```)```)``?``;`\n`assert!``(`elem`.``has_tag_name``(```\"`rect`\"```)``)``;`\n`\n```\n\n## Why read-only?\nBecause in some cases all you need is to retrieve some data from an XML document. And for such cases, we can make a lot of optimizations.\n## Parsing behavior\nSadly, XML can be parsed in many different ways. _roxmltree_ tries to mimic the behavior of Python's [lxml](https://lxml.de/). For more details see [docs/parsing.md](https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md).\n## Alternatives\nFeature/Crate | roxmltree | [libxml2](http://xmlsoft.org/) | [xmltree](https://lib.rs/crates/xmltree) | [sxd-document](https://lib.rs/crates/sxd-document)  \n---|---|---|---|---  \nElement namespace resolving | \u2713 | \u2713 | \u2713 | ~1  \nAttribute namespace resolving | \u2713 | \u2713 |  | \u2713  \n[Entity references](https://www.w3.org/TR/REC-xml/#dt-entref) | \u2713 | \u2713 | \u00d7 | \u00d7  \n[Character references](https://www.w3.org/TR/REC-xml/#NT-CharRef) | \u2713 | \u2713 | \u2713 | \u2713  \n[Attribute-Value normalization](https://www.w3.org/TR/REC-xml/#AVNormalize) | \u2713 | \u2713 |  |   \nComments | \u2713 | \u2713 |  | \u2713  \nProcessing instructions | \u2713 | \u2713 | \u2713 | \u2713  \nUTF-8 BOM | \u2713 | \u2713 | \u00d7 | \u00d7  \nNon UTF-8 input |  | \u2713 |  |   \nComplete DTD support |  | \u2713 |  |   \nPosition preserving2 | \u2713 | \u2713 |  |   \nHTML support |  | \u2713 |  |   \nTree modification |  | \u2713 | \u2713 | \u2713  \nWriting |  | \u2713 | \u2713 | \u2713  \nNo **unsafe** | \u2713 |  | \u2713 |   \nLanguage | Rust | C | Rust | Rust  \nDependencies | **0** | - | 2 | 2  \nTested version | 0.20.0 | Apple-provided | 0.10.3 | 0.3.2  \nLicense | MIT / Apache-2.0 | MIT | MIT | MIT  \nLegend:\n  * \u2713 - supported\n  * \u00d7 - parsing error\n  * ~ - partial\n  * _nothing_ - not supported\n\n\nNotes:\n  1. No default namespace propagation.\n  2. _roxmltree_ keeps all node and attribute positions in the original document, so you can easily retrieve it if you need it. See [examples/print_pos.rs](https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/examples/print_pos.rs) for details.\n\n\nThere is also ``elementtree`` and ``treexml`` crates, but they are abandoned for a long time.\n## Performance\nHere are some benchmarks comparing ``roxmltree`` to other XML tree libraries.\n```\n`test huge_roxmltree   ... bench:  2,997,887 ns/iter (+/- 48,976)\ntest huge_libxml2    ... bench:  6,850,666 ns/iter (+/- 306,180)\ntest huge_sdx_document  ... bench:  9,440,412 ns/iter (+/- 117,106)\ntest huge_xmltree    ... bench: 41,662,316 ns/iter (+/- 850,360)\ntest large_roxmltree   ... bench:  1,494,886 ns/iter (+/- 30,384)\ntest large_libxml2    ... bench:  3,250,606 ns/iter (+/- 140,201)\ntest large_sdx_document ... bench:  4,242,162 ns/iter (+/- 99,740)\ntest large_xmltree    ... bench: 13,980,228 ns/iter (+/- 229,363)\ntest medium_roxmltree  ... bench:   421,137 ns/iter (+/- 13,855)\ntest medium_libxml2   ... bench:   950,984 ns/iter (+/- 34,099)\ntest medium_sdx_document ... bench:  1,618,270 ns/iter (+/- 23,466)\ntest medium_xmltree   ... bench:  4,315,974 ns/iter (+/- 31,849)\ntest tiny_roxmltree   ... bench:    2,522 ns/iter (+/- 31)\ntest tiny_libxml2    ... bench:    8,931 ns/iter (+/- 235)\ntest tiny_sdx_document  ... bench:   11,658 ns/iter (+/- 82)\ntest tiny_xmltree    ... bench:   20,215 ns/iter (+/- 303)\n`\n```\n\nWhen comparing to streaming XML parsers ``roxmltree`` is slightly slower than ``quick-xml``, but still way faster than ``xmlrs``. Note that streaming parsers usually do not provide a proper string unescaping, DTD resolving and namespaces support.\n```\n`test huge_quick_xml   ... bench:  2,997,887 ns/iter (+/- 48,976)\ntest huge_roxmltree   ... bench:  3,147,424 ns/iter (+/- 49,153)\ntest huge_xmlrs     ... bench: 36,258,312 ns/iter (+/- 180,438)\ntest large_quick_xml   ... bench:  1,250,053 ns/iter (+/- 21,943)\ntest large_roxmltree   ... bench:  1,494,886 ns/iter (+/- 30,384)\ntest large_xmlrs     ... bench: 11,239,516 ns/iter (+/- 76,937)\ntest medium_quick_xml  ... bench:   206,232 ns/iter (+/- 2,157)\ntest medium_roxmltree  ... bench:   421,137 ns/iter (+/- 13,855)\ntest medium_xmlrs    ... bench:  3,975,916 ns/iter (+/- 44,967)\ntest tiny_quick_xml   ... bench:    2,233 ns/iter (+/- 70)\ntest tiny_roxmltree   ... bench:    2,522 ns/iter (+/- 31)\ntest tiny_xmlrs     ... bench:   17,155 ns/iter (+/- 429)\n`\n```\n\n### Notes\nThe benchmarks were taken on a Apple M1 Pro. You can try running the benchmarks yourself by running ````cargo``` bench``` in the ``benches`` dir.\n  * Since all libraries have a different XML support, benchmarking is a bit pointless.\n  * We bench _libxml2_ using the _[rust-libxml](https://github.com/KWARC/rust-libxml)_ wrapper crate\n\n\n## Memory overhead\n``roxmltree`` tries to use as little memory as possible to allow parsing very large (multi-GB) XML files.\nThe peak memory usage doesn't directly correlate with the file size but rather with the amount of nodes and attributes a file has. How many attributes had to be normalized (i.e. allocated). And how many text nodes had to be preprocessed (i.e. allocated).\n``roxmltree`` never allocates element and attribute names, processing instructions and comments.\nBy disabling the ``positions`` feature, you can shave 8 bytes from each node and attribute.\nOn average, the overhead is around 6-8x the file size. For example, our 1.1GB sample XML will peak at 7.6GB RAM with default features enabled and at 6.8GB RAM when ``positions`` is disabled.\n## Safety\n  * This library must not panic. Any panic should be considered a critical bug and reported.\n  * This library forbids ```unsafe``` code.\n\n\n## API\nThis library uses Rust's idiomatic API based on iterators. In case you are more familiar with browser/JS DOM APIs - you can check out [tests/dom-api.rs](https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/tests/dom-api.rs) to see how it can be mapped onto the Rust one.\n## License\nLicensed under either of\n  * [Apache License v2.0](https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/LICENSE-APACHE)\n  * [MIT license](https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/LICENSE-MIT)\n\n\nat your option.\n## Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### No runtime deps\n#### [Features](https://lib.rs/crates/roxmltree/features)\n  * [positions](https://lib.rs/crates/roxmltree/features#feature-positions)\n  * [std](https://lib.rs/crates/roxmltree/features#feature-std)\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "markdown_with_citations": "###  31 releases\u27e81\u27e9 (19 breaking)\n0.20.0 |  May 23, 2024   \n---|---  \n0.19.0 |  Nov 18, 2023   \n0.18.1 |  Sep 30, 2023   \n0.18.0 |  Feb 4, 2023   \n0.3.0 |  Oct 29, 2018   \n#**6** in Parser implementations\u27e82\u27e9\nDownload history 191886/week @ 2025-01-28 230021/week @ 2025-02-04 219485/week @ 2025-02-11 203690/week @ 2025-02-18 210761/week @ 2025-02-25 212375/week @ 2025-03-04 227190/week @ 2025-03-11 236770/week @ 2025-03-18 238919/week @ 2025-03-25 226629/week @ 2025-04-01 254212/week @ 2025-04-08 245553/week @ 2025-04-15 256301/week @ 2025-04-22 233057/week @ 2025-04-29 250569/week @ 2025-05-06 203111/week @ 2025-05-13\n**979,977** downloads per month Used in **1,416** crates (187 directly)\u27e83\u27e9\n**MIT/Apache**\n165KB  4K  SLoC\n# roxmltree\n![Build Status\u27e84\u27e9] ![Crates.io\u27e85\u27e9](https://crates.io/crates/roxmltree) ![Documentation\u27e86\u27e9](https://docs.rs/roxmltree) ![Rust 1.60+\u27e87\u27e9](https://www.rust-lang.org)\nRepresents an XML\u27e88\u27e9 document as a read-only tree.\n```\n```//` Find element by id.`\n`let` doc `=` `roxmltree`::```Document`::``parse`(```\"`<rect id='rect1'/>`\"```)``?``;`\n`let` elem `=` doc`.``descendants``(``)``.``find``(````|``````n``|`` ``n`.``attribute``(```\"`id`\"```)` `==` `Some``(```\"`rect1`\"```)```)``?``;`\n`assert!``(`elem`.``has_tag_name``(```\"`rect`\"```)``)``;`\n`\n```\n\n## Why read-only?\nBecause in some cases all you need is to retrieve some data from an XML document. And for such cases, we can make a lot of optimizations.\n## Parsing behavior\nSadly, XML can be parsed in many different ways. _roxmltree_ tries to mimic the behavior of Python's lxml\u27e89\u27e9. For more details see docs/parsing.md\u27e810\u27e9.\n## Alternatives\nFeature/Crate | roxmltree | libxml2\u27e811\u27e9 | xmltree\u27e812\u27e9 | sxd-document\u27e813\u27e9  \n---|---|---|---|---  \nElement namespace resolving | \u2713 | \u2713 | \u2713 | ~1  \nAttribute namespace resolving | \u2713 | \u2713 |  | \u2713  \nEntity references\u27e814\u27e9 | \u2713 | \u2713 | \u00d7 | \u00d7  \nCharacter references\u27e815\u27e9 | \u2713 | \u2713 | \u2713 | \u2713  \nAttribute-Value normalization\u27e816\u27e9 | \u2713 | \u2713 |  |   \nComments | \u2713 | \u2713 |  | \u2713  \nProcessing instructions | \u2713 | \u2713 | \u2713 | \u2713  \nUTF-8 BOM | \u2713 | \u2713 | \u00d7 | \u00d7  \nNon UTF-8 input |  | \u2713 |  |   \nComplete DTD support |  | \u2713 |  |   \nPosition preserving2 | \u2713 | \u2713 |  |   \nHTML support |  | \u2713 |  |   \nTree modification |  | \u2713 | \u2713 | \u2713  \nWriting |  | \u2713 | \u2713 | \u2713  \nNo **unsafe** | \u2713 |  | \u2713 |   \nLanguage | Rust | C | Rust | Rust  \nDependencies | **0** | - | 2 | 2  \nTested version | 0.20.0 | Apple-provided | 0.10.3 | 0.3.2  \nLicense | MIT / Apache-2.0 | MIT | MIT | MIT  \nLegend:\n  * \u2713 - supported\n  * \u00d7 - parsing error\n  * ~ - partial\n  * _nothing_ - not supported\n\n\nNotes:\n  1. No default namespace propagation.\n  2. _roxmltree_ keeps all node and attribute positions in the original document, so you can easily retrieve it if you need it. See examples/print_pos.rs\u27e817\u27e9 for details.\n\n\nThere is also ``elementtree`` and ``treexml`` crates, but they are abandoned for a long time.\n## Performance\nHere are some benchmarks comparing ``roxmltree`` to other XML tree libraries.\n```\n`test huge_roxmltree   ... bench:  2,997,887 ns/iter (+/- 48,976)\ntest huge_libxml2    ... bench:  6,850,666 ns/iter (+/- 306,180)\ntest huge_sdx_document  ... bench:  9,440,412 ns/iter (+/- 117,106)\ntest huge_xmltree    ... bench: 41,662,316 ns/iter (+/- 850,360)\ntest large_roxmltree   ... bench:  1,494,886 ns/iter (+/- 30,384)\ntest large_libxml2    ... bench:  3,250,606 ns/iter (+/- 140,201)\ntest large_sdx_document ... bench:  4,242,162 ns/iter (+/- 99,740)\ntest large_xmltree    ... bench: 13,980,228 ns/iter (+/- 229,363)\ntest medium_roxmltree  ... bench:   421,137 ns/iter (+/- 13,855)\ntest medium_libxml2   ... bench:   950,984 ns/iter (+/- 34,099)\ntest medium_sdx_document ... bench:  1,618,270 ns/iter (+/- 23,466)\ntest medium_xmltree   ... bench:  4,315,974 ns/iter (+/- 31,849)\ntest tiny_roxmltree   ... bench:    2,522 ns/iter (+/- 31)\ntest tiny_libxml2    ... bench:    8,931 ns/iter (+/- 235)\ntest tiny_sdx_document  ... bench:   11,658 ns/iter (+/- 82)\ntest tiny_xmltree    ... bench:   20,215 ns/iter (+/- 303)\n`\n```\n\nWhen comparing to streaming XML parsers ``roxmltree`` is slightly slower than ``quick-xml``, but still way faster than ``xmlrs``. Note that streaming parsers usually do not provide a proper string unescaping, DTD resolving and namespaces support.\n```\n`test huge_quick_xml   ... bench:  2,997,887 ns/iter (+/- 48,976)\ntest huge_roxmltree   ... bench:  3,147,424 ns/iter (+/- 49,153)\ntest huge_xmlrs     ... bench: 36,258,312 ns/iter (+/- 180,438)\ntest large_quick_xml   ... bench:  1,250,053 ns/iter (+/- 21,943)\ntest large_roxmltree   ... bench:  1,494,886 ns/iter (+/- 30,384)\ntest large_xmlrs     ... bench: 11,239,516 ns/iter (+/- 76,937)\ntest medium_quick_xml  ... bench:   206,232 ns/iter (+/- 2,157)\ntest medium_roxmltree  ... bench:   421,137 ns/iter (+/- 13,855)\ntest medium_xmlrs    ... bench:  3,975,916 ns/iter (+/- 44,967)\ntest tiny_quick_xml   ... bench:    2,233 ns/iter (+/- 70)\ntest tiny_roxmltree   ... bench:    2,522 ns/iter (+/- 31)\ntest tiny_xmlrs     ... bench:   17,155 ns/iter (+/- 429)\n`\n```\n\n### Notes\nThe benchmarks were taken on a Apple M1 Pro. You can try running the benchmarks yourself by running ````cargo``` bench``` in the ``benches`` dir.\n  * Since all libraries have a different XML support, benchmarking is a bit pointless.\n  * We bench _libxml2_ using the _rust-libxml\u27e818\u27e9_ wrapper crate\n\n\n## Memory overhead\n``roxmltree`` tries to use as little memory as possible to allow parsing very large (multi-GB) XML files.\nThe peak memory usage doesn't directly correlate with the file size but rather with the amount of nodes and attributes a file has. How many attributes had to be normalized (i.e. allocated). And how many text nodes had to be preprocessed (i.e. allocated).\n``roxmltree`` never allocates element and attribute names, processing instructions and comments.\nBy disabling the ``positions`` feature, you can shave 8 bytes from each node and attribute.\nOn average, the overhead is around 6-8x the file size. For example, our 1.1GB sample XML will peak at 7.6GB RAM with default features enabled and at 6.8GB RAM when ``positions`` is disabled.\n## Safety\n  * This library must not panic. Any panic should be considered a critical bug and reported.\n  * This library forbids ```unsafe``` code.\n\n\n## API\nThis library uses Rust's idiomatic API based on iterators. In case you are more familiar with browser/JS DOM APIs - you can check out tests/dom-api.rs\u27e819\u27e9 to see how it can be mapped onto the Rust one.\n## License\nLicensed under either of\n  * Apache License v2.0\u27e820\u27e9\n  * MIT license\u27e821\u27e9\n\n\nat your option.\n## Contribution\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### No runtime deps\n#### Features\u27e822\u27e9\n  * positions\u27e823\u27e9\n  * std\u27e824\u27e9\n\n\n  *[SLoC]: Lines of code, excluding comments\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/roxmltree/versions: 31 releases\n\u27e82\u27e9 https://lib.rs/parser-implementations: Parsers implemented for particular formats or languages. - Parser implementations\n\u27e83\u27e9 https://lib.rs/crates/roxmltree/rev: **1,416** crates (187 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/RazrFalcon/roxmltree/workflows/Rust/badge.svg: Build Status\n\u27e85\u27e9 https://img.shields.io/crates/v/roxmltree.svg: ![Crates.io\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/roxmltree/badge.svg: ![Documentation\n\u27e87\u27e9 https://img.shields.io/badge/rust-1.60+-orange.svg: ![Rust 1.60+\n\u27e88\u27e9 https://www.w3.org/TR/xml/: XML\n\u27e89\u27e9 https://lxml.de/: lxml\n\u27e810\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md: docs/parsing.md\n\u27e811\u27e9 http://xmlsoft.org/: libxml2\n\u27e812\u27e9 https://lib.rs/crates/xmltree: xmltree\n\u27e813\u27e9 https://lib.rs/crates/sxd-document: sxd-document\n\u27e814\u27e9 https://www.w3.org/TR/REC-xml/#dt-entref: Entity references\n\u27e815\u27e9 https://www.w3.org/TR/REC-xml/#NT-CharRef: Character references\n\u27e816\u27e9 https://www.w3.org/TR/REC-xml/#AVNormalize: Attribute-Value normalization\n\u27e817\u27e9 https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/examples/print_pos.rs: examples/print_pos.rs\n\u27e818\u27e9 https://github.com/KWARC/rust-libxml: rust-libxml\n\u27e819\u27e9 https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/tests/dom-api.rs: tests/dom-api.rs\n\u27e820\u27e9 https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/LICENSE-APACHE: Apache License v2.0\n\u27e821\u27e9 https://github.com/razrfalcon/roxmltree/blob/6dffb22cb4113a168928ca9a2eec3c2961820a98/LICENSE-MIT: MIT license\n\u27e822\u27e9 https://lib.rs/crates/roxmltree/features: Features\n\u27e823\u27e9 https://lib.rs/crates/roxmltree/features#feature-positions: positions\n\u27e824\u27e9 https://lib.rs/crates/roxmltree/features#feature-std: std\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 8239,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112967.3008884"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "positions",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\target\\debug\\deps\\libroxmltree-0c3661ccef284070.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:190:17\n    |\n190 |                 write!(f, \"'xml' namespace prefix mapped to wrong URI at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n190 -                 write!(f, \"'xml' namespace prefix mapped to wrong URI at {}\", pos)\n190 +                 write!(f, \"'xml' namespace prefix mapped to wrong URI at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6333,
                        "byte_start": 6333,
                        "column_end": 75,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 190,
                        "line_start": 190,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 75,
                            "text": "                write!(f, \"'xml' namespace prefix mapped to wrong URI at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6340,
                        "byte_start": 6335,
                        "column_end": 82,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 190,
                        "line_start": 190,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 77,
                            "text": "                write!(f, \"'xml' namespace prefix mapped to wrong URI at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6341,
                    "byte_start": 6275,
                    "column_end": 83,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 190,
                    "line_start": 190,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 83,
                        "highlight_start": 17,
                        "text": "                write!(f, \"'xml' namespace prefix mapped to wrong URI at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:193:17\n    |\n193 | /                 write!(\n194 | |                     f,\n195 | |                     \"the 'xml' namespace URI is used for not 'xml' prefix at {}\",\n196 | |                     pos\n197 | |                 )\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6527,
                        "byte_start": 6527,
                        "column_end": 79,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 195,
                        "line_start": 195,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 79,
                            "text": "                    \"the 'xml' namespace URI is used for not 'xml' prefix at {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 6554,
                        "byte_start": 6529,
                        "column_end": 24,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 196,
                        "line_start": 195,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 81,
                            "text": "                    \"the 'xml' namespace URI is used for not 'xml' prefix at {}\","
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    pos"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6572,
                    "byte_start": 6418,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 197,
                    "line_start": 193,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    f,"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                    \"the 'xml' namespace URI is used for not 'xml' prefix at {}\","
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    pos"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:200:17\n    |\n200 | /                 write!(\n201 | |                     f,\n202 | |                     \"the 'xmlns' URI is used at {}, but it must not be declared\",\n203 | |                     pos\n204 | |                 )\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6731,
                        "byte_start": 6731,
                        "column_end": 50,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 202,
                        "line_start": 202,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 50,
                            "text": "                    \"the 'xmlns' URI is used at {}, but it must not be declared\","
                          }
                        ]
                      },
                      {
                        "byte_end": 6787,
                        "byte_start": 6762,
                        "column_end": 24,
                        "column_start": 81,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 203,
                        "line_start": 202,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 82,
                            "highlight_start": 81,
                            "text": "                    \"the 'xmlns' URI is used at {}, but it must not be declared\","
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    pos"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6805,
                    "byte_start": 6651,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 204,
                    "line_start": 200,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    f,"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                    \"the 'xmlns' URI is used at {}, but it must not be declared\","
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    pos"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:207:17\n    |\n207 | /                 write!(\n208 | |                     f,\n209 | |                     \"the 'xmlns' prefix is used at {}, but it must not be\",\n210 | |                     pos\n211 | |                 )\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6973,
                        "byte_start": 6973,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 209,
                        "line_start": 209,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "                    \"the 'xmlns' prefix is used at {}, but it must not be\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7020,
                        "byte_start": 6995,
                        "column_end": 24,
                        "column_start": 75,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 209,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 75,
                            "text": "                    \"the 'xmlns' prefix is used at {}, but it must not be\","
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    pos"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7038,
                    "byte_start": 6890,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 211,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    f,"
                      },
                      {
                        "highlight_end": 76,
                        "highlight_start": 1,
                        "text": "                    \"the 'xmlns' prefix is used at {}, but it must not be\","
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    pos"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:214:17\n    |\n214 |                 write!(f, \"namespace '{}' at {} is already defined\", name, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n214 -                 write!(f, \"namespace '{}' at {} is already defined\", name, pos)\n214 +                 write!(f, \"namespace '{name}' at {pos} is already defined\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7151,
                        "byte_start": 7151,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                write!(f, \"namespace '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7158,
                        "byte_start": 7158,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "                write!(f, \"namespace '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7185,
                        "byte_start": 7179,
                        "column_end": 74,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 68,
                            "text": "                write!(f, \"namespace '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7190,
                        "byte_start": 7185,
                        "column_end": 79,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 214,
                        "line_start": 214,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 74,
                            "text": "                write!(f, \"namespace '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7191,
                    "byte_start": 7128,
                    "column_end": 80,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 214,
                    "line_start": 214,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 17,
                        "text": "                write!(f, \"namespace '{}' at {} is already defined\", name, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:217:17\n    |\n217 |                 write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n217 -                 write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)\n217 +                 write!(f, \"an unknown namespace prefix '{name}' at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7319,
                        "byte_start": 7319,
                        "column_end": 58,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 217,
                        "line_start": 217,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 58,
                            "text": "                write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7326,
                        "byte_start": 7326,
                        "column_end": 65,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 217,
                        "line_start": 217,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 65,
                            "text": "                write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7334,
                        "byte_start": 7328,
                        "column_end": 73,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 217,
                        "line_start": 217,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 67,
                            "text": "                write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7339,
                        "byte_start": 7334,
                        "column_end": 78,
                        "column_start": 73,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 217,
                        "line_start": 217,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 73,
                            "text": "                write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7340,
                    "byte_start": 7278,
                    "column_end": 79,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 217,
                    "line_start": 217,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 17,
                        "text": "                write!(f, \"an unknown namespace prefix '{}' at {}\", name, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:220:17\n    |\n220 | /                 write!(\n221 | |                     f,\n222 | |                     \"expected '{}' tag, not '{}' at {}\",\n223 | |                     expected, actual, pos\n224 | |                 )\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7508,
                        "byte_start": 7508,
                        "column_end": 33,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 33,
                            "text": "                    \"expected '{}' tag, not '{}' at {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7522,
                        "byte_start": 7522,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "actual",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "                    \"expected '{}' tag, not '{}' at {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7529,
                        "byte_start": 7529,
                        "column_end": 54,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 222,
                        "line_start": 222,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 54,
                            "text": "                    \"expected '{}' tag, not '{}' at {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 7561,
                        "byte_start": 7531,
                        "column_end": 29,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 223,
                        "line_start": 222,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 56,
                            "text": "                    \"expected '{}' tag, not '{}' at {}\","
                          },
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "                    expected, actual, pos"
                          }
                        ]
                      },
                      {
                        "byte_end": 7569,
                        "byte_start": 7561,
                        "column_end": 37,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 223,
                        "line_start": 223,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 29,
                            "text": "                    expected, actual, pos"
                          }
                        ]
                      },
                      {
                        "byte_end": 7574,
                        "byte_start": 7569,
                        "column_end": 42,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 223,
                        "line_start": 223,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 37,
                            "text": "                    expected, actual, pos"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7592,
                    "byte_start": 7445,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 224,
                    "line_start": 220,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                write!("
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                    f,"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                    \"expected '{}' tag, not '{}' at {}\","
                      },
                      {
                        "highlight_end": 42,
                        "highlight_start": 1,
                        "text": "                    expected, actual, pos"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                )"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:227:17\n    |\n227 |                 write!(f, \"unexpected close tag at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n227 -                 write!(f, \"unexpected close tag at {}\", pos)\n227 +                 write!(f, \"unexpected close tag at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7713,
                        "byte_start": 7713,
                        "column_end": 53,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 227,
                        "line_start": 227,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 53,
                            "text": "                write!(f, \"unexpected close tag at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7720,
                        "byte_start": 7715,
                        "column_end": 60,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 227,
                        "line_start": 227,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 60,
                            "highlight_start": 55,
                            "text": "                write!(f, \"unexpected close tag at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7721,
                    "byte_start": 7677,
                    "column_end": 61,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 227,
                    "line_start": 227,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unexpected close tag at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:230:17\n    |\n230 |                 write!(f, \"malformed entity reference at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n230 -                 write!(f, \"malformed entity reference at {}\", pos)\n230 +                 write!(f, \"malformed entity reference at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7848,
                        "byte_start": 7848,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 230,
                        "line_start": 230,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "                write!(f, \"malformed entity reference at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7855,
                        "byte_start": 7850,
                        "column_end": 66,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 230,
                        "line_start": 230,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 61,
                            "text": "                write!(f, \"malformed entity reference at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 7856,
                    "byte_start": 7806,
                    "column_end": 67,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 230,
                    "line_start": 230,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 17,
                        "text": "                write!(f, \"malformed entity reference at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:233:17\n    |\n233 |                 write!(f, \"unknown entity reference '{}' at {}\", name, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n233 -                 write!(f, \"unknown entity reference '{}' at {}\", name, pos)\n233 +                 write!(f, \"unknown entity reference '{name}' at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7987,
                        "byte_start": 7987,
                        "column_end": 55,
                        "column_start": 55,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 233,
                        "line_start": 233,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 55,
                            "text": "                write!(f, \"unknown entity reference '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 7994,
                        "byte_start": 7994,
                        "column_end": 62,
                        "column_start": 62,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 233,
                        "line_start": 233,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 62,
                            "text": "                write!(f, \"unknown entity reference '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8002,
                        "byte_start": 7996,
                        "column_end": 70,
                        "column_start": 64,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 233,
                        "line_start": 233,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 64,
                            "text": "                write!(f, \"unknown entity reference '{}' at {}\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8007,
                        "byte_start": 8002,
                        "column_end": 75,
                        "column_start": 70,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 233,
                        "line_start": 233,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 75,
                            "highlight_start": 70,
                            "text": "                write!(f, \"unknown entity reference '{}' at {}\", name, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8008,
                    "byte_start": 7949,
                    "column_end": 76,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 233,
                    "line_start": 233,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 76,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unknown entity reference '{}' at {}\", name, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:236:17\n    |\n236 |                 write!(f, \"a possible entity reference loop is detected at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n236 -                 write!(f, \"a possible entity reference loop is detected at {}\", pos)\n236 +                 write!(f, \"a possible entity reference loop is detected at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8148,
                        "byte_start": 8148,
                        "column_end": 77,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 236,
                        "line_start": 236,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 77,
                            "text": "                write!(f, \"a possible entity reference loop is detected at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8155,
                        "byte_start": 8150,
                        "column_end": 84,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 236,
                        "line_start": 236,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 79,
                            "text": "                write!(f, \"a possible entity reference loop is detected at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8156,
                    "byte_start": 8088,
                    "column_end": 85,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 236,
                    "line_start": 236,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 17,
                        "text": "                write!(f, \"a possible entity reference loop is detected at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:239:17\n    |\n239 |                 write!(f, \"unescaped '<' found at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n239 -                 write!(f, \"unescaped '<' found at {}\", pos)\n239 +                 write!(f, \"unescaped '<' found at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8273,
                        "byte_start": 8273,
                        "column_end": 52,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 239,
                        "line_start": 239,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 52,
                            "text": "                write!(f, \"unescaped '<' found at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8280,
                        "byte_start": 8275,
                        "column_end": 59,
                        "column_start": 54,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 239,
                        "line_start": 239,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 54,
                            "text": "                write!(f, \"unescaped '<' found at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8281,
                    "byte_start": 8238,
                    "column_end": 60,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 239,
                    "line_start": 239,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unescaped '<' found at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:242:17\n    |\n242 |                 write!(f, \"attribute '{}' at {} is already defined\", name, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n242 -                 write!(f, \"attribute '{}' at {} is already defined\", name, pos)\n242 +                 write!(f, \"attribute '{name}' at {pos} is already defined\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8394,
                        "byte_start": 8394,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 242,
                        "line_start": 242,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                write!(f, \"attribute '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8401,
                        "byte_start": 8401,
                        "column_end": 47,
                        "column_start": 47,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 242,
                        "line_start": 242,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 47,
                            "text": "                write!(f, \"attribute '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8428,
                        "byte_start": 8422,
                        "column_end": 74,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 242,
                        "line_start": 242,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 68,
                            "text": "                write!(f, \"attribute '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8433,
                        "byte_start": 8428,
                        "column_end": 79,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 242,
                        "line_start": 242,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 74,
                            "text": "                write!(f, \"attribute '{}' at {} is already defined\", name, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8434,
                    "byte_start": 8371,
                    "column_end": 80,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 242,
                    "line_start": 242,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 17,
                        "text": "                write!(f, \"attribute '{}' at {} is already defined\", name, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:251:17\n    |\n251 |                 write!(f, \"unexpected XML declaration at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n251 -                 write!(f, \"unexpected XML declaration at {}\", pos)\n251 +                 write!(f, \"unexpected XML declaration at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 8801,
                        "byte_start": 8801,
                        "column_end": 59,
                        "column_start": 59,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 251,
                        "line_start": 251,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 59,
                            "text": "                write!(f, \"unexpected XML declaration at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 8808,
                        "byte_start": 8803,
                        "column_end": 66,
                        "column_start": 61,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 251,
                        "line_start": 251,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 61,
                            "text": "                write!(f, \"unexpected XML declaration at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 8809,
                    "byte_start": 8759,
                    "column_end": 67,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 251,
                    "line_start": 251,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 67,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unexpected XML declaration at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:266:17\n    |\n266 |                 write!(f, \"invalid name token at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n266 -                 write!(f, \"invalid name token at {}\", pos)\n266 +                 write!(f, \"invalid name token at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9384,
                        "byte_start": 9384,
                        "column_end": 51,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 266,
                        "line_start": 266,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 51,
                            "text": "                write!(f, \"invalid name token at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 9391,
                        "byte_start": 9386,
                        "column_end": 58,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 266,
                        "line_start": 266,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 53,
                            "text": "                write!(f, \"invalid name token at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 9392,
                    "byte_start": 9350,
                    "column_end": 59,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 266,
                    "line_start": 266,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 17,
                        "text": "                write!(f, \"invalid name token at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:269:17\n    |\n269 |                 write!(f, \"a non-XML character {:?} found at {}\", c, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n269 -                 write!(f, \"a non-XML character {:?} found at {}\", c, pos)\n269 +                 write!(f, \"a non-XML character {c:?} found at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9498,
                        "byte_start": 9498,
                        "column_end": 49,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "c",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 49,
                            "text": "                write!(f, \"a non-XML character {:?} found at {}\", c, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 9512,
                        "byte_start": 9512,
                        "column_end": 63,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 63,
                            "text": "                write!(f, \"a non-XML character {:?} found at {}\", c, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 9517,
                        "byte_start": 9514,
                        "column_end": 68,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 68,
                            "highlight_start": 65,
                            "text": "                write!(f, \"a non-XML character {:?} found at {}\", c, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 9522,
                        "byte_start": 9517,
                        "column_end": 73,
                        "column_start": 68,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 269,
                        "line_start": 269,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 68,
                            "text": "                write!(f, \"a non-XML character {:?} found at {}\", c, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 9523,
                    "byte_start": 9466,
                    "column_end": 74,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 269,
                    "line_start": 269,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 17,
                        "text": "                write!(f, \"a non-XML character {:?} found at {}\", c, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:286:17\n    |\n286 |                 write!(f, \"expected '{}' at {}\", expected, pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n286 -                 write!(f, \"expected '{}' at {}\", expected, pos)\n286 +                 write!(f, \"expected '{expected}' at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10116,
                        "byte_start": 10116,
                        "column_end": 39,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "expected",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 39,
                            "text": "                write!(f, \"expected '{}' at {}\", expected, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10123,
                        "byte_start": 10123,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                write!(f, \"expected '{}' at {}\", expected, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10135,
                        "byte_start": 10125,
                        "column_end": 58,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 48,
                            "text": "                write!(f, \"expected '{}' at {}\", expected, pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10140,
                        "byte_start": 10135,
                        "column_end": 63,
                        "column_start": 58,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 286,
                        "line_start": 286,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 58,
                            "text": "                write!(f, \"expected '{}' at {}\", expected, pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10141,
                    "byte_start": 10094,
                    "column_end": 64,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 286,
                    "line_start": 286,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 64,
                        "highlight_start": 17,
                        "text": "                write!(f, \"expected '{}' at {}\", expected, pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:289:17\n    |\n289 |                 write!(f, \"invalid ExternalID at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n289 -                 write!(f, \"invalid ExternalID at {}\", pos)\n289 +                 write!(f, \"invalid ExternalID at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10253,
                        "byte_start": 10253,
                        "column_end": 51,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 289,
                        "line_start": 289,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 51,
                            "text": "                write!(f, \"invalid ExternalID at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10260,
                        "byte_start": 10255,
                        "column_end": 58,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 289,
                        "line_start": 289,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 53,
                            "text": "                write!(f, \"invalid ExternalID at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10261,
                    "byte_start": 10219,
                    "column_end": 59,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 289,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 17,
                        "text": "                write!(f, \"invalid ExternalID at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:292:17\n    |\n292 |                 write!(f, \"comment at {} contains '--'\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n292 -                 write!(f, \"comment at {} contains '--'\", pos)\n292 +                 write!(f, \"comment at {pos} contains '--'\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10359,
                        "byte_start": 10359,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 292,
                        "line_start": 292,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                write!(f, \"comment at {} contains '--'\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10380,
                        "byte_start": 10375,
                        "column_end": 61,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 292,
                        "line_start": 292,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 61,
                            "highlight_start": 56,
                            "text": "                write!(f, \"comment at {} contains '--'\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10381,
                    "byte_start": 10336,
                    "column_end": 62,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 292,
                    "line_start": 292,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 17,
                        "text": "                write!(f, \"comment at {} contains '--'\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:295:17\n    |\n295 |                 write!(f, \"']]>' at {} is not allowed inside a character data\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n295 -                 write!(f, \"']]>' at {} is not allowed inside a character data\", pos)\n295 +                 write!(f, \"']]>' at {pos} is not allowed inside a character data\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10483,
                        "byte_start": 10483,
                        "column_end": 38,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 38,
                            "text": "                write!(f, \"']]>' at {} is not allowed inside a character data\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10529,
                        "byte_start": 10524,
                        "column_end": 84,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 79,
                            "text": "                write!(f, \"']]>' at {} is not allowed inside a character data\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10530,
                    "byte_start": 10462,
                    "column_end": 85,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 85,
                        "highlight_start": 17,
                        "text": "                write!(f, \"']]>' at {} is not allowed inside a character data\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\parse.rs:298:17\n    |\n298 |                 write!(f, \"unknown token at {}\", pos)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n298 -                 write!(f, \"unknown token at {}\", pos)\n298 +                 write!(f, \"unknown token at {pos}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10632,
                        "byte_start": 10632,
                        "column_end": 46,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "pos",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 46,
                            "text": "                write!(f, \"unknown token at {}\", pos)"
                          }
                        ]
                      },
                      {
                        "byte_end": 10639,
                        "byte_start": 10634,
                        "column_end": 53,
                        "column_start": 48,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 48,
                            "text": "                write!(f, \"unknown token at {}\", pos)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 10640,
                    "byte_start": 10603,
                    "column_end": 54,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 298,
                    "line_start": 298,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 17,
                        "text": "                write!(f, \"unknown token at {}\", pos)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\parse.rs:346:26\n    |\n346 |             nodes_limit: core::u32::MAX,\n    |                          ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n    = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n    |\n346 -             nodes_limit: core::u32::MAX,\n346 +             nodes_limit: u32::MAX,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::legacy_numeric_constants)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11976,
                        "byte_start": 11962,
                        "column_end": 40,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 346,
                        "line_start": 346,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 26,
                            "text": "            nodes_limit: core::u32::MAX,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 11976,
                    "byte_start": 11962,
                    "column_end": 40,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 346,
                    "line_start": 346,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 26,
                        "text": "            nodes_limit: core::u32::MAX,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\parse.rs:490:35\n    |\n490 |             if self.references == core::u8::MAX {\n    |                                   ^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n490 -             if self.references == core::u8::MAX {\n490 +             if self.references == u8::MAX {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15961,
                        "byte_start": 15948,
                        "column_end": 48,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 490,
                        "line_start": 490,
                        "suggested_replacement": "u8::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 35,
                            "text": "            if self.references == core::u8::MAX {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 15961,
                    "byte_start": 15948,
                    "column_end": 48,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 490,
                    "line_start": 490,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 35,
                        "text": "            if self.references == core::u8::MAX {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\parse.rs:881:67\n    |\n881 |     if ctx.doc.attributes.len() + ctx.current_attributes.len() >= core::u32::MAX as usize {\n    |                                                                   ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n881 -     if ctx.doc.attributes.len() + ctx.current_attributes.len() >= core::u32::MAX as usize {\n881 +     if ctx.doc.attributes.len() + ctx.current_attributes.len() >= u32::MAX as usize {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 28805,
                        "byte_start": 28791,
                        "column_end": 81,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 881,
                        "line_start": 881,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 67,
                            "text": "    if ctx.doc.attributes.len() + ctx.current_attributes.len() >= core::u32::MAX as usize {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 28805,
                    "byte_start": 28791,
                    "column_end": 81,
                    "column_start": 67,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 881,
                    "line_start": 881,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 81,
                        "highlight_start": 67,
                        "text": "    if ctx.doc.attributes.len() + ctx.current_attributes.len() >= core::u32::MAX as usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n    --> src\\parse.rs:1221:9\n     |\n1221 |         alloc::format!(\"{}:{}\", prefix, local)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n     |\n1221 -         alloc::format!(\"{}:{}\", prefix, local)\n1221 +         alloc::format!(\"{prefix}:{local}\")\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40406,
                        "byte_start": 40406,
                        "column_end": 26,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1221,
                        "line_start": 1221,
                        "suggested_replacement": "prefix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 26,
                            "text": "        alloc::format!(\"{}:{}\", prefix, local)"
                          }
                        ]
                      },
                      {
                        "byte_end": 40409,
                        "byte_start": 40409,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1221,
                        "line_start": 1221,
                        "suggested_replacement": "local",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "        alloc::format!(\"{}:{}\", prefix, local)"
                          }
                        ]
                      },
                      {
                        "byte_end": 40419,
                        "byte_start": 40411,
                        "column_end": 39,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1221,
                        "line_start": 1221,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 31,
                            "text": "        alloc::format!(\"{}:{}\", prefix, local)"
                          }
                        ]
                      },
                      {
                        "byte_end": 40426,
                        "byte_start": 40419,
                        "column_end": 46,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\parse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1221,
                        "line_start": 1221,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 39,
                            "text": "        alloc::format!(\"{}:{}\", prefix, local)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 40427,
                    "byte_start": 40389,
                    "column_end": 47,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\parse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1221,
                    "line_start": 1221,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 9,
                        "text": "        alloc::format!(\"{}:{}\", prefix, local)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual check for common ascii range\n   --> src\\tokenizer.rs:913:44\n    |\n913 |                     self.consume_bytes(|c| matches!(c, b'0'..=b'9' | b'A'..=b'F' | b'a'..=b'f'));\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c.is_ascii_hexdigit()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_ascii_check\n    = note: `#[warn(clippy::manual_is_ascii_check)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_ascii_check",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_is_ascii_check)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 25391,
                        "byte_start": 25339,
                        "column_end": 96,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\tokenizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 913,
                        "line_start": 913,
                        "suggested_replacement": "c.is_ascii_hexdigit()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 96,
                            "highlight_start": 44,
                            "text": "                    self.consume_bytes(|c| matches!(c, b'0'..=b'9' | b'A'..=b'F' | b'a'..=b'f'));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_is_ascii_check",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual check for common ascii range",
                "spans": [
                  {
                    "byte_end": 25391,
                    "byte_start": 25339,
                    "column_end": 96,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\tokenizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 913,
                    "line_start": 913,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 96,
                        "highlight_start": 44,
                        "text": "                    self.consume_bytes(|c| matches!(c, b'0'..=b'9' | b'A'..=b'F' | b'a'..=b'f'));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\lib.rs:335:38\n    |\n335 |         debug_assert!(range.start <= core::u32::MAX as usize);\n    |                                      ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n335 -         debug_assert!(range.start <= core::u32::MAX as usize);\n335 +         debug_assert!(range.start <= u32::MAX as usize);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9699,
                        "byte_start": 9685,
                        "column_end": 52,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 335,
                        "line_start": 335,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 38,
                            "text": "        debug_assert!(range.start <= core::u32::MAX as usize);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 9699,
                    "byte_start": 9685,
                    "column_end": 52,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 335,
                    "line_start": 335,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 38,
                        "text": "        debug_assert!(range.start <= core::u32::MAX as usize);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\lib.rs:336:36\n    |\n336 |         debug_assert!(range.end <= core::u32::MAX as usize);\n    |                                    ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n336 -         debug_assert!(range.end <= core::u32::MAX as usize);\n336 +         debug_assert!(range.end <= u32::MAX as usize);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9760,
                        "byte_start": 9746,
                        "column_end": 50,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 336,
                        "line_start": 336,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 36,
                            "text": "        debug_assert!(range.end <= core::u32::MAX as usize);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 9760,
                    "byte_start": 9746,
                    "column_end": 50,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 336,
                    "line_start": 336,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 36,
                        "text": "        debug_assert!(range.end <= core::u32::MAX as usize);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\lib.rs:368:28\n    |\n368 |         debug_assert!(id < core::u32::MAX);\n    |                            ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n368 -         debug_assert!(id < core::u32::MAX);\n368 +         debug_assert!(id < u32::MAX);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10659,
                        "byte_start": 10645,
                        "column_end": 42,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 368,
                        "line_start": 368,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 28,
                            "text": "        debug_assert!(id < core::u32::MAX);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 10659,
                    "byte_start": 10645,
                    "column_end": 42,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 368,
                    "line_start": 368,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 28,
                        "text": "        debug_assert!(id < core::u32::MAX);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\lib.rs:398:29\n    |\n398 |         debug_assert!(id <= core::u32::MAX as usize);\n    |                             ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n398 -         debug_assert!(id <= core::u32::MAX as usize);\n398 +         debug_assert!(id <= u32::MAX as usize);\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11368,
                        "byte_start": 11354,
                        "column_end": 43,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 398,
                        "line_start": 398,
                        "suggested_replacement": "u32::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 29,
                            "text": "        debug_assert!(id <= core::u32::MAX as usize);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 11368,
                    "byte_start": 11354,
                    "column_end": 43,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 398,
                    "line_start": 398,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 29,
                        "text": "        debug_assert!(id <= core::u32::MAX as usize);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: usage of a legacy numeric constant\n   --> src\\lib.rs:728:40\n    |\n728 |                 if self.values.len() > core::u16::MAX as usize {\n    |                                        ^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n    |\n728 -                 if self.values.len() > core::u16::MAX as usize {\n728 +                 if self.values.len() > u16::MAX as usize {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the associated constant instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20937,
                        "byte_start": 20923,
                        "column_end": 54,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 728,
                        "line_start": 728,
                        "suggested_replacement": "u16::MAX",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 40,
                            "text": "                if self.values.len() > core::u16::MAX as usize {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::legacy_numeric_constants",
                  "explanation": null
                },
                "level": "warning",
                "message": "usage of a legacy numeric constant",
                "spans": [
                  {
                    "byte_end": 20937,
                    "byte_start": 20923,
                    "column_end": 54,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 728,
                    "line_start": 728,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 40,
                        "text": "                if self.values.len() > core::u16::MAX as usize {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `Iterator::last` on a `DoubleEndedIterator`; this will needlessly iterate the entire iterator\n    --> src\\lib.rs:1376:9\n     |\n1376 |         self.children().filter(|n| n.is_element()).last()\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------\n     |                                                    |\n     |                                                    help: try: `next_back()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_ended_iterator_last\n     = note: `#[warn(clippy::double_ended_iterator_last)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_ended_iterator_last",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::double_ended_iterator_last)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 40116,
                        "byte_start": 40110,
                        "column_end": 58,
                        "column_start": 52,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1376,
                        "line_start": 1376,
                        "suggested_replacement": "next_back()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 58,
                            "highlight_start": 52,
                            "text": "        self.children().filter(|n| n.is_element()).last()"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::double_ended_iterator_last",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `Iterator::last` on a `DoubleEndedIterator`; this will needlessly iterate the entire iterator",
                "spans": [
                  {
                    "byte_end": 40116,
                    "byte_start": 40067,
                    "column_end": 58,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1376,
                    "line_start": 1376,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 9,
                        "text": "        self.children().filter(|n| n.is_element()).last()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpx2551eq6/roxmltree-0.20.0#roxmltree@0.20.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "roxmltree",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "positions",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpx2551eq6\\roxmltree-0.20.0\\target\\debug\\deps\\libroxmltree-94214fb1ca271b1e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 1
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "roxmltree",
          "version": "0.20.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\n[Settings](https://docs.rs/roxmltree/latest/settings.html)\n[Help](https://docs.rs/roxmltree/latest/help.html)\nSummary[Source](https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746)\nExpand description\nRepresent an [XML](https://www.w3.org/TR/xml/) document as a read-only tree.\nThe root point of the documentations is [`Document::parse`](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse).\nYou can find more details in the [README](https://github.com/RazrFalcon/roxmltree/blob/master/README.md) and the [parsing doc](https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md).\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#structs)\n\n[Attribute](https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html \"struct roxmltree::Attribute\")\n    An attribute.\n\n[Attributes](https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html \"struct roxmltree::Attributes\")\n    Iterator over a node\u2019s attributes\n\n[AxisIter](https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html \"struct roxmltree::AxisIter\")\n    Iterator over specified axis.\n\n[Children](https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html \"struct roxmltree::Children\")\n    Iterator over children.\n\n[Descendants](https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html \"struct roxmltree::Descendants\")\n    Iterator over a node and its descendants.\n\n[Document](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html \"struct roxmltree::Document\")\n    An XML tree container.\n\n[ExpandedName](https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html \"struct roxmltree::ExpandedName\")\n    An expanded name.\n\n[Namespace](https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html \"struct roxmltree::Namespace\")\n    A namespace.\n\n[NamespaceIter](https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html \"struct roxmltree::NamespaceIter\")\n    Iterator over the namespaces attached to a node.\n\n[Node](https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html \"struct roxmltree::Node\")\n    A node in a document.\n\n[NodeId](https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html \"struct roxmltree::NodeId\")\n    A node ID stored as `u32`.\n\n[PI](https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html \"struct roxmltree::PI\")\n    A processing instruction.\n\n[ParsingOptions](https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html \"struct roxmltree::ParsingOptions\")\n    Parsing options.\n\n[TextPos](https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html \"struct roxmltree::TextPos\")\n    Position in text.\n## Enums[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#enums)\n\n[Error](https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html \"enum roxmltree::Error\")\n    A list of all possible errors.\n\n[NodeType](https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html \"enum roxmltree::NodeType\")\n    A list of supported node types.\n\n[StringStorage](https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html \"enum roxmltree::StringStorage\")\n    A string storage.\n## Constants[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#constants)\n\n[NS_XMLNS_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html \"constant roxmltree::NS_XMLNS_URI\")\n    The <http://www.w3.org/2000/xmlns/> URI.\n\n[NS_XML_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html \"constant roxmltree::NS_XML_URI\")\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
            "markdown_with_citations": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRepresent an XML\u27e84\u27e9 document as a read-only tree.\nThe root point of the documentations is `Document::parse`\u27e85\u27e9.\nYou can find more details in the README\u27e86\u27e9 and the parsing doc\u27e87\u27e9.\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs\u00a7\u27e88\u27e9\n\nAttribute\u27e89\u27e9\n    An attribute.\n\nAttributes\u27e810\u27e9\n    Iterator over a node\u2019s attributes\n\nAxisIter\u27e811\u27e9\n    Iterator over specified axis.\n\nChildren\u27e812\u27e9\n    Iterator over children.\n\nDescendants\u27e813\u27e9\n    Iterator over a node and its descendants.\n\nDocument\u27e814\u27e9\n    An XML tree container.\n\nExpandedName\u27e815\u27e9\n    An expanded name.\n\nNamespace\u27e816\u27e9\n    A namespace.\n\nNamespaceIter\u27e817\u27e9\n    Iterator over the namespaces attached to a node.\n\nNode\u27e818\u27e9\n    A node in a document.\n\nNodeId\u27e819\u27e9\n    A node ID stored as `u32`.\n\nPI\u27e820\u27e9\n    A processing instruction.\n\nParsingOptions\u27e821\u27e9\n    Parsing options.\n\nTextPos\u27e822\u27e9\n    Position in text.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    A list of all possible errors.\n\nNodeType\u27e825\u27e9\n    A list of supported node types.\n\nStringStorage\u27e826\u27e9\n    A string storage.\n## Constants\u00a7\u27e827\u27e9\n\nNS_XMLNS_URI\u27e828\u27e9\n    The <http://www.w3.org/2000/xmlns/> URI.\n\nNS_XML_URI\u27e829\u27e9\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/roxmltree/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/roxmltree/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746: Source\n\u27e84\u27e9 https://www.w3.org/TR/xml/: XML\n\u27e85\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse: `Document::parse`\n\u27e86\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/README.md: README\n\u27e87\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md: parsing doc\n\u27e88\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#structs: \u00a7\n\u27e89\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html: struct roxmltree::Attribute - Attribute\n\u27e810\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html: struct roxmltree::Attributes - Attributes\n\u27e811\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html: struct roxmltree::AxisIter - AxisIter\n\u27e812\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html: struct roxmltree::Children - Children\n\u27e813\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html: struct roxmltree::Descendants - Descendants\n\u27e814\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html: struct roxmltree::Document - Document\n\u27e815\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html: struct roxmltree::ExpandedName - ExpandedName\n\u27e816\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html: struct roxmltree::Namespace - Namespace\n\u27e817\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html: struct roxmltree::NamespaceIter - NamespaceIter\n\u27e818\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html: struct roxmltree::Node - Node\n\u27e819\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html: struct roxmltree::NodeId - NodeId\n\u27e820\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html: struct roxmltree::PI - PI\n\u27e821\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html: struct roxmltree::ParsingOptions - ParsingOptions\n\u27e822\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html: struct roxmltree::TextPos - TextPos\n\u27e823\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html: enum roxmltree::Error - Error\n\u27e825\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html: enum roxmltree::NodeType - NodeType\n\u27e826\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html: enum roxmltree::StringStorage - StringStorage\n\u27e827\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#constants: \u00a7\n\u27e828\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html: constant roxmltree::NS_XMLNS_URI - NS_XMLNS_URI\n\u27e829\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html: constant roxmltree::NS_XML_URI - NS_XML_URI\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "roxmltree",
          "version": "0.20.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\n[Settings](https://docs.rs/roxmltree/latest/settings.html)\n[Help](https://docs.rs/roxmltree/latest/help.html)\nSummary[Source](https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746)\nExpand description\nRepresent an [XML](https://www.w3.org/TR/xml/) document as a read-only tree.\nThe root point of the documentations is [`Document::parse`](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse).\nYou can find more details in the [README](https://github.com/RazrFalcon/roxmltree/blob/master/README.md) and the [parsing doc](https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md).\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#structs)\n\n[Attribute](https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html \"struct roxmltree::Attribute\")\n    An attribute.\n\n[Attributes](https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html \"struct roxmltree::Attributes\")\n    Iterator over a node\u2019s attributes\n\n[AxisIter](https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html \"struct roxmltree::AxisIter\")\n    Iterator over specified axis.\n\n[Children](https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html \"struct roxmltree::Children\")\n    Iterator over children.\n\n[Descendants](https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html \"struct roxmltree::Descendants\")\n    Iterator over a node and its descendants.\n\n[Document](https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html \"struct roxmltree::Document\")\n    An XML tree container.\n\n[ExpandedName](https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html \"struct roxmltree::ExpandedName\")\n    An expanded name.\n\n[Namespace](https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html \"struct roxmltree::Namespace\")\n    A namespace.\n\n[NamespaceIter](https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html \"struct roxmltree::NamespaceIter\")\n    Iterator over the namespaces attached to a node.\n\n[Node](https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html \"struct roxmltree::Node\")\n    A node in a document.\n\n[NodeId](https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html \"struct roxmltree::NodeId\")\n    A node ID stored as `u32`.\n\n[PI](https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html \"struct roxmltree::PI\")\n    A processing instruction.\n\n[ParsingOptions](https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html \"struct roxmltree::ParsingOptions\")\n    Parsing options.\n\n[TextPos](https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html \"struct roxmltree::TextPos\")\n    Position in text.\n## Enums[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#enums)\n\n[Error](https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html \"enum roxmltree::Error\")\n    A list of all possible errors.\n\n[NodeType](https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html \"enum roxmltree::NodeType\")\n    A list of supported node types.\n\n[StringStorage](https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html \"enum roxmltree::StringStorage\")\n    A string storage.\n## Constants[\u00a7](https://docs.rs/roxmltree/latest/roxmltree/#constants)\n\n[NS_XMLNS_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html \"constant roxmltree::NS_XMLNS_URI\")\n    The <http://www.w3.org/2000/xmlns/> URI.\n\n[NS_XML_URI](https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html \"constant roxmltree::NS_XML_URI\")\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
            "markdown_with_citations": "[](https://docs.rs/roxmltree/latest/roxmltree/all.html \"show sidebar\")\n# Crate roxmltreeCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nRepresent an XML\u27e84\u27e9 document as a read-only tree.\nThe root point of the documentations is `Document::parse`\u27e85\u27e9.\nYou can find more details in the README\u27e86\u27e9 and the parsing doc\u27e87\u27e9.\nThe tree structure itself is a heavily modified <https://github.com/causal-agent/ego-tree> License: ISC.\n## Structs\u00a7\u27e88\u27e9\n\nAttribute\u27e89\u27e9\n    An attribute.\n\nAttributes\u27e810\u27e9\n    Iterator over a node\u2019s attributes\n\nAxisIter\u27e811\u27e9\n    Iterator over specified axis.\n\nChildren\u27e812\u27e9\n    Iterator over children.\n\nDescendants\u27e813\u27e9\n    Iterator over a node and its descendants.\n\nDocument\u27e814\u27e9\n    An XML tree container.\n\nExpandedName\u27e815\u27e9\n    An expanded name.\n\nNamespace\u27e816\u27e9\n    A namespace.\n\nNamespaceIter\u27e817\u27e9\n    Iterator over the namespaces attached to a node.\n\nNode\u27e818\u27e9\n    A node in a document.\n\nNodeId\u27e819\u27e9\n    A node ID stored as `u32`.\n\nPI\u27e820\u27e9\n    A processing instruction.\n\nParsingOptions\u27e821\u27e9\n    Parsing options.\n\nTextPos\u27e822\u27e9\n    Position in text.\n## Enums\u00a7\u27e823\u27e9\n\nError\u27e824\u27e9\n    A list of all possible errors.\n\nNodeType\u27e825\u27e9\n    A list of supported node types.\n\nStringStorage\u27e826\u27e9\n    A string storage.\n## Constants\u00a7\u27e827\u27e9\n\nNS_XMLNS_URI\u27e828\u27e9\n    The <http://www.w3.org/2000/xmlns/> URI.\n\nNS_XML_URI\u27e829\u27e9\n    The <http://www.w3.org/XML/1998/namespace> URI.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/roxmltree/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/roxmltree/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/roxmltree/latest/src/roxmltree/lib.rs.html#1-1746: Source\n\u27e84\u27e9 https://www.w3.org/TR/xml/: XML\n\u27e85\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html#method.parse: `Document::parse`\n\u27e86\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/README.md: README\n\u27e87\u27e9 https://github.com/RazrFalcon/roxmltree/blob/master/docs/parsing.md: parsing doc\n\u27e88\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#structs: \u00a7\n\u27e89\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attribute.html: struct roxmltree::Attribute - Attribute\n\u27e810\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Attributes.html: struct roxmltree::Attributes - Attributes\n\u27e811\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.AxisIter.html: struct roxmltree::AxisIter - AxisIter\n\u27e812\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Children.html: struct roxmltree::Children - Children\n\u27e813\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Descendants.html: struct roxmltree::Descendants - Descendants\n\u27e814\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Document.html: struct roxmltree::Document - Document\n\u27e815\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ExpandedName.html: struct roxmltree::ExpandedName - ExpandedName\n\u27e816\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Namespace.html: struct roxmltree::Namespace - Namespace\n\u27e817\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NamespaceIter.html: struct roxmltree::NamespaceIter - NamespaceIter\n\u27e818\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.Node.html: struct roxmltree::Node - Node\n\u27e819\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.NodeId.html: struct roxmltree::NodeId - NodeId\n\u27e820\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.PI.html: struct roxmltree::PI - PI\n\u27e821\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.ParsingOptions.html: struct roxmltree::ParsingOptions - ParsingOptions\n\u27e822\u27e9 https://docs.rs/roxmltree/latest/roxmltree/struct.TextPos.html: struct roxmltree::TextPos - TextPos\n\u27e823\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#enums: \u00a7\n\u27e824\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.Error.html: enum roxmltree::Error - Error\n\u27e825\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.NodeType.html: enum roxmltree::NodeType - NodeType\n\u27e826\u27e9 https://docs.rs/roxmltree/latest/roxmltree/enum.StringStorage.html: enum roxmltree::StringStorage - StringStorage\n\u27e827\u27e9 https://docs.rs/roxmltree/latest/roxmltree/#constants: \u00a7\n\u27e828\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XMLNS_URI.html: constant roxmltree::NS_XMLNS_URI - NS_XMLNS_URI\n\u27e829\u27e9 https://docs.rs/roxmltree/latest/roxmltree/constant.NS_XML_URI.html: constant roxmltree::NS_XML_URI - NS_XML_URI\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `roxmltree` crate represents XML documents as efficient, read-only tree structures, enabling fast and memory-safe parsing. It provides tools for navigating and querying XML data, including iterators for attributes, children, descendants, and namespaces, as well as support for expanded names, node types, and namespaces. The crate is lightweight, leveraging a modified `ego-tree` for its internal structure, and offers robust error handling and customizable parsing options.",
          "feature_summary": null,
          "use_case": "Serialization",
          "score": 6.5,
          "factual_counterfactual": "### Pair 1: Parsing XML Documents  \n\u2705 Factual: The `roxmltree` crate provides a method `Document::parse` to parse an XML document into a read-only tree structure, allowing efficient traversal and querying of nodes.  \n\u274c Counterfactual: The `roxmltree` crate supports mutable editing of XML trees, allowing users to modify node values and attributes directly after parsing.  \n\n---\n\n### Pair 2: Namespace Handling  \n\u2705 Factual: The `Namespace` struct in `roxmltree` allows users to work with XML namespaces, and the `NamespaceIter` provides an iterator over all namespaces attached to a node.  \n\u274c Counterfactual: The `roxmltree` crate does not support XML namespaces, making it unsuitable for parsing documents that rely on namespace definitions.  \n\n---\n\n### Pair 3: Performance Characteristics  \n\u2705 Factual: `roxmltree` is designed to be lightweight and fast, with a focus on read-only operations, making it ideal for applications where XML data is consumed but not modified.  \n\u274c Counterfactual: `roxmltree` sacrifices performance for flexibility, resulting in slower parsing speeds compared to other XML libraries in Rust.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-587a4f56-3e6bb217-1751259176",
      "timestamp": "2025-06-30T04:52:56.241456+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]