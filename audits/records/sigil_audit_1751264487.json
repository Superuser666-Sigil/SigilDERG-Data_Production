[
  {
    "execution_id": "exec-d8123d5b-51c96135-1751264478",
    "timestamp": "2025-06-30T06:21:18.146329+00:00",
    "sacred_chain": {
      "input_data": "bcrypt",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'bcrypt' -> 'bcrypt'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "bcrypt",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/bcrypt",
            "title": "bcrypt v0.17.0",
            "content": {
              "raw_markdown": "#  bcrypt v0.17.0\nEasily hash and verify passwords using bcrypt \n  * [ #bcrypt ](https://crates.io/keywords/bcrypt)\n  * [ #hash ](https://crates.io/keywords/hash)\n  * [ #password ](https://crates.io/keywords/password)\n  * [ #web ](https://crates.io/keywords/web)\n\n\n  * [ Readme ](https://crates.io/crates/bcrypt)\n  * [ 33 Versions ](https://crates.io/crates/bcrypt/versions)\n  * [ Dependencies ](https://crates.io/crates/bcrypt/dependencies)\n  * [ Dependents ](https://crates.io/crates/bcrypt/reverse_dependencies)\n\n\n## Metadata\n5 months ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit)\n12.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add bcrypt\nOr add the following line to your Cargo.toml:\nbcrypt = \"0.17.0\"\n## Repository\n[ github.com/Keats/rust-bcrypt ](https://github.com/Keats/rust-bcrypt)\n## Owners\n[ Report crate ](https://crates.io/support?crate=bcrypt&inquire=crate-violation)\n### Stats Overview\n5,592,878 Downloads all time\n33 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  bcrypt v0.17.0\nEasily hash and verify passwords using bcrypt \n  *  #bcrypt \u27e81\u27e9\n  *  #hash \u27e82\u27e9\n  *  #password \u27e83\u27e9\n  *  #web \u27e84\u27e9\n\n\n  *  Readme \u27e85\u27e9\n  *  33 Versions \u27e86\u27e9\n  *  Dependencies \u27e87\u27e9\n  *  Dependents \u27e88\u27e9\n\n\n## Metadata\n5 months ago \n2021 edition \n MIT \u27e89\u27e9\n12.2 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add bcrypt\nOr add the following line to your Cargo.toml:\nbcrypt = \"0.17.0\"\n## Repository\n github.com/Keats/rust-bcrypt \u27e810\u27e9\n## Owners\n Report crate \u27e811\u27e9\n### Stats Overview\n5,592,878 Downloads all time\n33 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/bcrypt:  #bcrypt \n\u27e82\u27e9 https://crates.io/keywords/hash:  #hash \n\u27e83\u27e9 https://crates.io/keywords/password:  #password \n\u27e84\u27e9 https://crates.io/keywords/web:  #web \n\u27e85\u27e9 https://crates.io/crates/bcrypt:  Readme \n\u27e86\u27e9 https://crates.io/crates/bcrypt/versions:  33 Versions \n\u27e87\u27e9 https://crates.io/crates/bcrypt/dependencies:  Dependencies \n\u27e88\u27e9 https://crates.io/crates/bcrypt/reverse_dependencies:  Dependents \n\u27e89\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e810\u27e9 https://github.com/Keats/rust-bcrypt:  github.com/Keats/rust-bcrypt \n\u27e811\u27e9 https://crates.io/support?crate=bcrypt&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1110,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118267.448438"
          },
          "docs_rs": {
            "url": "https://docs.rs/bcrypt",
            "title": "Crate bcryptCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\n[Settings](https://docs.rs/bcrypt/latest/settings.html)\n[Help](https://docs.rs/bcrypt/latest/help.html)\nSummary[Source](https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571)\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#structs)\n\n[HashParts](https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html \"struct bcrypt::HashParts\")\n    A bcrypt hash result before concatenating\n## Enums[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#enums)\n\n[BcryptError](https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html \"enum bcrypt::BcryptError\")\n    All the errors we can encounter while hashing/verifying passwords\n\n[Version](https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html \"enum bcrypt::Version\")\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#constants)\n\n[BASE_64](https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html \"constant bcrypt::BASE_64\")\n\n\n[DEFAULT_COST](https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html \"constant bcrypt::DEFAULT_COST\")\n\n## Functions[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#functions)\n\n[bcrypt](https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html \"fn bcrypt::bcrypt\")\n\n\n[hash](https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html \"fn bcrypt::hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\n[hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html \"fn bcrypt::hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\n[hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html \"fn bcrypt::hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\n[non_truncating_hash](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html \"fn bcrypt::non_truncating_hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html \"fn bcrypt::non_truncating_hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html \"fn bcrypt::non_truncating_hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_verify](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html \"fn bcrypt::non_truncating_verify\")\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\n[verify](https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html \"fn bcrypt::verify\")\n    Verify that a password is equivalent to the hash provided\n## Type Aliases[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#types)\n\n[BcryptResult](https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html \"type bcrypt::BcryptResult\")\n    Library generic result type.\n",
              "markdown_with_citations": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs\u00a7\u27e84\u27e9\n\nHashParts\u27e85\u27e9\n    A bcrypt hash result before concatenating\n## Enums\u00a7\u27e86\u27e9\n\nBcryptError\u27e87\u27e9\n    All the errors we can encounter while hashing/verifying passwords\n\nVersion\u27e88\u27e9\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants\u00a7\u27e89\u27e9\n\nBASE_64\u27e810\u27e9\n\n\nDEFAULT_COST\u27e811\u27e9\n\n## Functions\u00a7\u27e812\u27e9\n\nbcrypt\u27e813\u27e9\n\n\nhash\u27e814\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\nhash_with_result\u27e815\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\nhash_with_salt\u27e816\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\nnon_truncating_hash\u27e817\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_result\u27e818\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_salt\u27e819\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_verify\u27e820\u27e9\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\nverify\u27e821\u27e9\n    Verify that a password is equivalent to the hash provided\n## Type Aliases\u00a7\u27e822\u27e9\n\nBcryptResult\u27e823\u27e9\n    Library generic result type.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/bcrypt/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/bcrypt/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571: Source\n\u27e84\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#structs: \u00a7\n\u27e85\u27e9 https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html: struct bcrypt::HashParts - HashParts\n\u27e86\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#enums: \u00a7\n\u27e87\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html: enum bcrypt::BcryptError - BcryptError\n\u27e88\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html: enum bcrypt::Version - Version\n\u27e89\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#constants: \u00a7\n\u27e810\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html: constant bcrypt::BASE_64 - BASE_64\n\u27e811\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html: constant bcrypt::DEFAULT_COST - DEFAULT_COST\n\u27e812\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#functions: \u00a7\n\u27e813\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html: fn bcrypt::bcrypt - bcrypt\n\u27e814\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html: fn bcrypt::hash - hash\n\u27e815\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html: fn bcrypt::hash_with_result - hash_with_result\n\u27e816\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html: fn bcrypt::hash_with_salt - hash_with_salt\n\u27e817\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html: fn bcrypt::non_truncating_hash - non_truncating_hash\n\u27e818\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html: fn bcrypt::non_truncating_hash_with_result - non_truncating_hash_with_result\n\u27e819\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html: fn bcrypt::non_truncating_hash_with_salt - non_truncating_hash_with_salt\n\u27e820\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html: fn bcrypt::non_truncating_verify - non_truncating_verify\n\u27e821\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html: fn bcrypt::verify - verify\n\u27e822\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#types: \u00a7\n\u27e823\u27e9 https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html: type bcrypt::BcryptResult - BcryptResult\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 3920,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118268.2126603"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/bcrypt",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [33 unstable releases](https://lib.rs/crates/bcrypt/versions)\n0.17.0 |  Jan 30, 2025   \n---|---  \n0.16.0 |  Nov 18, 2024   \n0.15.1 |  Mar 15, 2024   \n0.15.0 |  Jul 5, 2023   \n0.1.0 |  Dec 24, 2015   \n#**13** in [Cryptography](https://lib.rs/cryptography \"Algorithms intended for securing data.\")\nDownload history 60968/week @ 2025-03-07 57206/week @ 2025-03-14 53163/week @ 2025-03-21 52708/week @ 2025-03-28 58444/week @ 2025-04-04 60979/week @ 2025-04-11 82771/week @ 2025-04-18 68924/week @ 2025-04-25 53565/week @ 2025-05-02 49166/week @ 2025-05-09 55914/week @ 2025-05-16 42839/week @ 2025-05-23 44427/week @ 2025-05-30 50428/week @ 2025-06-06 63828/week @ 2025-06-13 59143/week @ 2025-06-20\n**224,817** downloads per month Used in [**271** crates (139 directly)](https://lib.rs/crates/bcrypt/rev)\n**MIT** license \n33KB  586 lines\n# bcrypt\n[![Safety Dance](https://img.shields.io/badge/unsafe-forbidden-success.svg)](https://github.com/rust-secure-code/safety-dance/) [![Build Status](https://img.gs/czjpqfbdkz/full/https://travis-ci.org/Keats/rust-bcrypt.svg)](https://travis-ci.org/Keats/rust-bcrypt) [![Documentation](https://img.gs/czjpqfbdkz/full/https://docs.rs/bcrypt/badge.svg)](https://docs.rs/bcrypt)\n## Installation\nAdd the following to Cargo.toml:\n```\n`bcrypt = \"0.17\"\n`\n```\n\nThe minimum Rust version is 1.63.0.\n## Usage\nThe crate makes 3 things public: ``DEFAULT_COST``, ``hash``, ``verify``.\n```\n``extern` `crate` bcrypt`;`\n`use` `bcrypt`::````{``DEFAULT_COST``,` hash`,` verify```}```;`\n`let` hashed `=` `hash``(```\"`hunter2`\"```,` `DEFAULT_COST``)``?``;`\n`let` valid `=` `verify``(```\"`hunter2`\"```,` `&`hashed`)``?``;`\n`\n```\n\nThe cost needs to be an integer between 4 and 31 (see benchmarks to have an idea of the speed for each), the ``DEFAULT_COST`` is 12.\n## Error on truncation\nMost if not all bcrypt implementation truncates the password after 72 bytes. In specific use cases this can break 2nd pre-image resistance. One can enforce the 72-bytes limit on input by using ``non_truncating_hash``, ``non_truncating_hash_with_result``, ``non_truncating_hash_with_salt``, and ``non_truncating_verify``. The ``non_truncating_`*``` functions behave identically to their truncating counterparts unless the input is longer than 72 bytes, in which case they will return ```BcryptError`::``Truncation``.\nIf you are generating hashes from other libraries/languages, do not use the ``non_truncating_verify`` function.\n## ``no_std``\n``bcrypt`` crate supports ``no_std`` platforms. When ``alloc`` feature is enabled, all crate functionality is available. When ``alloc`` is not enabled only the raw ```bcrypt``(``)``` function is usable.\n## Benchmarks\nSpeed depends on the cost used: the highest the slowest. Here are some benchmarks on a 2019 Macbook Pro to give you some ideas on the cost/speed ratio. Note that I don't go above 14 as it takes too long.\n```\n`test bench_cost_10   ... bench: 51,474,665 ns/iter (+/- 16,006,581)\ntest bench_cost_14   ... bench: 839,109,086 ns/iter (+/- 274,507,463)\ntest bench_cost_4    ... bench:   795,814 ns/iter (+/- 42,838)\ntest bench_cost_default ... bench: 195,344,338 ns/iter (+/- 8,329,675)\n`\n```\n\n## Acknowledgments\nThis [gist](https://gist.github.com/rgdmarshall/ae3dc072445ed88b357a) for the hash splitting and the null termination.\n## Recommendations\nWhile bcrypt works well as an algorithm, using something like [Argon2](https://en.wikipedia.org/wiki/Argon2) is recommended for new projects.\n## Changelog\n  * 0.17.0: update getrandom and remove ``js`` featuree\n  * 0.16.0: add ``non_truncating_`*``` functions\n  * 0.15.1: update base64 dependency\n  * 0.15.0: add an ``alloc`` feature that can be disabled.\n  * 0.14.0: use ``subtle`` crate for constant time comparison, update base64 and bump to 2021 edition\n  * 0.13.0: make zeroize dep opt-out and use fixed salt length\n  * 0.12.1: zero vec containing password in the hashing function before returning the hash\n  * 0.12.0: allow null bytes in password\n  * 0.11.0: update deps causing big bump in MSRV\n  * 0.10.1: fix panic with invalid hashes and allow ``2x``\n  * 0.10.0: update blowfish to 0.8 and minimum Rust version to 1.43.0.\n  * 0.9.0: update base64 to 0.13 and getrandom to 0.2\n  * 0.8.2: fix no-std build\n  * 0.8.0: constant time verification for hash, remove custom base64 code from repo and add ``std`` feature\n  * 0.7.0: add HashParts::from_str and remove Error::description impl, it's deprecated\n  * 0.6.3: add ``hash_with_salt`` function and make ```Version`::``format_for_version`` public\n  * 0.6.2: update base64 to 0.12\n  * 0.6.1: update base64 to 0.11\n  * 0.6.0: allow users to choose the bcrypt version and default to 2b instead of 2y\n  * 0.5.0: expose the inner ``bcrypt`` function + edition 2018\n  * 0.4.0: make DEFAULT_COST const instead of static\n  * 0.3.0: forbid NULL bytes in passwords & update dependencies\n  * 0.2.2: update rand\n  * 0.2.1: update rand\n  * 0.2.0: replace rust-crypto with blowfish, use some more modern Rust things like ```?``` and handle more errors\n  * 0.1.6: update rand and base64 deps\n  * 0.1.5: update lazy-static to 1.0\n  * 0.1.4: Replace rustc-serialize dependency with bcrypt\n  * 0.1.3: Fix panic when password > 72 chars\n  * 0.1.1: make BcryptResult, BcryptError public and update dependencies\n  * 0.1.0: initial release\n\n\n#### Dependencies\n~0.9\u20131.3MB  ~27K SLoC\n  * [base64](https://lib.rs/crates/base64 \"new\") 0.22\n  * [blowfish](https://lib.rs/crates/blowfish \"0.9\")[+bcrypt](https://lib.rs/crates/blowfish/features#feature-bcrypt)\n  * [std](https://lib.rs/crates/bcrypt/features#feature-std \"default feature\") [getrandom](https://lib.rs/crates/getrandom \"new\") 0.3\n  * [subtle](https://lib.rs/crates/subtle \"2.4.1\")\n  * [default](https://lib.rs/crates/bcrypt/features#feature-default \"default feature\") [zeroize](https://lib.rs/crates/zeroize \"1.5.4\")\n\n\n  * dev  [quickcheck](https://lib.rs/crates/quickcheck \"new\") 1.0\n\n\n#### [Other feature](https://lib.rs/crates/bcrypt/features)\n  * [alloc](https://lib.rs/crates/bcrypt/features#feature-alloc)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  33 unstable releases\u27e81\u27e9\n0.17.0 |  Jan 30, 2025   \n---|---  \n0.16.0 |  Nov 18, 2024   \n0.15.1 |  Mar 15, 2024   \n0.15.0 |  Jul 5, 2023   \n0.1.0 |  Dec 24, 2015   \n#**13** in Cryptography\u27e82\u27e9\nDownload history 60968/week @ 2025-03-07 57206/week @ 2025-03-14 53163/week @ 2025-03-21 52708/week @ 2025-03-28 58444/week @ 2025-04-04 60979/week @ 2025-04-11 82771/week @ 2025-04-18 68924/week @ 2025-04-25 53565/week @ 2025-05-02 49166/week @ 2025-05-09 55914/week @ 2025-05-16 42839/week @ 2025-05-23 44427/week @ 2025-05-30 50428/week @ 2025-06-06 63828/week @ 2025-06-13 59143/week @ 2025-06-20\n**224,817** downloads per month Used in **271** crates (139 directly)\u27e83\u27e9\n**MIT** license \n33KB  586 lines\n# bcrypt\n![Safety Dance\u27e84\u27e9](https://github.com/rust-secure-code/safety-dance/) ![Build Status\u27e85\u27e9](https://travis-ci.org/Keats/rust-bcrypt) ![Documentation\u27e86\u27e9](https://docs.rs/bcrypt)\n## Installation\nAdd the following to Cargo.toml:\n```\n`bcrypt = \"0.17\"\n`\n```\n\nThe minimum Rust version is 1.63.0.\n## Usage\nThe crate makes 3 things public: ``DEFAULT_COST``, ``hash``, ``verify``.\n```\n``extern` `crate` bcrypt`;`\n`use` `bcrypt`::````{``DEFAULT_COST``,` hash`,` verify```}```;`\n`let` hashed `=` `hash``(```\"`hunter2`\"```,` `DEFAULT_COST``)``?``;`\n`let` valid `=` `verify``(```\"`hunter2`\"```,` `&`hashed`)``?``;`\n`\n```\n\nThe cost needs to be an integer between 4 and 31 (see benchmarks to have an idea of the speed for each), the ``DEFAULT_COST`` is 12.\n## Error on truncation\nMost if not all bcrypt implementation truncates the password after 72 bytes. In specific use cases this can break 2nd pre-image resistance. One can enforce the 72-bytes limit on input by using ``non_truncating_hash``, ``non_truncating_hash_with_result``, ``non_truncating_hash_with_salt``, and ``non_truncating_verify``. The ``non_truncating_`*``` functions behave identically to their truncating counterparts unless the input is longer than 72 bytes, in which case they will return ```BcryptError`::``Truncation``.\nIf you are generating hashes from other libraries/languages, do not use the ``non_truncating_verify`` function.\n## ``no_std``\n``bcrypt`` crate supports ``no_std`` platforms. When ``alloc`` feature is enabled, all crate functionality is available. When ``alloc`` is not enabled only the raw ```bcrypt``(``)``` function is usable.\n## Benchmarks\nSpeed depends on the cost used: the highest the slowest. Here are some benchmarks on a 2019 Macbook Pro to give you some ideas on the cost/speed ratio. Note that I don't go above 14 as it takes too long.\n```\n`test bench_cost_10   ... bench: 51,474,665 ns/iter (+/- 16,006,581)\ntest bench_cost_14   ... bench: 839,109,086 ns/iter (+/- 274,507,463)\ntest bench_cost_4    ... bench:   795,814 ns/iter (+/- 42,838)\ntest bench_cost_default ... bench: 195,344,338 ns/iter (+/- 8,329,675)\n`\n```\n\n## Acknowledgments\nThis gist\u27e87\u27e9 for the hash splitting and the null termination.\n## Recommendations\nWhile bcrypt works well as an algorithm, using something like Argon2\u27e88\u27e9 is recommended for new projects.\n## Changelog\n  * 0.17.0: update getrandom and remove ``js`` featuree\n  * 0.16.0: add ``non_truncating_`*``` functions\n  * 0.15.1: update base64 dependency\n  * 0.15.0: add an ``alloc`` feature that can be disabled.\n  * 0.14.0: use ``subtle`` crate for constant time comparison, update base64 and bump to 2021 edition\n  * 0.13.0: make zeroize dep opt-out and use fixed salt length\n  * 0.12.1: zero vec containing password in the hashing function before returning the hash\n  * 0.12.0: allow null bytes in password\n  * 0.11.0: update deps causing big bump in MSRV\n  * 0.10.1: fix panic with invalid hashes and allow ``2x``\n  * 0.10.0: update blowfish to 0.8 and minimum Rust version to 1.43.0.\n  * 0.9.0: update base64 to 0.13 and getrandom to 0.2\n  * 0.8.2: fix no-std build\n  * 0.8.0: constant time verification for hash, remove custom base64 code from repo and add ``std`` feature\n  * 0.7.0: add HashParts::from_str and remove Error::description impl, it's deprecated\n  * 0.6.3: add ``hash_with_salt`` function and make ```Version`::``format_for_version`` public\n  * 0.6.2: update base64 to 0.12\n  * 0.6.1: update base64 to 0.11\n  * 0.6.0: allow users to choose the bcrypt version and default to 2b instead of 2y\n  * 0.5.0: expose the inner ``bcrypt`` function + edition 2018\n  * 0.4.0: make DEFAULT_COST const instead of static\n  * 0.3.0: forbid NULL bytes in passwords & update dependencies\n  * 0.2.2: update rand\n  * 0.2.1: update rand\n  * 0.2.0: replace rust-crypto with blowfish, use some more modern Rust things like ```?``` and handle more errors\n  * 0.1.6: update rand and base64 deps\n  * 0.1.5: update lazy-static to 1.0\n  * 0.1.4: Replace rustc-serialize dependency with bcrypt\n  * 0.1.3: Fix panic when password > 72 chars\n  * 0.1.1: make BcryptResult, BcryptError public and update dependencies\n  * 0.1.0: initial release\n\n\n#### Dependencies\n~0.9\u20131.3MB  ~27K SLoC\n  * base64\u27e89\u27e9 0.22\n  * blowfish\u27e810\u27e9+bcrypt\u27e811\u27e9\n  * std\u27e812\u27e9 getrandom\u27e813\u27e9 0.3\n  * subtle\u27e814\u27e9\n  * default\u27e815\u27e9 zeroize\u27e816\u27e9\n\n\n  * dev  quickcheck\u27e817\u27e9 1.0\n\n\n#### Other feature\u27e818\u27e9\n  * alloc\u27e819\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/bcrypt/versions: 33 unstable releases\n\u27e82\u27e9 https://lib.rs/cryptography: Algorithms intended for securing data. - Cryptography\n\u27e83\u27e9 https://lib.rs/crates/bcrypt/rev: **271** crates (139 directly)\n\u27e84\u27e9 https://img.shields.io/badge/unsafe-forbidden-success.svg: ![Safety Dance\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://travis-ci.org/Keats/rust-bcrypt.svg: ![Build Status\n\u27e86\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/bcrypt/badge.svg: ![Documentation\n\u27e87\u27e9 https://gist.github.com/rgdmarshall/ae3dc072445ed88b357a: gist\n\u27e88\u27e9 https://en.wikipedia.org/wiki/Argon2: Argon2\n\u27e89\u27e9 https://lib.rs/crates/base64: new - base64\n\u27e810\u27e9 https://lib.rs/crates/blowfish: 0.9 - blowfish\n\u27e811\u27e9 https://lib.rs/crates/blowfish/features#feature-bcrypt: +bcrypt\n\u27e812\u27e9 https://lib.rs/crates/bcrypt/features#feature-std: default feature - std\n\u27e813\u27e9 https://lib.rs/crates/getrandom: new - getrandom\n\u27e814\u27e9 https://lib.rs/crates/subtle: 2.4.1 - subtle\n\u27e815\u27e9 https://lib.rs/crates/bcrypt/features#feature-default: default feature - default\n\u27e816\u27e9 https://lib.rs/crates/zeroize: 1.5.4 - zeroize\n\u27e817\u27e9 https://lib.rs/crates/quickcheck: new - quickcheck\n\u27e818\u27e9 https://lib.rs/crates/bcrypt/features: Other feature\n\u27e819\u27e9 https://lib.rs/crates/bcrypt/features#feature-alloc: alloc\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 6064,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118269.2626558"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libsubtle-6a8dd217adcca8a8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libzeroize-9775fe5b08a4aab7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-78fc9cd4a3c1b103\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-78fc9cd4a3c1b103\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "version_check",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-ddab7bef78fa2bc5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbase64-27a5ce1ec30f0140.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\build\\main.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libgetrandom-32bb9edd92be0d6c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-2aff0e15c6771793\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "relaxed_coherence"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-2379b21334ff8e3d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libtypenum-3a52b75683a35e9c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "generic_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libgeneric_array-bdbdc4fa57285d44.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcrypto_common-390c8d2464f6b7dd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inout",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libinout-1a6fd018d4fcec79.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cipher",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcipher-d45e1c80ddec9413.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#blowfish@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blowfish-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "blowfish",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blowfish-0.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bcrypt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libblowfish-7f2a17efc9a52f7f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "getrandom",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbcrypt-a2e123c7f12d3198.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "version_check",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\version_check-0.9.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libversion_check-8a7cb6ed787a6dad.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-main",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\build\\main.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build-script-main.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-1ede41c9f5fe6591\\build_script_main.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-8e5b32e26f9f36b6\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-78fc9cd4a3c1b103\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-78fc9cd4a3c1b103\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcfg_if-f755e379589b9030.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbyteorder-0ff5a2bbb0a25f50.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "subtle",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\subtle-2.6.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libsubtle-6a8dd217adcca8a8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbase64-27a5ce1ec30f0140.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zeroize",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zeroize-1.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libzeroize-9775fe5b08a4aab7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\typenum-2aff0e15c6771793\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "relaxed_coherence"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\generic-array-2379b21334ff8e3d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\build\\getrandom-ddab7bef78fa2bc5\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "typenum",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\typenum-1.17.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libtypenum-3a52b75683a35e9c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "generic_array",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\generic-array-0.14.7\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "more_lengths"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libgeneric_array-bdbdc4fa57285d44.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "inout",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\inout-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libinout-1a6fd018d4fcec79.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crypto_common",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crypto-common-0.1.6\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcrypto_common-390c8d2464f6b7dd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "getrandom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\getrandom-0.3.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libgetrandom-32bb9edd92be0d6c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cipher",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cipher-0.4.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libcipher-d45e1c80ddec9413.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#blowfish@0.9.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blowfish-0.9.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "blowfish",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\blowfish-0.9.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bcrypt"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libblowfish-7f2a17efc9a52f7f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:56:41\n   |\n56 |             BcryptError::Io(ref err) => write!(f, \"IO error: {}\", err),\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n56 -             BcryptError::Io(ref err) => write!(f, \"IO error: {}\", err),\n56 +             BcryptError::Io(ref err) => write!(f, \"IO error: {err}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1697,
                        "byte_start": 1697,
                        "column_end": 63,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 56,
                        "line_start": 56,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 63,
                            "text": "            BcryptError::Io(ref err) => write!(f, \"IO error: {}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1704,
                        "byte_start": 1699,
                        "column_end": 70,
                        "column_start": 65,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 56,
                        "line_start": 56,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 65,
                            "text": "            BcryptError::Io(ref err) => write!(f, \"IO error: {}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1705,
                    "byte_start": 1675,
                    "column_end": 71,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 56,
                    "line_start": 56,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 41,
                        "text": "            BcryptError::Io(ref err) => write!(f, \"IO error: {}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:58:51\n   |\n58 |             BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {}\", cost),\n   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n58 -             BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {}\", cost),\n58 +             BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {cost}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1843,
                        "byte_start": 1843,
                        "column_end": 77,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "cost",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 77,
                            "text": "            BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {}\", cost),"
                          }
                        ]
                      },
                      {
                        "byte_end": 1851,
                        "byte_start": 1845,
                        "column_end": 85,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 79,
                            "text": "            BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {}\", cost),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 1852,
                    "byte_start": 1817,
                    "column_end": 86,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 51,
                        "text": "            BcryptError::InvalidCost(ref cost) => write!(f, \"Invalid Cost: {}\", cost),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:67:55\n   |\n67 |             BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {}\", prefix),\n   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n67 -             BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {}\", prefix),\n67 +             BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {prefix}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2240,
                        "byte_start": 2240,
                        "column_end": 83,
                        "column_start": 83,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "prefix",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 83,
                            "highlight_start": 83,
                            "text": "            BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {}\", prefix),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2250,
                        "byte_start": 2242,
                        "column_end": 93,
                        "column_start": 85,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 67,
                        "line_start": 67,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 93,
                            "highlight_start": 85,
                            "text": "            BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {}\", prefix),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2251,
                    "byte_start": 2212,
                    "column_end": 94,
                    "column_start": 55,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 67,
                    "line_start": 67,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 94,
                        "highlight_start": 55,
                        "text": "            BcryptError::InvalidPrefix(ref prefix) => write!(f, \"Invalid Prefix: {}\", prefix),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:69:51\n   |\n69 |             BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {}\", hash),\n   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n69 -             BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {}\", hash),\n69 +             BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {hash}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2389,
                        "byte_start": 2389,
                        "column_end": 77,
                        "column_start": 77,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "hash",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 77,
                            "text": "            BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {}\", hash),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2397,
                        "byte_start": 2391,
                        "column_end": 85,
                        "column_start": 79,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 79,
                            "text": "            BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {}\", hash),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2398,
                    "byte_start": 2363,
                    "column_end": 86,
                    "column_start": 51,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 51,
                        "text": "            BcryptError::InvalidHash(ref hash) => write!(f, \"Invalid hash: {}\", hash),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:70:52\n   |\n70 |             BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {}\", err),\n   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n70 -             BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {}\", err),\n70 +             BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {err}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2477,
                        "byte_start": 2477,
                        "column_end": 78,
                        "column_start": 78,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 78,
                            "text": "            BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2484,
                        "byte_start": 2479,
                        "column_end": 85,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 85,
                            "highlight_start": 80,
                            "text": "            BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2485,
                    "byte_start": 2451,
                    "column_end": 86,
                    "column_start": 52,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 70,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 86,
                        "highlight_start": 52,
                        "text": "            BcryptError::InvalidBase64(ref err) => write!(f, \"Base64 error: {}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:72:17\n   |\n72 |                 write!(f, \"Invalid salt len: expected 16, received {}\", len)\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n72 -                 write!(f, \"Invalid salt len: expected 16, received {}\", len)\n72 +                 write!(f, \"Invalid salt len: expected 16, received {len}\")\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2605,
                        "byte_start": 2605,
                        "column_end": 69,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "len",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 69,
                            "highlight_start": 69,
                            "text": "                write!(f, \"Invalid salt len: expected 16, received {}\", len)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2612,
                        "byte_start": 2607,
                        "column_end": 76,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 72,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 76,
                            "highlight_start": 71,
                            "text": "                write!(f, \"Invalid salt len: expected 16, received {}\", len)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2613,
                    "byte_start": 2553,
                    "column_end": 77,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 17,
                        "text": "                write!(f, \"Invalid salt len: expected 16, received {}\", len)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\errors.rs:75:43\n   |\n75 |             BcryptError::Rand(ref err) => write!(f, \"Rand error: {}\", err),\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n75 -             BcryptError::Rand(ref err) => write!(f, \"Rand error: {}\", err),\n75 +             BcryptError::Rand(ref err) => write!(f, \"Rand error: {err}\"),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2754,
                        "byte_start": 2754,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 75,
                        "line_start": 75,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "            BcryptError::Rand(ref err) => write!(f, \"Rand error: {}\", err),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2761,
                        "byte_start": 2756,
                        "column_end": 74,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\errors.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 75,
                        "line_start": 75,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 74,
                            "highlight_start": 69,
                            "text": "            BcryptError::Rand(ref err) => write!(f, \"Rand error: {}\", err),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2762,
                    "byte_start": 2730,
                    "column_end": 75,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\errors.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 75,
                    "line_start": 75,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 75,
                        "highlight_start": 43,
                        "text": "            BcryptError::Rand(ref err) => write!(f, \"Rand error: {}\", err),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: direct implementation of `ToString`\n  --> src\\lib.rs:87:1\n   |\n87 | / impl ToString for HashParts {\n88 | |     fn to_string(&self) -> String {\n89 | |         self.format_for_version(Version::TwoY)\n90 | |     }\n91 | | }\n   | |_^\n   |\n   = help: prefer implementing `Display` instead\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_trait_impl\n   = note: `#[warn(clippy::to_string_trait_impl)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "prefer implementing `Display` instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#to_string_trait_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::to_string_trait_impl)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::to_string_trait_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "direct implementation of `ToString`",
                "spans": [
                  {
                    "byte_end": 2333,
                    "byte_start": 2213,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 91,
                    "line_start": 87,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "impl ToString for HashParts {"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "    fn to_string(&self) -> String {"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "        self.format_for_version(Version::TwoY)"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\lib.rs:101:9\n    |\n101 |         write!(f, \"{}\", str)\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n101 -         write!(f, \"{}\", str)\n101 +         write!(f, \"{str}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2628,
                        "byte_start": 2628,
                        "column_end": 21,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 101,
                        "line_start": 101,
                        "suggested_replacement": "str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 21,
                            "text": "        write!(f, \"{}\", str)"
                          }
                        ]
                      },
                      {
                        "byte_end": 2635,
                        "byte_start": 2630,
                        "column_end": 28,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 101,
                        "line_start": 101,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 23,
                            "text": "        write!(f, \"{}\", str)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2636,
                    "byte_start": 2616,
                    "column_end": 29,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 101,
                    "line_start": 101,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 9,
                        "text": "        write!(f, \"{}\", str)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpaijbwnya/bcrypt-0.17.0#bcrypt@0.17.0",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bcrypt",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "getrandom",
                "std",
                "zeroize"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpaijbwnya\\bcrypt-0.17.0\\target\\debug\\deps\\libbcrypt-1697f8a3697a9257.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 32
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "bcrypt",
          "version": "0.17.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\n[Settings](https://docs.rs/bcrypt/latest/settings.html)\n[Help](https://docs.rs/bcrypt/latest/help.html)\nSummary[Source](https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571)\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#structs)\n\n[HashParts](https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html \"struct bcrypt::HashParts\")\n    A bcrypt hash result before concatenating\n## Enums[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#enums)\n\n[BcryptError](https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html \"enum bcrypt::BcryptError\")\n    All the errors we can encounter while hashing/verifying passwords\n\n[Version](https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html \"enum bcrypt::Version\")\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#constants)\n\n[BASE_64](https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html \"constant bcrypt::BASE_64\")\n\n\n[DEFAULT_COST](https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html \"constant bcrypt::DEFAULT_COST\")\n\n## Functions[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#functions)\n\n[bcrypt](https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html \"fn bcrypt::bcrypt\")\n\n\n[hash](https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html \"fn bcrypt::hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\n[hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html \"fn bcrypt::hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\n[hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html \"fn bcrypt::hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\n[non_truncating_hash](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html \"fn bcrypt::non_truncating_hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html \"fn bcrypt::non_truncating_hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html \"fn bcrypt::non_truncating_hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_verify](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html \"fn bcrypt::non_truncating_verify\")\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\n[verify](https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html \"fn bcrypt::verify\")\n    Verify that a password is equivalent to the hash provided\n## Type Aliases[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#types)\n\n[BcryptResult](https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html \"type bcrypt::BcryptResult\")\n    Library generic result type.\n",
            "markdown_with_citations": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs\u00a7\u27e84\u27e9\n\nHashParts\u27e85\u27e9\n    A bcrypt hash result before concatenating\n## Enums\u00a7\u27e86\u27e9\n\nBcryptError\u27e87\u27e9\n    All the errors we can encounter while hashing/verifying passwords\n\nVersion\u27e88\u27e9\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants\u00a7\u27e89\u27e9\n\nBASE_64\u27e810\u27e9\n\n\nDEFAULT_COST\u27e811\u27e9\n\n## Functions\u00a7\u27e812\u27e9\n\nbcrypt\u27e813\u27e9\n\n\nhash\u27e814\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\nhash_with_result\u27e815\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\nhash_with_salt\u27e816\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\nnon_truncating_hash\u27e817\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_result\u27e818\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_salt\u27e819\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_verify\u27e820\u27e9\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\nverify\u27e821\u27e9\n    Verify that a password is equivalent to the hash provided\n## Type Aliases\u00a7\u27e822\u27e9\n\nBcryptResult\u27e823\u27e9\n    Library generic result type.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/bcrypt/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/bcrypt/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571: Source\n\u27e84\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#structs: \u00a7\n\u27e85\u27e9 https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html: struct bcrypt::HashParts - HashParts\n\u27e86\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#enums: \u00a7\n\u27e87\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html: enum bcrypt::BcryptError - BcryptError\n\u27e88\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html: enum bcrypt::Version - Version\n\u27e89\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#constants: \u00a7\n\u27e810\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html: constant bcrypt::BASE_64 - BASE_64\n\u27e811\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html: constant bcrypt::DEFAULT_COST - DEFAULT_COST\n\u27e812\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#functions: \u00a7\n\u27e813\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html: fn bcrypt::bcrypt - bcrypt\n\u27e814\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html: fn bcrypt::hash - hash\n\u27e815\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html: fn bcrypt::hash_with_result - hash_with_result\n\u27e816\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html: fn bcrypt::hash_with_salt - hash_with_salt\n\u27e817\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html: fn bcrypt::non_truncating_hash - non_truncating_hash\n\u27e818\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html: fn bcrypt::non_truncating_hash_with_result - non_truncating_hash_with_result\n\u27e819\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html: fn bcrypt::non_truncating_hash_with_salt - non_truncating_hash_with_salt\n\u27e820\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html: fn bcrypt::non_truncating_verify - non_truncating_verify\n\u27e821\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html: fn bcrypt::verify - verify\n\u27e822\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#types: \u00a7\n\u27e823\u27e9 https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html: type bcrypt::BcryptResult - BcryptResult\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "bcrypt",
          "version": "0.17.0",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\n[Settings](https://docs.rs/bcrypt/latest/settings.html)\n[Help](https://docs.rs/bcrypt/latest/help.html)\nSummary[Source](https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571)\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#structs)\n\n[HashParts](https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html \"struct bcrypt::HashParts\")\n    A bcrypt hash result before concatenating\n## Enums[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#enums)\n\n[BcryptError](https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html \"enum bcrypt::BcryptError\")\n    All the errors we can encounter while hashing/verifying passwords\n\n[Version](https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html \"enum bcrypt::Version\")\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#constants)\n\n[BASE_64](https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html \"constant bcrypt::BASE_64\")\n\n\n[DEFAULT_COST](https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html \"constant bcrypt::DEFAULT_COST\")\n\n## Functions[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#functions)\n\n[bcrypt](https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html \"fn bcrypt::bcrypt\")\n\n\n[hash](https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html \"fn bcrypt::hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\n[hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html \"fn bcrypt::hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\n[hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html \"fn bcrypt::hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\n[non_truncating_hash](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html \"fn bcrypt::non_truncating_hash\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_result](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html \"fn bcrypt::non_truncating_hash_with_result\")\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_hash_with_salt](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html \"fn bcrypt::non_truncating_hash_with_salt\")\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\n[non_truncating_verify](https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html \"fn bcrypt::non_truncating_verify\")\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\n[verify](https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html \"fn bcrypt::verify\")\n    Verify that a password is equivalent to the hash provided\n## Type Aliases[\u00a7](https://docs.rs/bcrypt/latest/bcrypt/#types)\n\n[BcryptResult](https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html \"type bcrypt::BcryptResult\")\n    Library generic result type.\n",
            "markdown_with_citations": "[](https://docs.rs/bcrypt/latest/bcrypt/all.html \"show sidebar\")\n# Crate bcryptCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nEasily hash and verify passwords using bcrypt\n## Structs\u00a7\u27e84\u27e9\n\nHashParts\u27e85\u27e9\n    A bcrypt hash result before concatenating\n## Enums\u00a7\u27e86\u27e9\n\nBcryptError\u27e87\u27e9\n    All the errors we can encounter while hashing/verifying passwords\n\nVersion\u27e88\u27e9\n    BCrypt hash version https://en.wikipedia.org/wiki/Bcrypt#Versioning_history\n## Constants\u00a7\u27e89\u27e9\n\nBASE_64\u27e810\u27e9\n\n\nDEFAULT_COST\u27e811\u27e9\n\n## Functions\u00a7\u27e812\u27e9\n\nbcrypt\u27e813\u27e9\n\n\nhash\u27e814\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness\n\nhash_with_result\u27e815\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions.\n\nhash_with_salt\u27e816\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions.\n\nnon_truncating_hash\u27e817\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_result\u27e818\u27e9\n    Generates a password hash using the cost given. The salt is generated randomly using the OS randomness. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_hash_with_salt\u27e819\u27e9\n    Generates a password given a hash and a cost. The function returns a result structure and allows to format the hash in different versions. Will return BcryptError::Truncation if password is longer than 72 bytes\n\nnon_truncating_verify\u27e820\u27e9\n    Verify that a password is equivalent to the hash provided. Only use this if you are only using `non_truncating_hash` to generate the hash. It will return an error for inputs that will work if generated from other sources.\n\nverify\u27e821\u27e9\n    Verify that a password is equivalent to the hash provided\n## Type Aliases\u00a7\u27e822\u27e9\n\nBcryptResult\u27e823\u27e9\n    Library generic result type.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/bcrypt/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/bcrypt/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/bcrypt/latest/src/bcrypt/lib.rs.html#1-571: Source\n\u27e84\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#structs: \u00a7\n\u27e85\u27e9 https://docs.rs/bcrypt/latest/bcrypt/struct.HashParts.html: struct bcrypt::HashParts - HashParts\n\u27e86\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#enums: \u00a7\n\u27e87\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.BcryptError.html: enum bcrypt::BcryptError - BcryptError\n\u27e88\u27e9 https://docs.rs/bcrypt/latest/bcrypt/enum.Version.html: enum bcrypt::Version - Version\n\u27e89\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#constants: \u00a7\n\u27e810\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.BASE_64.html: constant bcrypt::BASE_64 - BASE_64\n\u27e811\u27e9 https://docs.rs/bcrypt/latest/bcrypt/constant.DEFAULT_COST.html: constant bcrypt::DEFAULT_COST - DEFAULT_COST\n\u27e812\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#functions: \u00a7\n\u27e813\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.bcrypt.html: fn bcrypt::bcrypt - bcrypt\n\u27e814\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash.html: fn bcrypt::hash - hash\n\u27e815\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_result.html: fn bcrypt::hash_with_result - hash_with_result\n\u27e816\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.hash_with_salt.html: fn bcrypt::hash_with_salt - hash_with_salt\n\u27e817\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash.html: fn bcrypt::non_truncating_hash - non_truncating_hash\n\u27e818\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_result.html: fn bcrypt::non_truncating_hash_with_result - non_truncating_hash_with_result\n\u27e819\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_hash_with_salt.html: fn bcrypt::non_truncating_hash_with_salt - non_truncating_hash_with_salt\n\u27e820\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.non_truncating_verify.html: fn bcrypt::non_truncating_verify - non_truncating_verify\n\u27e821\u27e9 https://docs.rs/bcrypt/latest/bcrypt/fn.verify.html: fn bcrypt::verify - verify\n\u27e822\u27e9 https://docs.rs/bcrypt/latest/bcrypt/#types: \u00a7\n\u27e823\u27e9 https://docs.rs/bcrypt/latest/bcrypt/type.BcryptResult.html: type bcrypt::BcryptResult - BcryptResult\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `bcrypt` crate provides functionality for securely hashing and verifying passwords using the bcrypt algorithm. It supports customizable hashing costs, random salt generation, and handling different bcrypt hash versions. Additionally, it includes non-truncating hash functions to prevent issues with passwords longer than 72 bytes, error handling via `BcryptError`, and utilities for verifying hashed passwords.",
          "feature_summary": null,
          "use_case": "Cryptography",
          "score": 6.0,
          "factual_counterfactual": "### Pair 1: Hashing and Verification  \n\u2705 Factual: The `bcrypt` crate provides a `hash` function that generates a password hash using a randomly generated salt and a configurable computational cost.  \n\u274c Counterfactual: The `bcrypt` crate requires developers to manually provide a salt when using the `hash` function, as it does not generate one automatically.  \n\n---\n\n### Pair 2: Password Length Limitation  \n\u2705 Factual: The `non_truncating_hash` function in the `bcrypt` crate will return a `BcryptError::Truncation` error if the password exceeds 72 bytes.  \n\u274c Counterfactual: The `non_truncating_hash` function in the `bcrypt` crate can handle passwords of unlimited length without any truncation or error.  \n\n---\n\n### Pair 3: Verification Functions  \n\u2705 Factual: The `verify` function in the `bcrypt` crate is designed to check if a given password matches a previously generated hash, ensuring secure password validation.  \n\u274c Counterfactual: The `verify` function in the `bcrypt` crate can only validate hashes generated by the `non_truncating_hash` function and does not work with hashes generated by the standard `hash` function.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-d8123d5b-51c96135-1751264478",
      "timestamp": "2025-06-30T06:21:18.146329+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]