[
  {
    "execution_id": "exec-bc0a6c32-351d38fe-1751258298",
    "timestamp": "2025-06-30T04:38:18.912996+00:00",
    "sacred_chain": {
      "input_data": "wiremock",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'wiremock' -> 'wiremock'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "wiremock",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/wiremock",
            "title": "wiremock v0.6.4",
            "content": {
              "raw_markdown": "#  wiremock v0.6.4\nHTTP mocking to test Rust applications. \n  * [ #black-box ](https://crates.io/keywords/black-box)\n  * [ #http ](https://crates.io/keywords/http)\n  * [ #mock ](https://crates.io/keywords/mock)\n  * [ #mocking ](https://crates.io/keywords/mocking)\n  * [ #test ](https://crates.io/keywords/test)\n\n\n  * [ Readme ](https://crates.io/crates/wiremock)\n  * [ 52 Versions ](https://crates.io/crates/wiremock/versions)\n  * [ Dependencies ](https://crates.io/crates/wiremock/dependencies)\n  * [ Dependents ](https://crates.io/crates/wiremock/reverse_dependencies)\n\n\n## Metadata\n11 days ago \n2018 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n57.6 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add wiremock\nOr add the following line to your Cargo.toml:\nwiremock = \"0.6.4\"\n## Documentation\n[ docs.rs/wiremock ](https://docs.rs/wiremock/)\n## Repository\n[ github.com/LukeMathWalker/wiremock-rs ](https://github.com/LukeMathWalker/wiremock-rs)\n## Owners\n## Categories\n  * [Asynchronous](https://crates.io/categories/asynchronous)\n  * [Development tools](https://crates.io/categories/development-tools)\n\n\n[ Report crate ](https://crates.io/support?crate=wiremock&inquire=crate-violation)\n### Stats Overview\n22,463,167 Downloads all time\n52 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  wiremock v0.6.4\nHTTP mocking to test Rust applications. \n  *  #black-box \u27e81\u27e9\n  *  #http \u27e82\u27e9\n  *  #mock \u27e83\u27e9\n  *  #mocking \u27e84\u27e9\n  *  #test \u27e85\u27e9\n\n\n  *  Readme \u27e86\u27e9\n  *  52 Versions \u27e87\u27e9\n  *  Dependencies \u27e88\u27e9\n  *  Dependents \u27e89\u27e9\n\n\n## Metadata\n11 days ago \n2018 edition \n MIT \u27e810\u27e9 OR  Apache-2.0 \u27e811\u27e9\n57.6 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add wiremock\nOr add the following line to your Cargo.toml:\nwiremock = \"0.6.4\"\n## Documentation\n docs.rs/wiremock \u27e812\u27e9\n## Repository\n github.com/LukeMathWalker/wiremock-rs \u27e813\u27e9\n## Owners\n## Categories\n  * Asynchronous\u27e814\u27e9\n  * Development tools\u27e815\u27e9\n\n\n Report crate \u27e816\u27e9\n### Stats Overview\n22,463,167 Downloads all time\n52 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/keywords/black-box:  #black-box \n\u27e82\u27e9 https://crates.io/keywords/http:  #http \n\u27e83\u27e9 https://crates.io/keywords/mock:  #mock \n\u27e84\u27e9 https://crates.io/keywords/mocking:  #mocking \n\u27e85\u27e9 https://crates.io/keywords/test:  #test \n\u27e86\u27e9 https://crates.io/crates/wiremock:  Readme \n\u27e87\u27e9 https://crates.io/crates/wiremock/versions:  52 Versions \n\u27e88\u27e9 https://crates.io/crates/wiremock/dependencies:  Dependencies \n\u27e89\u27e9 https://crates.io/crates/wiremock/reverse_dependencies:  Dependents \n\u27e810\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e811\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e812\u27e9 https://docs.rs/wiremock/:  docs.rs/wiremock \n\u27e813\u27e9 https://github.com/LukeMathWalker/wiremock-rs:  github.com/LukeMathWalker/wiremock-rs \n\u27e814\u27e9 https://crates.io/categories/asynchronous: Asynchronous\n\u27e815\u27e9 https://crates.io/categories/development-tools: Development tools\n\u27e816\u27e9 https://crates.io/support?crate=wiremock&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 1470,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112088.115773"
          },
          "docs_rs": {
            "url": "https://docs.rs/wiremock",
            "title": "Crate wiremockCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\n[Settings](https://docs.rs/wiremock/latest/settings.html)\n[Help](https://docs.rs/wiremock/latest/help.html)\nSummary[Source](https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164)\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#how-to-install)How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using [`cargo-edit`](https://github.com/killercup/cargo-edit), run\n```\ncargo add wiremock --dev\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#getting-started)Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#matchers)Matchers\n`wiremock` provides a set of matching strategies out of the box - check the [`matchers`](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\") module for a complete list.\nYou can define your own matchers using the [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\") trait, as well as using `Fn` closures. Check [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#spying)Spying\n`wiremock` empowers you to set expectations on the number of invocations to your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s - check the [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\") method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#responses)Responses\n`wiremock` lets you specify pre-determined responses using [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\") and [`respond_with`](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with \"method wiremock::MockBuilder::respond_with\").\nYou also given the option to have [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s that return different responses based on the matched [`Request`](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\") using the [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\") trait. Check [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#test-isolation)Test isolation\nEach instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") is fully isolated: [`start`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start \"associated function wiremock::MockServer::start\") takes care of finding a random port available on your local machine which is assigned to the new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\nTo ensure full isolation and no cross-test interference, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s shouldn\u2019t be shared between tests. Instead, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s should be created in the test where they are used.\nWhen a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility)Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both [`async_std`](https://docs.rs/async-std/) and [`tokio`](https://docs.rs/tokio/) as futures runtimes. If you encounter any compatibility bug, please open an issue on our [GitHub repository](https://github.com/LukeMathWalker/wiremock-rs).\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#efficiency)Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#prior-art)Prior art\n[`mockito`](https://docs.rs/mockito/) and [`httpmock`](https://docs.rs/httpmock/) provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#future-evolution)Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#related-projects)Related projects\n  * [`stubr`](https://github.com/beltram/stubr) for mounting [`Wiremock`](http://wiremock.org/) json stubs in a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Also works as a cli.\n\n\n## Modules[\u00a7](https://docs.rs/wiremock/latest/wiremock/#modules)\n\n[http](https://docs.rs/wiremock/latest/wiremock/http/index.html \"mod wiremock::http\")\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\n[matchers](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\")\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs[\u00a7](https://docs.rs/wiremock/latest/wiremock/#structs)\n\n[Mock](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")\n    Given a set of matchers, a `Mock` instructs an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") to return a pre-determined response if the matching conditions are satisfied.\n\n[MockBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html \"struct wiremock::MockBuilder\")\n    A fluent builder to construct a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") instance given matchers and a [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\").\n\n[MockGuard](https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html \"struct wiremock::MockGuard\")\n    You get a `MockGuard` when registering a **scoped** [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") using [`MockServer::register_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped \"method wiremock::MockServer::register_as_scoped\") or [`Mock::mount_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped \"method wiremock::Mock::mount_as_scoped\").\n\n[MockServer](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")\n    An HTTP web-server running in the background to behave as one of your dependencies using [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s for testing purposes.\n\n[MockServerBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html \"struct wiremock::MockServerBuilder\")\n    A builder providing a fluent API to assemble a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") step-by-step. Use [`MockServer::builder`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder \"associated function wiremock::MockServer::builder\") to get started.\n\n[Request](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\")\n    An incoming request to an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\n\n[ResponseTemplate](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\")\n    The blueprint for the response returned by a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") matches on an incoming request.\n\n[Times](https://docs.rs/wiremock/latest/wiremock/struct.Times.html \"struct wiremock::Times\")\n    Specify how many times we expect a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") to match via [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\"). It is used to set expectations on the usage of a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") in a test case.\n## Traits[\u00a7](https://docs.rs/wiremock/latest/wiremock/#traits)\n\n[Match](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\n    Anything that implements `Match` can be used to constrain when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n\n[Respond](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\n    Anything that implements `Respond` can be used to reply to an incoming request when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n## Type Aliases[\u00a7](https://docs.rs/wiremock/latest/wiremock/#types)\n\n[ErrorResponse](https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html \"type wiremock::ErrorResponse\")\n\n",
              "markdown_with_citations": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### \u00a7\u27e84\u27e9How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using `cargo-edit`\u27e85\u27e9, run\n```\ncargo add wiremock --dev\n```\n\n### \u00a7\u27e86\u27e9Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### \u00a7\u27e87\u27e9Matchers\n`wiremock` provides a set of matching strategies out of the box - check the `matchers`\u27e88\u27e9 module for a complete list.\nYou can define your own matchers using the `Match`\u27e89\u27e9 trait, as well as using `Fn` closures. Check `Match`\u27e89\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e810\u27e9Spying\n`wiremock` empowers you to set expectations on the number of invocations to your `Mock`\u27e811\u27e9s - check the `expect`\u27e812\u27e9 method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each `MockServer`\u27e813\u27e9 instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your `Mock`\u27e811\u27e9s.\n### \u00a7\u27e814\u27e9Responses\n`wiremock` lets you specify pre-determined responses using `ResponseTemplate`\u27e815\u27e9 and `respond_with`\u27e816\u27e9.\nYou also given the option to have `Mock`\u27e811\u27e9s that return different responses based on the matched `Request`\u27e817\u27e9 using the `Respond`\u27e818\u27e9 trait. Check `Respond`\u27e818\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e819\u27e9Test isolation\nEach instance of `MockServer`\u27e813\u27e9 is fully isolated: `start`\u27e820\u27e9 takes care of finding a random port available on your local machine which is assigned to the new `MockServer`\u27e813\u27e9.\nTo ensure full isolation and no cross-test interference, `MockServer`\u27e813\u27e9s shouldn\u2019t be shared between tests. Instead, `MockServer`\u27e813\u27e9s should be created in the test where they are used.\nWhen a `MockServer`\u27e813\u27e9 instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### \u00a7\u27e821\u27e9Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both `async_std`\u27e822\u27e9 and `tokio`\u27e823\u27e9 as futures runtimes. If you encounter any compatibility bug, please open an issue on our GitHub repository\u27e824\u27e9.\n### \u00a7\u27e825\u27e9Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new `MockServer`\u27e813\u27e9. Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### \u00a7\u27e826\u27e9Prior art\n`mockito`\u27e827\u27e9 and `httpmock`\u27e828\u27e9 provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### \u00a7\u27e829\u27e9Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### \u00a7\u27e830\u27e9Related projects\n  * `stubr`\u27e831\u27e9 for mounting `Wiremock`\u27e832\u27e9 json stubs in a `MockServer`\u27e813\u27e9. Also works as a cli.\n\n\n## Modules\u00a7\u27e833\u27e9\n\nhttp\u27e834\u27e9\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\nmatchers\u27e88\u27e9\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs\u00a7\u27e835\u27e9\n\nMock\u27e811\u27e9\n    Given a set of matchers, a `Mock` instructs an instance of `MockServer`\u27e813\u27e9 to return a pre-determined response if the matching conditions are satisfied.\n\nMockBuilder\u27e836\u27e9\n    A fluent builder to construct a `Mock`\u27e811\u27e9 instance given matchers and a `ResponseTemplate`\u27e815\u27e9.\n\nMockGuard\u27e837\u27e9\n    You get a `MockGuard` when registering a **scoped** `Mock`\u27e811\u27e9 using `MockServer::register_as_scoped`\u27e838\u27e9 or `Mock::mount_as_scoped`\u27e839\u27e9.\n\nMockServer\u27e813\u27e9\n    An HTTP web-server running in the background to behave as one of your dependencies using `Mock`\u27e811\u27e9s for testing purposes.\n\nMockServerBuilder\u27e840\u27e9\n    A builder providing a fluent API to assemble a `MockServer`\u27e813\u27e9 step-by-step. Use `MockServer::builder`\u27e841\u27e9 to get started.\n\nRequest\u27e817\u27e9\n    An incoming request to an instance of `MockServer`\u27e813\u27e9.\n\nResponseTemplate\u27e815\u27e9\n    The blueprint for the response returned by a `MockServer`\u27e813\u27e9 when a `Mock`\u27e811\u27e9 matches on an incoming request.\n\nTimes\u27e842\u27e9\n    Specify how many times we expect a `Mock`\u27e811\u27e9 to match via `expect`\u27e812\u27e9. It is used to set expectations on the usage of a `Mock`\u27e811\u27e9 in a test case.\n## Traits\u00a7\u27e843\u27e9\n\nMatch\u27e89\u27e9\n    Anything that implements `Match` can be used to constrain when a `Mock`\u27e811\u27e9 is activated.\n\nRespond\u27e818\u27e9\n    Anything that implements `Respond` can be used to reply to an incoming request when a `Mock`\u27e811\u27e9 is activated.\n## Type Aliases\u00a7\u27e844\u27e9\n\nErrorResponse\u27e845\u27e9\n\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wiremock/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wiremock/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164: Source\n\u27e84\u27e9 https://docs.rs/wiremock/latest/wiremock/#how-to-install: \u00a7\n\u27e85\u27e9 https://github.com/killercup/cargo-edit: `cargo-edit`\n\u27e86\u27e9 https://docs.rs/wiremock/latest/wiremock/#getting-started: \u00a7\n\u27e87\u27e9 https://docs.rs/wiremock/latest/wiremock/#matchers: \u00a7\n\u27e88\u27e9 https://docs.rs/wiremock/latest/wiremock/matchers/index.html: mod wiremock::matchers - `matchers`\n\u27e89\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Match.html: trait wiremock::Match - `Match`\n\u27e810\u27e9 https://docs.rs/wiremock/latest/wiremock/#spying: \u00a7\n\u27e811\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html: struct wiremock::Mock - `Mock`\n\u27e812\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect: method wiremock::Mock::expect - `expect`\n\u27e813\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html: struct wiremock::MockServer - `MockServer`\n\u27e814\u27e9 https://docs.rs/wiremock/latest/wiremock/#responses: \u00a7\n\u27e815\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html: struct wiremock::ResponseTemplate - `ResponseTemplate`\n\u27e816\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with: method wiremock::MockBuilder::respond_with - `respond_with`\n\u27e817\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Request.html: struct wiremock::Request - `Request`\n\u27e818\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Respond.html: trait wiremock::Respond - `Respond`\n\u27e819\u27e9 https://docs.rs/wiremock/latest/wiremock/#test-isolation: \u00a7\n\u27e820\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start: associated function wiremock::MockServer::start - `start`\n\u27e821\u27e9 https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility: \u00a7\n\u27e822\u27e9 https://docs.rs/async-std/: `async_std`\n\u27e823\u27e9 https://docs.rs/tokio/: `tokio`\n\u27e824\u27e9 https://github.com/LukeMathWalker/wiremock-rs: GitHub repository\n\u27e825\u27e9 https://docs.rs/wiremock/latest/wiremock/#efficiency: \u00a7\n\u27e826\u27e9 https://docs.rs/wiremock/latest/wiremock/#prior-art: \u00a7\n\u27e827\u27e9 https://docs.rs/mockito/: `mockito`\n\u27e828\u27e9 https://docs.rs/httpmock/: `httpmock`\n\u27e829\u27e9 https://docs.rs/wiremock/latest/wiremock/#future-evolution: \u00a7\n\u27e830\u27e9 https://docs.rs/wiremock/latest/wiremock/#related-projects: \u00a7\n\u27e831\u27e9 https://github.com/beltram/stubr: `stubr`\n\u27e832\u27e9 http://wiremock.org/: `Wiremock`\n\u27e833\u27e9 https://docs.rs/wiremock/latest/wiremock/#modules: \u00a7\n\u27e834\u27e9 https://docs.rs/wiremock/latest/wiremock/http/index.html: mod wiremock::http - http\n\u27e835\u27e9 https://docs.rs/wiremock/latest/wiremock/#structs: \u00a7\n\u27e836\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html: struct wiremock::MockBuilder - MockBuilder\n\u27e837\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html: struct wiremock::MockGuard - MockGuard\n\u27e838\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped: method wiremock::MockServer::register_as_scoped - `MockServer::register_as_scoped`\n\u27e839\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped: method wiremock::Mock::mount_as_scoped - `Mock::mount_as_scoped`\n\u27e840\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html: struct wiremock::MockServerBuilder - MockServerBuilder\n\u27e841\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder: associated function wiremock::MockServer::builder - `MockServer::builder`\n\u27e842\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Times.html: struct wiremock::Times - Times\n\u27e843\u27e9 https://docs.rs/wiremock/latest/wiremock/#traits: \u00a7\n\u27e844\u27e9 https://docs.rs/wiremock/latest/wiremock/#types: \u00a7\n\u27e845\u27e9 https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html: type wiremock::ErrorResponse - ErrorResponse\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 12691,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112089.3547677"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/wiremock",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [52 releases](https://lib.rs/crates/wiremock/versions)\n0.6.4 |  Jun 19, 2025   \n---|---  \n0.6.3 |  Mar 1, 2025   \n0.6.2 |  Sep 7, 2024   \n0.6.1 |  Jul 22, 2024   \n0.2.4 |  Jul 31, 2020   \n#**10** in [Testing](https://lib.rs/development-tools/testing \"Crates to help you verify the correctness of your code.\")\nDownload history 687294/week @ 2025-03-07 663616/week @ 2025-03-14 1283398/week @ 2025-03-21 496214/week @ 2025-03-28 538203/week @ 2025-04-04 428597/week @ 2025-04-11 306970/week @ 2025-04-18 297134/week @ 2025-04-25 339930/week @ 2025-05-02 386984/week @ 2025-05-09 376070/week @ 2025-05-16 307078/week @ 2025-05-23 348049/week @ 2025-05-30 301870/week @ 2025-06-06 353457/week @ 2025-06-13 391733/week @ 2025-06-20\n**1,455,682** downloads per month Used in [**310** crates (300 directly)](https://lib.rs/crates/wiremock/rev)\n**MIT/Apache**\n165KB  1.5K  SLoC\n# wiremock\n**HTTP mocking to test Rust applications.**\n[ ![Crates.io version](https://img.shields.io/crates/v/wiremock.svg?style=flat-square) ](https://crates.io/crates/wiremock) [ ![Download](https://img.shields.io/crates/d/wiremock.svg?style=flat-square) ](https://crates.io/crates/wiremock) [ ![docs.rs docs](https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square) ](https://docs.rs/wiremock)\n``wiremock`` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n_The name``wiremock`` is a reference to [``WireMock`.`Net``](https://github.com/WireMock-Net/WireMock.Net), a .NET port of the original [``Wiremock``](http://wiremock.org/) from Java._\n[Documentation](https://docs.rs/wiremock) -  [Crates.io](https://crates.io/crates/wiremock)\n# Table of Contents\n  1. [How to install](https://lib.rs/crates/wiremock#readme-how-to-install)\n  2. [Getting started](https://lib.rs/crates/wiremock#readme-getting-started)\n  3. [Matchers](https://lib.rs/crates/wiremock#readme-matchers)\n  4. [Spying](https://lib.rs/crates/wiremock#readme-spying)\n  5. [Responses](https://lib.rs/crates/wiremock#readme-spying)\n  6. [Test isolation](https://lib.rs/crates/wiremock#readme-test-isolation)\n  7. [Runtime compatibility](https://lib.rs/crates/wiremock#readme-runtime-compatibility)\n  8. [Efficiency](https://lib.rs/crates/wiremock#readme-efficiency)\n  9. [Prior art](https://lib.rs/crates/wiremock#readme-prior-art)\n  10. [Future evolution](https://lib.rs/crates/wiremock#readme-future-evolution)\n  11. [Related projects](https://lib.rs/crates/wiremock#readme-related-projects)\n  12. [License](https://lib.rs/crates/wiremock#readme-license)\n\n\n## How to install\nAdd ``wiremock`` to your development dependencies by editing the ``Cargo.toml`` file:\n```\n```[``dev-dependencies``]`\n``# ...``\n`wiremock ``=` ``\"`0.6`\"``\n``\n```\n\nOr by running:\n```\n```cargo``` add wiremock`` --`dev``\n`\n```\n\n## Getting started\n```\n``use` `wiremock`::````{`MockServer`,` Mock`,` ResponseTemplate```}```;`\n`use` `wiremock`::```matchers`::````{`method`,` path```}```;`\n``#``[``async_std`::`main``]``\nasync ``fn` `main`````(````)``````{`\n  ``//` Start a background HTTP server on a random local port`\n  `let` mock_server `=` `MockServer`::``start`(``)``.`await`;`\n  ``//` Arrange the behaviour of the MockServer adding a Mock:`\n  ``//` when it receives a GET request on '/hello' it will respond with a 200.`\n  `Mock`::``given`(``method``(```\"`GET`\"```)``)`\n    `.``and``(``path``(```\"`/hello`\"```)``)`\n    `.``respond_with``(``ResponseTemplate`::``new`(``200``)``)`\n    ``//` Mounting the mock on the mock server - it's now effective!`\n    `.``mount``(``&`mock_server`)`\n    `.`await`;`\n  ``//` If we probe the MockServer using any HTTP client it behaves as expected.`\n  `let` status `=` `reqwest`::``get`(``format!``(```\"``{}`/hello`\"```,` `&`mock_server`.``uri``(``)``)``)`\n    `.`await\n    `.``unwrap``(``)`\n    `.``status``(``)``;`\n  `assert_eq!``(`status`.``as_u16``(``)``,` `200``)``;`\n  ``//` If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.`\n  `let` status `=` `reqwest`::``get`(``format!``(```\"``{}`/missing`\"```,` `&`mock_server`.``uri``(``)``)``)`\n    `.`await\n    `.``unwrap``(``)`\n    `.``status``(``)``;`\n  `assert_eq!``(`status`.``as_u16``(``)``,` `404``)``;`\n```}```\n`\n```\n\n## Matchers\n``wiremock`` provides a set of matching strategies out of the box - check the [``matchers``](https://docs.rs/wiremock/latest/wiremock/matchers/index.html) module for a complete list.\nYou can define your own matchers using the [``Match``](https://docs.rs/wiremock/latest/wiremock/trait.Match.html) trait, as well as using ```Fn``` closures. Check [``Match``](https://docs.rs/wiremock/latest/wiremock/trait.Match.html)'s documentation for more details and examples.\n## Spying\n``wiremock`` empowers you to set expectations on the number of invocations to your [``Mock``](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html)s - check the [``expect``](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect) method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html) instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your [``Mock``](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html)s.\n## Responses\n``wiremock`` lets you specify pre-determined responses using [``ResponseTemplate``](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html) and [``respond_with``](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with).\nYou are also given the option to have [``Mock``](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html)s return different responses based on the matched [``Request``](https://docs.rs/wiremock/latest/wiremock/struct.Request.html) using the [``Respond``](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html) trait. Check [``Respond``](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html)'s documentation for more details and examples.\n## Test isolation\nEach instance of [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html) is fully isolated: [``start``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start) takes care of finding a random port available on your local machine which is assigned to the new [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html).\nTo ensure full isolation and no cross-test interference, [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html)s shouldn't be shared between tests. Instead, [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html)s should be created in the test where they are used.\nWhen a [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html) instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n## Runtime compatibility\n``wiremock`` can be used (and it is tested to work) with both [``async_std``](https://docs.rs/async-std/) and [``tokio``](https://docs.rs/tokio/) as futures runtimes. If you encounter any compatibility bug, please open an issue on our [GitHub repository](https://github.com/LukeMathWalker/wiremock-rs).\n## Efficiency\n``wiremock`` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html). Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it's a bug: open an issue!\n## Prior art\n[``mockito``](https://docs.rs/mockito/) and [``httpmock``](https://docs.rs/httpmock/) provide HTTP mocking for Rust.\nCheck the table below to see how ``wiremock`` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn't been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n| Test execution strategy | How many APIs can I mock? | Out-of-the-box request matchers | Extensible request matching | API | Spying | Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito | \u2714 Parallel | \u2714 Unbounded | \u2714 | \u274c | Async/Sync | \u2714 | \u274c  \nhttpmock | \u2714 Parallel | \u2714 Unbounded | \u2714 | \u2714 | Async/Sync | \u2714 | \u2714  \nwiremock | \u2714 Parallel \ufe0f | \u2714 Unbounded | \u2714 | \u2714 | Async | \u2714 | \u274c  \n## Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n## Related projects\n  * [``stubr``](https://github.com/beltram/stubr) for mounting [``Wiremock``](http://wiremock.org/) json stubs in a [``MockServer``](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html). Also works as a cli.\n\n\n## License\nLicensed under either of Apache License, Version 2.0 or MIT license at your option. Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this crate by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~12\u201323MB  ~324K SLoC\n  * [assert-json-diff](https://lib.rs/crates/assert-json-diff \"2.0.1\")\n  * [async-trait](https://lib.rs/crates/async-trait \"0.1\")\n  * [base64](https://lib.rs/crates/base64 \"new\") 0.22\n  * [deadpool](https://lib.rs/crates/deadpool \"outdated\") 0.10\n  * [futures](https://lib.rs/crates/futures \"0.3.5\")\n  * [http](https://lib.rs/crates/http \"new\") 1.0\n  * [http-body-util](https://lib.rs/crates/http-body-util \"0.1\")\n  * [hyper](https://lib.rs/crates/hyper \"new\") 1.0[+full](https://lib.rs/crates/hyper/features#feature-full)\n  * [hyper-util](https://lib.rs/crates/hyper-util \"0.1\")[+tokio](https://lib.rs/crates/hyper-util/features#feature-tokio)[+server](https://lib.rs/crates/hyper-util/features#feature-server)[+http1](https://lib.rs/crates/hyper-util/features#feature-http1)[+http2](https://lib.rs/crates/hyper-util/features#feature-http2)\n  * [log](https://lib.rs/crates/log \"0.4\")\n  * [once_cell](https://lib.rs/crates/once_cell \"1\")\n  * [regex](https://lib.rs/crates/regex \"1\")\n  * [serde](https://lib.rs/crates/serde \"1\")\n  * [serde_json](https://lib.rs/crates/serde_json \"1\")\n  * [tokio](https://lib.rs/crates/tokio \"1.5.0\")[+rt](https://lib.rs/crates/tokio/features#feature-rt)[+macros](https://lib.rs/crates/tokio/features#feature-macros)\n  * [url](https://lib.rs/crates/url \"2.2\")\n\n\n  * dev  [actix-rt](https://lib.rs/crates/actix-rt \"new\") 2.2\n  * dev  [async-std](https://lib.rs/crates/async-std \"outdated\") 1.13[+attributes](https://lib.rs/crates/async-std/features#feature-attributes)[+tokio1](https://lib.rs/crates/async-std/features#feature-tokio1)\n  * dev  [reqwest](https://lib.rs/crates/reqwest \"new\") 0.12.7[+json](https://lib.rs/crates/reqwest/features#feature-json)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  52 releases\u27e81\u27e9\n0.6.4 |  Jun 19, 2025   \n---|---  \n0.6.3 |  Mar 1, 2025   \n0.6.2 |  Sep 7, 2024   \n0.6.1 |  Jul 22, 2024   \n0.2.4 |  Jul 31, 2020   \n#**10** in Testing\u27e82\u27e9\nDownload history 687294/week @ 2025-03-07 663616/week @ 2025-03-14 1283398/week @ 2025-03-21 496214/week @ 2025-03-28 538203/week @ 2025-04-04 428597/week @ 2025-04-11 306970/week @ 2025-04-18 297134/week @ 2025-04-25 339930/week @ 2025-05-02 386984/week @ 2025-05-09 376070/week @ 2025-05-16 307078/week @ 2025-05-23 348049/week @ 2025-05-30 301870/week @ 2025-06-06 353457/week @ 2025-06-13 391733/week @ 2025-06-20\n**1,455,682** downloads per month Used in **310** crates (300 directly)\u27e83\u27e9\n**MIT/Apache**\n165KB  1.5K  SLoC\n# wiremock\n**HTTP mocking to test Rust applications.**\n ![Crates.io version\u27e84\u27e9 ](https://crates.io/crates/wiremock)  ![Download\u27e85\u27e9 ](https://crates.io/crates/wiremock)  ![docs.rs docs\u27e86\u27e9 ](https://docs.rs/wiremock)\n``wiremock`` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n_The name``wiremock`` is a reference to ``WireMock`.`Net``\u27e87\u27e9, a .NET port of the original ``Wiremock``\u27e88\u27e9 from Java._\nDocumentation\u27e89\u27e9 -  Crates.io\u27e810\u27e9\n# Table of Contents\n  1. How to install\u27e811\u27e9\n  2. Getting started\u27e812\u27e9\n  3. Matchers\u27e813\u27e9\n  4. Spying\u27e814\u27e9\n  5. Responses\u27e814\u27e9\n  6. Test isolation\u27e815\u27e9\n  7. Runtime compatibility\u27e816\u27e9\n  8. Efficiency\u27e817\u27e9\n  9. Prior art\u27e818\u27e9\n  10. Future evolution\u27e819\u27e9\n  11. Related projects\u27e820\u27e9\n  12. License\u27e821\u27e9\n\n\n## How to install\nAdd ``wiremock`` to your development dependencies by editing the ``Cargo.toml`` file:\n```\n```[``dev-dependencies``]`\n``# ...``\n`wiremock ``=` ``\"`0.6`\"``\n``\n```\n\nOr by running:\n```\n```cargo``` add wiremock`` --`dev``\n`\n```\n\n## Getting started\n```\n``use` `wiremock`::````{`MockServer`,` Mock`,` ResponseTemplate```}```;`\n`use` `wiremock`::```matchers`::````{`method`,` path```}```;`\n``#``[``async_std`::`main``]``\nasync ``fn` `main`````(````)``````{`\n  ``//` Start a background HTTP server on a random local port`\n  `let` mock_server `=` `MockServer`::``start`(``)``.`await`;`\n  ``//` Arrange the behaviour of the MockServer adding a Mock:`\n  ``//` when it receives a GET request on '/hello' it will respond with a 200.`\n  `Mock`::``given`(``method``(```\"`GET`\"```)``)`\n    `.``and``(``path``(```\"`/hello`\"```)``)`\n    `.``respond_with``(``ResponseTemplate`::``new`(``200``)``)`\n    ``//` Mounting the mock on the mock server - it's now effective!`\n    `.``mount``(``&`mock_server`)`\n    `.`await`;`\n  ``//` If we probe the MockServer using any HTTP client it behaves as expected.`\n  `let` status `=` `reqwest`::``get`(``format!``(```\"``{}`/hello`\"```,` `&`mock_server`.``uri``(``)``)``)`\n    `.`await\n    `.``unwrap``(``)`\n    `.``status``(``)``;`\n  `assert_eq!``(`status`.``as_u16``(``)``,` `200``)``;`\n  ``//` If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.`\n  `let` status `=` `reqwest`::``get`(``format!``(```\"``{}`/missing`\"```,` `&`mock_server`.``uri``(``)``)``)`\n    `.`await\n    `.``unwrap``(``)`\n    `.``status``(``)``;`\n  `assert_eq!``(`status`.``as_u16``(``)``,` `404``)``;`\n```}```\n`\n```\n\n## Matchers\n``wiremock`` provides a set of matching strategies out of the box - check the ``matchers``\u27e822\u27e9 module for a complete list.\nYou can define your own matchers using the ``Match``\u27e823\u27e9 trait, as well as using ```Fn``` closures. Check ``Match``\u27e823\u27e9's documentation for more details and examples.\n## Spying\n``wiremock`` empowers you to set expectations on the number of invocations to your ``Mock``\u27e824\u27e9s - check the ``expect``\u27e825\u27e9 method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each ``MockServer``\u27e826\u27e9 instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your ``Mock``\u27e824\u27e9s.\n## Responses\n``wiremock`` lets you specify pre-determined responses using ``ResponseTemplate``\u27e827\u27e9 and ``respond_with``\u27e828\u27e9.\nYou are also given the option to have ``Mock``\u27e824\u27e9s return different responses based on the matched ``Request``\u27e829\u27e9 using the ``Respond``\u27e830\u27e9 trait. Check ``Respond``\u27e830\u27e9's documentation for more details and examples.\n## Test isolation\nEach instance of ``MockServer``\u27e826\u27e9 is fully isolated: ``start``\u27e831\u27e9 takes care of finding a random port available on your local machine which is assigned to the new ``MockServer``\u27e826\u27e9.\nTo ensure full isolation and no cross-test interference, ``MockServer``\u27e826\u27e9s shouldn't be shared between tests. Instead, ``MockServer``\u27e826\u27e9s should be created in the test where they are used.\nWhen a ``MockServer``\u27e826\u27e9 instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n## Runtime compatibility\n``wiremock`` can be used (and it is tested to work) with both ``async_std``\u27e832\u27e9 and ``tokio``\u27e833\u27e9 as futures runtimes. If you encounter any compatibility bug, please open an issue on our GitHub repository\u27e834\u27e9.\n## Efficiency\n``wiremock`` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new ``MockServer``\u27e826\u27e9. Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it's a bug: open an issue!\n## Prior art\n``mockito``\u27e835\u27e9 and ``httpmock``\u27e836\u27e9 provide HTTP mocking for Rust.\nCheck the table below to see how ``wiremock`` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn't been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n| Test execution strategy | How many APIs can I mock? | Out-of-the-box request matchers | Extensible request matching | API | Spying | Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito | \u2714 Parallel | \u2714 Unbounded | \u2714 | \u274c | Async/Sync | \u2714 | \u274c  \nhttpmock | \u2714 Parallel | \u2714 Unbounded | \u2714 | \u2714 | Async/Sync | \u2714 | \u2714  \nwiremock | \u2714 Parallel \ufe0f | \u2714 Unbounded | \u2714 | \u2714 | Async | \u2714 | \u274c  \n## Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n## Related projects\n  * ``stubr``\u27e837\u27e9 for mounting ``Wiremock``\u27e88\u27e9 json stubs in a ``MockServer``\u27e826\u27e9. Also works as a cli.\n\n\n## License\nLicensed under either of Apache License, Version 2.0 or MIT license at your option. Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this crate by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.\n#### Dependencies\n~12\u201323MB  ~324K SLoC\n  * assert-json-diff\u27e838\u27e9\n  * async-trait\u27e839\u27e9\n  * base64\u27e840\u27e9 0.22\n  * deadpool\u27e841\u27e9 0.10\n  * futures\u27e842\u27e9\n  * http\u27e843\u27e9 1.0\n  * http-body-util\u27e844\u27e9\n  * hyper\u27e845\u27e9 1.0+full\u27e846\u27e9\n  * hyper-util\u27e847\u27e9+tokio\u27e848\u27e9+server\u27e849\u27e9+http1\u27e850\u27e9+http2\u27e851\u27e9\n  * log\u27e852\u27e9\n  * once_cell\u27e853\u27e9\n  * regex\u27e854\u27e9\n  * serde\u27e855\u27e9\n  * serde_json\u27e856\u27e9\n  * tokio\u27e857\u27e9+rt\u27e858\u27e9+macros\u27e859\u27e9\n  * url\u27e860\u27e9\n\n\n  * dev  actix-rt\u27e861\u27e9 2.2\n  * dev  async-std\u27e862\u27e9 1.13+attributes\u27e863\u27e9+tokio1\u27e864\u27e9\n  * dev  reqwest\u27e865\u27e9 0.12.7+json\u27e866\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/wiremock/versions: 52 releases\n\u27e82\u27e9 https://lib.rs/development-tools/testing: Crates to help you verify the correctness of your code. - Testing\n\u27e83\u27e9 https://lib.rs/crates/wiremock/rev: **310** crates (300 directly)\n\u27e84\u27e9 https://img.shields.io/crates/v/wiremock.svg?style=flat-square:  ![Crates.io version\n\u27e85\u27e9 https://img.shields.io/crates/d/wiremock.svg?style=flat-square:  ![Download\n\u27e86\u27e9 https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square:  ![docs.rs docs\n\u27e87\u27e9 https://github.com/WireMock-Net/WireMock.Net: ``WireMock`.`Net``\n\u27e88\u27e9 http://wiremock.org/: ``Wiremock``\n\u27e89\u27e9 https://docs.rs/wiremock: Documentation\n\u27e810\u27e9 https://crates.io/crates/wiremock: Crates.io\n\u27e811\u27e9 https://lib.rs/crates/wiremock#readme-how-to-install: How to install\n\u27e812\u27e9 https://lib.rs/crates/wiremock#readme-getting-started: Getting started\n\u27e813\u27e9 https://lib.rs/crates/wiremock#readme-matchers: Matchers\n\u27e814\u27e9 https://lib.rs/crates/wiremock#readme-spying: Spying\n\u27e815\u27e9 https://lib.rs/crates/wiremock#readme-test-isolation: Test isolation\n\u27e816\u27e9 https://lib.rs/crates/wiremock#readme-runtime-compatibility: Runtime compatibility\n\u27e817\u27e9 https://lib.rs/crates/wiremock#readme-efficiency: Efficiency\n\u27e818\u27e9 https://lib.rs/crates/wiremock#readme-prior-art: Prior art\n\u27e819\u27e9 https://lib.rs/crates/wiremock#readme-future-evolution: Future evolution\n\u27e820\u27e9 https://lib.rs/crates/wiremock#readme-related-projects: Related projects\n\u27e821\u27e9 https://lib.rs/crates/wiremock#readme-license: License\n\u27e822\u27e9 https://docs.rs/wiremock/latest/wiremock/matchers/index.html: ``matchers``\n\u27e823\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Match.html: ``Match``\n\u27e824\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html: ``Mock``\n\u27e825\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect: ``expect``\n\u27e826\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html: ``MockServer``\n\u27e827\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html: ``ResponseTemplate``\n\u27e828\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with: ``respond_with``\n\u27e829\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Request.html: ``Request``\n\u27e830\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Respond.html: ``Respond``\n\u27e831\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start: ``start``\n\u27e832\u27e9 https://docs.rs/async-std/: ``async_std``\n\u27e833\u27e9 https://docs.rs/tokio/: ``tokio``\n\u27e834\u27e9 https://github.com/LukeMathWalker/wiremock-rs: GitHub repository\n\u27e835\u27e9 https://docs.rs/mockito/: ``mockito``\n\u27e836\u27e9 https://docs.rs/httpmock/: ``httpmock``\n\u27e837\u27e9 https://github.com/beltram/stubr: ``stubr``\n\u27e838\u27e9 https://lib.rs/crates/assert-json-diff: 2.0.1 - assert-json-diff\n\u27e839\u27e9 https://lib.rs/crates/async-trait: 0.1 - async-trait\n\u27e840\u27e9 https://lib.rs/crates/base64: new - base64\n\u27e841\u27e9 https://lib.rs/crates/deadpool: outdated - deadpool\n\u27e842\u27e9 https://lib.rs/crates/futures: 0.3.5 - futures\n\u27e843\u27e9 https://lib.rs/crates/http: new - http\n\u27e844\u27e9 https://lib.rs/crates/http-body-util: 0.1 - http-body-util\n\u27e845\u27e9 https://lib.rs/crates/hyper: new - hyper\n\u27e846\u27e9 https://lib.rs/crates/hyper/features#feature-full: +full\n\u27e847\u27e9 https://lib.rs/crates/hyper-util: 0.1 - hyper-util\n\u27e848\u27e9 https://lib.rs/crates/hyper-util/features#feature-tokio: +tokio\n\u27e849\u27e9 https://lib.rs/crates/hyper-util/features#feature-server: +server\n\u27e850\u27e9 https://lib.rs/crates/hyper-util/features#feature-http1: +http1\n\u27e851\u27e9 https://lib.rs/crates/hyper-util/features#feature-http2: +http2\n\u27e852\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e853\u27e9 https://lib.rs/crates/once_cell: 1 - once_cell\n\u27e854\u27e9 https://lib.rs/crates/regex: 1 - regex\n\u27e855\u27e9 https://lib.rs/crates/serde: 1 - serde\n\u27e856\u27e9 https://lib.rs/crates/serde_json: 1 - serde_json\n\u27e857\u27e9 https://lib.rs/crates/tokio: 1.5.0 - tokio\n\u27e858\u27e9 https://lib.rs/crates/tokio/features#feature-rt: +rt\n\u27e859\u27e9 https://lib.rs/crates/tokio/features#feature-macros: +macros\n\u27e860\u27e9 https://lib.rs/crates/url: 2.2 - url\n\u27e861\u27e9 https://lib.rs/crates/actix-rt: new - actix-rt\n\u27e862\u27e9 https://lib.rs/crates/async-std: outdated - async-std\n\u27e863\u27e9 https://lib.rs/crates/async-std/features#feature-attributes: +attributes\n\u27e864\u27e9 https://lib.rs/crates/async-std/features#feature-tokio1: +tokio1\n\u27e865\u27e9 https://lib.rs/crates/reqwest: new - reqwest\n\u27e866\u27e9 https://lib.rs/crates/reqwest/features#feature-json: +json\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 3.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 11520,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "112089.9625738"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stable_deref_trait-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "stable_deref_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stable_deref_trait-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libstable_deref_trait-76760dee044b7fe8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_sink-39699e5e37bf0478.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpin_project_lite-c1a285380b388093.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libitoa-f4561faf083a6980.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const_generics",
                "const_new"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsmallvec-68b37ca8bf1c7436.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_io-bd8e4b4f12fa4b3d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libslab-998bee1b978fdba0.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_task-ecc531f5e570f7c2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litemap-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litemap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litemap-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblitemap-45cc6b4931d10ddd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "futures-sink",
                "sink",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_channel-574737b99960bb16.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\writeable-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "writeable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\writeable-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwriteable-d24ceb41c148795c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libonce_cell-a60312d61ee7843e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-link@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-link-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_link",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-link-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_link-3f1b50f37bfb96d6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-f69286d26611f4f2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-f69286d26611f4f2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-5d95e5d7e49e2358\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-5d95e5d7e49e2358\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libbytes-3203777d1ecff83c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpercent_encoding-3e311531e44ed010.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-ef3166910a2d880e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-b78cd3409c4c00e1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-b78cd3409c4c00e1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libmemchr-cb1427129dde067c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-69184ac4791b321c\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\try-lock-0.2.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "try_lock",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\try-lock-0.2.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtry_lock-15379b03dc3e5103.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-e27d0f7538ed525a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-e27d0f7538ed525a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-9332b0712131748b\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-10e6abab3c189cd2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-10e6abab3c189cd2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "fast_arithmetic=\"64\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-10301b695ad66c7d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\want-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "want",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\want-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwant-3b7ba87e455dfc70.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libparking_lot_core-222ce7ddfb6e5631.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.34\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.34\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "once_cell",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtracing_core-06f58b3534731681.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-3975fc4c41c56526\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-3975fc4c41c56526\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-9f9c168bd472a48d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-f8c1eb4327bd75a1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_normalizer_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_normalizer_data-d77b982e081a7ac1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhashbrown-a043e0c8c3e2aece.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httpdate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttpdate-77358cb654aeba2b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-result@0.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_result",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.3.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_result-2a44ec3b2990c70d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtracing-1a17754863ee7dc2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\utf8_iter-1.0.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "utf8_iter",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\utf8_iter-1.0.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libutf8_iter-7b84a5b5004daeb9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblibc-980d952702f3e3fd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttparse-c751802c6b4555c3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ryu",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.20\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libryu-b5eb7f50b0721bb1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libform_urlencoded-9704b762345f949f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-strings@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_strings",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_strings-712fe8c6e96f0aab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deadpool-runtime@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-runtime-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deadpool_runtime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-runtime-0.1.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libdeadpool_runtime-60ae581625f001e7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tower-service-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tower_service",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tower-service-0.3.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtower_service-6f9ee9668c63aaeb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_cpus@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_cpus-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_cpus",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_cpus-1.17.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libnum_cpus-55e7b4192d68402a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp-a2c1adbf95f88e87.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ipnet-2.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ipnet",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ipnet-2.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libipnet-cf0c1de7c482f18a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libbase64-86bc57838984083e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#value-bag@1.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-bag-1.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "value_bag",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-bag-1.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "inline-i128"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libvalue_bag-a5331bc05cacdd2d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libparking_lot-bdfb528786389926.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp_body-2ff7cb888350ca90.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-registry@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-registry-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_registry",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-registry-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_registry-492574563710ee6c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aho-corasick-1.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aho_corasick",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aho-corasick-1.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "perf-literal",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libaho_corasick-a392b649bf625036.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libindexmap-197bf0a733fe80e3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp_body_util-d4da74206718493f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "kv",
                "kv_unstable",
                "value-bag"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblog-a16aeec78c16aa4e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_sys-d75ce4d7cde7f380.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-syntax-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex_syntax",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-syntax-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex_syntax-af69004f0b7f36ab.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsocket2-d68612bd403a3a53.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_properties_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_properties_data-b1ce953ad27054be.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-automata-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex_automata",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-automata-0.4.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "dfa-onepass",
                "hybrid",
                "meta",
                "nfa-backtrack",
                "nfa-pikevm",
                "nfa-thompson",
                "perf-inline",
                "perf-literal",
                "perf-literal-multisubstring",
                "perf-literal-substring",
                "std",
                "syntax",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment",
                "unicode-word-boundary"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex_automata-a4f446550c642e93.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-1.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-1.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "perf",
                "perf-backtrack",
                "perf-cache",
                "perf-dfa",
                "perf-inline",
                "perf-literal",
                "perf-onepass",
                "std",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex-27fc76e2decbbb6a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\synstructure-0.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "synstructure",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\synstructure-0.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsynstructure-e9f158be761b4650.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsynstructure-e9f158be761b4650.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.103",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.103\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.103\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "fold",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit",
                "visit-mut"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsyn-59c57e7f9b3de034.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsyn-59c57e7f9b3de034.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Wdk_System",
                "Wdk_System_IO",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Memory",
                "Win32_System_Pipes",
                "Win32_System_SystemInformation",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_sys-b3dae9fb0aa5494e.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libmio-64ac1e4ef4aaf2f7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\displaydoc-0.2.5\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "displaydoc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\displaydoc-0.2.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.88\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "async_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.88\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "futures_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-derive-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "yoke_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-derive-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-derive-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerofrom_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-derive-0.1.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-derive-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerovec_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-derive-0.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerofrom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-0.1.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerofrom-38ff890885eae6f2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "yoke",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive",
                "zerofrom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libyoke-a49fbe74981456ca.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerotrie-0.2.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerotrie",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerotrie-0.2.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "yoke",
                "zerofrom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerotrie-7532ccd5f40e4cba.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.219\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-0.11.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerovec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-0.11.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive",
                "yoke"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerovec-7a7765120087bcc7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\potential_utf-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "potential_utf",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\potential_utf-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpotential_utf-a8eabc6ef691617a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tinystr-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tinystr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tinystr-0.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtinystr-648a9840522209c5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_collections-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_collections",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_collections-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_collections-e9f66b55b783b5a9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "async-await-macro",
                "channel",
                "futures-channel",
                "futures-io",
                "futures-macro",
                "futures-sink",
                "io",
                "memchr",
                "sink",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_util-3a5450e4b897cf0c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-executor-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_executor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-executor-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_executor-9d74ff69fb186ac1.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_locale_core-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_locale_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_locale_core-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_locale_core-06c9c8cbbf3fdac3.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "default",
                "executor",
                "futures-executor",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures-f3a44a3542f92716.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.45.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.45.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.45.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "parking_lot",
                "rt",
                "rt-multi-thread",
                "signal",
                "signal-hook-registry",
                "socket2",
                "sync",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtokio-62a4e778882d80b5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_provider-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_provider",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_provider-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "baked",
                "zerotrie"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_provider-ea94e073effcc62a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_normalizer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_normalizer-b5f2bc1469197f83.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "codec",
                "default",
                "io"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtokio_util-e7f16d8128ec8446.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deadpool@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deadpool",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-0.10.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async-trait",
                "default",
                "managed",
                "unmanaged"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libdeadpool-e95b2ecb51e732ac.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_properties",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_properties-ef42e210b9ee5bea.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libserde-a2874e4cbc7fb067.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna_adapter-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "idna_adapter",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna_adapter-1.2.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libidna_adapter-42b4157b3a5c3e1c.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "idna",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna-1.0.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "compiled_data",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libidna-0e00f6c0dcc96db9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_json",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libserde_json-52ba2419dcc992f2.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\url-2.5.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "url",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\url-2.5.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liburl-5dc62840e2fe1ba6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#assert-json-diff@2.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\assert-json-diff-2.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "assert_json_diff",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\assert-json-diff-2.0.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libassert_json_diff-5ace11d923cd5719.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "h2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libh2-3f7d93d3d6e2c313.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "client",
                "default",
                "full",
                "http1",
                "http2",
                "server"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhyper-8eafe0677417a969.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "client",
                "client-legacy",
                "client-proxy",
                "client-proxy-system",
                "default",
                "http1",
                "http2",
                "server",
                "tokio"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhyper_util-cdc66a59c235af32.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwiremock-2e615ab704774f68.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-ff1a34852a360a33\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "wrap_proc_macro"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\proc-macro2-bd004ad9dcfa0b46\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "unicode_ident",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\unicode-ident-1.0.18\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libunicode_ident-f7db65657b8daa2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-733c1e19d91d737a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stable_deref_trait-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "stable_deref_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\stable_deref_trait-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libstable_deref_trait-76760dee044b7fe8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "smallvec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\smallvec-1.15.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const_generics",
                "const_new"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsmallvec-68b37ca8bf1c7436.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_project_lite",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-project-lite-0.2.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpin_project_lite-c1a285380b388093.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.5.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libautocfg-ff5884693664d457.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libautocfg-ff5884693664d457.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "memchr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\memchr-2.7.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libmemchr-cb1427129dde067c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytes",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytes-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libbytes-3203777d1ecff83c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-core-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_core-308f9a7b9ba0908e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-fda95fe9f127d56b\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libcfg_if-0416b600f5de43de.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "scopeguard",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\scopeguard-1.2.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libscopeguard-b3036dac4c63d524.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_sink",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-sink-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_sink-39699e5e37bf0478.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "itoa",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\itoa-1.0.15\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libitoa-f4561faf083a6980.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litemap-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "litemap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\litemap-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblitemap-45cc6b4931d10ddd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "proc_macro2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\proc-macro2-1.0.95\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libproc_macro2-a3b3807fecd402e3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "linked_libs": [],
              "linked_paths": [
                "native=C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\lib"
              ],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\windows_x86_64_msvc-a8b60e91c970423e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-d2343c0fe6ff07ff\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\parking_lot_core-9928602ef8bb032d\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\writeable-0.6.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "writeable",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\writeable-0.6.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwriteable-d24ceb41c148795c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fnv",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fnv-1.0.7\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfnv-da722296a25cad98.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-5d95e5d7e49e2358\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-5d95e5d7e49e2358\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "slab",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\slab-0.4.10\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libslab-998bee1b978fdba0.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-f69286d26611f4f2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-f69286d26611f4f2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_channel",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-channel-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "futures-sink",
                "sink",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_channel-574737b99960bb16.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_io",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-io-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_io-bd8e4b4f12fa4b3d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "once_cell",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\once_cell-1.21.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "race",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libonce_cell-a60312d61ee7843e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_task",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-task-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_task-ecc531f5e570f7c2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "pin_utils",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\pin-utils-0.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpin_utils-9d9a9e5e1b2c045c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhashbrown-a043e0c8c3e2aece.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libequivalent-ebd39031dcab7414.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quote",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quote-1.0.40\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libquote-e850c7166d56c5b9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_x86_64_msvc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows_x86_64_msvc-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_x86_64_msvc-2b925ab0435b4697.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_const_fn_trait_bound"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\lock_api-26a72cfa18e2caea\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_properties_data-ef3166910a2d880e\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-1.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp-a2c1adbf95f88e87.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\icu_normalizer_data-69184ac4791b321c\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.34\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-core-0.1.34\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "once_cell",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtracing_core-06f58b3534731681.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-10e6abab3c189cd2\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-10e6abab3c189cd2\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-b78cd3409c4c00e1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-b78cd3409c4c00e1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-link@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-link-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_link",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-link-0.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_link-3f1b50f37bfb96d6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.9.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.9.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "indexmap",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\indexmap-2.9.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libindexmap-197bf0a733fe80e3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-3975fc4c41c56526\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-3975fc4c41c56526\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "percent_encoding",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\percent-encoding-2.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpercent_encoding-3e311531e44ed010.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-e27d0f7538ed525a\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-e27d0f7538ed525a\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "atomic_waker",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\atomic-waker-1.1.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libatomic_waker-51a570a3292c2eef.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\try-lock-0.2.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "try_lock",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\try-lock-0.2.5\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtry_lock-15379b03dc3e5103.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.103",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.103\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "syn",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\syn-2.0.103\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "clone-impls",
                "default",
                "derive",
                "extra-traits",
                "fold",
                "full",
                "parsing",
                "printing",
                "proc-macro",
                "visit",
                "visit-mut"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsyn-59c57e7f9b3de034.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsyn-59c57e7f9b3de034.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_targets",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-targets-0.52.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_targets-88f43bd664d6863b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "lock_api",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\lock_api-0.4.13\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "atomic_usize",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblock_api-9c180e8e0f8b9e04.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_normalizer_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer_data-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_normalizer_data-d77b982e081a7ac1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_properties_data",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties_data-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_properties_data-b1ce953ad27054be.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-1.0.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp_body-2ff7cb888350ca90.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tracing",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tracing-0.1.41\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtracing-1a17754863ee7dc2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "httparse_simd_neon_intrinsics",
                "httparse_simd"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\httparse-9f9c168bd472a48d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde-9332b0712131748b\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "fast_arithmetic=\"64\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\serde_json-10301b695ad66c7d\\out"
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "freebsd11",
                "libc_const_extern_fn"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\build\\libc-f8c1eb4327bd75a1\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-strings@0.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_strings",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-strings-0.4.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_strings-712fe8c6e96f0aab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-result@0.3.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.3.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_result",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-result-0.3.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_result-2a44ec3b2990c70d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\want-0.3.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "want",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\want-0.3.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwant-3b7ba87e455dfc70.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aho-corasick-1.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "aho_corasick",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\aho-corasick-1.1.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "perf-literal",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libaho_corasick-a392b649bf625036.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httpdate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httpdate-1.0.3\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttpdate-77358cb654aeba2b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\synstructure-0.13.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "synstructure",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\synstructure-0.13.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "proc-macro"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsynstructure-e9f158be761b4650.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsynstructure-e9f158be761b4650.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-derive-0.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerovec_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-derive-0.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerovec_derive-7276f5a167c8c11d.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\displaydoc-0.2.5\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "displaydoc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\displaydoc-0.2.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\displaydoc-e55dbb3b1e2e989b.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.59.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Wdk",
                "Wdk_Foundation",
                "Wdk_Storage",
                "Wdk_Storage_FileSystem",
                "Wdk_System",
                "Wdk_System_IO",
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Security_Authentication",
                "Win32_Security_Authentication_Identity",
                "Win32_Security_Credentials",
                "Win32_Security_Cryptography",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Diagnostics",
                "Win32_System_Diagnostics_Debug",
                "Win32_System_IO",
                "Win32_System_LibraryLoader",
                "Win32_System_Memory",
                "Win32_System_Pipes",
                "Win32_System_SystemInformation",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_sys-b3dae9fb0aa5494e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot_core-0.9.11\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libparking_lot_core-222ce7ddfb6e5631.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_sys",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-sys-0.52.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "Win32",
                "Win32_Foundation",
                "Win32_Networking",
                "Win32_Networking_WinSock",
                "Win32_Security",
                "Win32_Storage",
                "Win32_Storage_FileSystem",
                "Win32_System",
                "Win32_System_Console",
                "Win32_System_IO",
                "Win32_System_Pipes",
                "Win32_System_SystemServices",
                "Win32_System_Threading",
                "Win32_System_WindowsProgramming",
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_sys-d75ce4d7cde7f380.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "tokio_macros",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-macros-2.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\tokio_macros-6e98ce03dedfe3d8.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "futures_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-macro-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\futures_macro-f1b4d64d7fd8fc1d.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "serde_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_derive-1.0.219\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\serde_derive-eab459b90ca44c8a.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "httparse",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\httparse-1.10.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttparse-c751802c6b4555c3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.20\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ryu",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ryu-1.0.20\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libryu-b5eb7f50b0721bb1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-syntax-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex_syntax",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-syntax-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex_syntax-af69004f0b7f36ab.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\utf8_iter-1.0.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "utf8_iter",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\utf8_iter-1.0.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libutf8_iter-7b84a5b5004daeb9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.88\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "async_trait",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\async-trait-0.1.88\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\async_trait-2e76a9c9a026cb12.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#windows-registry@0.5.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-registry-0.5.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "windows_registry",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\windows-registry-0.5.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwindows_registry-492574563710ee6c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "libc",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\libc-0.2.174\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblibc-980d952702f3e3fd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-derive-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "zerofrom_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-derive-0.1.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\zerofrom_derive-aa7ea36891e72632.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-derive-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "yoke_derive",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-derive-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\yoke_derive-6873ab2a095f02f3.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "parking_lot",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\parking_lot-0.12.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libparking_lot-bdfb528786389926.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "mio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\mio-1.0.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "net",
                "os-ext",
                "os-poll"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libmio-64ac1e4ef4aaf2f7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "socket2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\socket2-0.5.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "all"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libsocket2-d68612bd403a3a53.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-util-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "async-await-macro",
                "channel",
                "futures-channel",
                "futures-io",
                "futures-macro",
                "futures-sink",
                "io",
                "memchr",
                "sink",
                "slab",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_util-3a5450e4b897cf0c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde-1.0.219\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "derive",
                "serde_derive",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libserde-a2874e4cbc7fb067.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-automata-0.4.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex_automata",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-automata-0.4.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "dfa-onepass",
                "hybrid",
                "meta",
                "nfa-backtrack",
                "nfa-pikevm",
                "nfa-thompson",
                "perf-inline",
                "perf-literal",
                "perf-literal-multisubstring",
                "perf-literal-substring",
                "std",
                "syntax",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment",
                "unicode-word-boundary"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex_automata-a4f446550c642e93.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "form_urlencoded",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\form_urlencoded-1.2.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": false
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libform_urlencoded-9704b762345f949f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ipnet-2.11.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ipnet",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ipnet-2.11.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libipnet-cf0c1de7c482f18a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tower-service-0.3.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tower_service",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tower-service-0.3.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtower_service-6f9ee9668c63aaeb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deadpool-runtime@0.1.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-runtime-0.1.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deadpool_runtime",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-runtime-0.1.4\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libdeadpool_runtime-60ae581625f001e7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num_cpus@1.17.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_cpus-1.17.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_cpus",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num_cpus-1.17.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libnum_cpus-55e7b4192d68402a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "base64",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\base64-0.22.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libbase64-86bc57838984083e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#value-bag@1.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-bag-1.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "value_bag",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\value-bag-1.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "inline-i128"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libvalue_bag-a5331bc05cacdd2d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "http_body_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\http-body-util-0.1.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhttp_body_util-d4da74206718493f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-0.1.6\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerofrom",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerofrom-0.1.6\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerofrom-38ff890885eae6f2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.45.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.45.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-1.45.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "bytes",
                "default",
                "io-util",
                "libc",
                "macros",
                "mio",
                "net",
                "parking_lot",
                "rt",
                "rt-multi-thread",
                "signal",
                "signal-hook-registry",
                "socket2",
                "sync",
                "time",
                "tokio-macros",
                "windows-sys"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtokio-62a4e778882d80b5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-executor-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures_executor",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-executor-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures_executor-9d74ff69fb186ac1.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "serde_json",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\serde_json-1.0.140\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libserde_json-52ba2419dcc992f2.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "log",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\log-0.4.27\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "kv",
                "kv_unstable",
                "value-bag"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liblog-a16aeec78c16aa4e.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-1.11.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "regex",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\regex-1.11.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "perf",
                "perf-backtrack",
                "perf-cache",
                "perf-dfa",
                "perf-inline",
                "perf-literal",
                "perf-onepass",
                "std",
                "unicode",
                "unicode-age",
                "unicode-bool",
                "unicode-case",
                "unicode-gencat",
                "unicode-perl",
                "unicode-script",
                "unicode-segment"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libregex-27fc76e2decbbb6a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-0.8.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "yoke",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\yoke-0.8.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive",
                "zerofrom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libyoke-a49fbe74981456ca.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.15",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.15\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tokio_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tokio-util-0.7.15\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "codec",
                "default",
                "io"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtokio_util-e7f16d8128ec8446.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#assert-json-diff@2.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\assert-json-diff-2.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "assert_json_diff",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\assert-json-diff-2.0.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libassert_json_diff-5ace11d923cd5719.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#deadpool@0.10.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-0.10.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "deadpool",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\deadpool-0.10.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "async-trait",
                "default",
                "managed",
                "unmanaged"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libdeadpool-e95b2ecb51e732ac.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-0.3.31\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "futures",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\futures-0.3.31\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "async-await",
                "default",
                "executor",
                "futures-executor",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libfutures-f3a44a3542f92716.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-0.11.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerovec",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerovec-0.11.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "derive",
                "yoke"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerovec-7a7765120087bcc7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerotrie-0.2.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "zerotrie",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\zerotrie-0.2.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "yoke",
                "zerofrom"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libzerotrie-7532ccd5f40e4cba.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.10",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.10\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "h2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\h2-0.4.10\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libh2-3f7d93d3d6e2c313.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tinystr-0.8.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "tinystr",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\tinystr-0.8.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libtinystr-648a9840522209c5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\potential_utf-0.1.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "potential_utf",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\potential_utf-0.1.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libpotential_utf-a8eabc6ef691617a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.6.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-1.6.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "client",
                "default",
                "full",
                "http1",
                "http2",
                "server"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhyper-8eafe0677417a969.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_locale_core-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_locale_core",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_locale_core-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "zerovec"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_locale_core-06c9c8cbbf3fdac3.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_collections-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_collections",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_collections-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_collections-e9f66b55b783b5a9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.14",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hyper_util",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hyper-util-0.1.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "client",
                "client-legacy",
                "client-proxy",
                "client-proxy-system",
                "default",
                "http1",
                "http2",
                "server",
                "tokio"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libhyper_util-cdc66a59c235af32.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_provider-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_provider",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_provider-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "baked",
                "zerotrie"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_provider-ea94e073effcc62a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_normalizer",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_normalizer-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_normalizer-b5f2bc1469197f83.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties-2.0.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "icu_properties",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\icu_properties-2.0.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libicu_properties-ef42e210b9ee5bea.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna_adapter-1.2.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "idna_adapter",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna_adapter-1.2.1\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "compiled_data"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libidna_adapter-42b4157b3a5c3e1c.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna-1.0.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "idna",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\idna-1.0.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": false,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc",
                "compiled_data",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libidna-0e00f6c0dcc96db9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\url-2.5.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "url",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\url-2.5.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\liburl-5dc62840e2fe1ba6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\matchers.rs:224:18\n    |\n224 |             Self(format!(\"/{}\", path))\n    |                  ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n224 -             Self(format!(\"/{}\", path))\n224 +             Self(format!(\"/{path}\"))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::uninlined_format_args)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6171,
                        "byte_start": 6171,
                        "column_end": 29,
                        "column_start": 29,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 224,
                        "line_start": 224,
                        "suggested_replacement": "path",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 29,
                            "text": "            Self(format!(\"/{}\", path))"
                          }
                        ]
                      },
                      {
                        "byte_end": 6179,
                        "byte_start": 6173,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 224,
                        "line_start": 224,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "            Self(format!(\"/{}\", path))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 6180,
                    "byte_start": 6160,
                    "column_end": 38,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\matchers.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 224,
                    "line_start": 224,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 18,
                        "text": "            Self(format!(\"/{}\", path))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\matchers.rs:738:17\n    |\n738 |                 debug!(\"can't convert body from byte slice to string: {}\", err);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n738 -                 debug!(\"can't convert body from byte slice to string: {}\", err);\n738 +                 debug!(\"can't convert body from byte slice to string: {err}\");\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20074,
                        "byte_start": 20074,
                        "column_end": 72,
                        "column_start": 72,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 738,
                        "line_start": 738,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 72,
                            "highlight_start": 72,
                            "text": "                debug!(\"can't convert body from byte slice to string: {}\", err);"
                          }
                        ]
                      },
                      {
                        "byte_end": 20081,
                        "byte_start": 20076,
                        "column_end": 79,
                        "column_start": 74,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 738,
                        "line_start": 738,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 74,
                            "text": "                debug!(\"can't convert body from byte slice to string: {}\", err);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20082,
                    "byte_start": 20019,
                    "column_end": 80,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\matchers.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 738,
                    "line_start": 738,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 17,
                        "text": "                debug!(\"can't convert body from byte slice to string: {}\", err);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\matchers.rs:746:17\n    |\n746 | /                 debug!(\n747 | |                     \"can't convert expected part from byte slice to string: {}\",\n748 | |                     err\n749 | |                 );\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 20348,
                        "byte_start": 20348,
                        "column_end": 78,
                        "column_start": 78,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 747,
                        "line_start": 747,
                        "suggested_replacement": "err",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 78,
                            "text": "                    \"can't convert expected part from byte slice to string: {}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 20375,
                        "byte_start": 20350,
                        "column_end": 24,
                        "column_start": 80,
                        "expansion": null,
                        "file_name": "src\\matchers.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 748,
                        "line_start": 747,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 81,
                            "highlight_start": 80,
                            "text": "                    \"can't convert expected part from byte slice to string: {}\","
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    err"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 20393,
                    "byte_start": 20263,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\matchers.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 749,
                    "line_start": 746,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 17,
                        "text": "                debug!("
                      },
                      {
                        "highlight_end": 81,
                        "highlight_start": 1,
                        "text": "                    \"can't convert expected part from byte slice to string: {}\","
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    err"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\mock.rs:750:36\n    |\n750 |             TimesEnum::Exact(e) => write!(f, \"== {}\", e),\n    |                                    ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n750 -             TimesEnum::Exact(e) => write!(f, \"== {}\", e),\n750 +             TimesEnum::Exact(e) => write!(f, \"== {e}\"),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 27459,
                        "byte_start": 27459,
                        "column_end": 51,
                        "column_start": 51,
                        "expansion": null,
                        "file_name": "src\\mock.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 750,
                        "line_start": 750,
                        "suggested_replacement": "e",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 51,
                            "text": "            TimesEnum::Exact(e) => write!(f, \"== {}\", e),"
                          }
                        ]
                      },
                      {
                        "byte_end": 27464,
                        "byte_start": 27461,
                        "column_end": 56,
                        "column_start": 53,
                        "expansion": null,
                        "file_name": "src\\mock.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 750,
                        "line_start": 750,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 53,
                            "text": "            TimesEnum::Exact(e) => write!(f, \"== {}\", e),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 27465,
                    "byte_start": 27444,
                    "column_end": 57,
                    "column_start": 36,
                    "expansion": null,
                    "file_name": "src\\mock.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 750,
                    "line_start": 750,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 36,
                        "text": "            TimesEnum::Exact(e) => write!(f, \"== {}\", e),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\mock_server\\bare_server.rs:314:37\n    |\n314 |                   let error_message = format!(\n    |  _____________________________________^\n315 | |                     \"Verification failed for a scoped mock:\\n{}\\n{}\",\n316 | |                     verifications_error, received_requests_message\n317 | |                 );\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12805,
                        "byte_start": 12805,
                        "column_end": 63,
                        "column_start": 63,
                        "expansion": null,
                        "file_name": "src\\mock_server\\bare_server.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 315,
                        "line_start": 315,
                        "suggested_replacement": "verifications_error",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 63,
                            "highlight_start": 63,
                            "text": "                    \"Verification failed for a scoped mock:\\n{}\\n{}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 12809,
                        "byte_start": 12809,
                        "column_end": 67,
                        "column_start": 67,
                        "expansion": null,
                        "file_name": "src\\mock_server\\bare_server.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 315,
                        "line_start": 315,
                        "suggested_replacement": "received_requests_message",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 67,
                            "text": "                    \"Verification failed for a scoped mock:\\n{}\\n{}\","
                          }
                        ]
                      },
                      {
                        "byte_end": 12852,
                        "byte_start": 12811,
                        "column_end": 40,
                        "column_start": 69,
                        "expansion": null,
                        "file_name": "src\\mock_server\\bare_server.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 316,
                        "line_start": 315,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 70,
                            "highlight_start": 69,
                            "text": "                    \"Verification failed for a scoped mock:\\n{}\\n{}\","
                          },
                          {
                            "highlight_end": 40,
                            "highlight_start": 1,
                            "text": "                    verifications_error, received_requests_message"
                          }
                        ]
                      },
                      {
                        "byte_end": 12879,
                        "byte_start": 12852,
                        "column_end": 67,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\mock_server\\bare_server.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 316,
                        "line_start": 316,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 67,
                            "highlight_start": 40,
                            "text": "                    verifications_error, received_requests_message"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 12897,
                    "byte_start": 12734,
                    "column_end": 18,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\mock_server\\bare_server.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 317,
                    "line_start": 314,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 37,
                        "text": "                let error_message = format!("
                      },
                      {
                        "highlight_end": 70,
                        "highlight_start": 1,
                        "text": "                    \"Verification failed for a scoped mock:\\n{}\\n{}\","
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                    verifications_error, received_requests_message"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                );"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\mock_set.rs:84:13\n   |\n84 |             debug!(\"{}\", msg);\n   |             ^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n84 -             debug!(\"{}\", msg);\n84 +             debug!(\"{msg}\");\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3217,
                        "byte_start": 3217,
                        "column_end": 22,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\mock_set.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 84,
                        "suggested_replacement": "msg",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 22,
                            "text": "            debug!(\"{}\", msg);"
                          }
                        ]
                      },
                      {
                        "byte_end": 3224,
                        "byte_start": 3219,
                        "column_end": 29,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\mock_set.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 84,
                        "line_start": 84,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 24,
                            "text": "            debug!(\"{}\", msg);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3225,
                    "byte_start": 3208,
                    "column_end": 30,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\mock_set.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 13,
                        "text": "            debug!(\"{}\", msg);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\request.rs:88:13\n   |\n88 |             writeln!(buffer, \"{}: {}\", name, values)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n88 -             writeln!(buffer, \"{}: {}\", name, values)?;\n88 +             writeln!(buffer, \"{name}: {values}\")?;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2886,
                        "byte_start": 2886,
                        "column_end": 32,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "name",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 32,
                            "text": "            writeln!(buffer, \"{}: {}\", name, values)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 2890,
                        "byte_start": 2890,
                        "column_end": 36,
                        "column_start": 36,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "values",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 36,
                            "text": "            writeln!(buffer, \"{}: {}\", name, values)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 2898,
                        "byte_start": 2892,
                        "column_end": 44,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 38,
                            "text": "            writeln!(buffer, \"{}: {}\", name, values)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 2906,
                        "byte_start": 2898,
                        "column_end": 52,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 88,
                        "line_start": 88,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 44,
                            "text": "            writeln!(buffer, \"{}: {}\", name, values)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 2907,
                    "byte_start": 2867,
                    "column_end": 53,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\request.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 88,
                    "line_start": 88,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 13,
                        "text": "            writeln!(buffer, \"{}: {}\", name, values)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n  --> src\\request.rs:97:25\n   |\n97 |                         writeln!(buffer, \"{}\", truncated)?;\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n97 -                         writeln!(buffer, \"{}\", truncated)?;\n97 +                         writeln!(buffer, \"{truncated}\")?;\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3316,
                        "byte_start": 3316,
                        "column_end": 44,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 97,
                        "line_start": 97,
                        "suggested_replacement": "truncated",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 44,
                            "highlight_start": 44,
                            "text": "                        writeln!(buffer, \"{}\", truncated)?;"
                          }
                        ]
                      },
                      {
                        "byte_end": 3329,
                        "byte_start": 3318,
                        "column_end": 57,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 97,
                        "line_start": 97,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 46,
                            "text": "                        writeln!(buffer, \"{}\", truncated)?;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 3330,
                    "byte_start": 3297,
                    "column_end": 58,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\request.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 97,
                    "line_start": 97,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 58,
                        "highlight_start": 25,
                        "text": "                        writeln!(buffer, \"{}\", truncated)?;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: variables can be used directly in the `format!` string\n   --> src\\request.rs:122:21\n    |\n122 |                     writeln!(buffer, \"{}\", body)\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n122 -                     writeln!(buffer, \"{}\", body)\n122 +                     writeln!(buffer, \"{body}\")\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4437,
                        "byte_start": 4437,
                        "column_end": 40,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 122,
                        "line_start": 122,
                        "suggested_replacement": "body",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 40,
                            "text": "                    writeln!(buffer, \"{}\", body)"
                          }
                        ]
                      },
                      {
                        "byte_end": 4445,
                        "byte_start": 4439,
                        "column_end": 48,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\request.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 122,
                        "line_start": 122,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 42,
                            "text": "                    writeln!(buffer, \"{}\", body)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::uninlined_format_args",
                  "explanation": null
                },
                "level": "warning",
                "message": "variables can be used directly in the `format!` string",
                "spans": [
                  {
                    "byte_end": 4446,
                    "byte_start": 4418,
                    "column_end": 49,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\request.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 122,
                    "line_start": 122,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 21,
                        "text": "                    writeln!(buffer, \"{}\", body)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpjsah3nfv/wiremock-0.6.4#wiremock@0.6.4",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "wiremock",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpjsah3nfv\\wiremock-0.6.4\\target\\debug\\deps\\libwiremock-e5768935e21d0623.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 205
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {}
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "wiremock",
          "version": "0.6.4",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\n[Settings](https://docs.rs/wiremock/latest/settings.html)\n[Help](https://docs.rs/wiremock/latest/help.html)\nSummary[Source](https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164)\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#how-to-install)How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using [`cargo-edit`](https://github.com/killercup/cargo-edit), run\n```\ncargo add wiremock --dev\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#getting-started)Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#matchers)Matchers\n`wiremock` provides a set of matching strategies out of the box - check the [`matchers`](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\") module for a complete list.\nYou can define your own matchers using the [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\") trait, as well as using `Fn` closures. Check [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#spying)Spying\n`wiremock` empowers you to set expectations on the number of invocations to your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s - check the [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\") method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#responses)Responses\n`wiremock` lets you specify pre-determined responses using [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\") and [`respond_with`](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with \"method wiremock::MockBuilder::respond_with\").\nYou also given the option to have [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s that return different responses based on the matched [`Request`](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\") using the [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\") trait. Check [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#test-isolation)Test isolation\nEach instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") is fully isolated: [`start`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start \"associated function wiremock::MockServer::start\") takes care of finding a random port available on your local machine which is assigned to the new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\nTo ensure full isolation and no cross-test interference, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s shouldn\u2019t be shared between tests. Instead, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s should be created in the test where they are used.\nWhen a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility)Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both [`async_std`](https://docs.rs/async-std/) and [`tokio`](https://docs.rs/tokio/) as futures runtimes. If you encounter any compatibility bug, please open an issue on our [GitHub repository](https://github.com/LukeMathWalker/wiremock-rs).\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#efficiency)Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#prior-art)Prior art\n[`mockito`](https://docs.rs/mockito/) and [`httpmock`](https://docs.rs/httpmock/) provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#future-evolution)Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#related-projects)Related projects\n  * [`stubr`](https://github.com/beltram/stubr) for mounting [`Wiremock`](http://wiremock.org/) json stubs in a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Also works as a cli.\n\n\n## Modules[\u00a7](https://docs.rs/wiremock/latest/wiremock/#modules)\n\n[http](https://docs.rs/wiremock/latest/wiremock/http/index.html \"mod wiremock::http\")\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\n[matchers](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\")\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs[\u00a7](https://docs.rs/wiremock/latest/wiremock/#structs)\n\n[Mock](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")\n    Given a set of matchers, a `Mock` instructs an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") to return a pre-determined response if the matching conditions are satisfied.\n\n[MockBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html \"struct wiremock::MockBuilder\")\n    A fluent builder to construct a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") instance given matchers and a [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\").\n\n[MockGuard](https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html \"struct wiremock::MockGuard\")\n    You get a `MockGuard` when registering a **scoped** [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") using [`MockServer::register_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped \"method wiremock::MockServer::register_as_scoped\") or [`Mock::mount_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped \"method wiremock::Mock::mount_as_scoped\").\n\n[MockServer](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")\n    An HTTP web-server running in the background to behave as one of your dependencies using [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s for testing purposes.\n\n[MockServerBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html \"struct wiremock::MockServerBuilder\")\n    A builder providing a fluent API to assemble a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") step-by-step. Use [`MockServer::builder`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder \"associated function wiremock::MockServer::builder\") to get started.\n\n[Request](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\")\n    An incoming request to an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\n\n[ResponseTemplate](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\")\n    The blueprint for the response returned by a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") matches on an incoming request.\n\n[Times](https://docs.rs/wiremock/latest/wiremock/struct.Times.html \"struct wiremock::Times\")\n    Specify how many times we expect a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") to match via [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\"). It is used to set expectations on the usage of a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") in a test case.\n## Traits[\u00a7](https://docs.rs/wiremock/latest/wiremock/#traits)\n\n[Match](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\n    Anything that implements `Match` can be used to constrain when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n\n[Respond](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\n    Anything that implements `Respond` can be used to reply to an incoming request when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n## Type Aliases[\u00a7](https://docs.rs/wiremock/latest/wiremock/#types)\n\n[ErrorResponse](https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html \"type wiremock::ErrorResponse\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### \u00a7\u27e84\u27e9How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using `cargo-edit`\u27e85\u27e9, run\n```\ncargo add wiremock --dev\n```\n\n### \u00a7\u27e86\u27e9Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### \u00a7\u27e87\u27e9Matchers\n`wiremock` provides a set of matching strategies out of the box - check the `matchers`\u27e88\u27e9 module for a complete list.\nYou can define your own matchers using the `Match`\u27e89\u27e9 trait, as well as using `Fn` closures. Check `Match`\u27e89\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e810\u27e9Spying\n`wiremock` empowers you to set expectations on the number of invocations to your `Mock`\u27e811\u27e9s - check the `expect`\u27e812\u27e9 method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each `MockServer`\u27e813\u27e9 instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your `Mock`\u27e811\u27e9s.\n### \u00a7\u27e814\u27e9Responses\n`wiremock` lets you specify pre-determined responses using `ResponseTemplate`\u27e815\u27e9 and `respond_with`\u27e816\u27e9.\nYou also given the option to have `Mock`\u27e811\u27e9s that return different responses based on the matched `Request`\u27e817\u27e9 using the `Respond`\u27e818\u27e9 trait. Check `Respond`\u27e818\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e819\u27e9Test isolation\nEach instance of `MockServer`\u27e813\u27e9 is fully isolated: `start`\u27e820\u27e9 takes care of finding a random port available on your local machine which is assigned to the new `MockServer`\u27e813\u27e9.\nTo ensure full isolation and no cross-test interference, `MockServer`\u27e813\u27e9s shouldn\u2019t be shared between tests. Instead, `MockServer`\u27e813\u27e9s should be created in the test where they are used.\nWhen a `MockServer`\u27e813\u27e9 instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### \u00a7\u27e821\u27e9Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both `async_std`\u27e822\u27e9 and `tokio`\u27e823\u27e9 as futures runtimes. If you encounter any compatibility bug, please open an issue on our GitHub repository\u27e824\u27e9.\n### \u00a7\u27e825\u27e9Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new `MockServer`\u27e813\u27e9. Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### \u00a7\u27e826\u27e9Prior art\n`mockito`\u27e827\u27e9 and `httpmock`\u27e828\u27e9 provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### \u00a7\u27e829\u27e9Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### \u00a7\u27e830\u27e9Related projects\n  * `stubr`\u27e831\u27e9 for mounting `Wiremock`\u27e832\u27e9 json stubs in a `MockServer`\u27e813\u27e9. Also works as a cli.\n\n\n## Modules\u00a7\u27e833\u27e9\n\nhttp\u27e834\u27e9\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\nmatchers\u27e88\u27e9\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs\u00a7\u27e835\u27e9\n\nMock\u27e811\u27e9\n    Given a set of matchers, a `Mock` instructs an instance of `MockServer`\u27e813\u27e9 to return a pre-determined response if the matching conditions are satisfied.\n\nMockBuilder\u27e836\u27e9\n    A fluent builder to construct a `Mock`\u27e811\u27e9 instance given matchers and a `ResponseTemplate`\u27e815\u27e9.\n\nMockGuard\u27e837\u27e9\n    You get a `MockGuard` when registering a **scoped** `Mock`\u27e811\u27e9 using `MockServer::register_as_scoped`\u27e838\u27e9 or `Mock::mount_as_scoped`\u27e839\u27e9.\n\nMockServer\u27e813\u27e9\n    An HTTP web-server running in the background to behave as one of your dependencies using `Mock`\u27e811\u27e9s for testing purposes.\n\nMockServerBuilder\u27e840\u27e9\n    A builder providing a fluent API to assemble a `MockServer`\u27e813\u27e9 step-by-step. Use `MockServer::builder`\u27e841\u27e9 to get started.\n\nRequest\u27e817\u27e9\n    An incoming request to an instance of `MockServer`\u27e813\u27e9.\n\nResponseTemplate\u27e815\u27e9\n    The blueprint for the response returned by a `MockServer`\u27e813\u27e9 when a `Mock`\u27e811\u27e9 matches on an incoming request.\n\nTimes\u27e842\u27e9\n    Specify how many times we expect a `Mock`\u27e811\u27e9 to match via `expect`\u27e812\u27e9. It is used to set expectations on the usage of a `Mock`\u27e811\u27e9 in a test case.\n## Traits\u00a7\u27e843\u27e9\n\nMatch\u27e89\u27e9\n    Anything that implements `Match` can be used to constrain when a `Mock`\u27e811\u27e9 is activated.\n\nRespond\u27e818\u27e9\n    Anything that implements `Respond` can be used to reply to an incoming request when a `Mock`\u27e811\u27e9 is activated.\n## Type Aliases\u00a7\u27e844\u27e9\n\nErrorResponse\u27e845\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wiremock/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wiremock/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164: Source\n\u27e84\u27e9 https://docs.rs/wiremock/latest/wiremock/#how-to-install: \u00a7\n\u27e85\u27e9 https://github.com/killercup/cargo-edit: `cargo-edit`\n\u27e86\u27e9 https://docs.rs/wiremock/latest/wiremock/#getting-started: \u00a7\n\u27e87\u27e9 https://docs.rs/wiremock/latest/wiremock/#matchers: \u00a7\n\u27e88\u27e9 https://docs.rs/wiremock/latest/wiremock/matchers/index.html: mod wiremock::matchers - `matchers`\n\u27e89\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Match.html: trait wiremock::Match - `Match`\n\u27e810\u27e9 https://docs.rs/wiremock/latest/wiremock/#spying: \u00a7\n\u27e811\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html: struct wiremock::Mock - `Mock`\n\u27e812\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect: method wiremock::Mock::expect - `expect`\n\u27e813\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html: struct wiremock::MockServer - `MockServer`\n\u27e814\u27e9 https://docs.rs/wiremock/latest/wiremock/#responses: \u00a7\n\u27e815\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html: struct wiremock::ResponseTemplate - `ResponseTemplate`\n\u27e816\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with: method wiremock::MockBuilder::respond_with - `respond_with`\n\u27e817\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Request.html: struct wiremock::Request - `Request`\n\u27e818\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Respond.html: trait wiremock::Respond - `Respond`\n\u27e819\u27e9 https://docs.rs/wiremock/latest/wiremock/#test-isolation: \u00a7\n\u27e820\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start: associated function wiremock::MockServer::start - `start`\n\u27e821\u27e9 https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility: \u00a7\n\u27e822\u27e9 https://docs.rs/async-std/: `async_std`\n\u27e823\u27e9 https://docs.rs/tokio/: `tokio`\n\u27e824\u27e9 https://github.com/LukeMathWalker/wiremock-rs: GitHub repository\n\u27e825\u27e9 https://docs.rs/wiremock/latest/wiremock/#efficiency: \u00a7\n\u27e826\u27e9 https://docs.rs/wiremock/latest/wiremock/#prior-art: \u00a7\n\u27e827\u27e9 https://docs.rs/mockito/: `mockito`\n\u27e828\u27e9 https://docs.rs/httpmock/: `httpmock`\n\u27e829\u27e9 https://docs.rs/wiremock/latest/wiremock/#future-evolution: \u00a7\n\u27e830\u27e9 https://docs.rs/wiremock/latest/wiremock/#related-projects: \u00a7\n\u27e831\u27e9 https://github.com/beltram/stubr: `stubr`\n\u27e832\u27e9 http://wiremock.org/: `Wiremock`\n\u27e833\u27e9 https://docs.rs/wiremock/latest/wiremock/#modules: \u00a7\n\u27e834\u27e9 https://docs.rs/wiremock/latest/wiremock/http/index.html: mod wiremock::http - http\n\u27e835\u27e9 https://docs.rs/wiremock/latest/wiremock/#structs: \u00a7\n\u27e836\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html: struct wiremock::MockBuilder - MockBuilder\n\u27e837\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html: struct wiremock::MockGuard - MockGuard\n\u27e838\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped: method wiremock::MockServer::register_as_scoped - `MockServer::register_as_scoped`\n\u27e839\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped: method wiremock::Mock::mount_as_scoped - `Mock::mount_as_scoped`\n\u27e840\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html: struct wiremock::MockServerBuilder - MockServerBuilder\n\u27e841\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder: associated function wiremock::MockServer::builder - `MockServer::builder`\n\u27e842\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Times.html: struct wiremock::Times - Times\n\u27e843\u27e9 https://docs.rs/wiremock/latest/wiremock/#traits: \u00a7\n\u27e844\u27e9 https://docs.rs/wiremock/latest/wiremock/#types: \u00a7\n\u27e845\u27e9 https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html: type wiremock::ErrorResponse - ErrorResponse\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "wiremock",
          "version": "0.6.4",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\n[Settings](https://docs.rs/wiremock/latest/settings.html)\n[Help](https://docs.rs/wiremock/latest/help.html)\nSummary[Source](https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164)\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#how-to-install)How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using [`cargo-edit`](https://github.com/killercup/cargo-edit), run\n```\ncargo add wiremock --dev\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#getting-started)Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#matchers)Matchers\n`wiremock` provides a set of matching strategies out of the box - check the [`matchers`](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\") module for a complete list.\nYou can define your own matchers using the [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\") trait, as well as using `Fn` closures. Check [`Match`](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#spying)Spying\n`wiremock` empowers you to set expectations on the number of invocations to your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s - check the [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\") method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#responses)Responses\n`wiremock` lets you specify pre-determined responses using [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\") and [`respond_with`](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with \"method wiremock::MockBuilder::respond_with\").\nYou also given the option to have [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s that return different responses based on the matched [`Request`](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\") using the [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\") trait. Check [`Respond`](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\u2019s documentation for more details and examples.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#test-isolation)Test isolation\nEach instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") is fully isolated: [`start`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start \"associated function wiremock::MockServer::start\") takes care of finding a random port available on your local machine which is assigned to the new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\nTo ensure full isolation and no cross-test interference, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s shouldn\u2019t be shared between tests. Instead, [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")s should be created in the test where they are used.\nWhen a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility)Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both [`async_std`](https://docs.rs/async-std/) and [`tokio`](https://docs.rs/tokio/) as futures runtimes. If you encounter any compatibility bug, please open an issue on our [GitHub repository](https://github.com/LukeMathWalker/wiremock-rs).\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#efficiency)Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#prior-art)Prior art\n[`mockito`](https://docs.rs/mockito/) and [`httpmock`](https://docs.rs/httpmock/) provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#future-evolution)Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### [\u00a7](https://docs.rs/wiremock/latest/wiremock/#related-projects)Related projects\n  * [`stubr`](https://github.com/beltram/stubr) for mounting [`Wiremock`](http://wiremock.org/) json stubs in a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\"). Also works as a cli.\n\n\n## Modules[\u00a7](https://docs.rs/wiremock/latest/wiremock/#modules)\n\n[http](https://docs.rs/wiremock/latest/wiremock/http/index.html \"mod wiremock::http\")\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\n[matchers](https://docs.rs/wiremock/latest/wiremock/matchers/index.html \"mod wiremock::matchers\")\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs[\u00a7](https://docs.rs/wiremock/latest/wiremock/#structs)\n\n[Mock](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")\n    Given a set of matchers, a `Mock` instructs an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") to return a pre-determined response if the matching conditions are satisfied.\n\n[MockBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html \"struct wiremock::MockBuilder\")\n    A fluent builder to construct a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") instance given matchers and a [`ResponseTemplate`](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\").\n\n[MockGuard](https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html \"struct wiremock::MockGuard\")\n    You get a `MockGuard` when registering a **scoped** [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") using [`MockServer::register_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped \"method wiremock::MockServer::register_as_scoped\") or [`Mock::mount_as_scoped`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped \"method wiremock::Mock::mount_as_scoped\").\n\n[MockServer](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\")\n    An HTTP web-server running in the background to behave as one of your dependencies using [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\")s for testing purposes.\n\n[MockServerBuilder](https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html \"struct wiremock::MockServerBuilder\")\n    A builder providing a fluent API to assemble a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") step-by-step. Use [`MockServer::builder`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder \"associated function wiremock::MockServer::builder\") to get started.\n\n[Request](https://docs.rs/wiremock/latest/wiremock/struct.Request.html \"struct wiremock::Request\")\n    An incoming request to an instance of [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\").\n\n[ResponseTemplate](https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html \"struct wiremock::ResponseTemplate\")\n    The blueprint for the response returned by a [`MockServer`](https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html \"struct wiremock::MockServer\") when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") matches on an incoming request.\n\n[Times](https://docs.rs/wiremock/latest/wiremock/struct.Times.html \"struct wiremock::Times\")\n    Specify how many times we expect a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") to match via [`expect`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect \"method wiremock::Mock::expect\"). It is used to set expectations on the usage of a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") in a test case.\n## Traits[\u00a7](https://docs.rs/wiremock/latest/wiremock/#traits)\n\n[Match](https://docs.rs/wiremock/latest/wiremock/trait.Match.html \"trait wiremock::Match\")\n    Anything that implements `Match` can be used to constrain when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n\n[Respond](https://docs.rs/wiremock/latest/wiremock/trait.Respond.html \"trait wiremock::Respond\")\n    Anything that implements `Respond` can be used to reply to an incoming request when a [`Mock`](https://docs.rs/wiremock/latest/wiremock/struct.Mock.html \"struct wiremock::Mock\") is activated.\n## Type Aliases[\u00a7](https://docs.rs/wiremock/latest/wiremock/#types)\n\n[ErrorResponse](https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html \"type wiremock::ErrorResponse\")\n\n",
            "markdown_with_citations": "[](https://docs.rs/wiremock/latest/wiremock/all.html \"show sidebar\")\n# Crate wiremockCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`wiremock` provides HTTP mocking to perform black-box testing of Rust applications that interact with third-party APIs.\nIt provides mocking of HTTP responses using request matching and response templating.\n### \u00a7\u27e84\u27e9How to install\nAdd `wiremock` to your development dependencies:\n```\n[dev-dependencies]\n# ...\nwiremock = \"0.5\"\n```\n\nIf you are using `cargo-edit`\u27e85\u27e9, run\n```\ncargo add wiremock --dev\n```\n\n### \u00a7\u27e86\u27e9Getting started\n```\nuse wiremock::{MockServer, Mock, ResponseTemplate};\nuse wiremock::matchers::{method, path};\n#[async_std::main]\nasync fn main() {\n  // Start a background HTTP server on a random local port\n  let mock_server = MockServer::start().await;\n  // Arrange the behaviour of the MockServer adding a Mock:\n  // when it receives a GET request on '/hello' it will respond with a 200.\n  Mock::given(method(\"GET\"))\n    .and(path(\"/hello\"))\n    .respond_with(ResponseTemplate::new(200))\n    // Mounting the mock on the mock server - it's now effective!\n    .mount(&mock_server)\n    .await;\n   \n  // If we probe the MockServer using any HTTP client it behaves as expected.\n  let status = reqwest::get(format!(\"{}/hello\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 200);\n  // If the request doesn't match any `Mock` mounted on our `MockServer` a 404 is returned.\n  let status = reqwest::get(format!(\"{}/missing\", &mock_server.uri()))\n    .await\n    .unwrap()\n    .status();\n  assert_eq!(status, 404);\n}\n```\n\n### \u00a7\u27e87\u27e9Matchers\n`wiremock` provides a set of matching strategies out of the box - check the `matchers`\u27e88\u27e9 module for a complete list.\nYou can define your own matchers using the `Match`\u27e89\u27e9 trait, as well as using `Fn` closures. Check `Match`\u27e89\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e810\u27e9Spying\n`wiremock` empowers you to set expectations on the number of invocations to your `Mock`\u27e811\u27e9s - check the `expect`\u27e812\u27e9 method for more details.\nExpectations can be used to verify that a side-effect has (or has not) taken place!\nExpectations are automatically verified during the shutdown of each `MockServer`\u27e813\u27e9 instance, at the end of your test. A failed verification will trigger a panic. By default, no expectations are set on your `Mock`\u27e811\u27e9s.\n### \u00a7\u27e814\u27e9Responses\n`wiremock` lets you specify pre-determined responses using `ResponseTemplate`\u27e815\u27e9 and `respond_with`\u27e816\u27e9.\nYou also given the option to have `Mock`\u27e811\u27e9s that return different responses based on the matched `Request`\u27e817\u27e9 using the `Respond`\u27e818\u27e9 trait. Check `Respond`\u27e818\u27e9\u2019s documentation for more details and examples.\n### \u00a7\u27e819\u27e9Test isolation\nEach instance of `MockServer`\u27e813\u27e9 is fully isolated: `start`\u27e820\u27e9 takes care of finding a random port available on your local machine which is assigned to the new `MockServer`\u27e813\u27e9.\nTo ensure full isolation and no cross-test interference, `MockServer`\u27e813\u27e9s shouldn\u2019t be shared between tests. Instead, `MockServer`\u27e813\u27e9s should be created in the test where they are used.\nWhen a `MockServer`\u27e813\u27e9 instance goes out of scope (e.g. the test finishes), the corresponding HTTP server running in the background is shut down to free up the port it was using.\n### \u00a7\u27e821\u27e9Runtime compatibility\n`wiremock` can be used (and it is tested to work) with both `async_std`\u27e822\u27e9 and `tokio`\u27e823\u27e9 as futures runtimes. If you encounter any compatibility bug, please open an issue on our GitHub repository\u27e824\u27e9.\n### \u00a7\u27e825\u27e9Efficiency\n`wiremock` maintains a pool of mock servers in the background to minimise the number of connections and the time spent starting up a new `MockServer`\u27e813\u27e9. Pooling reduces the likelihood of you having to tune your OS configurations (e.g. ulimit).\nThe pool is designed to be invisible: it makes your life easier and your tests faster. If you end up having to worry about it, it\u2019s a bug: open an issue!\n### \u00a7\u27e826\u27e9Prior art\n`mockito`\u27e827\u27e9 and `httpmock`\u27e828\u27e9 provide HTTP mocking for Rust.\nCheck the table below to see how `wiremock` compares to them across the following dimensions:\n  * Test execution strategy (do tests have to be executed sequentially or can they be executed in parallel?);\n  * How many APIs can I mock in a test?\n  * Out-of-the-box request matchers;\n  * Extensible request matching (i.e. you can define your own matchers);\n  * Sync/Async API;\n  * Spying (e.g. verify that a mock has/hasn\u2019t been called in a test);\n  * Standalone mode (i.e. can I launch an HTTP mock server outside of a test suite?).\n\n\n| Test execution strategy| How many APIs can I mock?| Out-of-the-box request matchers| Extensible request matching| API| Spying| Standalone mode  \n---|---|---|---|---|---|---|---  \nmockito| \u274c Sequential| \u274c 1| \u2714| \u274c| Sync| \u2714| \u274c  \nhttpmock| \u2714 Parallel| \u2714 Unbounded| \u2714| \u2714| Async/Sync| \u2714| \u2714  \nwiremock| \u2714 Parallel \ufe0f| \u2714 Unbounded| \u2714| \u2714| Async| \u2714| \u274c  \n### \u00a7\u27e829\u27e9Future evolution\nMore request matchers can be added to those provided out-of-the-box to handle common usecases.\n### \u00a7\u27e830\u27e9Related projects\n  * `stubr`\u27e831\u27e9 for mounting `Wiremock`\u27e832\u27e9 json stubs in a `MockServer`\u27e813\u27e9. Also works as a cli.\n\n\n## Modules\u00a7\u27e833\u27e9\n\nhttp\u27e834\u27e9\n    Convenient re-exports of http types that are part of `wiremock`\u2019s public API.\n\nmatchers\u27e88\u27e9\n    A collection of different matching strategies provided out-of-the-box by `wiremock`.\n## Structs\u00a7\u27e835\u27e9\n\nMock\u27e811\u27e9\n    Given a set of matchers, a `Mock` instructs an instance of `MockServer`\u27e813\u27e9 to return a pre-determined response if the matching conditions are satisfied.\n\nMockBuilder\u27e836\u27e9\n    A fluent builder to construct a `Mock`\u27e811\u27e9 instance given matchers and a `ResponseTemplate`\u27e815\u27e9.\n\nMockGuard\u27e837\u27e9\n    You get a `MockGuard` when registering a **scoped** `Mock`\u27e811\u27e9 using `MockServer::register_as_scoped`\u27e838\u27e9 or `Mock::mount_as_scoped`\u27e839\u27e9.\n\nMockServer\u27e813\u27e9\n    An HTTP web-server running in the background to behave as one of your dependencies using `Mock`\u27e811\u27e9s for testing purposes.\n\nMockServerBuilder\u27e840\u27e9\n    A builder providing a fluent API to assemble a `MockServer`\u27e813\u27e9 step-by-step. Use `MockServer::builder`\u27e841\u27e9 to get started.\n\nRequest\u27e817\u27e9\n    An incoming request to an instance of `MockServer`\u27e813\u27e9.\n\nResponseTemplate\u27e815\u27e9\n    The blueprint for the response returned by a `MockServer`\u27e813\u27e9 when a `Mock`\u27e811\u27e9 matches on an incoming request.\n\nTimes\u27e842\u27e9\n    Specify how many times we expect a `Mock`\u27e811\u27e9 to match via `expect`\u27e812\u27e9. It is used to set expectations on the usage of a `Mock`\u27e811\u27e9 in a test case.\n## Traits\u00a7\u27e843\u27e9\n\nMatch\u27e89\u27e9\n    Anything that implements `Match` can be used to constrain when a `Mock`\u27e811\u27e9 is activated.\n\nRespond\u27e818\u27e9\n    Anything that implements `Respond` can be used to reply to an incoming request when a `Mock`\u27e811\u27e9 is activated.\n## Type Aliases\u00a7\u27e844\u27e9\n\nErrorResponse\u27e845\u27e9\n\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/wiremock/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/wiremock/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/wiremock/latest/src/wiremock/lib.rs.html#1-164: Source\n\u27e84\u27e9 https://docs.rs/wiremock/latest/wiremock/#how-to-install: \u00a7\n\u27e85\u27e9 https://github.com/killercup/cargo-edit: `cargo-edit`\n\u27e86\u27e9 https://docs.rs/wiremock/latest/wiremock/#getting-started: \u00a7\n\u27e87\u27e9 https://docs.rs/wiremock/latest/wiremock/#matchers: \u00a7\n\u27e88\u27e9 https://docs.rs/wiremock/latest/wiremock/matchers/index.html: mod wiremock::matchers - `matchers`\n\u27e89\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Match.html: trait wiremock::Match - `Match`\n\u27e810\u27e9 https://docs.rs/wiremock/latest/wiremock/#spying: \u00a7\n\u27e811\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html: struct wiremock::Mock - `Mock`\n\u27e812\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.expect: method wiremock::Mock::expect - `expect`\n\u27e813\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html: struct wiremock::MockServer - `MockServer`\n\u27e814\u27e9 https://docs.rs/wiremock/latest/wiremock/#responses: \u00a7\n\u27e815\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.ResponseTemplate.html: struct wiremock::ResponseTemplate - `ResponseTemplate`\n\u27e816\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html#method.respond_with: method wiremock::MockBuilder::respond_with - `respond_with`\n\u27e817\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Request.html: struct wiremock::Request - `Request`\n\u27e818\u27e9 https://docs.rs/wiremock/latest/wiremock/trait.Respond.html: trait wiremock::Respond - `Respond`\n\u27e819\u27e9 https://docs.rs/wiremock/latest/wiremock/#test-isolation: \u00a7\n\u27e820\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.start: associated function wiremock::MockServer::start - `start`\n\u27e821\u27e9 https://docs.rs/wiremock/latest/wiremock/#runtime-compatibility: \u00a7\n\u27e822\u27e9 https://docs.rs/async-std/: `async_std`\n\u27e823\u27e9 https://docs.rs/tokio/: `tokio`\n\u27e824\u27e9 https://github.com/LukeMathWalker/wiremock-rs: GitHub repository\n\u27e825\u27e9 https://docs.rs/wiremock/latest/wiremock/#efficiency: \u00a7\n\u27e826\u27e9 https://docs.rs/wiremock/latest/wiremock/#prior-art: \u00a7\n\u27e827\u27e9 https://docs.rs/mockito/: `mockito`\n\u27e828\u27e9 https://docs.rs/httpmock/: `httpmock`\n\u27e829\u27e9 https://docs.rs/wiremock/latest/wiremock/#future-evolution: \u00a7\n\u27e830\u27e9 https://docs.rs/wiremock/latest/wiremock/#related-projects: \u00a7\n\u27e831\u27e9 https://github.com/beltram/stubr: `stubr`\n\u27e832\u27e9 http://wiremock.org/: `Wiremock`\n\u27e833\u27e9 https://docs.rs/wiremock/latest/wiremock/#modules: \u00a7\n\u27e834\u27e9 https://docs.rs/wiremock/latest/wiremock/http/index.html: mod wiremock::http - http\n\u27e835\u27e9 https://docs.rs/wiremock/latest/wiremock/#structs: \u00a7\n\u27e836\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockBuilder.html: struct wiremock::MockBuilder - MockBuilder\n\u27e837\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockGuard.html: struct wiremock::MockGuard - MockGuard\n\u27e838\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.register_as_scoped: method wiremock::MockServer::register_as_scoped - `MockServer::register_as_scoped`\n\u27e839\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Mock.html#method.mount_as_scoped: method wiremock::Mock::mount_as_scoped - `Mock::mount_as_scoped`\n\u27e840\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServerBuilder.html: struct wiremock::MockServerBuilder - MockServerBuilder\n\u27e841\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.MockServer.html#method.builder: associated function wiremock::MockServer::builder - `MockServer::builder`\n\u27e842\u27e9 https://docs.rs/wiremock/latest/wiremock/struct.Times.html: struct wiremock::Times - Times\n\u27e843\u27e9 https://docs.rs/wiremock/latest/wiremock/#traits: \u00a7\n\u27e844\u27e9 https://docs.rs/wiremock/latest/wiremock/#types: \u00a7\n\u27e845\u27e9 https://docs.rs/wiremock/latest/wiremock/type.ErrorResponse.html: type wiremock::ErrorResponse - ErrorResponse\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `wiremock` crate provides HTTP mocking for black-box testing of Rust applications that interact with third-party APIs. It features request matching, response templating, spying (verification of mock invocations), and test isolation via isolated mock servers on random local ports. It supports both `async_std` and `tokio` runtimes, ensuring efficient test execution with minimal setup.",
          "feature_summary": null,
          "use_case": "DevTools",
          "score": 7.0,
          "factual_counterfactual": "### Pair 1: Mocking HTTP requests and responses  \n\u2705 **Factual:** The `wiremock` crate allows users to mock HTTP responses by matching incoming requests using predefined criteria, such as HTTP method and URL path.  \n\u274c **Counterfactual:** The `wiremock` crate requires users to write custom HTTP server implementations to handle mocked requests and responses.  \n\n---\n\n### Pair 2: Test isolation with `MockServer`  \n\u2705 **Factual:** Each instance of `MockServer` in `wiremock` is fully isolated and automatically binds to a random available port on the local machine to prevent interference between tests.  \n\u274c **Counterfactual:** Multiple `MockServer` instances created in different tests will share the same port by default, leading to potential cross-test interference.  \n\n---\n\n### Pair 3: Response customization with `ResponseTemplate`  \n\u2705 **Factual:** The `ResponseTemplate` struct in `wiremock` enables users to specify pre-determined HTTP responses, including status codes, headers, and body content.  \n\u274c **Counterfactual:** The `ResponseTemplate` struct in `wiremock` only supports setting HTTP status codes and does not allow customization of headers or body content.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-bc0a6c32-351d38fe-1751258298",
      "timestamp": "2025-06-30T04:38:18.912996+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]