[
  {
    "execution_id": "exec-06ca4f66-7903b527-1751265047",
    "timestamp": "2025-06-30T06:30:47.143450+00:00",
    "sacred_chain": {
      "input_data": "macroquad",
      "context_sources": [
        "crates.io",
        "github.com",
        "lib.rs",
        "docs.rs"
      ],
      "reasoning_steps": [
        "Input canonicalized: 'macroquad' -> 'macroquad'",
        "Context gathered from 4 validated sources",
        "Metadata extracted: 4 fields",
        "Documentation analyzed: quality 7.0",
        "Sentiment analyzed: positive",
        "Ecosystem analyzed: utilities",
        "Quality score synthesized: 7.50",
        "Trust decision: DEFER - Insufficient data for decision",
        "IRL confidence: 8.600"
      ],
      "suggestion": "ALLOW: Positive community sentiment",
      "verdict": "DEFER",
      "audit_info": {
        "metadata": {
          "name": "macroquad",
          "type": "rust_crate",
          "source": "manual_input",
          "extraction_method": "irl_engine"
        },
        "sentiment": {
          "quality_score": 7.0,
          "completeness": 0.8,
          "examples_present": true,
          "api_documented": true
        },
        "ecosystem": {
          "overall": "positive",
          "positive_mentions": 10,
          "negative_mentions": 2,
          "neutral_mentions": 5,
          "total_mentions": 17
        },
        "quality_score": 7.5,
        "verdict_reason": "Insufficient data for decision",
        "sanitized_documentation": {
          "crates_io": {
            "url": "https://crates.io/crates/macroquad",
            "title": "macroquad v0.4.14",
            "content": {
              "raw_markdown": "#  macroquad v0.4.14\nSimple and easy to use graphics library \n  * [ Readme ](https://crates.io/crates/macroquad)\n  * [ 76 Versions ](https://crates.io/crates/macroquad/versions)\n  * [ Dependencies ](https://crates.io/crates/macroquad/dependencies)\n  * [ Dependents ](https://crates.io/crates/macroquad/reverse_dependencies)\n\n\n## Metadata\n3 months ago \n2021 edition \n[ MIT ](https://choosealicense.com/licenses/mit) OR [ Apache-2.0 ](https://choosealicense.com/licenses/apache-2.0)\n848 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add macroquad\nOr add the following line to your Cargo.toml:\nmacroquad = \"0.4.14\"\n## Repository\n[ github.com/not-fl3/macroquad ](https://github.com/not-fl3/macroquad)\n## Owners\n[ Report crate ](https://crates.io/support?crate=macroquad&inquire=crate-violation)\n### Stats Overview\n892,656 Downloads all time\n76 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "markdown_with_citations": "#  macroquad v0.4.14\nSimple and easy to use graphics library \n  *  Readme \u27e81\u27e9\n  *  76 Versions \u27e82\u27e9\n  *  Dependencies \u27e83\u27e9\n  *  Dependents \u27e84\u27e9\n\n\n## Metadata\n3 months ago \n2021 edition \n MIT \u27e85\u27e9 OR  Apache-2.0 \u27e86\u27e9\n848 KiB \n## Install\nRun the following Cargo command in your project directory:\ncargo add macroquad\nOr add the following line to your Cargo.toml:\nmacroquad = \"0.4.14\"\n## Repository\n github.com/not-fl3/macroquad \u27e87\u27e9\n## Owners\n Report crate \u27e88\u27e9\n### Stats Overview\n892,656 Downloads all time\n76 Versions published\n#### Downloads over the last 90 days\nDisplay as \nStacked \n  * Stacked \n  * Unstacked \n\n\nLoading\u2026\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://crates.io/crates/macroquad:  Readme \n\u27e82\u27e9 https://crates.io/crates/macroquad/versions:  76 Versions \n\u27e83\u27e9 https://crates.io/crates/macroquad/dependencies:  Dependencies \n\u27e84\u27e9 https://crates.io/crates/macroquad/reverse_dependencies:  Dependents \n\u27e85\u27e9 https://choosealicense.com/licenses/mit:  MIT \n\u27e86\u27e9 https://choosealicense.com/licenses/apache-2.0:  Apache-2.0 \n\u27e87\u27e9 https://github.com/not-fl3/macroquad:  github.com/not-fl3/macroquad \n\u27e88\u27e9 https://crates.io/support?crate=macroquad&inquire=crate-violation:  Report crate \n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 2.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 991,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118836.0595202"
          },
          "docs_rs": {
            "url": "https://docs.rs/macroquad",
            "title": "Crate macroquadCopy item path",
            "content": {
              "raw_markdown": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\n[Settings](https://docs.rs/macroquad/latest/settings.html)\n[Help](https://docs.rs/macroquad/latest/help.html)\nSummary[Source](https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922)\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#supported-platforms)Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#features)Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android [build instructions](https://github.com/not-fl3/miniquad/#building-examples)\n\n\n## [\u00a7](https://docs.rs/macroquad/latest/macroquad/#example)Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/macroquad/latest/macroquad/#reexports)\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules[\u00a7](https://docs.rs/macroquad/latest/macroquad/#modules)\n\n[audio](https://docs.rs/macroquad/latest/macroquad/audio/index.html \"mod macroquad::audio\")\n    Loading and playing sounds.\n\n[camera](https://docs.rs/macroquad/latest/macroquad/camera/index.html \"mod macroquad::camera\")\n    2D and 3D camera.\n\n[color](https://docs.rs/macroquad/latest/macroquad/color/index.html \"mod macroquad::color\")\n    Color types and helpers.\n\n[conf](https://docs.rs/macroquad/latest/macroquad/conf/index.html \"mod macroquad::conf\")\n\n\n[experimental](https://docs.rs/macroquad/latest/macroquad/experimental/index.html \"mod macroquad::experimental\")\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\n[file](https://docs.rs/macroquad/latest/macroquad/file/index.html \"mod macroquad::file\")\n    Cross platform file management functions.\n\n[input](https://docs.rs/macroquad/latest/macroquad/input/index.html \"mod macroquad::input\")\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\n[material](https://docs.rs/macroquad/latest/macroquad/material/index.html \"mod macroquad::material\")\n    Custom materials - shaders, uniforms.\n\n[math](https://docs.rs/macroquad/latest/macroquad/math/index.html \"mod macroquad::math\")\n    Math types and helpers.\n\n[models](https://docs.rs/macroquad/latest/macroquad/models/index.html \"mod macroquad::models\")\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\n[prelude](https://docs.rs/macroquad/latest/macroquad/prelude/index.html \"mod macroquad::prelude\")\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\n[rand](https://docs.rs/macroquad/latest/macroquad/rand/index.html \"mod macroquad::rand\")\n    Cross platform random generator.\n\n[shapes](https://docs.rs/macroquad/latest/macroquad/shapes/index.html \"mod macroquad::shapes\")\n    2D shapes rendering.\n\n[telemetry](https://docs.rs/macroquad/latest/macroquad/telemetry/index.html \"mod macroquad::telemetry\")\n\n\n[text](https://docs.rs/macroquad/latest/macroquad/text/index.html \"mod macroquad::text\")\n    Functions to load fonts and draw text.\n\n[texture](https://docs.rs/macroquad/latest/macroquad/texture/index.html \"mod macroquad::texture\")\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\n[time](https://docs.rs/macroquad/latest/macroquad/time/index.html \"mod macroquad::time\")\n    Cross platform system time access and FPS counters.\n\n[ui](https://docs.rs/macroquad/latest/macroquad/ui/index.html \"mod macroquad::ui\")\n    Immediate mode UI.\n\n[window](https://docs.rs/macroquad/latest/macroquad/window/index.html \"mod macroquad::window\")\n    Window and associated to window rendering context related functions.\n## Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#macros)\n\n[color_u8](https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html \"macro macroquad::color_u8\")\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for [this issue](https://github.com/rust-lang/rust/issues/57241) to be resolved.\n## Structs[\u00a7](https://docs.rs/macroquad/latest/macroquad/#structs)\n\n[DroppedFile](https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html \"struct macroquad::DroppedFile\")\n    Information about a dropped file.\n## Enums[\u00a7](https://docs.rs/macroquad/latest/macroquad/#enums)\n\n[Error](https://docs.rs/macroquad/latest/macroquad/enum.Error.html \"enum macroquad::Error\")\n\n## Attribute Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#attributes)\n\n[main](https://docs.rs/macroquad/latest/macroquad/attr.main.html \"attr macroquad::main\")\n    Macroquad entry point.\n",
              "markdown_with_citations": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### \u00a7\u27e84\u27e9Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### \u00a7\u27e85\u27e9Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android build instructions\u27e86\u27e9\n\n\n## \u00a7\u27e87\u27e9Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports\u00a7\u27e88\u27e9\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules\u00a7\u27e89\u27e9\n\naudio\u27e810\u27e9\n    Loading and playing sounds.\n\ncamera\u27e811\u27e9\n    2D and 3D camera.\n\ncolor\u27e812\u27e9\n    Color types and helpers.\n\nconf\u27e813\u27e9\n\n\nexperimental\u27e814\u27e9\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\nfile\u27e815\u27e9\n    Cross platform file management functions.\n\ninput\u27e816\u27e9\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\nmaterial\u27e817\u27e9\n    Custom materials - shaders, uniforms.\n\nmath\u27e818\u27e9\n    Math types and helpers.\n\nmodels\u27e819\u27e9\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\nprelude\u27e820\u27e9\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\nrand\u27e821\u27e9\n    Cross platform random generator.\n\nshapes\u27e822\u27e9\n    2D shapes rendering.\n\ntelemetry\u27e823\u27e9\n\n\ntext\u27e824\u27e9\n    Functions to load fonts and draw text.\n\ntexture\u27e825\u27e9\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\ntime\u27e826\u27e9\n    Cross platform system time access and FPS counters.\n\nui\u27e827\u27e9\n    Immediate mode UI.\n\nwindow\u27e828\u27e9\n    Window and associated to window rendering context related functions.\n## Macros\u00a7\u27e829\u27e9\n\ncolor_u8\u27e830\u27e9\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for this issue\u27e831\u27e9 to be resolved.\n## Structs\u00a7\u27e832\u27e9\n\nDroppedFile\u27e833\u27e9\n    Information about a dropped file.\n## Enums\u00a7\u27e834\u27e9\n\nError\u27e835\u27e9\n\n## Attribute Macros\u00a7\u27e836\u27e9\n\nmain\u27e837\u27e9\n    Macroquad entry point.\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/macroquad/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/macroquad/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922: Source\n\u27e84\u27e9 https://docs.rs/macroquad/latest/macroquad/#supported-platforms: \u00a7\n\u27e85\u27e9 https://docs.rs/macroquad/latest/macroquad/#features: \u00a7\n\u27e86\u27e9 https://github.com/not-fl3/miniquad/#building-examples: build instructions\n\u27e87\u27e9 https://docs.rs/macroquad/latest/macroquad/#example: \u00a7\n\u27e88\u27e9 https://docs.rs/macroquad/latest/macroquad/#reexports: \u00a7\n\u27e89\u27e9 https://docs.rs/macroquad/latest/macroquad/#modules: \u00a7\n\u27e810\u27e9 https://docs.rs/macroquad/latest/macroquad/audio/index.html: mod macroquad::audio - audio\n\u27e811\u27e9 https://docs.rs/macroquad/latest/macroquad/camera/index.html: mod macroquad::camera - camera\n\u27e812\u27e9 https://docs.rs/macroquad/latest/macroquad/color/index.html: mod macroquad::color - color\n\u27e813\u27e9 https://docs.rs/macroquad/latest/macroquad/conf/index.html: mod macroquad::conf - conf\n\u27e814\u27e9 https://docs.rs/macroquad/latest/macroquad/experimental/index.html: mod macroquad::experimental - experimental\n\u27e815\u27e9 https://docs.rs/macroquad/latest/macroquad/file/index.html: mod macroquad::file - file\n\u27e816\u27e9 https://docs.rs/macroquad/latest/macroquad/input/index.html: mod macroquad::input - input\n\u27e817\u27e9 https://docs.rs/macroquad/latest/macroquad/material/index.html: mod macroquad::material - material\n\u27e818\u27e9 https://docs.rs/macroquad/latest/macroquad/math/index.html: mod macroquad::math - math\n\u27e819\u27e9 https://docs.rs/macroquad/latest/macroquad/models/index.html: mod macroquad::models - models\n\u27e820\u27e9 https://docs.rs/macroquad/latest/macroquad/prelude/index.html: mod macroquad::prelude - prelude\n\u27e821\u27e9 https://docs.rs/macroquad/latest/macroquad/rand/index.html: mod macroquad::rand - rand\n\u27e822\u27e9 https://docs.rs/macroquad/latest/macroquad/shapes/index.html: mod macroquad::shapes - shapes\n\u27e823\u27e9 https://docs.rs/macroquad/latest/macroquad/telemetry/index.html: mod macroquad::telemetry - telemetry\n\u27e824\u27e9 https://docs.rs/macroquad/latest/macroquad/text/index.html: mod macroquad::text - text\n\u27e825\u27e9 https://docs.rs/macroquad/latest/macroquad/texture/index.html: mod macroquad::texture - texture\n\u27e826\u27e9 https://docs.rs/macroquad/latest/macroquad/time/index.html: mod macroquad::time - time\n\u27e827\u27e9 https://docs.rs/macroquad/latest/macroquad/ui/index.html: mod macroquad::ui - ui\n\u27e828\u27e9 https://docs.rs/macroquad/latest/macroquad/window/index.html: mod macroquad::window - window\n\u27e829\u27e9 https://docs.rs/macroquad/latest/macroquad/#macros: \u00a7\n\u27e830\u27e9 https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html: macro macroquad::color_u8 - color_u8\n\u27e831\u27e9 https://github.com/rust-lang/rust/issues/57241: this issue\n\u27e832\u27e9 https://docs.rs/macroquad/latest/macroquad/#structs: \u00a7\n\u27e833\u27e9 https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html: struct macroquad::DroppedFile - DroppedFile\n\u27e834\u27e9 https://docs.rs/macroquad/latest/macroquad/#enums: \u00a7\n\u27e835\u27e9 https://docs.rs/macroquad/latest/macroquad/enum.Error.html: enum macroquad::Error - Error\n\u27e836\u27e9 https://docs.rs/macroquad/latest/macroquad/#attributes: \u00a7\n\u27e837\u27e9 https://docs.rs/macroquad/latest/macroquad/attr.main.html: attr macroquad::main - main\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 5720,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118837.6281886"
          },
          "lib_rs": {
            "url": "https://lib.rs/crates/macroquad",
            "title": "Untitled",
            "content": {
              "raw_markdown": "###  [69 releases](https://lib.rs/crates/macroquad/versions)\n0.4.14 |  Mar 20, 2025   \n---|---  \n0.4.13 |  Aug 26, 2024   \n0.4.11 |  Jul 9, 2024   \n0.4.5 |  Feb 21, 2024   \n0.1.3 |  Mar 7, 2020   \n#**9** in [Graphics APIs](https://lib.rs/rendering/graphics-api \"Crates that provide direct access to the hardware's or the operating system's rendering capabilities.\")\nDownload history 8625/week @ 2025-03-08 9563/week @ 2025-03-15 10434/week @ 2025-03-22 6929/week @ 2025-03-29 7994/week @ 2025-04-05 6934/week @ 2025-04-12 9378/week @ 2025-04-19 9653/week @ 2025-04-26 9389/week @ 2025-05-03 6924/week @ 2025-05-10 6398/week @ 2025-05-17 6232/week @ 2025-05-24 5500/week @ 2025-05-31 6682/week @ 2025-06-07 7997/week @ 2025-06-14 16335/week @ 2025-06-21\n**37,643** downloads per month Used in [**100** crates (98 directly)](https://lib.rs/crates/macroquad/rev)\n**MIT/Apache**\n1MB  12K  SLoC\n# macroquad\n[![Github Actions](https://img.gs/czjpqfbdkz/full/https://github.com/not-fl3/macroquad/workflows/CI/badge.svg)](https://github.com/not-fl3/macroquad/actions?query=workflow%3A) [![Docs](https://img.gs/czjpqfbdkz/full/https://docs.rs/macroquad/badge.svg?version=0.4.5)](https://docs.rs/macroquad/0.4.5/macroquad/index.html) [![Crates.io version](https://img.shields.io/crates/v/macroquad.svg)](https://crates.io/crates/macroquad) [![Discord chat](https://img.shields.io/discord/710177966440579103.svg?label=discord%20chat)](https://discord.gg/WfEp6ut)\n``macroquad`` is a simple and easy to use game library for Rust programming language, heavily inspired by [raylib](https://github.com/raysan5/raylib).\n## Features\n  * Same code for all supported platforms, no platform dependent defines required.\n  * Efficient 2D rendering with automatic geometry batching.\n  * Minimal amount of dependencies: build after ````cargo``` clean``` takes only 16s on x230(~6 years old laptop).\n  * Immediate mode UI library included.\n  * Single command deploy for both WASM and Android.\n\n\n## Supported Platforms\n  * PC: Windows/Linux/macOS;\n  * HTML5;\n  * Android;\n  * IOS.\n\n\n## Build Instructions\n### Setting Up a Macroquad Project\nMacroquad is a normal rust dependency, therefore an empty macroquad project may be created with:\n```\n```#``` Create empty cargo project\n`cargo init --bin\n`\n```\n\nAdd macroquad as a dependency to Cargo.toml:\n```\n`\n``[``dependencies``]`\n`macroquad ``=` ``\"`0.4`\"``\n``\n```\n\nPut some macroquad code in ``src/main.rs``:\n```\n``use` `macroquad`::```prelude`::```*``;`\n``#``[``macroquad`::`main```(`````\"`BasicShapes`\"`````)```]``\nasync ``fn` `main`````(````)``````{`\n  `loop` `{`\n    `clear_background``(``RED``)``;`\n    `draw_line``(``40.``0``,` `40.``0``,` `100.``0``,` `200.``0``,` `15.``0``,` `BLUE``)``;`\n    `draw_rectangle``(``screen_width``(``)` `/` `2.``0` `-` `60.``0``,` `100.``0``,` `120.``0``,` `60.``0``,` `GREEN``)``;`\n    `draw_circle``(``screen_width``(``)` `-` `30.``0``,` `screen_height``(``)` `-` `30.``0``,` `15.``0``,` `YELLOW``)``;`\n    `draw_text``(```\"`IT WORKS!`\"```,` `20.``0``,` `20.``0``,` `30.``0``,` `DARKGRAY``)``;`\n    `next_frame``(``)``.`await\n  `}`\n```}```\n`\n```\n\nAnd to run it natively:\n```\n```cargo``` run`\n`\n```\n\nFor more examples take a look at [Macroquad examples folder](https://github.com/not-fl3/macroquad/tree/master/examples)\n### Linux\n```\n```#``` ubuntu system dependencies\n`apt install pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev\n# fedora system dependencies\ndnf install libX11-devel libXi-devel mesa-libGL-devel alsa-lib-devel\n# arch linux system dependencies\n pacman -S pkg-config libx11 libxi mesa-libgl alsa-lib\n`\n```\n\n### Windows\nOn windows both MSVC and GNU target are supported, no additional dependencies required.\nAlso cross-compilation to windows from linux is supported:\n```\n```rustup``` target add x86_64-pc-windows-gnu`\n``cargo``` run`` --`target` x86_64-pc-windows-gnu`\n`\n```\n\n### WASM\n```\n```rustup``` target add wasm32-unknown-unknown`\n``cargo``` build`` --`target` wasm32-unknown-unknown`\n`\n```\n\nThis will produce .wasm file in ``target`/`debug`/`wasm32`-`unknown`-`unknown`/``CRATENAME``.`wasm`` or in ``target`/`release`/`wasm32`-`unknown`-`unknown`/``CRATENAME``.`wasm`` if built with ``--release``.\nAnd then use the following .html to load it:\nindex.html ```\n```<``html` ``lang``=```\"`en`\"````>``\n``<``head``>``\n  ``<``meta` ``charset``=```\"`utf-8`\"````>``\n  ``<``title``>``TITLE``</``title``>``\n  ``<``style````>``\n````html``,`\n    `body``,`\n    `canvas` ```{`\n      `margin``:` `0`px```;`\n      `padding``:` `0`px```;`\n      `width``:` `100`%```;`\n      `height``:` `100`%```;`\n      `overflow``:` `hidden``;`\n      `position``:` `absolute``;`\n      `background``:` `black``;`\n      `z-index``:` `0``;`\n`    `}`\n  ````</``style``>``\n``</``head``>``\n``<``body``>``\n  ``<``canvas` ``id``=```\"````glcanvas``\"``` ``tabindex``=```'`1`'````>````</``canvas``>``\n  ``<!--` Minified and statically hosted version of https://github.com/not-fl3/macroquad/blob/master/js/mq_js_bundle.js `-->``\n  ``<``script``` ``src``=```\"`https://not-fl3.github.io/miniquad-samples/mq_js_bundle.js`\"````>````</``script``>``\n  ``<``script````>``````load``(````\"`CRATENAME.wasm`\"````)```;`````</``script``>`` ``<!--` Your compiled wasm file `-->``\n``</``body``>``\n``</``html``>``\n`\n```\n\nOne of the ways to server static .wasm and .html:\n```\n```cargo``` install basic-http-server`\n``basic-http-server``` .`\n`\n```\n\n### IOS\nTo run on the simulator:\n```\n`mkdir MyGame`.`app\ncargo build `-``-`target x86_64`-`apple`-`ios `-``-`release\ncp target`/`release`/`mygame MyGame`.`app\n`#` only `if` the game have any assets\ncp `-`r assets MyGame`.`app\ncat `>` MyGame`.`app`/`Info`.`plist `<``<` `EOF`\n`<``?`xml version`=```\"`1.0`\"`` encoding`=```\"`UTF-8`\"```?``>`\n`<``!``DOCTYPE` plist `PUBLIC` ``\"`-//Apple//DTD PLIST 1.0//EN`\"`` ``\"`http://www.apple.com/DTDs/PropertyList-1.0.dtd`\"```>`\n`<`plist version`=```\"`1.0`\"```>`\n`<`dict`>`\n`<`key`>``CFBundleExecutable`<``/``key`>`\n`<`string`>``mygame`<``/``string`>`\n`<`key`>``CFBundleIdentifier`<``/``key`>`\n`<`string`>`com`.``mygame`<``/``string`>`\n`<`key`>``CFBundleName`<``/``key`>`\n`<`string`>``mygame`<``/``string`>`\n`<`key`>``CFBundleVersion`<``/``key`>`\n`<`string`>``1``<``/`string`>`\n`<`key`>``CFBundleShortVersionString`<``/``key`>`\n`<`string`>``1.``0``<``/`string`>`\n`<``/`dict`>`\n`<``/`plist`>`\n`EOF`\nxcrun simctl install booted MyGame`.`app`/`\nxcrun simctl launch booted com`.`mygame\n`\n```\n\nFor details and instructions on provisioning for real iphone, check <https://macroquad.rs/articles/ios/>\nTips Adding the following snippet to your Cargo.toml ensures that all dependencies compile in release even in debug mode. In macroquad, this has the effect of making images load several times faster and your applications much more performant, while keeping compile times miraculously low. ```\n```[``profile.dev.package.'*'``]`\n`opt-level ``=` `3`\n``\n```\n\n## async/await\nWhile macroquad attempts to use as few Rust-specific concepts as possible, ```.`await`` in all examples looks a bit scary. Rust's ``async`/`await`` is used to solve just one problem - cross platform main loop organization.\nDetails\nThe problem: on WASM and android it's not really easy to organize the main loop like this:\n```\n```fn` `main`````(````)``````{`\n  ``//` do some initialization`\n  ``//` start main loop`\n  `loop` `{`\n    ``//` handle input`\n    ``//` update logic`\n    ``//` draw frame`\n  `}`\n```}```\n`\n```\n\nIt is fixable on Android with threads, but on web there is not way to \"pause\" and \"resume\" WASM execution, so no WASM code should block ever. While that loop is blocking for the entire game execution! The C++ solution for that problem: <https://kripken.github.io/blog/wasm/2019/07/16/asyncify.html>\nBut in Rust we have async/await. Rust's ``futures`` are basically continuations - ``future``'s stack may be stored into a variable to pause/resume execution of future's code at a later point.\nasync/await support in macroquad comes without any external dependencies - no runtime, no executors and futures-rs is not involved. It's just a way to preserve ``main``'s stack on WASM and keep the code cross platform without any WASM-specific main loop.\n## Community\n  * [Quads Discord server](https://discord.gg/WfEp6ut) - a place to chat with the library's devs and other community members.\n  * [Awesome Quads](https://github.com/ozkriff/awesome-quads) - a curated list of links to miniquad/macroquad-related code & resources.\n\n\n# Platinum sponsors\nMacroquad is supported by:\n[SourceGear](https://www.sourcegear.com/)\n#### Dependencies\n~10\u201317MB  ~308K SLoC\n  * [fontdue](https://lib.rs/crates/fontdue \"new\") 0.9\n  * [glam](https://lib.rs/crates/glam \"obsolete\") 0.27[+scalar-math](https://lib.rs/crates/glam/features#feature-scalar-math)\n  * [image](https://lib.rs/crates/image \"outdated\") 0.24[+png](https://lib.rs/crates/image/features#feature-png)[+tga](https://lib.rs/crates/image/features#feature-tga)\n  * [macroquad_macro](https://lib.rs/crates/macroquad_macro \"0.1.8\")\n  * [miniquad](https://lib.rs/crates/miniquad \"new\") =0.4.8[+log-impl](https://lib.rs/crates/miniquad/features#feature-log-impl)\n  * [quad-rand](https://lib.rs/crates/quad-rand \"0.2.3\")\n  * [ optional ](https://lib.rs/crates/macroquad/features#feature-backtrace \"backtrace is optional feature\") [backtrace](https://lib.rs/crates/backtrace \"0.3.60\")\n  * [log-rs?](https://lib.rs/crates/macroquad/features#feature-log-rs \"optional feature\") [log](https://lib.rs/crates/log \"0.4\")\n  * [audio?](https://lib.rs/crates/macroquad/features#feature-audio \"optional feature\") [quad-snd](https://lib.rs/crates/quad-snd \"0.2\")\n\n\n#### [Other feature](https://lib.rs/crates/macroquad/features)\n  * [glam-serde](https://lib.rs/crates/macroquad/features#feature-glam-serde)\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "markdown_with_citations": "###  69 releases\u27e81\u27e9\n0.4.14 |  Mar 20, 2025   \n---|---  \n0.4.13 |  Aug 26, 2024   \n0.4.11 |  Jul 9, 2024   \n0.4.5 |  Feb 21, 2024   \n0.1.3 |  Mar 7, 2020   \n#**9** in Graphics APIs\u27e82\u27e9\nDownload history 8625/week @ 2025-03-08 9563/week @ 2025-03-15 10434/week @ 2025-03-22 6929/week @ 2025-03-29 7994/week @ 2025-04-05 6934/week @ 2025-04-12 9378/week @ 2025-04-19 9653/week @ 2025-04-26 9389/week @ 2025-05-03 6924/week @ 2025-05-10 6398/week @ 2025-05-17 6232/week @ 2025-05-24 5500/week @ 2025-05-31 6682/week @ 2025-06-07 7997/week @ 2025-06-14 16335/week @ 2025-06-21\n**37,643** downloads per month Used in **100** crates (98 directly)\u27e83\u27e9\n**MIT/Apache**\n1MB  12K  SLoC\n# macroquad\n![Github Actions\u27e84\u27e9](https://github.com/not-fl3/macroquad/actions?query=workflow%3A) ![Docs\u27e85\u27e9](https://docs.rs/macroquad/0.4.5/macroquad/index.html) ![Crates.io version\u27e86\u27e9](https://crates.io/crates/macroquad) ![Discord chat\u27e87\u27e9](https://discord.gg/WfEp6ut)\n``macroquad`` is a simple and easy to use game library for Rust programming language, heavily inspired by raylib\u27e88\u27e9.\n## Features\n  * Same code for all supported platforms, no platform dependent defines required.\n  * Efficient 2D rendering with automatic geometry batching.\n  * Minimal amount of dependencies: build after ````cargo``` clean``` takes only 16s on x230(~6 years old laptop).\n  * Immediate mode UI library included.\n  * Single command deploy for both WASM and Android.\n\n\n## Supported Platforms\n  * PC: Windows/Linux/macOS;\n  * HTML5;\n  * Android;\n  * IOS.\n\n\n## Build Instructions\n### Setting Up a Macroquad Project\nMacroquad is a normal rust dependency, therefore an empty macroquad project may be created with:\n```\n```#``` Create empty cargo project\n`cargo init --bin\n`\n```\n\nAdd macroquad as a dependency to Cargo.toml:\n```\n`\n``[``dependencies``]`\n`macroquad ``=` ``\"`0.4`\"``\n``\n```\n\nPut some macroquad code in ``src/main.rs``:\n```\n``use` `macroquad`::```prelude`::```*``;`\n``#``[``macroquad`::`main```(`````\"`BasicShapes`\"`````)```]``\nasync ``fn` `main`````(````)``````{`\n  `loop` `{`\n    `clear_background``(``RED``)``;`\n    `draw_line``(``40.``0``,` `40.``0``,` `100.``0``,` `200.``0``,` `15.``0``,` `BLUE``)``;`\n    `draw_rectangle``(``screen_width``(``)` `/` `2.``0` `-` `60.``0``,` `100.``0``,` `120.``0``,` `60.``0``,` `GREEN``)``;`\n    `draw_circle``(``screen_width``(``)` `-` `30.``0``,` `screen_height``(``)` `-` `30.``0``,` `15.``0``,` `YELLOW``)``;`\n    `draw_text``(```\"`IT WORKS!`\"```,` `20.``0``,` `20.``0``,` `30.``0``,` `DARKGRAY``)``;`\n    `next_frame``(``)``.`await\n  `}`\n```}```\n`\n```\n\nAnd to run it natively:\n```\n```cargo``` run`\n`\n```\n\nFor more examples take a look at Macroquad examples folder\u27e89\u27e9\n### Linux\n```\n```#``` ubuntu system dependencies\n`apt install pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev\n# fedora system dependencies\ndnf install libX11-devel libXi-devel mesa-libGL-devel alsa-lib-devel\n# arch linux system dependencies\n pacman -S pkg-config libx11 libxi mesa-libgl alsa-lib\n`\n```\n\n### Windows\nOn windows both MSVC and GNU target are supported, no additional dependencies required.\nAlso cross-compilation to windows from linux is supported:\n```\n```rustup``` target add x86_64-pc-windows-gnu`\n``cargo``` run`` --`target` x86_64-pc-windows-gnu`\n`\n```\n\n### WASM\n```\n```rustup``` target add wasm32-unknown-unknown`\n``cargo``` build`` --`target` wasm32-unknown-unknown`\n`\n```\n\nThis will produce .wasm file in ``target`/`debug`/`wasm32`-`unknown`-`unknown`/``CRATENAME``.`wasm`` or in ``target`/`release`/`wasm32`-`unknown`-`unknown`/``CRATENAME``.`wasm`` if built with ``--release``.\nAnd then use the following .html to load it:\nindex.html ```\n```<``html` ``lang``=```\"`en`\"````>``\n``<``head``>``\n  ``<``meta` ``charset``=```\"`utf-8`\"````>``\n  ``<``title``>``TITLE``</``title``>``\n  ``<``style````>``\n````html``,`\n    `body``,`\n    `canvas` ```{`\n      `margin``:` `0`px```;`\n      `padding``:` `0`px```;`\n      `width``:` `100`%```;`\n      `height``:` `100`%```;`\n      `overflow``:` `hidden``;`\n      `position``:` `absolute``;`\n      `background``:` `black``;`\n      `z-index``:` `0``;`\n`    `}`\n  ````</``style``>``\n``</``head``>``\n``<``body``>``\n  ``<``canvas` ``id``=```\"````glcanvas``\"``` ``tabindex``=```'`1`'````>````</``canvas``>``\n  ``<!--` Minified and statically hosted version of https://github.com/not-fl3/macroquad/blob/master/js/mq_js_bundle.js `-->``\n  ``<``script``` ``src``=```\"`https://not-fl3.github.io/miniquad-samples/mq_js_bundle.js`\"````>````</``script``>``\n  ``<``script````>``````load``(````\"`CRATENAME.wasm`\"````)```;`````</``script``>`` ``<!--` Your compiled wasm file `-->``\n``</``body``>``\n``</``html``>``\n`\n```\n\nOne of the ways to server static .wasm and .html:\n```\n```cargo``` install basic-http-server`\n``basic-http-server``` .`\n`\n```\n\n### IOS\nTo run on the simulator:\n```\n`mkdir MyGame`.`app\ncargo build `-``-`target x86_64`-`apple`-`ios `-``-`release\ncp target`/`release`/`mygame MyGame`.`app\n`#` only `if` the game have any assets\ncp `-`r assets MyGame`.`app\ncat `>` MyGame`.`app`/`Info`.`plist `<``<` `EOF`\n`<``?`xml version`=```\"`1.0`\"`` encoding`=```\"`UTF-8`\"```?``>`\n`<``!``DOCTYPE` plist `PUBLIC` ``\"`-//Apple//DTD PLIST 1.0//EN`\"`` ``\"`http://www.apple.com/DTDs/PropertyList-1.0.dtd`\"```>`\n`<`plist version`=```\"`1.0`\"```>`\n`<`dict`>`\n`<`key`>``CFBundleExecutable`<``/``key`>`\n`<`string`>``mygame`<``/``string`>`\n`<`key`>``CFBundleIdentifier`<``/``key`>`\n`<`string`>`com`.``mygame`<``/``string`>`\n`<`key`>``CFBundleName`<``/``key`>`\n`<`string`>``mygame`<``/``string`>`\n`<`key`>``CFBundleVersion`<``/``key`>`\n`<`string`>``1``<``/`string`>`\n`<`key`>``CFBundleShortVersionString`<``/``key`>`\n`<`string`>``1.``0``<``/`string`>`\n`<``/`dict`>`\n`<``/`plist`>`\n`EOF`\nxcrun simctl install booted MyGame`.`app`/`\nxcrun simctl launch booted com`.`mygame\n`\n```\n\nFor details and instructions on provisioning for real iphone, check <https://macroquad.rs/articles/ios/>\nTips Adding the following snippet to your Cargo.toml ensures that all dependencies compile in release even in debug mode. In macroquad, this has the effect of making images load several times faster and your applications much more performant, while keeping compile times miraculously low. ```\n```[``profile.dev.package.'*'``]`\n`opt-level ``=` `3`\n``\n```\n\n## async/await\nWhile macroquad attempts to use as few Rust-specific concepts as possible, ```.`await`` in all examples looks a bit scary. Rust's ``async`/`await`` is used to solve just one problem - cross platform main loop organization.\nDetails\nThe problem: on WASM and android it's not really easy to organize the main loop like this:\n```\n```fn` `main`````(````)``````{`\n  ``//` do some initialization`\n  ``//` start main loop`\n  `loop` `{`\n    ``//` handle input`\n    ``//` update logic`\n    ``//` draw frame`\n  `}`\n```}```\n`\n```\n\nIt is fixable on Android with threads, but on web there is not way to \"pause\" and \"resume\" WASM execution, so no WASM code should block ever. While that loop is blocking for the entire game execution! The C++ solution for that problem: <https://kripken.github.io/blog/wasm/2019/07/16/asyncify.html>\nBut in Rust we have async/await. Rust's ``futures`` are basically continuations - ``future``'s stack may be stored into a variable to pause/resume execution of future's code at a later point.\nasync/await support in macroquad comes without any external dependencies - no runtime, no executors and futures-rs is not involved. It's just a way to preserve ``main``'s stack on WASM and keep the code cross platform without any WASM-specific main loop.\n## Community\n  * Quads Discord server\u27e810\u27e9 - a place to chat with the library's devs and other community members.\n  * Awesome Quads\u27e811\u27e9 - a curated list of links to miniquad/macroquad-related code & resources.\n\n\n# Platinum sponsors\nMacroquad is supported by:\nSourceGear\u27e812\u27e9\n#### Dependencies\n~10\u201317MB  ~308K SLoC\n  * fontdue\u27e813\u27e9 0.9\n  * glam\u27e814\u27e9 0.27+scalar-math\u27e815\u27e9\n  * image\u27e816\u27e9 0.24+png\u27e817\u27e9+tga\u27e818\u27e9\n  * macroquad_macro\u27e819\u27e9\n  * miniquad\u27e820\u27e9 =0.4.8+log-impl\u27e821\u27e9\n  * quad-rand\u27e822\u27e9\n  *  optional \u27e823\u27e9 backtrace\u27e824\u27e9\n  * log-rs?\u27e825\u27e9 log\u27e826\u27e9\n  * audio?\u27e827\u27e9 quad-snd\u27e828\u27e9\n\n\n#### Other feature\u27e829\u27e9\n  * glam-serde\u27e830\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
              "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/macroquad/versions: 69 releases\n\u27e82\u27e9 https://lib.rs/rendering/graphics-api: Crates that provide direct access to the hardware's or the operating system's rendering capabilities. - Graphics APIs\n\u27e83\u27e9 https://lib.rs/crates/macroquad/rev: **100** crates (98 directly)\n\u27e84\u27e9 https://img.gs/czjpqfbdkz/full/https://github.com/not-fl3/macroquad/workflows/CI/badge.svg: ![Github Actions\n\u27e85\u27e9 https://img.gs/czjpqfbdkz/full/https://docs.rs/macroquad/badge.svg?version=0.4.5: ![Docs\n\u27e86\u27e9 https://img.shields.io/crates/v/macroquad.svg: ![Crates.io version\n\u27e87\u27e9 https://img.shields.io/discord/710177966440579103.svg?label=discord%20chat: ![Discord chat\n\u27e88\u27e9 https://github.com/raysan5/raylib: raylib\n\u27e89\u27e9 https://github.com/not-fl3/macroquad/tree/master/examples: Macroquad examples folder\n\u27e810\u27e9 https://discord.gg/WfEp6ut: Quads Discord server\n\u27e811\u27e9 https://github.com/ozkriff/awesome-quads: Awesome Quads\n\u27e812\u27e9 https://www.sourcegear.com/: SourceGear\n\u27e813\u27e9 https://lib.rs/crates/fontdue: new - fontdue\n\u27e814\u27e9 https://lib.rs/crates/glam: obsolete - glam\n\u27e815\u27e9 https://lib.rs/crates/glam/features#feature-scalar-math: +scalar-math\n\u27e816\u27e9 https://lib.rs/crates/image: outdated - image\n\u27e817\u27e9 https://lib.rs/crates/image/features#feature-png: +png\n\u27e818\u27e9 https://lib.rs/crates/image/features#feature-tga: +tga\n\u27e819\u27e9 https://lib.rs/crates/macroquad_macro: 0.1.8 - macroquad_macro\n\u27e820\u27e9 https://lib.rs/crates/miniquad: new - miniquad\n\u27e821\u27e9 https://lib.rs/crates/miniquad/features#feature-log-impl: +log-impl\n\u27e822\u27e9 https://lib.rs/crates/quad-rand: 0.2.3 - quad-rand\n\u27e823\u27e9 https://lib.rs/crates/macroquad/features#feature-backtrace: backtrace is optional feature -  optional \n\u27e824\u27e9 https://lib.rs/crates/backtrace: 0.3.60 - backtrace\n\u27e825\u27e9 https://lib.rs/crates/macroquad/features#feature-log-rs: optional feature - log-rs?\n\u27e826\u27e9 https://lib.rs/crates/log: 0.4 - log\n\u27e827\u27e9 https://lib.rs/crates/macroquad/features#feature-audio: optional feature - audio?\n\u27e828\u27e9 https://lib.rs/crates/quad-snd: 0.2 - quad-snd\n\u27e829\u27e9 https://lib.rs/crates/macroquad/features: Other feature\n\u27e830\u27e9 https://lib.rs/crates/macroquad/features#feature-glam-serde: glam-serde\n",
              "fit_markdown": "",
              "fit_html": ""
            },
            "structured_data": {},
            "quality_score": 4.0,
            "extraction_method": "crawl4ai",
            "error": null,
            "metadata": {
              "doc_type": "docs",
              "content_length": 9770,
              "has_structured_data": false,
              "crawl_success": true
            },
            "timestamp": "118838.2669065"
          }
        },
        "crate_analysis": {
          "status": "completed",
          "check": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcfg_if-c157d0c21e6d9c07.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libequivalent-a537f72da861a827.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "adler2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libadler2-4874fcb04c5691fe.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbitflags-0c9284b672fc36fb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "foldhash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfoldhash-a900a97b48b7bc79.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "simd_adler32",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libsimd_adler32-98d20a20efd74fd9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quad-rand@0.2.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quad-rand-0.2.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quad_rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quad-rand-0.2.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libquad_rand-192d7984da03a7a6.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#color_quant@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "color_quant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcolor_quant-d3a5025315738fce.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcrc32fast-65e3d842827c4369.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbyteorder-84f1f4a8af2ff257.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "extern_crate_alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbytemuck-495c8fc9e9b997a8.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fdeflate@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fdeflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfdeflate-080d70efae67634a.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\allocator-api2-0.2.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "allocator_api2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\allocator-api2-0.2.21\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\liballocator_api2-d22e4cd094eb2a92.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log-impl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-e2c7cf708be1c292\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-e2c7cf708be1c292\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "hidusage",
                "libloaderapi",
                "shellapi",
                "shellscalingapi",
                "winbase",
                "windef",
                "windowsx",
                "wingdi",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-9d300d4d31606bd7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-9d300d4d31606bd7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniz_oxide",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "simd",
                "simd-adler32",
                "with-alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libminiz_oxide-8a6fdada453e08bb.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-b25d192bb78ff8e4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libautocfg-6cfff12db607e102.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libautocfg-6cfff12db607e102.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=gdi32",
                "dylib=kernel32",
                "dylib=msimg32",
                "dylib=opengl32",
                "dylib=shcore",
                "dylib=shell32",
                "dylib=shlwapi",
                "dylib=user32",
                "dylib=winspool"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"winreg\"",
                "feature=\"cfgmgr32\"",
                "feature=\"ktmtypes\"",
                "feature=\"cfg\"",
                "feature=\"winnt\"",
                "feature=\"vadefs\"",
                "feature=\"processthreadsapi\"",
                "feature=\"ntstatus\"",
                "feature=\"devpropdef\"",
                "feature=\"fileapi\"",
                "feature=\"minwindef\"",
                "feature=\"minwinbase\"",
                "feature=\"reason\"",
                "feature=\"ntdef\"",
                "feature=\"vcruntime\"",
                "feature=\"excpt\"",
                "feature=\"basetsd\"",
                "feature=\"guiddef\"",
                "feature=\"limits\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-1bbeffc2709025b6\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#macroquad_macro@0.1.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\macroquad_macro-0.1.8\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "macroquad_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\macroquad_macro-0.1.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libhashbrown-5b63c9167beadbd9.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-7e2c039d9479dda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-7e2c039d9479dda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-58835a8a15e8fe89\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flate2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "any_impl",
                "default",
                "miniz_oxide",
                "rust_backend"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libflate2-2796d0a9a9598a89.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ttf-parser@0.21.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ttf-parser-0.21.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ttf_parser",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ttf-parser-0.21.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "opentype-layout"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libttf_parser-3e3d82fc634e8a1b.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libnum_traits-66e2f0b45ebc5ee5.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fontdue@0.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fontdue-0.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fontdue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fontdue-0.9.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "hashbrown",
                "simd"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfontdue-5f6eaf548c6ae9d7.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#png@0.17.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "png",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libpng-b1c601552eb1017f.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "hidusage",
                "libloaderapi",
                "shellapi",
                "shellscalingapi",
                "winbase",
                "windef",
                "windowsx",
                "wingdi",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libwinapi-563cb429a903cd7d.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glam@0.27.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glam-0.27.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glam",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glam-0.27.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "scalar-math",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libglam-65c291ae1ce7f3dd.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniquad",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log-impl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libminiquad-b4da21bee11f0edf.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#image@0.24.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-0.24.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-0.24.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "png",
                "tga"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libimage-903d2583b0d6f656.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:218:11\n    |\n218 |     #[cfg(one_screenshot)]\n    |           ^^^^^^^^^^^^^^\n    |\n    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "expected names are: `docsrs`, `feature`, and `test` and 31 more",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unexpected_cfgs)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 5568,
                    "byte_start": 5554,
                    "column_end": 25,
                    "column_start": 11,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 11,
                        "text": "    #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:362:19\n    |\n362 |             #[cfg(one_screenshot)]\n    |                   ^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 9629,
                    "byte_start": 9615,
                    "column_end": 33,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 362,
                    "line_start": 362,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 19,
                        "text": "            #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:419:15\n    |\n419 |         #[cfg(one_screenshot)]\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 11323,
                    "byte_start": 11309,
                    "column_end": 29,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 419,
                    "line_start": 419,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 15,
                        "text": "        #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:496:14\n    |\n496 |     unsafe { CONTEXT.as_mut().unwrap_or_else(|| panic!()) }\n    |              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n    = note: `#[warn(static_mut_refs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(static_mut_refs)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13707,
                    "byte_start": 13691,
                    "column_end": 30,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 496,
                    "line_start": 496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 14,
                        "text": "    unsafe { CONTEXT.as_mut().unwrap_or_else(|| panic!()) }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n   --> src\\lib.rs:503:17\n    |\n503 |         assert!(CONTEXT.is_some());\n    |                 ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13893,
                    "byte_start": 13876,
                    "column_end": 34,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 503,
                    "line_start": 503,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 17,
                        "text": "        assert!(CONTEXT.is_some());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:506:20\n    |\n506 |     unsafe { &mut *CONTEXT.as_mut().unwrap().quad_context }\n    |                    ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13938,
                    "byte_start": 13922,
                    "column_end": 36,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 506,
                    "line_start": 506,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 20,
                        "text": "    unsafe { &mut *CONTEXT.as_mut().unwrap().quad_context }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:908:44\n    |\n908 |                         if let Some(ctx) = CONTEXT.as_mut() {\n    |                                            ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 26510,
                    "byte_start": 26494,
                    "column_end": 60,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 908,
                    "line_start": 908,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 44,
                        "text": "                        if let Some(ctx) = CONTEXT.as_mut() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:32:12\n   |\n32 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 696,
                    "byte_start": 679,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 32,
                    "line_start": 32,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:36:9\n   |\n36 | /         STORAGE\n37 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 791,
                    "byte_start": 762,
                    "column_end": 22,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 37,
                    "line_start": 36,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 9,
                        "text": "        STORAGE"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .as_mut()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:53:12\n   |\n53 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1306,
                    "byte_start": 1289,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:57:9\n   |\n57 |         STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()\n   |         ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1388,
                    "byte_start": 1372,
                    "column_end": 25,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 57,
                    "line_start": 57,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:69:12\n   |\n69 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1786,
                    "byte_start": 1769,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:73:9\n   |\n73 |         STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()\n   |         ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1868,
                    "byte_start": 1852,
                    "column_end": 25,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\experimental\\scene.rs:620:5\n    |\n620 |     SCENE.get_or_insert_with(|| Scene::new())\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 16435,
                    "byte_start": 16394,
                    "column_end": 46,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 620,
                    "line_start": 620,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 5,
                        "text": "    SCENE.get_or_insert_with(|| Scene::new())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\telemetry.rs:9:9\n   |\n9  | /         PROFILER.get_or_insert_with(|| Profiler {\n10 | |             frame: Frame::new(),\n11 | |             queries: HashMap::new(),\n12 | |             active_query: None,\n...  |\n19 | |             strings: vec![],\n20 | |         })\n   | |__________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 584,
                    "byte_start": 206,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\telemetry.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 20,
                    "line_start": 9,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 9,
                        "text": "        PROFILER.get_or_insert_with(|| Profiler {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            frame: Frame::new(),"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "            queries: HashMap::new(),"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "            active_query: None,"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            prev_frame: Frame::new(),"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            enabled: false,"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            enable_request: None,"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            capture_request: false,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            capture: false,"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "            drawcalls: vec![],"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            strings: vec![],"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        })"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n   --> src\\lib.rs:172:21\n    |\n172 |             assert!(THREAD_ID.is_some());\n    |                     ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 4443,
                    "byte_start": 4424,
                    "column_end": 40,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 21,
                        "text": "            assert!(THREAD_ID.is_some());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libmacroquad-11f432cf7e29bc54.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "clippy": [
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "simd_adler32",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\simd-adler32-0.3.7\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "const-generics",
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libsimd_adler32-98d20a20efd74fd9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "adler2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\adler2-2.0.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libadler2-4874fcb04c5691fe.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "cfg_if",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\cfg-if-1.0.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcfg_if-c157d0c21e6d9c07.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "autocfg",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\autocfg-1.4.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libautocfg-6cfff12db607e102.rlib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libautocfg-6cfff12db607e102.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\build.rs",
                "edition": "2015",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "hidusage",
                "libloaderapi",
                "shellapi",
                "shellscalingapi",
                "winbase",
                "windef",
                "windowsx",
                "wingdi",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-9d300d4d31606bd7\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-9d300d4d31606bd7\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fdeflate@0.3.7",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fdeflate",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fdeflate-0.3.7\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfdeflate-080d70efae67634a.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "equivalent",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\equivalent-1.0.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libequivalent-a537f72da861a827.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bitflags",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bitflags-1.3.2\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbitflags-0c9284b672fc36fb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "foldhash",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\foldhash-0.1.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfoldhash-a900a97b48b7bc79.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\build.rs",
                "edition": "2018",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log-impl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-e2c7cf708be1c292\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-e2c7cf708be1c292\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\allocator-api2-0.2.21\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "allocator_api2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\allocator-api2-0.2.21\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\liballocator_api2-d22e4cd094eb2a92.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.22.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "bytemuck",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\bytemuck-1.22.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "extern_crate_alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbytemuck-495c8fc9e9b997a8.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "byteorder",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\byteorder-1.5.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libbyteorder-84f1f4a8af2ff257.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#color_quant@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "color_quant",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\color_quant-1.1.0\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcolor_quant-d3a5025315738fce.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#ttf-parser@0.21.1",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ttf-parser-0.21.1\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "ttf_parser",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\ttf-parser-0.21.1\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "opentype-layout"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libttf_parser-3e3d82fc634e8a1b.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#quad-rand@0.2.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quad-rand-0.2.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "quad_rand",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\quad-rand-0.2.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libquad_rand-192d7984da03a7a6.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#macroquad_macro@0.1.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\macroquad_macro-0.1.8\\Cargo.toml",
              "target": {
                "kind": [
                  "proc-macro"
                ],
                "crate_types": [
                  "proc-macro"
                ],
                "name": "macroquad_macro",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\macroquad_macro-0.1.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll.lib",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.dll.exp",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\macroquad_macro-657d26159f0b8c87.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "custom-build"
                ],
                "crate_types": [
                  "bin"
                ],
                "name": "build-script-build",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\build.rs",
                "edition": "2021",
                "doc": false,
                "doctest": false,
                "test": false
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 0,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-7e2c039d9479dda1\\build-script-build.exe",
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-7e2c039d9479dda1\\build_script_build.pdb"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.5",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniz_oxide",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniz_oxide-0.8.5\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "simd",
                "simd-adler32",
                "with-alloc"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libminiz_oxide-8a6fdada453e08bb.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "crc32fast",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\crc32fast-1.4.2\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libcrc32fast-65e3d842827c4369.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "linked_libs": [
                "dylib=advapi32",
                "dylib=cfgmgr32",
                "dylib=gdi32",
                "dylib=kernel32",
                "dylib=msimg32",
                "dylib=opengl32",
                "dylib=shcore",
                "dylib=shell32",
                "dylib=shlwapi",
                "dylib=user32",
                "dylib=winspool"
              ],
              "linked_paths": [],
              "cfgs": [
                "feature=\"winreg\"",
                "feature=\"cfgmgr32\"",
                "feature=\"ktmtypes\"",
                "feature=\"cfg\"",
                "feature=\"winnt\"",
                "feature=\"vadefs\"",
                "feature=\"processthreadsapi\"",
                "feature=\"ntstatus\"",
                "feature=\"devpropdef\"",
                "feature=\"fileapi\"",
                "feature=\"minwindef\"",
                "feature=\"minwinbase\"",
                "feature=\"reason\"",
                "feature=\"ntdef\"",
                "feature=\"vcruntime\"",
                "feature=\"excpt\"",
                "feature=\"basetsd\"",
                "feature=\"guiddef\"",
                "feature=\"limits\""
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\winapi-1bbeffc2709025b6\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "hashbrown",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\hashbrown-0.15.2\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "allocator-api2",
                "default",
                "default-hasher",
                "equivalent",
                "inline-more",
                "raw-entry"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libhashbrown-5b63c9167beadbd9.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\miniquad-b25d192bb78ff8e4\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#glam@0.27.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glam-0.27.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "glam",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\glam-0.27.0\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "scalar-math",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libglam-65c291ae1ce7f3dd.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "build-script-executed",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "linked_libs": [],
              "linked_paths": [],
              "cfgs": [
                "has_total_cmp"
              ],
              "env": [],
              "out_dir": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\build\\num-traits-58835a8a15e8fe89\\out"
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.0",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "flate2",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\flate2-1.1.0\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "any_impl",
                "default",
                "miniz_oxide",
                "rust_backend"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libflate2-2796d0a9a9598a89.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#winapi@0.3.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "winapi",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\winapi-0.3.9\\src\\lib.rs",
                "edition": "2015",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "errhandlingapi",
                "hidusage",
                "libloaderapi",
                "shellapi",
                "shellscalingapi",
                "winbase",
                "windef",
                "windowsx",
                "wingdi",
                "winuser"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libwinapi-563cb429a903cd7d.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#fontdue@0.9.3",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fontdue-0.9.3\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "fontdue",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\fontdue-0.9.3\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "hashbrown",
                "simd"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libfontdue-5f6eaf548c6ae9d7.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "num_traits",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\num-traits-0.2.19\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default",
                "std"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libnum_traits-66e2f0b45ebc5ee5.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#png@0.17.16",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "png",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\png-0.17.16\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libpng-b1c601552eb1017f.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#miniquad@0.4.8",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "miniquad",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\miniquad-0.4.8\\src\\lib.rs",
                "edition": "2018",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "log-impl"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libminiquad-b4da21bee11f0edf.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-artifact",
              "package_id": "registry+https://github.com/rust-lang/crates.io-index#image@0.24.9",
              "manifest_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-0.24.9\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "image",
                "src_path": "C:\\Users\\davet\\.cargo\\registry\\src\\index.crates.io-1949cf8c6b5b557f\\image-0.24.9\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "3",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "png",
                "tga"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libimage-903d2583b0d6f656.rmeta"
              ],
              "executable": null,
              "fresh": true
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty line after doc comment\n   --> src\\audio.rs:107:1\n    |\n107 | / /// Attempts to automatically detect the format of the source of data.\n108 | |\n    | |_^\n109 |   pub async fn load_sound(path: &str) -> Result<Sound, Error> {\n    |   ----------------------- the comment documents this function\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n    = help: if the empty line is unintentional, remove it\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::empty_line_after_doc_comments)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the empty line is unintentional, remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2403,
                        "byte_start": 2402,
                        "column_end": 1,
                        "column_start": 71,
                        "expansion": null,
                        "file_name": "src\\audio.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 108,
                        "line_start": 107,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 71,
                            "highlight_start": 71,
                            "text": "/// Attempts to automatically detect the format of the source of data."
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::empty_line_after_doc_comments",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty line after doc comment",
                "spans": [
                  {
                    "byte_end": 2427,
                    "byte_start": 2404,
                    "column_end": 24,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\audio.rs",
                    "is_primary": false,
                    "label": "the comment documents this function",
                    "line_end": 109,
                    "line_start": 109,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "pub async fn load_sound(path: &str) -> Result<Sound, Error> {"
                      }
                    ]
                  },
                  {
                    "byte_end": 2403,
                    "byte_start": 2332,
                    "column_end": 1,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\audio.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 108,
                    "line_start": 107,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "/// Attempts to automatically detect the format of the source of data."
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: constants have by default a `'static` lifetime\n    --> src\\ui.rs:1366:27\n     |\n1366 |     const VERTEX_SHADER: &'static str = \"#version 100\n     |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n     = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_static_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `'static`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 42397,
                        "byte_start": 42385,
                        "column_end": 38,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1366,
                        "line_start": 1366,
                        "suggested_replacement": "&str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 26,
                            "text": "    const VERTEX_SHADER: &'static str = \"#version 100"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_static_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "constants have by default a `'static` lifetime",
                "spans": [
                  {
                    "byte_end": 42393,
                    "byte_start": 42386,
                    "column_end": 34,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1366,
                    "line_start": 1366,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 27,
                        "text": "    const VERTEX_SHADER: &'static str = \"#version 100"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: constants have by default a `'static` lifetime\n    --> src\\ui.rs:1384:29\n     |\n1384 |     const FRAGMENT_SHADER: &'static str = \"#version 100\n     |                            -^^^^^^^---- help: consider removing `'static`: `&str`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider removing `'static`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 42768,
                        "byte_start": 42756,
                        "column_end": 40,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1384,
                        "line_start": 1384,
                        "suggested_replacement": "&str",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 28,
                            "text": "    const FRAGMENT_SHADER: &'static str = \"#version 100"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_static_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "constants have by default a `'static` lifetime",
                "spans": [
                  {
                    "byte_end": 42764,
                    "byte_start": 42757,
                    "column_end": 36,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1384,
                    "line_start": 1384,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 29,
                        "text": "    const FRAGMENT_SHADER: &'static str = \"#version 100"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: empty line after doc comment\n  --> src\\experimental\\coroutines\\generational_storage.rs:81:5\n   |\n81 | /     /// Retains only the elements specified by the predicate, passing a mutable reference to it.\n82 | |\n   | |_^\n83 |       /// In other words, remove all elements e such that f(&mut e) returns false. This method ...\n84 |       pub fn retain<F>(&mut self, mut f: F)\n   |       ------------- the comment documents this function\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = help: if the empty line is unintentional, remove it\nhelp: if the documentation should include the empty line include it in the comment\n   |\n82 |     ///\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the empty line is unintentional, remove it",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2045,
                        "byte_start": 2044,
                        "column_end": 1,
                        "column_start": 97,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 81,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 97,
                            "highlight_start": 97,
                            "text": "    /// Retains only the elements specified by the predicate, passing a mutable reference to it."
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if the documentation should include the empty line include it in the comment",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2045,
                        "byte_start": 2045,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 82,
                        "line_start": 82,
                        "suggested_replacement": "    ///",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::empty_line_after_doc_comments",
                  "explanation": null
                },
                "level": "warning",
                "message": "empty line after doc comment",
                "spans": [
                  {
                    "byte_end": 2283,
                    "byte_start": 2270,
                    "column_end": 18,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                    "is_primary": false,
                    "label": "the comment documents this function",
                    "line_end": 84,
                    "line_start": 84,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 18,
                        "highlight_start": 5,
                        "text": "    pub fn retain<F>(&mut self, mut f: F)"
                      }
                    ]
                  },
                  {
                    "byte_end": 2045,
                    "byte_start": 1952,
                    "column_end": 1,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 82,
                    "line_start": 81,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 97,
                        "highlight_start": 5,
                        "text": "    /// Retains only the elements specified by the predicate, passing a mutable reference to it."
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:218:11\n    |\n218 |     #[cfg(one_screenshot)]\n    |           ^^^^^^^^^^^^^^\n    |\n    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "expected names are: `docsrs`, `feature`, and `test` and 31 more",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(unexpected_cfgs)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 5568,
                    "byte_start": 5554,
                    "column_end": 25,
                    "column_start": 11,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 218,
                    "line_start": 218,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 11,
                        "text": "    #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:362:19\n    |\n362 |             #[cfg(one_screenshot)]\n    |                   ^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 9629,
                    "byte_start": 9615,
                    "column_end": 33,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 362,
                    "line_start": 362,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 19,
                        "text": "            #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unexpected `cfg` condition name: `one_screenshot`\n   --> src\\lib.rs:419:15\n    |\n419 |         #[cfg(one_screenshot)]\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using a Cargo feature instead",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(one_screenshot)'] }",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "or consider adding `println!(\"cargo::rustc-check-cfg=cfg(one_screenshot)\");` to the top of the `build.rs`",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "unexpected_cfgs",
                  "explanation": null
                },
                "level": "warning",
                "message": "unexpected `cfg` condition name: `one_screenshot`",
                "spans": [
                  {
                    "byte_end": 11323,
                    "byte_start": 11309,
                    "column_end": 29,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 419,
                    "line_start": 419,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 15,
                        "text": "        #[cfg(one_screenshot)]"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: very complex type used. Consider factoring parts into `type` definitions\n  --> src\\exec.rs:31:19\n   |\n31 |     pub contents: Arc<Mutex<Option<Result<Vec<u8>, Error>>>>,\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n   = note: `#[warn(clippy::type_complexity)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::type_complexity)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::type_complexity",
                  "explanation": null
                },
                "level": "warning",
                "message": "very complex type used. Consider factoring parts into `type` definitions",
                "spans": [
                  {
                    "byte_end": 849,
                    "byte_start": 807,
                    "column_end": 61,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\exec.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 31,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 19,
                        "text": "    pub contents: Arc<Mutex<Option<Result<Vec<u8>, Error>>>>,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: length comparison to zero\n   --> src\\quad_gl.rs:219:16\n    |\n219 |             if self.bindings.images.len() == 0 {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `self.bindings.images.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::len_zero)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "using `is_empty` is clearer and more explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5929,
                        "byte_start": 5898,
                        "column_end": 47,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 219,
                        "line_start": 219,
                        "suggested_replacement": "self.bindings.images.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 16,
                            "text": "            if self.bindings.images.len() == 0 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::len_zero",
                  "explanation": null
                },
                "level": "warning",
                "message": "length comparison to zero",
                "spans": [
                  {
                    "byte_end": 5929,
                    "byte_start": 5898,
                    "column_end": 47,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\quad_gl.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 219,
                    "line_start": 219,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 16,
                        "text": "            if self.bindings.images.len() == 0 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: it looks like you're manually copying between slices\n   --> src\\quad_gl.rs:367:9\n    |\n367 | /         for i in 0..uniform_byte_size {\n368 | |             self.uniforms_data[uniform_byte_offset + i] = data[i];\n369 | |         }\n    | |_________^ help: try replacing the loop by: `self.uniforms_data[uniform_byte_offset..(uniform_byte_size + uniform_byte_offset)].copy_from_slice(&data[..uniform_byte_size]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n    = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_memcpy)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try replacing the loop by",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10892,
                        "byte_start": 10784,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 0,
                            "byte_start": 0,
                            "column_end": 1,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\lib.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 1,
                            "line_start": 1,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": []
                          },
                          "macro_decl_name": "desugaring of `for` loop",
                          "span": {
                            "byte_end": 10892,
                            "byte_start": 10784,
                            "column_end": 10,
                            "column_start": 9,
                            "expansion": null,
                            "file_name": "src\\quad_gl.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 369,
                            "line_start": 367,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 40,
                                "highlight_start": 9,
                                "text": "        for i in 0..uniform_byte_size {"
                              },
                              {
                                "highlight_end": 67,
                                "highlight_start": 1,
                                "text": "            self.uniforms_data[uniform_byte_offset + i] = data[i];"
                              },
                              {
                                "highlight_end": 10,
                                "highlight_start": 1,
                                "text": "        }"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 369,
                        "line_start": 367,
                        "suggested_replacement": "self.uniforms_data[uniform_byte_offset..(uniform_byte_size + uniform_byte_offset)].copy_from_slice(&data[..uniform_byte_size]);",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 9,
                            "text": "        for i in 0..uniform_byte_size {"
                          },
                          {
                            "highlight_end": 67,
                            "highlight_start": 1,
                            "text": "            self.uniforms_data[uniform_byte_offset + i] = data[i];"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_memcpy",
                  "explanation": null
                },
                "level": "warning",
                "message": "it looks like you're manually copying between slices",
                "spans": [
                  {
                    "byte_end": 10892,
                    "byte_start": 10784,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": []
                      },
                      "macro_decl_name": "desugaring of `for` loop",
                      "span": {
                        "byte_end": 10892,
                        "byte_start": 10784,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 369,
                        "line_start": 367,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 40,
                            "highlight_start": 9,
                            "text": "        for i in 0..uniform_byte_size {"
                          },
                          {
                            "highlight_end": 67,
                            "highlight_start": 1,
                            "text": "            self.uniforms_data[uniform_byte_offset + i] = data[i];"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\quad_gl.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 369,
                    "line_start": 367,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 9,
                        "text": "        for i in 0..uniform_byte_size {"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "            self.uniforms_data[uniform_byte_offset + i] = data[i];"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: it looks like you're manually copying between slices\n   --> src\\quad_gl.rs:776:17\n    |\n776 | /                 for i in 0..uniforms.len() {\n777 | |                     pipeline.uniforms_data[i] = uniforms[i];\n778 | |                 }\n    | |_________________^ help: try replacing the loop by: `pipeline.uniforms_data[..uniforms.len()].copy_from_slice(&uniforms[..]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try replacing the loop by",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24452,
                        "byte_start": 24345,
                        "column_end": 18,
                        "column_start": 17,
                        "expansion": {
                          "def_site_span": {
                            "byte_end": 0,
                            "byte_start": 0,
                            "column_end": 1,
                            "column_start": 1,
                            "expansion": null,
                            "file_name": "src\\lib.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 1,
                            "line_start": 1,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": []
                          },
                          "macro_decl_name": "desugaring of `for` loop",
                          "span": {
                            "byte_end": 24452,
                            "byte_start": 24345,
                            "column_end": 18,
                            "column_start": 17,
                            "expansion": null,
                            "file_name": "src\\quad_gl.rs",
                            "is_primary": false,
                            "label": null,
                            "line_end": 778,
                            "line_start": 776,
                            "suggested_replacement": null,
                            "suggestion_applicability": null,
                            "text": [
                              {
                                "highlight_end": 45,
                                "highlight_start": 17,
                                "text": "                for i in 0..uniforms.len() {"
                              },
                              {
                                "highlight_end": 61,
                                "highlight_start": 1,
                                "text": "                    pipeline.uniforms_data[i] = uniforms[i];"
                              },
                              {
                                "highlight_end": 18,
                                "highlight_start": 1,
                                "text": "                }"
                              }
                            ]
                          }
                        },
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 778,
                        "line_start": 776,
                        "suggested_replacement": "pipeline.uniforms_data[..uniforms.len()].copy_from_slice(&uniforms[..]);",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 17,
                            "text": "                for i in 0..uniforms.len() {"
                          },
                          {
                            "highlight_end": 61,
                            "highlight_start": 1,
                            "text": "                    pipeline.uniforms_data[i] = uniforms[i];"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_memcpy",
                  "explanation": null
                },
                "level": "warning",
                "message": "it looks like you're manually copying between slices",
                "spans": [
                  {
                    "byte_end": 24452,
                    "byte_start": 24345,
                    "column_end": 18,
                    "column_start": 17,
                    "expansion": {
                      "def_site_span": {
                        "byte_end": 0,
                        "byte_start": 0,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 1,
                        "line_start": 1,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": []
                      },
                      "macro_decl_name": "desugaring of `for` loop",
                      "span": {
                        "byte_end": 24452,
                        "byte_start": 24345,
                        "column_end": 18,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": false,
                        "label": null,
                        "line_end": 778,
                        "line_start": 776,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 17,
                            "text": "                for i in 0..uniforms.len() {"
                          },
                          {
                            "highlight_end": 61,
                            "highlight_start": 1,
                            "text": "                    pipeline.uniforms_data[i] = uniforms[i];"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                }"
                          }
                        ]
                      }
                    },
                    "file_name": "src\\quad_gl.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 778,
                    "line_start": 776,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 17,
                        "text": "                for i in 0..uniforms.len() {"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                    pipeline.uniforms_data[i] = uniforms[i];"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\quad_gl.rs:898:12\n    |\n898 |           if previous_dc.map_or(true, |draw_call| {\n    |  ____________^\n899 | |             draw_call.texture != self.state.texture\n900 | |                 || draw_call.clip != self.state.clip\n901 | |                 || draw_call.viewport != self.state.viewport\n...   |\n909 | |                 || self.state.break_batching\n910 | |         }) {\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\n    = note: `#[warn(clippy::unnecessary_map_or)]` on by default\nhelp: use is_none_or instead\n    |\n898 -         if previous_dc.map_or(true, |draw_call| {\n898 +         if previous_dc.is_none_or(|draw_call| {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_map_or)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_none_or instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 28215,
                        "byte_start": 28209,
                        "column_end": 30,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 898,
                        "line_start": 898,
                        "suggested_replacement": "is_none_or",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 24,
                            "text": "        if previous_dc.map_or(true, |draw_call| {"
                          }
                        ]
                      },
                      {
                        "byte_end": 28222,
                        "byte_start": 28216,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 898,
                        "line_start": 898,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "        if previous_dc.map_or(true, |draw_call| {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 28909,
                    "byte_start": 28197,
                    "column_end": 11,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\quad_gl.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 910,
                    "line_start": 898,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 12,
                        "text": "        if previous_dc.map_or(true, |draw_call| {"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "            draw_call.texture != self.state.texture"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                || draw_call.clip != self.state.clip"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                || draw_call.viewport != self.state.viewport"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                || draw_call.model != self.state.model()"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                || draw_call.pipeline != pip"
                      },
                      {
                        "highlight_end": 67,
                        "highlight_start": 1,
                        "text": "                || draw_call.render_pass != self.state.render_pass"
                      },
                      {
                        "highlight_end": 63,
                        "highlight_start": 1,
                        "text": "                || draw_call.draw_mode != self.state.draw_mode"
                      },
                      {
                        "highlight_end": 82,
                        "highlight_start": 1,
                        "text": "                || draw_call.vertices_count >= self.max_vertices - vertices.len()"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                || draw_call.indices_count >= self.max_indices - indices.len()"
                      },
                      {
                        "highlight_end": 59,
                        "highlight_start": 1,
                        "text": "                || draw_call.capture != self.state.capture"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "                || self.state.break_batching"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        }) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: called `map_or(None, ..)` on an `Option` value\n   --> src\\quad_gl.rs:911:28\n    |\n911 |               let uniforms = self.state.pipeline.map_or(None, |pipeline| {\n    |  ____________________________^\n912 | |                 Some(\n913 | |                     self.pipelines\n914 | |                         .get_quad_pipeline_mut(pipeline)\n...   |\n918 | |             });\n    | |______________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\nhelp: consider using `map`\n    |\n911 ~             let uniforms = self.state.pipeline.map(|pipeline| self.pipelines\n912 +                         .get_quad_pipeline_mut(pipeline)\n913 +                         .uniforms_data\n914 ~                         .clone());\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::option_map_or_none)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `map`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 29204,
                        "byte_start": 28939,
                        "column_end": 15,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\quad_gl.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 918,
                        "line_start": 911,
                        "suggested_replacement": "self.state.pipeline.map(|pipeline| self.pipelines\n                        .get_quad_pipeline_mut(pipeline)\n                        .uniforms_data\n                        .clone())",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 73,
                            "highlight_start": 28,
                            "text": "            let uniforms = self.state.pipeline.map_or(None, |pipeline| {"
                          },
                          {
                            "highlight_end": 22,
                            "highlight_start": 1,
                            "text": "                Some("
                          },
                          {
                            "highlight_end": 35,
                            "highlight_start": 1,
                            "text": "                    self.pipelines"
                          },
                          {
                            "highlight_end": 57,
                            "highlight_start": 1,
                            "text": "                        .get_quad_pipeline_mut(pipeline)"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "                        .uniforms_data"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "                        .clone(),"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                )"
                          },
                          {
                            "highlight_end": 15,
                            "highlight_start": 1,
                            "text": "            });"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::option_map_or_none",
                  "explanation": null
                },
                "level": "warning",
                "message": "called `map_or(None, ..)` on an `Option` value",
                "spans": [
                  {
                    "byte_end": 29204,
                    "byte_start": 28939,
                    "column_end": 15,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\quad_gl.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 918,
                    "line_start": 911,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 73,
                        "highlight_start": 28,
                        "text": "            let uniforms = self.state.pipeline.map_or(None, |pipeline| {"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "                Some("
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "                    self.pipelines"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                        .get_quad_pipeline_mut(pipeline)"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                        .uniforms_data"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "                        .clone(),"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                )"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            });"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: manual slice size calculation\n  --> src\\tobytes.rs:41:17\n   |\n41 |                 std::mem::size_of::<T>() * self.len(),\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(*self)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_slice_size_calculation\n   = note: `#[warn(clippy::manual_slice_size_calculation)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_slice_size_calculation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_slice_size_calculation)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1056,
                        "byte_start": 1019,
                        "column_end": 54,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\tobytes.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 41,
                        "line_start": 41,
                        "suggested_replacement": "std::mem::size_of_val(*self)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 17,
                            "text": "                std::mem::size_of::<T>() * self.len(),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_slice_size_calculation",
                  "explanation": null
                },
                "level": "warning",
                "message": "manual slice size calculation",
                "spans": [
                  {
                    "byte_end": 1056,
                    "byte_start": 1019,
                    "column_end": 54,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\tobytes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 41,
                    "line_start": 41,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 17,
                        "text": "                std::mem::size_of::<T>() * self.len(),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `AudioContext`\n  --> src\\audio.rs:70:5\n   |\n70 | /     pub fn new() -> AudioContext {\n71 | |         AudioContext {\n72 | |             native_ctx: QuadSndContext::new(),\n73 | |         }\n74 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n69 + impl Default for AudioContext {\n70 +     fn default() -> Self {\n71 +         Self::new()\n72 +     }\n73 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::new_without_default)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1536,
                        "byte_start": 1536,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\audio.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "impl Default for AudioContext {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl AudioContext {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `AudioContext`",
                "spans": [
                  {
                    "byte_end": 1676,
                    "byte_start": 1560,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\audio.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> AudioContext {"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "        AudioContext {"
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "            native_ctx: QuadSndContext::new(),"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\color.rs:47:1\n   |\n47 | impl Into<[u8; 4]> for Color {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<color::Color>`\n   |\n47 ~ impl From<Color> for [u8; 4] {\n48 ~     fn from(val: Color) -> Self {\n49 |         [\n50 ~             (val.r * 255.) as u8,\n51 ~             (val.g * 255.) as u8,\n52 ~             (val.b * 255.) as u8,\n53 ~             (val.a * 255.) as u8,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "`impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\nhttps://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::from_over_into)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<color::Color>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1221,
                        "byte_start": 1217,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 47,
                        "line_start": 47,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<[u8; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1229,
                        "byte_start": 1222,
                        "column_end": 18,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 47,
                        "line_start": 47,
                        "suggested_replacement": "Color",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 11,
                            "text": "impl Into<[u8; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1240,
                        "byte_start": 1235,
                        "column_end": 29,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 47,
                        "line_start": 47,
                        "suggested_replacement": "[u8; 4]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 24,
                            "text": "impl Into<[u8; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1254,
                        "byte_start": 1250,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1259,
                        "byte_start": 1255,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "val: Color",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1271,
                        "byte_start": 1264,
                        "column_end": 29,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 48,
                        "line_start": 48,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1301,
                        "byte_start": 1297,
                        "column_end": 18,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 50,
                        "line_start": 50,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 14,
                            "text": "            (self.r * 255.) as u8,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1336,
                        "byte_start": 1332,
                        "column_end": 18,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 51,
                        "line_start": 51,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 14,
                            "text": "            (self.g * 255.) as u8,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1371,
                        "byte_start": 1367,
                        "column_end": 18,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 52,
                        "line_start": 52,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 14,
                            "text": "            (self.b * 255.) as u8,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1406,
                        "byte_start": 1402,
                        "column_end": 18,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 53,
                        "line_start": 53,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 14,
                            "text": "            (self.a * 255.) as u8,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 1240,
                    "byte_start": 1212,
                    "column_end": 29,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\color.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 47,
                    "line_start": 47,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "impl Into<[u8; 4]> for Color {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\color.rs:58:1\n   |\n58 | impl Into<Color> for [u8; 4] {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<[u8; 4]>`\n   |\n58 ~ impl From<[u8; 4]> for Color {\n59 ~     fn from(val: [u8; 4]) -> Self {\n60 |         Color::new(\n61 ~             val[0] as f32 / 255.,\n62 ~             val[1] as f32 / 255.,\n63 ~             val[2] as f32 / 255.,\n64 ~             val[3] as f32 / 255.,\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<[u8; 4]>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1452,
                        "byte_start": 1448,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<Color> for [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1458,
                        "byte_start": 1453,
                        "column_end": 16,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "[u8; 4]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 16,
                            "highlight_start": 11,
                            "text": "impl Into<Color> for [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1471,
                        "byte_start": 1464,
                        "column_end": 29,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 58,
                        "line_start": 58,
                        "suggested_replacement": "Color",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 22,
                            "text": "impl Into<Color> for [u8; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1485,
                        "byte_start": 1481,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 59,
                        "line_start": 59,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1490,
                        "byte_start": 1486,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 59,
                        "line_start": 59,
                        "suggested_replacement": "val: [u8; 4]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1500,
                        "byte_start": 1495,
                        "column_end": 27,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 59,
                        "line_start": 59,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1539,
                        "byte_start": 1535,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 61,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self[0] as f32 / 255.,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1574,
                        "byte_start": 1570,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 62,
                        "line_start": 62,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self[1] as f32 / 255.,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1609,
                        "byte_start": 1605,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 63,
                        "line_start": 63,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self[2] as f32 / 255.,"
                          }
                        ]
                      },
                      {
                        "byte_end": 1644,
                        "byte_start": 1640,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "            self[3] as f32 / 255.,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 1471,
                    "byte_start": 1443,
                    "column_end": 29,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\color.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 58,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "impl Into<Color> for [u8; 4] {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\color.rs:69:1\n   |\n69 | impl Into<[f32; 4]> for Color {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<color::Color>`\n   |\n69 ~ impl From<Color> for [f32; 4] {\n70 ~     fn from(val: Color) -> Self {\n71 ~         [val.r, val.g, val.b, val.a]\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "`impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\nhttps://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<color::Color>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1691,
                        "byte_start": 1687,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<[f32; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1700,
                        "byte_start": 1692,
                        "column_end": 19,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "Color",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 11,
                            "text": "impl Into<[f32; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1711,
                        "byte_start": 1706,
                        "column_end": 30,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "[f32; 4]",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 25,
                            "text": "impl Into<[f32; 4]> for Color {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1725,
                        "byte_start": 1721,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> [f32; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1730,
                        "byte_start": 1726,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "val: Color",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> [f32; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1743,
                        "byte_start": 1735,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 70,
                        "line_start": 70,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> [f32; 4] {"
                          }
                        ]
                      },
                      {
                        "byte_end": 1759,
                        "byte_start": 1755,
                        "column_end": 14,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 10,
                            "text": "        [self.r, self.g, self.b, self.a]"
                          }
                        ]
                      },
                      {
                        "byte_end": 1767,
                        "byte_start": 1763,
                        "column_end": 22,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 18,
                            "text": "        [self.r, self.g, self.b, self.a]"
                          }
                        ]
                      },
                      {
                        "byte_end": 1775,
                        "byte_start": 1771,
                        "column_end": 30,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 26,
                            "text": "        [self.r, self.g, self.b, self.a]"
                          }
                        ]
                      },
                      {
                        "byte_end": 1783,
                        "byte_start": 1779,
                        "column_end": 38,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 71,
                        "line_start": 71,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 38,
                            "highlight_start": 34,
                            "text": "        [self.r, self.g, self.b, self.a]"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 1711,
                    "byte_start": 1682,
                    "column_end": 30,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\color.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "impl Into<[f32; 4]> for Color {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting integer literal to `f32` is unnecessary\n   --> src\\color.rs:264:19\n    |\n264 |     } else if h > 1 as f32 {\n    |                   ^^^^^^^^ help: try: `1_f32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::unnecessary_cast)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7807,
                        "byte_start": 7799,
                        "column_end": 27,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\color.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 264,
                        "line_start": 264,
                        "suggested_replacement": "1_f32",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 19,
                            "text": "    } else if h > 1 as f32 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting integer literal to `f32` is unnecessary",
                "spans": [
                  {
                    "byte_end": 7807,
                    "byte_start": 7799,
                    "column_end": 27,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\color.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 264,
                    "line_start": 264,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 19,
                        "text": "    } else if h > 1 as f32 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n   --> src\\material.rs:101:5\n    |\n101 | /     impl Default for PreprocessorConfig {\n102 | |         fn default() -> PreprocessorConfig {\n103 | |             PreprocessorConfig { includes: vec![] }\n104 | |         }\n105 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\nhelp: replace the manual implementation with a derive attribute\n    |\n98  ~     #[derive(Default)]\n99  ~ pub struct PreprocessorConfig {\n100 |         pub includes: Vec<(IncludeFilename, IncludeContent)>,\n101 |     }\n102 ~     \n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::derivable_impls)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2966,
                        "byte_start": 2816,
                        "column_end": 6,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\material.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 101,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 5,
                            "text": "    impl Default for PreprocessorConfig {"
                          },
                          {
                            "highlight_end": 45,
                            "highlight_start": 1,
                            "text": "        fn default() -> PreprocessorConfig {"
                          },
                          {
                            "highlight_end": 52,
                            "highlight_start": 1,
                            "text": "            PreprocessorConfig { includes: vec![] }"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      },
                      {
                        "byte_end": 2712,
                        "byte_start": 2712,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\material.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 98,
                        "line_start": 98,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    pub struct PreprocessorConfig {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 2966,
                    "byte_start": 2816,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\material.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 101,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 5,
                        "text": "    impl Default for PreprocessorConfig {"
                      },
                      {
                        "highlight_end": 45,
                        "highlight_start": 1,
                        "text": "        fn default() -> PreprocessorConfig {"
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "            PreprocessorConfig { includes: vec![] }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: function call inside of `expect`\n   --> src\\material.rs:155:18\n    |\n155 |                   .expect(&format!(\n    |  __________________^\n156 | |                     \"Include file {filename} in not on \\\"includes\\\" list\"\n157 | |                 ));\n    | |__________________^ help: try: `unwrap_or_else(|| panic!(\"Include file {filename} in not on \\\"includes\\\" list\"))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call\n    = note: `#[warn(clippy::expect_fun_call)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::expect_fun_call)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4647,
                        "byte_start": 4538,
                        "column_end": 19,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\material.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 157,
                        "line_start": 155,
                        "suggested_replacement": "unwrap_or_else(|| panic!(\"Include file {filename} in not on \\\"includes\\\" list\"))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 18,
                            "text": "                .expect(&format!("
                          },
                          {
                            "highlight_end": 74,
                            "highlight_start": 1,
                            "text": "                    \"Include file {filename} in not on \\\"includes\\\" list\""
                          },
                          {
                            "highlight_end": 19,
                            "highlight_start": 1,
                            "text": "                ));"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::expect_fun_call",
                  "explanation": null
                },
                "level": "warning",
                "message": "function call inside of `expect`",
                "spans": [
                  {
                    "byte_end": 4647,
                    "byte_start": 4538,
                    "column_end": 19,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\material.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 157,
                    "line_start": 155,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 18,
                        "text": "                .expect(&format!("
                      },
                      {
                        "highlight_end": 74,
                        "highlight_start": 1,
                        "text": "                    \"Include file {filename} in not on \\\"includes\\\" list\""
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                ));"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\models.rs:141:5\n    |\n141 | /// support custom uv values per vertex)\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n    = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n    |\n141 | ///   support custom uv values per vertex)\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_lazy_continuation)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4235,
                        "byte_start": 4235,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\models.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 141,
                        "line_start": 141,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// support custom uv values per vertex)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 4235,
                    "byte_start": 4235,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\models.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// support custom uv values per vertex)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item without indentation\n   --> src\\models.rs:186:5\n    |\n186 | /// support custom uv values per vertex, multiple textures?)\n    |     ^\n    |\n    = help: if this is supposed to be its own paragraph, add a blank line\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n    |\n186 | ///   support custom uv values per vertex, multiple textures?)\n    |     ++\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if this is supposed to be its own paragraph, add a blank line",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "indent this line",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5705,
                        "byte_start": 5705,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\models.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 186,
                        "line_start": 186,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "/// support custom uv values per vertex, multiple textures?)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_lazy_continuation",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item without indentation",
                "spans": [
                  {
                    "byte_end": 5705,
                    "byte_start": 5705,
                    "column_end": 5,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\models.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 186,
                    "line_start": 186,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 5,
                        "highlight_start": 5,
                        "text": "/// support custom uv values per vertex, multiple textures?)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this function has too many arguments (8/7)\n   --> src\\shapes.rs:368:1\n    |\n368 | / pub fn draw_arc(\n369 | |     x: f32,\n370 | |     y: f32,\n371 | |     sides: u8,\n...   |\n376 | |     color: Color,\n377 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::too_many_arguments)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::too_many_arguments",
                  "explanation": null
                },
                "level": "warning",
                "message": "this function has too many arguments (8/7)",
                "spans": [
                  {
                    "byte_end": 13145,
                    "byte_start": 13000,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\shapes.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 377,
                    "line_start": 368,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "pub fn draw_arc("
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "    x: f32,"
                      },
                      {
                        "highlight_end": 12,
                        "highlight_start": 1,
                        "text": "    y: f32,"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "    sides: u8,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "    radius: f32,"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "    rotation: f32,"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "    thickness: f32,"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "    arc: f32,"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "    color: Color,"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": ") {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n  --> src\\texture\\slotmap.rs:72:9\n   |\n72 | /         self.slots\n73 | |             .get(key.idx as usize)\n74 | |             .map_or(false, |slot| slot.version == key.version.get())\n   | |____________________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n   |\n74 -             .map_or(false, |slot| slot.version == key.version.get())\n74 +             .is_some_and(|slot| slot.version == key.version.get())\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1776,
                        "byte_start": 1770,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\texture\\slotmap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |slot| slot.version == key.version.get())"
                          }
                        ]
                      },
                      {
                        "byte_end": 1784,
                        "byte_start": 1777,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\texture\\slotmap.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |slot| slot.version == key.version.get())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 1825,
                    "byte_start": 1711,
                    "column_end": 69,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\texture\\slotmap.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 72,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 19,
                        "highlight_start": 9,
                        "text": "        self.slots"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "            .get(key.idx as usize)"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |slot| slot.version == key.version.get())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\texture.rs:135:19\n    |\n135 |             bytes[i * 4 + 0] = (color.r * 255.) as u8;\n    |                   ^^^^^^^^^ help: consider reducing it to: `(i * 4)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::identity_op)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4051,
                        "byte_start": 4042,
                        "column_end": 28,
                        "column_start": 19,
                        "expansion": null,
                        "file_name": "src\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 135,
                        "line_start": 135,
                        "suggested_replacement": "(i * 4)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 19,
                            "text": "            bytes[i * 4 + 0] = (color.r * 255.) as u8;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 4051,
                    "byte_start": 4042,
                    "column_end": 28,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 135,
                    "line_start": 135,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 19,
                        "text": "            bytes[i * 4 + 0] = (color.r * 255.) as u8;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the loop variable `i` is used to index `colors`\n   --> src\\texture.rs:151:18\n    |\n151 |         for i in 0..colors.len() {\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n151 -         for i in 0..colors.len() {\n151 +         for (i, <item>) in colors.iter().enumerate() {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_range_loop)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using an iterator and enumerate()",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4538,
                        "byte_start": 4537,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "(i, <item>)",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 13,
                            "text": "        for i in 0..colors.len() {"
                          }
                        ]
                      },
                      {
                        "byte_end": 4557,
                        "byte_start": 4542,
                        "column_end": 33,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "colors.iter().enumerate()",
                        "suggestion_applicability": "HasPlaceholders",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 18,
                            "text": "        for i in 0..colors.len() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_range_loop",
                  "explanation": null
                },
                "level": "warning",
                "message": "the loop variable `i` is used to index `colors`",
                "spans": [
                  {
                    "byte_end": 4557,
                    "byte_start": 4542,
                    "column_end": 33,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 151,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 18,
                        "text": "        for i in 0..colors.len() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this operation has no effect\n   --> src\\texture.rs:219:39\n    |\n219 |                 bytes[n] = self.bytes[y * self.width as usize * 4 + x * 4 + 0];\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(y * self.width as usize * 4 + x * 4)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider reducing it to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6736,
                        "byte_start": 6697,
                        "column_end": 78,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\texture.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 219,
                        "line_start": 219,
                        "suggested_replacement": "(y * self.width as usize * 4 + x * 4)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 78,
                            "highlight_start": 39,
                            "text": "                bytes[n] = self.bytes[y * self.width as usize * 4 + x * 4 + 0];"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::identity_op",
                  "explanation": null
                },
                "level": "warning",
                "message": "this operation has no effect",
                "spans": [
                  {
                    "byte_end": 6736,
                    "byte_start": 6697,
                    "column_end": 78,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\texture.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 219,
                    "line_start": 219,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 78,
                        "highlight_start": 39,
                        "text": "                bytes[n] = self.bytes[y * self.width as usize * 4 + x * 4 + 0];"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `DrawList`\n  --> src\\ui\\render\\mesh_rasterizer.rs:24:5\n   |\n24 | /     pub const fn new() -> DrawList {\n25 | |         DrawList {\n26 | |             vertices: vec![],\n27 | |             indices: vec![],\n...  |\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n23 + impl Default for DrawList {\n24 +     fn default() -> Self {\n25 +         Self::new()\n26 +     }\n27 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 459,
                        "byte_start": 459,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 23,
                        "line_start": 23,
                        "suggested_replacement": "impl Default for DrawList {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl DrawList {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `DrawList`",
                "spans": [
                  {
                    "byte_end": 665,
                    "byte_start": 479,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 31,
                    "line_start": 24,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 5,
                        "text": "    pub const fn new() -> DrawList {"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "        DrawList {"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "            vertices: vec![],"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            indices: vec![],"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            clipping_zone: None,"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            texture: None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this function has too many arguments (8/7)\n   --> src\\ui\\render\\mesh_rasterizer.rs:170:5\n    |\n170 | /     pub fn draw_line(\n171 | |         &mut self,\n172 | |         x1: f32,\n173 | |         y1: f32,\n...   |\n178 | |         color: Color,\n179 | |     ) {\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::too_many_arguments",
                  "explanation": null
                },
                "level": "warning",
                "message": "this function has too many arguments (8/7)",
                "spans": [
                  {
                    "byte_end": 5097,
                    "byte_start": 4919,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 179,
                    "line_start": 170,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 22,
                        "highlight_start": 5,
                        "text": "    pub fn draw_line("
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "        &mut self,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        x1: f32,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        y1: f32,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        x2: f32,"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        y2: f32,"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "        thickness: f32,"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "        source: Rect,"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "        color: Color,"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    ) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'b\n   --> src\\ui\\render\\mesh_rasterizer.rs:207:29\n    |\n207 | fn get_active_draw_list<'a, 'b>(\n    |                             ^^\n208 |     draw_lists: &'a mut Vec<DrawList>,\n209 |     command: &'b DrawCommand,\n    |               ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n207 ~ fn get_active_draw_list<'a>(\n208 |     draw_lists: &'a mut Vec<DrawList>,\n209 ~     command: &DrawCommand,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6104,
                        "byte_start": 6100,
                        "column_end": 31,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 207,
                        "line_start": 207,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 27,
                            "text": "fn get_active_draw_list<'a, 'b>("
                          }
                        ]
                      },
                      {
                        "byte_end": 6163,
                        "byte_start": 6160,
                        "column_end": 18,
                        "column_start": 15,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 209,
                        "line_start": 209,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 15,
                            "text": "    command: &'b DrawCommand,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'b",
                "spans": [
                  {
                    "byte_end": 6104,
                    "byte_start": 6102,
                    "column_end": 31,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 207,
                    "line_start": 207,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 29,
                        "text": "fn get_active_draw_list<'a, 'b>("
                      }
                    ]
                  },
                  {
                    "byte_end": 6162,
                    "byte_start": 6160,
                    "column_end": 17,
                    "column_start": 15,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 209,
                    "line_start": 209,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 15,
                        "text": "    command: &'b DrawCommand,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: length comparison to zero\n   --> src\\ui\\render\\mesh_rasterizer.rs:211:8\n    |\n211 |     if draw_lists.len() == 0 {\n    |        ^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `draw_lists.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "using `is_empty` is clearer and more explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6228,
                        "byte_start": 6207,
                        "column_end": 29,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 211,
                        "line_start": 211,
                        "suggested_replacement": "draw_lists.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 8,
                            "text": "    if draw_lists.len() == 0 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::len_zero",
                  "explanation": null
                },
                "level": "warning",
                "message": "length comparison to zero",
                "spans": [
                  {
                    "byte_end": 6228,
                    "byte_start": 6207,
                    "column_end": 29,
                    "column_start": 8,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 211,
                    "line_start": 211,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 8,
                        "text": "    if draw_lists.len() == 0 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\mesh_rasterizer.rs:223:17\n    |\n223 |               if !last\n    |  _________________^\n224 | |                 .texture\n225 | |                 .as_ref()\n226 | |                 .map_or(false, |t| t.texture == texture.texture)\n    | |________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n226 -                 .map_or(false, |t| t.texture == texture.texture)\n226 +                 .is_some_and(|t| t.texture == texture.texture)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6658,
                        "byte_start": 6652,
                        "column_end": 24,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 226,
                        "line_start": 226,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 18,
                            "text": "                .map_or(false, |t| t.texture == texture.texture)"
                          }
                        ]
                      },
                      {
                        "byte_end": 6666,
                        "byte_start": 6659,
                        "column_end": 32,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 226,
                        "line_start": 226,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 25,
                            "text": "                .map_or(false, |t| t.texture == texture.texture)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 6699,
                    "byte_start": 6579,
                    "column_end": 65,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 226,
                    "line_start": 223,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 17,
                        "text": "            if !last"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                .texture"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "                .as_ref()"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                .map_or(false, |t| t.texture == texture.texture)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: binary comparison to literal `Option::None`\n   --> src\\ui\\render\\mesh_rasterizer.rs:244:16\n    |\n244 |             if last.texture != None\n    |                ^^^^^^^^^^^^^^^^^^^^ help: use `Option::is_some()` instead: `last.texture.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#partialeq_to_none\n    = note: `#[warn(clippy::partialeq_to_none)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#partialeq_to_none",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::partialeq_to_none)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use `Option::is_some()` instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7303,
                        "byte_start": 7283,
                        "column_end": 36,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 244,
                        "line_start": 244,
                        "suggested_replacement": "last.texture.is_some()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 16,
                            "text": "            if last.texture != None"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::partialeq_to_none",
                  "explanation": null
                },
                "level": "warning",
                "message": "binary comparison to literal `Option::None`",
                "spans": [
                  {
                    "byte_end": 7303,
                    "byte_start": 7283,
                    "column_end": 36,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\mesh_rasterizer.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 244,
                    "line_start": 244,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 16,
                        "text": "            if last.texture != None"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:345:16\n    |\n345 |               if self\n    |  ________________^\n346 | |                 .clipping_zone\n347 | |                 .map_or(false, |clip| !clip.overlaps(&dest))\n    | |____________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n347 -                 .map_or(false, |clip| !clip.overlaps(&dest))\n347 +                 .is_some_and(|clip| !clip.overlaps(&dest))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10434,
                        "byte_start": 10428,
                        "column_end": 24,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 347,
                        "line_start": 347,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 18,
                            "text": "                .map_or(false, |clip| !clip.overlaps(&dest))"
                          }
                        ]
                      },
                      {
                        "byte_end": 10442,
                        "byte_start": 10435,
                        "column_end": 32,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 347,
                        "line_start": 347,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 25,
                            "text": "                .map_or(false, |clip| !clip.overlaps(&dest))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 10471,
                    "byte_start": 10375,
                    "column_end": 61,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 347,
                    "line_start": 345,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 16,
                        "text": "            if self"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "                .clipping_zone"
                      },
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "                .map_or(false, |clip| !clip.overlaps(&dest))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:381:12\n    |\n381 |           if self.clipping_zone.map_or(false, |clip| {\n    |  ____________^\n382 | |             !clip.overlaps(&Rect::new(position.x - 150., position.y - 25., 200., 50.))\n383 | |         }) {\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n381 -         if self.clipping_zone.map_or(false, |clip| {\n381 +         if self.clipping_zone.is_some_and(|clip| {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11296,
                        "byte_start": 11290,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 381,
                        "line_start": 381,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "        if self.clipping_zone.map_or(false, |clip| {"
                          }
                        ]
                      },
                      {
                        "byte_end": 11304,
                        "byte_start": 11297,
                        "column_end": 45,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 381,
                        "line_start": 381,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 38,
                            "text": "        if self.clipping_zone.map_or(false, |clip| {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 11410,
                    "byte_start": 11271,
                    "column_end": 11,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 383,
                    "line_start": 381,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 12,
                        "text": "        if self.clipping_zone.map_or(false, |clip| {"
                      },
                      {
                        "highlight_end": 87,
                        "highlight_start": 1,
                        "text": "            !clip.overlaps(&Rect::new(position.x - 150., position.y - 25., 200., 50.))"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        }) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:405:12\n    |\n405 |           if self\n    |  ____________^\n406 | |             .clipping_zone\n407 | |             .map_or(false, |clip| !clip.overlaps(&rect))\n    | |________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n407 -             .map_or(false, |clip| !clip.overlaps(&rect))\n407 +             .is_some_and(|clip| !clip.overlaps(&rect))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12065,
                        "byte_start": 12059,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 407,
                        "line_start": 407,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      },
                      {
                        "byte_end": 12073,
                        "byte_start": 12066,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 407,
                        "line_start": 407,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 12102,
                    "byte_start": 12014,
                    "column_end": 57,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 407,
                    "line_start": 405,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "        if self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .clipping_zone"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:423:12\n    |\n423 |           if self\n    |  ____________^\n424 | |             .clipping_zone\n425 | |             .map_or(false, |clip| !clip.overlaps(&rect))\n    | |________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n425 -             .map_or(false, |clip| !clip.overlaps(&rect))\n425 +             .is_some_and(|clip| !clip.overlaps(&rect))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12486,
                        "byte_start": 12480,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 425,
                        "line_start": 425,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      },
                      {
                        "byte_end": 12494,
                        "byte_start": 12487,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 425,
                        "line_start": 425,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 12523,
                    "byte_start": 12435,
                    "column_end": 57,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 425,
                    "line_start": 423,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "        if self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .clipping_zone"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:451:12\n    |\n451 |           if self\n    |  ____________^\n452 | |             .clipping_zone\n453 | |             .map_or(false, |clip| !clip.overlaps(&rect))\n    | |________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n453 -             .map_or(false, |clip| !clip.overlaps(&rect))\n453 +             .is_some_and(|clip| !clip.overlaps(&rect))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13113,
                        "byte_start": 13107,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 453,
                        "line_start": 453,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      },
                      {
                        "byte_end": 13121,
                        "byte_start": 13114,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 453,
                        "line_start": 453,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 13150,
                    "byte_start": 13062,
                    "column_end": 57,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 453,
                    "line_start": 451,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "        if self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .clipping_zone"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |clip| !clip.overlaps(&rect))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:481:12\n    |\n481 |           if self.clipping_zone.map_or(false, |clip| {\n    |  ____________^\n482 | |             !clip.contains(p0) && !clip.contains(p1) && !clip.contains(p2)\n483 | |         }) {\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n481 -         if self.clipping_zone.map_or(false, |clip| {\n481 +         if self.clipping_zone.is_some_and(|clip| {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13987,
                        "byte_start": 13981,
                        "column_end": 37,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 481,
                        "line_start": 481,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 31,
                            "text": "        if self.clipping_zone.map_or(false, |clip| {"
                          }
                        ]
                      },
                      {
                        "byte_end": 13995,
                        "byte_start": 13988,
                        "column_end": 45,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 481,
                        "line_start": 481,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 38,
                            "text": "        if self.clipping_zone.map_or(false, |clip| {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 14089,
                    "byte_start": 13962,
                    "column_end": 11,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 483,
                    "line_start": 481,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 53,
                        "highlight_start": 12,
                        "text": "        if self.clipping_zone.map_or(false, |clip| {"
                      },
                      {
                        "highlight_end": 75,
                        "highlight_start": 1,
                        "text": "            !clip.contains(p0) && !clip.contains(p1) && !clip.contains(p2)"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        }) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\render\\painter.rs:504:12\n    |\n504 |           if self\n    |  ____________^\n505 | |             .clipping_zone\n506 | |             .map_or(false, |clip| !clip.contains(start) && !clip.contains(end))\n    | |_______________________________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n506 -             .map_or(false, |clip| !clip.contains(start) && !clip.contains(end))\n506 +             .is_some_and(|clip| !clip.contains(start) && !clip.contains(end))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14601,
                        "byte_start": 14595,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 506,
                        "line_start": 506,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |clip| !clip.contains(start) && !clip.contains(end))"
                          }
                        ]
                      },
                      {
                        "byte_end": 14609,
                        "byte_start": 14602,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 506,
                        "line_start": 506,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |clip| !clip.contains(start) && !clip.contains(end))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 14661,
                    "byte_start": 14550,
                    "column_end": 80,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 506,
                    "line_start": 504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "        if self"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "            .clipping_zone"
                      },
                      {
                        "highlight_end": 80,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |clip| !clip.contains(start) && !clip.contains(end))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n   --> src\\ui\\render\\painter.rs:550:1\n    |\n550 | / impl Default for Alignment {\n551 | |     fn default() -> Alignment {\n552 | |         Alignment::Left\n553 | |     }\n554 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\nhelp: replace the manual implementation with a derive attribute and mark the default variant\n    |\n545 + #[derive(Default)]\n546 ~ pub enum Alignment {\n547 ~     #[default]\n548 ~     Left,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute and mark the default variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15812,
                        "byte_start": 15719,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 555,
                        "line_start": 550,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 29,
                            "highlight_start": 1,
                            "text": "impl Default for Alignment {"
                          },
                          {
                            "highlight_end": 32,
                            "highlight_start": 1,
                            "text": "    fn default() -> Alignment {"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "        Alignment::Left"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          }
                        ]
                      },
                      {
                        "byte_end": 15673,
                        "byte_start": 15673,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 545,
                        "line_start": 545,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub enum Alignment {"
                          }
                        ]
                      },
                      {
                        "byte_end": 15698,
                        "byte_start": 15698,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\ui\\render\\painter.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 546,
                        "line_start": 546,
                        "suggested_replacement": "#[default]\n    ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    Left,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 15811,
                    "byte_start": 15719,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\ui\\render\\painter.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 554,
                    "line_start": 550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "impl Default for Alignment {"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "    fn default() -> Alignment {"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "        Alignment::Left"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\style.rs:327:12\n    |\n327 |         if focused == false {\n    |            ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!focused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n    = note: `#[warn(clippy::bool_comparison)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::bool_comparison)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9900,
                        "byte_start": 9884,
                        "column_end": 28,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\style.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 327,
                        "line_start": 327,
                        "suggested_replacement": "!focused",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 12,
                            "text": "        if focused == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 9900,
                    "byte_start": 9884,
                    "column_end": 28,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\style.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 327,
                    "line_start": 327,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 28,
                        "highlight_start": 12,
                        "text": "        if focused == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\checkbox.rs:141:12\n    |\n141 |         if self.label.is_empty() == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.label.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3755,
                        "byte_start": 3725,
                        "column_end": 42,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\checkbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 141,
                        "line_start": 141,
                        "suggested_replacement": "!self.label.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 12,
                            "text": "        if self.label.is_empty() == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3755,
                    "byte_start": 3725,
                    "column_end": 42,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\checkbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 141,
                    "line_start": 141,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 12,
                        "text": "        if self.label.is_empty() == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\widgets\\combobox.rs:69:12\n   |\n69 |         if context.window.was_active == false {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.window.was_active`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1955,
                        "byte_start": 1921,
                        "column_end": 46,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\combobox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "!context.window.was_active",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 12,
                            "text": "        if context.window.was_active == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 1955,
                    "byte_start": 1921,
                    "column_end": 46,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\combobox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 12,
                        "text": "        if context.window.was_active == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\combobox.rs:113:12\n    |\n113 |         if *state == false && context.focused && hovered && context.input.click_down {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!(*state)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3376,
                        "byte_start": 3361,
                        "column_end": 27,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\combobox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 113,
                        "line_start": 113,
                        "suggested_replacement": "!(*state)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 12,
                            "text": "        if *state == false && context.focused && hovered && context.input.click_down {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3376,
                    "byte_start": 3361,
                    "column_end": 27,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\combobox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 113,
                    "line_start": 113,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 12,
                        "text": "        if *state == false && context.focused && hovered && context.input.click_down {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\combobox.rs:118:21\n    |\n118 |                 || (modal_rect.contains(context.input.mouse_position) == false\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!modal_rect.contains(context.input.mouse_position)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3643,
                        "byte_start": 3585,
                        "column_end": 79,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\combobox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 118,
                        "line_start": 118,
                        "suggested_replacement": "!modal_rect.contains(context.input.mouse_position)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 79,
                            "highlight_start": 21,
                            "text": "                || (modal_rect.contains(context.input.mouse_position) == false"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3643,
                    "byte_start": 3585,
                    "column_end": 79,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\combobox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 118,
                    "line_start": 118,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 21,
                        "text": "                || (modal_rect.contains(context.input.mouse_position) == false"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `else { if .. }` block can be collapsed\n   --> src\\ui\\widgets\\drag.rs:114:16\n    |\n114 |           } else {\n    |  ________________^\n115 | |             if context.input.escape\n116 | |                 || context.input.enter\n117 | |                 || (hovered == false && context.input.is_mouse_down())\n...   |\n121 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n114 ~         } else if context.input.escape\n115 +             || context.input.enter\n116 +             || (hovered == false && context.input.is_mouse_down())\n117 +         {\n118 +             s.in_editbox = false;\n119 +         }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::collapsible_else_if)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3264,
                        "byte_start": 3041,
                        "column_end": 10,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 114,
                        "suggested_replacement": "if context.input.escape\n            || context.input.enter\n            || (hovered == false && context.input.is_mouse_down())\n        {\n            s.in_editbox = false;\n        }",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 16,
                            "text": "        } else {"
                          },
                          {
                            "highlight_end": 36,
                            "highlight_start": 1,
                            "text": "            if context.input.escape"
                          },
                          {
                            "highlight_end": 39,
                            "highlight_start": 1,
                            "text": "                || context.input.enter"
                          },
                          {
                            "highlight_end": 71,
                            "highlight_start": 1,
                            "text": "                || (hovered == false && context.input.is_mouse_down())"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            {"
                          },
                          {
                            "highlight_end": 38,
                            "highlight_start": 1,
                            "text": "                s.in_editbox = false;"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_else_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `else { if .. }` block can be collapsed",
                "spans": [
                  {
                    "byte_end": 3264,
                    "byte_start": 3041,
                    "column_end": 10,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 16,
                        "text": "        } else {"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            if context.input.escape"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "                || context.input.enter"
                      },
                      {
                        "highlight_end": 71,
                        "highlight_start": 1,
                        "text": "                || (hovered == false && context.input.is_mouse_down())"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            {"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "                s.in_editbox = false;"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\drag.rs:110:12\n    |\n110 |         if s.in_editbox == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!s.in_editbox`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2883,
                        "byte_start": 2862,
                        "column_end": 33,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 110,
                        "line_start": 110,
                        "suggested_replacement": "!s.in_editbox",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 12,
                            "text": "        if s.in_editbox == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 2883,
                    "byte_start": 2862,
                    "column_end": 33,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 110,
                    "line_start": 110,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 12,
                        "text": "        if s.in_editbox == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\drag.rs:117:21\n    |\n117 |                 || (hovered == false && context.input.is_mouse_down())\n    |                     ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!hovered`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3154,
                        "byte_start": 3138,
                        "column_end": 37,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 117,
                        "line_start": 117,
                        "suggested_replacement": "!hovered",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 37,
                            "highlight_start": 21,
                            "text": "                || (hovered == false && context.input.is_mouse_down())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3154,
                    "byte_start": 3138,
                    "column_end": 37,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 117,
                    "line_start": 117,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 37,
                        "highlight_start": 21,
                        "text": "                || (hovered == false && context.input.is_mouse_down())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\drag.rs:123:12\n    |\n123 |         if s.in_editbox == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!s.in_editbox`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3298,
                        "byte_start": 3277,
                        "column_end": 33,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 123,
                        "line_start": 123,
                        "suggested_replacement": "!s.in_editbox",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 12,
                            "text": "        if s.in_editbox == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3298,
                    "byte_start": 3277,
                    "column_end": 33,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 123,
                    "line_start": 123,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 12,
                        "text": "        if s.in_editbox == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `else { if .. }` block can be collapsed\n   --> src\\ui\\widgets\\drag.rs:176:20\n    |\n176 |               } else {\n    |  ____________________^\n177 | |                 if hovered && context.input.is_mouse_down() {\n178 | |                     s.drag = Some(DragState {\n179 | |                         start_mouse: context.input.mouse_position.x,\n...   |\n185 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\nhelp: collapse nested if block\n    |\n176 ~             } else if hovered && context.input.is_mouse_down() {\n177 +                 s.drag = Some(DragState {\n178 +                     start_mouse: context.input.mouse_position.x,\n179 +                     start_value: (*data).into(),\n180 +                 });\n181 +                 *context.input_focus = Some(self.id);\n182 +                 context.input.cursor_grabbed = true;\n183 +             }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5992,
                        "byte_start": 5590,
                        "column_end": 14,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 185,
                        "line_start": 176,
                        "suggested_replacement": "if hovered && context.input.is_mouse_down() {\n                s.drag = Some(DragState {\n                    start_mouse: context.input.mouse_position.x,\n                    start_value: (*data).into(),\n                });\n                *context.input_focus = Some(self.id);\n                context.input.cursor_grabbed = true;\n            }",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 20,
                            "text": "            } else {"
                          },
                          {
                            "highlight_end": 62,
                            "highlight_start": 1,
                            "text": "                if hovered && context.input.is_mouse_down() {"
                          },
                          {
                            "highlight_end": 46,
                            "highlight_start": 1,
                            "text": "                    s.drag = Some(DragState {"
                          },
                          {
                            "highlight_end": 69,
                            "highlight_start": 1,
                            "text": "                        start_mouse: context.input.mouse_position.x,"
                          },
                          {
                            "highlight_end": 53,
                            "highlight_start": 1,
                            "text": "                        start_value: (*data).into(),"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                    });"
                          },
                          {
                            "highlight_end": 58,
                            "highlight_start": 1,
                            "text": "                    *context.input_focus = Some(self.id);"
                          },
                          {
                            "highlight_end": 57,
                            "highlight_start": 1,
                            "text": "                    context.input.cursor_grabbed = true;"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                }"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_else_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `else { if .. }` block can be collapsed",
                "spans": [
                  {
                    "byte_end": 5992,
                    "byte_start": 5590,
                    "column_end": 14,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 185,
                    "line_start": 176,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 20,
                        "text": "            } else {"
                      },
                      {
                        "highlight_end": 62,
                        "highlight_start": 1,
                        "text": "                if hovered && context.input.is_mouse_down() {"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                    s.drag = Some(DragState {"
                      },
                      {
                        "highlight_end": 69,
                        "highlight_start": 1,
                        "text": "                        start_mouse: context.input.mouse_position.x,"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                        start_value: (*data).into(),"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                    });"
                      },
                      {
                        "highlight_end": 58,
                        "highlight_start": 1,
                        "text": "                    *context.input_focus = Some(self.id);"
                      },
                      {
                        "highlight_end": 57,
                        "highlight_start": 1,
                        "text": "                    context.input.cursor_grabbed = true;"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\drag.rs:151:20\n    |\n151 |                 if context.input.is_mouse_down == false {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.input.is_mouse_down`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4349,
                        "byte_start": 4313,
                        "column_end": 56,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 151,
                        "line_start": 151,
                        "suggested_replacement": "!context.input.is_mouse_down",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 20,
                            "text": "                if context.input.is_mouse_down == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 4349,
                    "byte_start": 4313,
                    "column_end": 56,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 151,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 20,
                        "text": "                if context.input.is_mouse_down == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\drag.rs:211:12\n    |\n211 |         if self.label.is_empty() == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.label.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6802,
                        "byte_start": 6772,
                        "column_end": 42,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\drag.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 211,
                        "line_start": 211,
                        "suggested_replacement": "!self.label.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 12,
                            "text": "        if self.label.is_empty() == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 6802,
                    "byte_start": 6772,
                    "column_end": 42,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\drag.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 211,
                    "line_start": 211,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 12,
                        "text": "        if self.label.is_empty() == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do\n  --> src\\ui\\widgets\\editbox\\text_editor.rs:12:42\n   |\n12 |     fn new(editor: &EditboxState, _text: &mut Vec<char>, character: char) -> InsertCharacter {\n   |                                          ^^^^^^^^^^^^^^ help: change this to: `&mut [char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::ptr_arg)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 297,
                        "byte_start": 283,
                        "column_end": 56,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 12,
                        "line_start": 12,
                        "suggested_replacement": "&mut [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 42,
                            "text": "    fn new(editor: &EditboxState, _text: &mut Vec<char>, character: char) -> InsertCharacter {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 297,
                    "byte_start": 283,
                    "column_end": 56,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 12,
                    "line_start": 12,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 42,
                        "text": "    fn new(editor: &EditboxState, _text: &mut Vec<char>, character: char) -> InsertCharacter {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do\n  --> src\\ui\\widgets\\editbox\\text_editor.rs:42:42\n   |\n42 |     fn new(editor: &EditboxState, _text: &mut Vec<char>, data: Vec<char>) -> InsertString {\n   |                                          ^^^^^^^^^^^^^^ help: change this to: `&mut [char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1084,
                        "byte_start": 1070,
                        "column_end": 56,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 42,
                        "line_start": 42,
                        "suggested_replacement": "&mut [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 42,
                            "text": "    fn new(editor: &EditboxState, _text: &mut Vec<char>, data: Vec<char>) -> InsertString {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 1084,
                    "byte_start": 1070,
                    "column_end": 56,
                    "column_start": 42,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 42,
                    "line_start": 42,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 42,
                        "text": "    fn new(editor: &EditboxState, _text: &mut Vec<char>, data: Vec<char>) -> InsertString {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do\n  --> src\\ui\\widgets\\editbox\\text_editor.rs:77:41\n   |\n77 |     fn new(editor: &EditboxState, text: &mut Vec<char>) -> Option<DeleteCharacter> {\n   |                                         ^^^^^^^^^^^^^^ help: change this to: `&mut [char]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2040,
                        "byte_start": 2026,
                        "column_end": 55,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 77,
                        "line_start": 77,
                        "suggested_replacement": "&mut [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 41,
                            "text": "    fn new(editor: &EditboxState, text: &mut Vec<char>) -> Option<DeleteCharacter> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 2040,
                    "byte_start": 2026,
                    "column_end": 55,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 77,
                    "line_start": 77,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 55,
                        "highlight_start": 41,
                        "text": "    fn new(editor: &EditboxState, text: &mut Vec<char>) -> Option<DeleteCharacter> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:109:18\n    |\n109 |     fn new(text: &mut Vec<char>, (start, end): (u32, u32)) -> DeleteRange {\n    |                  ^^^^^^^^^^^^^^ help: change this to: `&mut [char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2871,
                        "byte_start": 2857,
                        "column_end": 32,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 109,
                        "line_start": 109,
                        "suggested_replacement": "&mut [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 18,
                            "text": "    fn new(text: &mut Vec<char>, (start, end): (u32, u32)) -> DeleteRange {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&mut Vec` instead of `&mut [_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 2871,
                    "byte_start": 2857,
                    "column_end": 32,
                    "column_start": 18,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 109,
                    "line_start": 109,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 18,
                        "text": "    fn new(text: &mut Vec<char>, (start, end): (u32, u32)) -> DeleteRange {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `impl` can be derived\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:147:1\n    |\n147 | / impl Default for ClickState {\n148 | |     fn default() -> ClickState {\n149 | |         ClickState::None\n150 | |     }\n151 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\nhelp: replace the manual implementation with a derive attribute and mark the default variant\n    |\n140 + #[derive(Default)]\n141 ~ pub enum ClickState {\n142 ~     #[default]\n143 ~     None,\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the manual implementation with a derive attribute and mark the default variant",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3976,
                        "byte_start": 3880,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 152,
                        "line_start": 147,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 1,
                            "text": "impl Default for ClickState {"
                          },
                          {
                            "highlight_end": 33,
                            "highlight_start": 1,
                            "text": "    fn default() -> ClickState {"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "        ClickState::None"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          },
                          {
                            "highlight_end": 2,
                            "highlight_start": 1,
                            "text": "}"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub const DOUBLE_CLICK_TIME: f32 = 0.5;"
                          }
                        ]
                      },
                      {
                        "byte_end": 3687,
                        "byte_start": 3687,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 140,
                        "line_start": 140,
                        "suggested_replacement": "#[derive(Default)]\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "pub enum ClickState {"
                          }
                        ]
                      },
                      {
                        "byte_end": 3713,
                        "byte_start": 3713,
                        "column_end": 5,
                        "column_start": 5,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 141,
                        "line_start": 141,
                        "suggested_replacement": "#[default]\n    ",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 5,
                            "highlight_start": 5,
                            "text": "    None,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::derivable_impls",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `impl` can be derived",
                "spans": [
                  {
                    "byte_end": 3975,
                    "byte_start": 3880,
                    "column_end": 2,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 151,
                    "line_start": 147,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "impl Default for ClickState {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "    fn default() -> ClickState {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "        ClickState::None"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      },
                      {
                        "highlight_end": 2,
                        "highlight_start": 1,
                        "text": "}"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:168:28\n    |\n168 |     pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {\n    |                            ^^                    ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n168 -     pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {\n168 +     pub fn clamp_selection(&mut self, text: &Vec<char>) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4398,
                        "byte_start": 4394,
                        "column_end": 31,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 27,
                            "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 4420,
                        "byte_start": 4417,
                        "column_end": 53,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 53,
                            "highlight_start": 50,
                            "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 4397,
                    "byte_start": 4395,
                    "column_end": 30,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 28,
                        "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 4419,
                    "byte_start": 4417,
                    "column_end": 52,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 50,
                        "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:168:49\n    |\n168 |     pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {\n    |                                                 ^^^^^^^^^^^^^ help: change this to: `&'a [char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4429,
                        "byte_start": 4416,
                        "column_end": 62,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 168,
                        "line_start": 168,
                        "suggested_replacement": "&'a [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 49,
                            "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 4429,
                    "byte_start": 4416,
                    "column_end": 62,
                    "column_start": 49,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 168,
                    "line_start": 168,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 49,
                        "text": "    pub fn clamp_selection<'a>(&mut self, text: &'a Vec<char>) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:179:43\n    |\n179 |     pub fn selected_text<'a>(&self, text: &'a Vec<char>) -> Option<&'a [char]> {\n    |                                           ^^^^^^^^^^^^^ help: change this to: `&'a [char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4777,
                        "byte_start": 4764,
                        "column_end": 56,
                        "column_start": 43,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "&'a [char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 43,
                            "text": "    pub fn selected_text<'a>(&self, text: &'a Vec<char>) -> Option<&'a [char]> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 4777,
                    "byte_start": 4764,
                    "column_end": 56,
                    "column_start": 43,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 179,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 43,
                        "text": "    pub fn selected_text<'a>(&self, text: &'a Vec<char>) -> Option<&'a [char]> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:199:41\n    |\n199 |     pub fn find_line_begin(&self, text: &Vec<char>) -> u32 {\n    |                                         ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5444,
                        "byte_start": 5434,
                        "column_end": 51,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 199,
                        "line_start": 199,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 41,
                            "text": "    pub fn find_line_begin(&self, text: &Vec<char>) -> u32 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 5444,
                    "byte_start": 5434,
                    "column_end": 51,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 199,
                    "line_start": 199,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 41,
                        "text": "    pub fn find_line_begin(&self, text: &Vec<char>) -> u32 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:210:39\n    |\n210 |     pub fn find_line_end(&self, text: &Vec<char>) -> u32 {\n    |                                       ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5781,
                        "byte_start": 5771,
                        "column_end": 49,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 210,
                        "line_start": 210,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 39,
                            "text": "    pub fn find_line_end(&self, text: &Vec<char>) -> u32 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 5781,
                    "byte_start": 5771,
                    "column_end": 49,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 210,
                    "line_start": 210,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 39,
                        "text": "    pub fn find_line_end(&self, text: &Vec<char>) -> u32 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:229:41\n    |\n229 |     pub fn find_word_begin(&self, text: &Vec<char>, cursor: u32) -> u32 {\n    |                                         ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6316,
                        "byte_start": 6306,
                        "column_end": 51,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 229,
                        "line_start": 229,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 41,
                            "text": "    pub fn find_word_begin(&self, text: &Vec<char>, cursor: u32) -> u32 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 6316,
                    "byte_start": 6306,
                    "column_end": 51,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 229,
                    "line_start": 229,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 41,
                        "text": "    pub fn find_word_begin(&self, text: &Vec<char>, cursor: u32) -> u32 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:244:39\n    |\n244 |     pub fn find_word_end(&self, text: &Vec<char>, cursor: u32) -> u32 {\n    |                                       ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6774,
                        "byte_start": 6764,
                        "column_end": 49,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 244,
                        "line_start": 244,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 39,
                            "text": "    pub fn find_word_end(&self, text: &Vec<char>, cursor: u32) -> u32 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 6774,
                    "byte_start": 6764,
                    "column_end": 49,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 244,
                    "line_start": 244,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 39,
                        "text": "    pub fn find_word_end(&self, text: &Vec<char>, cursor: u32) -> u32 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:254:34\n    |\n254 |             if space_skipping && Self::word_delimiter(current_char) == false {\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!Self::word_delimiter(current_char)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7242,
                        "byte_start": 7199,
                        "column_end": 77,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 254,
                        "line_start": 254,
                        "suggested_replacement": "!Self::word_delimiter(current_char)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 77,
                            "highlight_start": 34,
                            "text": "            if space_skipping && Self::word_delimiter(current_char) == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 7242,
                    "byte_start": 7199,
                    "column_end": 77,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 254,
                    "line_start": 254,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 77,
                        "highlight_start": 34,
                        "text": "            if space_skipping && Self::word_delimiter(current_char) == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:322:41\n    |\n322 |     pub fn move_cursor(&mut self, text: &Vec<char>, dx: i32, shift: bool) {\n    |                                         ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9447,
                        "byte_start": 9437,
                        "column_end": 51,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 322,
                        "line_start": 322,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 41,
                            "text": "    pub fn move_cursor(&mut self, text: &Vec<char>, dx: i32, shift: bool) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 9447,
                    "byte_start": 9437,
                    "column_end": 51,
                    "column_start": 41,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 322,
                    "line_start": 322,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 41,
                        "text": "    pub fn move_cursor(&mut self, text: &Vec<char>, dx: i32, shift: bool) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:331:12\n    |\n331 |         if shift == false {\n    |            ^^^^^^^^^^^^^^ help: try simplifying it as shown: `!shift`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9780,
                        "byte_start": 9766,
                        "column_end": 26,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 331,
                        "line_start": 331,
                        "suggested_replacement": "!shift",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 26,
                            "highlight_start": 12,
                            "text": "        if shift == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 9780,
                    "byte_start": 9766,
                    "column_end": 26,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 331,
                    "line_start": 331,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 26,
                        "highlight_start": 12,
                        "text": "        if shift == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:357:40\n    |\n357 |     pub fn select_all(&mut self, text: &Vec<char>) {\n    |                                        ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10546,
                        "byte_start": 10536,
                        "column_end": 50,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 357,
                        "line_start": 357,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 50,
                            "highlight_start": 40,
                            "text": "    pub fn select_all(&mut self, text: &Vec<char>) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 10546,
                    "byte_start": 10536,
                    "column_end": 50,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 357,
                    "line_start": 357,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 40,
                        "text": "    pub fn select_all(&mut self, text: &Vec<char>) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n   --> src\\ui\\widgets\\editbox\\text_editor.rs:473:39\n    |\n473 |     pub fn click_up(&mut self, _text: &Vec<char>) {\n    |                                       ^^^^^^^^^^ help: change this to: `&[char]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14859,
                        "byte_start": 14849,
                        "column_end": 49,
                        "column_start": 39,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 473,
                        "line_start": 473,
                        "suggested_replacement": "&[char]",
                        "suggestion_applicability": "Unspecified",
                        "text": [
                          {
                            "highlight_end": 49,
                            "highlight_start": 39,
                            "text": "    pub fn click_up(&mut self, _text: &Vec<char>) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::ptr_arg",
                  "explanation": null
                },
                "level": "warning",
                "message": "writing `&Vec` instead of `&[_]` involves a new object where a slice will do",
                "spans": [
                  {
                    "byte_end": 14859,
                    "byte_start": 14849,
                    "column_end": 49,
                    "column_start": 39,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox\\text_editor.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 473,
                    "line_start": 473,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 49,
                        "highlight_start": 39,
                        "text": "    pub fn click_up(&mut self, _text: &Vec<char>) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\widgets\\editbox.rs:105:28\n    |\n105 |                         && self.filter.as_ref().map_or(true, |f| f(character))\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_none_or instead\n    |\n105 -                         && self.filter.as_ref().map_or(true, |f| f(character))\n105 +                         && self.filter.as_ref().is_none_or(|f| f(character))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_none_or instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2648,
                        "byte_start": 2642,
                        "column_end": 55,
                        "column_start": 49,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 105,
                        "suggested_replacement": "is_none_or",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 55,
                            "highlight_start": 49,
                            "text": "                        && self.filter.as_ref().map_or(true, |f| f(character))"
                          }
                        ]
                      },
                      {
                        "byte_end": 2655,
                        "byte_start": 2649,
                        "column_end": 62,
                        "column_start": 56,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 105,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 56,
                            "text": "                        && self.filter.as_ref().map_or(true, |f| f(character))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 2672,
                    "byte_start": 2621,
                    "column_end": 79,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 79,
                        "highlight_start": 28,
                        "text": "                        && self.filter.as_ref().map_or(true, |f| f(character))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: length comparison to zero\n   --> src\\ui\\widgets\\editbox.rs:140:28\n    |\n140 |                         if clipboard.len() != 0 {\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!clipboard.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "using `!is_empty` is clearer and more explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3875,
                        "byte_start": 3855,
                        "column_end": 48,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 140,
                        "line_start": 140,
                        "suggested_replacement": "!clipboard.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 48,
                            "highlight_start": 28,
                            "text": "                        if clipboard.len() != 0 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::len_zero",
                  "explanation": null
                },
                "level": "warning",
                "message": "length comparison to zero",
                "spans": [
                  {
                    "byte_end": 3875,
                    "byte_start": 3855,
                    "column_end": 48,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 140,
                    "line_start": 140,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 28,
                        "text": "                        if clipboard.len() != 0 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: length comparison to zero\n   --> src\\ui\\widgets\\editbox.rs:273:24\n    |\n273 |                     if text.len() != 0 && state.cursor < text.len() as u32 - 1 {\n    |                        ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!text.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "using `!is_empty` is clearer and more explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9259,
                        "byte_start": 9244,
                        "column_end": 39,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 273,
                        "line_start": 273,
                        "suggested_replacement": "!text.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 24,
                            "text": "                    if text.len() != 0 && state.cursor < text.len() as u32 - 1 {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::len_zero",
                  "explanation": null
                },
                "level": "warning",
                "message": "length comparison to zero",
                "spans": [
                  {
                    "byte_end": 9259,
                    "byte_start": 9244,
                    "column_end": 39,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 273,
                    "line_start": 273,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 24,
                        "text": "                    if text.len() != 0 && state.cursor < text.len() as u32 - 1 {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox.rs:302:76\n    |\n302 |         if context.input_focused(self.id) && context.input.click_down() && hovered == false {\n    |                                                                            ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!hovered`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10327,
                        "byte_start": 10311,
                        "column_end": 92,
                        "column_start": 76,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 302,
                        "line_start": 302,
                        "suggested_replacement": "!hovered",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 92,
                            "highlight_start": 76,
                            "text": "        if context.input_focused(self.id) && context.input.click_down() && hovered == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 10327,
                    "byte_start": 10311,
                    "column_end": 92,
                    "column_start": 76,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 302,
                    "line_start": 302,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 92,
                        "highlight_start": 76,
                        "text": "        if context.input_focused(self.id) && context.input.click_down() && hovered == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui\\widgets\\editbox.rs:328:13\n    |\n328 |             context.input_focus.map_or(false, |id| id == self.id) && context.focused;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use a standard comparison instead\n    |\n328 -             context.input_focus.map_or(false, |id| id == self.id) && context.focused;\n328 +             (context.input_focus == Some(self.id)) && context.focused;\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use a standard comparison instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11214,
                        "byte_start": 11161,
                        "column_end": 66,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 328,
                        "line_start": 328,
                        "suggested_replacement": "(context.input_focus == Some(self.id))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 13,
                            "text": "            context.input_focus.map_or(false, |id| id == self.id) && context.focused;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 11214,
                    "byte_start": 11161,
                    "column_end": 66,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 328,
                    "line_start": 328,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 13,
                        "text": "            context.input_focus.map_or(false, |id| id == self.id) && context.focused;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox.rs:338:12\n    |\n338 |         if context.focused == false || input_focused == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.focused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11545,
                        "byte_start": 11521,
                        "column_end": 36,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 338,
                        "line_start": 338,
                        "suggested_replacement": "!context.focused",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 12,
                            "text": "        if context.focused == false || input_focused == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 11545,
                    "byte_start": 11521,
                    "column_end": 36,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 338,
                    "line_start": 338,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 12,
                        "text": "        if context.focused == false || input_focused == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox.rs:338:40\n    |\n338 |         if context.focused == false || input_focused == false {\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!input_focused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11571,
                        "byte_start": 11549,
                        "column_end": 62,
                        "column_start": 40,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 338,
                        "line_start": 338,
                        "suggested_replacement": "!input_focused",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 62,
                            "highlight_start": 40,
                            "text": "        if context.focused == false || input_focused == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 11571,
                    "byte_start": 11549,
                    "column_end": 62,
                    "column_start": 40,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 338,
                    "line_start": 338,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 62,
                        "highlight_start": 40,
                        "text": "        if context.focused == false || input_focused == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: length comparison to zero\n   --> src\\ui\\widgets\\editbox.rs:348:22\n    |\n348 |             edited = context.input.input_buffer.len() != 0;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!context.input.input_buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "using `!is_empty` is clearer and more explicit",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11917,
                        "byte_start": 11880,
                        "column_end": 59,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 348,
                        "line_start": 348,
                        "suggested_replacement": "!context.input.input_buffer.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 22,
                            "text": "            edited = context.input.input_buffer.len() != 0;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::len_zero",
                  "explanation": null
                },
                "level": "warning",
                "message": "length comparison to zero",
                "spans": [
                  {
                    "byte_end": 11917,
                    "byte_start": 11880,
                    "column_end": 59,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 348,
                    "line_start": 348,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 22,
                        "text": "            edited = context.input.input_buffer.len() != 0;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\editbox.rs:477:16\n    |\n477 |             if clicked == false && hovered && context.input.is_mouse_down() && input_focused {\n    |                ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!clicked`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15952,
                        "byte_start": 15936,
                        "column_end": 32,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\editbox.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 477,
                        "line_start": 477,
                        "suggested_replacement": "!clicked",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 16,
                            "text": "            if clicked == false && hovered && context.input.is_mouse_down() && input_focused {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 15952,
                    "byte_start": 15936,
                    "column_end": 32,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\editbox.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 477,
                    "line_start": 477,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 16,
                        "text": "            if clicked == false && hovered && context.input.is_mouse_down() && input_focused {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\widgets\\group.rs:91:16\n   |\n91 |             if context.input.is_mouse_down == false {\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.input.is_mouse_down`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2581,
                        "byte_start": 2545,
                        "column_end": 52,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\group.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 91,
                        "line_start": 91,
                        "suggested_replacement": "!context.input.is_mouse_down",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 16,
                            "text": "            if context.input.is_mouse_down == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 2581,
                    "byte_start": 2545,
                    "column_end": 52,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\group.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 91,
                    "line_start": 91,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 16,
                        "text": "            if context.input.is_mouse_down == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\group.rs:105:20\n    |\n105 |                 if context.input.is_mouse_down == false {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.input.is_mouse_down`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3002,
                        "byte_start": 2966,
                        "column_end": 56,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\group.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 105,
                        "line_start": 105,
                        "suggested_replacement": "!context.input.is_mouse_down",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 20,
                            "text": "                if context.input.is_mouse_down == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3002,
                    "byte_start": 2966,
                    "column_end": 56,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\group.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 105,
                    "line_start": 105,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 20,
                        "text": "                if context.input.is_mouse_down == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n   --> src\\ui\\widgets\\group.rs:159:9\n    |\n159 | /         if context.focused && self.draggable {\n160 | |             if\n161 | |             //parent.dragging.is_none()\n162 | |             context.input.is_mouse_down\n...   |\n171 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n159 ~         if context.focused && self.draggable\n160 ~             &&\n161 |             //parent.dragging.is_none()\n...\n169 |                 // ));\n170 ~             }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::collapsible_if)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4375,
                        "byte_start": 4373,
                        "column_end": 47,
                        "column_start": 45,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\group.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 159,
                        "line_start": 159,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 45,
                            "text": "        if context.focused && self.draggable {"
                          }
                        ]
                      },
                      {
                        "byte_end": 4843,
                        "byte_start": 4833,
                        "column_end": 10,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\group.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 171,
                        "line_start": 170,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 14,
                            "highlight_start": 14,
                            "text": "            }"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      },
                      {
                        "byte_end": 4390,
                        "byte_start": 4388,
                        "column_end": 15,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\group.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 160,
                        "line_start": 160,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 15,
                            "highlight_start": 13,
                            "text": "            if"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 4843,
                    "byte_start": 4337,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\group.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 171,
                    "line_start": 159,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 9,
                        "text": "        if context.focused && self.draggable {"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            if"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            //parent.dragging.is_none()"
                      },
                      {
                        "highlight_end": 40,
                        "highlight_start": 1,
                        "text": "            context.input.is_mouse_down"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                && Rect::new(self.pos.x, self.pos.y, self.size.x, self.size.y)"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                    .contains(context.input.mouse_position)"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            {"
                      },
                      {
                        "highlight_end": 46,
                        "highlight_start": 1,
                        "text": "                // *context.dragging = Some(("
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "                //     id,"
                      },
                      {
                        "highlight_end": 100,
                        "highlight_start": 1,
                        "text": "                //     DragState::Clicked(context.input.mouse_position, Vec2::new(rect.x, rect.y)),"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "                // ));"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of `char::is_digit` with literal radix of 10\n   --> src\\ui\\widgets\\input.rs:114:17\n    |\n114 |                 character.is_digit(10) || character == '.' || character == '-'\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `character.is_ascii_digit()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n    = note: `#[warn(clippy::is_digit_ascii_radix)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::is_digit_ascii_radix)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2880,
                        "byte_start": 2858,
                        "column_end": 39,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "character.is_ascii_digit()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 17,
                            "text": "                character.is_digit(10) || character == '.' || character == '-'"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::is_digit_ascii_radix",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of `char::is_digit` with literal radix of 10",
                "spans": [
                  {
                    "byte_end": 2880,
                    "byte_start": 2858,
                    "column_end": 39,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 17,
                        "text": "                character.is_digit(10) || character == '.' || character == '-'"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\input.rs:121:12\n    |\n121 |         if self.label.is_empty() == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.label.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3074,
                        "byte_start": 3044,
                        "column_end": 42,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 121,
                        "line_start": 121,
                        "suggested_replacement": "!self.label.is_empty()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 12,
                            "text": "        if self.label.is_empty() == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3074,
                    "byte_start": 3044,
                    "column_end": 42,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 121,
                    "line_start": 121,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 12,
                        "text": "        if self.label.is_empty() == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\widgets\\slider.rs:51:12\n   |\n51 |         if context.input_focused(editbox_id) == false {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.input_focused(editbox_id)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1313,
                        "byte_start": 1271,
                        "column_end": 54,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\slider.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 51,
                        "line_start": 51,
                        "suggested_replacement": "!context.input_focused(editbox_id)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 12,
                            "text": "        if context.input_focused(editbox_id) == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 1313,
                    "byte_start": 1271,
                    "column_end": 54,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\slider.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 51,
                    "line_start": 51,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 12,
                        "text": "        if context.input_focused(editbox_id) == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: use of `char::is_digit` with literal radix of 10\n  --> src\\ui\\widgets\\slider.rs:61:34\n   |\n61 |             .filter(&|character| character.is_digit(10) || character == '.' || character == '-')\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^ help: try: `character.is_ascii_digit()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1620,
                        "byte_start": 1598,
                        "column_end": 56,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\slider.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 61,
                        "suggested_replacement": "character.is_ascii_digit()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 34,
                            "text": "            .filter(&|character| character.is_digit(10) || character == '.' || character == '-')"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::is_digit_ascii_radix",
                  "explanation": null
                },
                "level": "warning",
                "message": "use of `char::is_digit` with literal radix of 10",
                "spans": [
                  {
                    "byte_end": 1620,
                    "byte_start": 1598,
                    "column_end": 56,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\slider.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 61,
                    "line_start": 61,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 34,
                        "text": "            .filter(&|character| character.is_digit(10) || character == '.' || character == '-')"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\widgets\\slider.rs:97:30\n   |\n97 |         if *dragging == 1 && context.input.is_mouse_down == false {\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.input.is_mouse_down`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2949,
                        "byte_start": 2913,
                        "column_end": 66,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\slider.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 97,
                        "line_start": 97,
                        "suggested_replacement": "!context.input.is_mouse_down",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 30,
                            "text": "        if *dragging == 1 && context.input.is_mouse_down == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 2949,
                    "byte_start": 2913,
                    "column_end": 66,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\slider.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 97,
                    "line_start": 97,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 30,
                        "text": "        if *dragging == 1 && context.input.is_mouse_down == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: clamp-like pattern without using clamp function\n   --> src\\ui\\widgets\\slider.rs:104:34\n    |\n104 |               let mouse_position = ((context.input.mouse_position.x - slider_start_x) / slider_width)\n    |  __________________________________^\n105 | |                 .min(1.)\n106 | |                 .max(0.);\n    | |________________________^ help: replace with clamp: `((context.input.mouse_position.x - slider_start_x) / slider_width).clamp(0., 1.)`\n    |\n    = note: clamp will panic if max < min, min.is_nan(), or max.is_nan()\n    = note: clamp returns NaN if the input is NaN\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n    = note: `#[warn(clippy::manual_clamp)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "clamp will panic if max < min, min.is_nan(), or max.is_nan()",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "clamp returns NaN if the input is NaN",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_clamp)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace with clamp",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3258,
                        "byte_start": 3142,
                        "column_end": 25,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\slider.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 106,
                        "line_start": 104,
                        "suggested_replacement": "((context.input.mouse_position.x - slider_start_x) / slider_width).clamp(0., 1.)",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 100,
                            "highlight_start": 34,
                            "text": "            let mouse_position = ((context.input.mouse_position.x - slider_start_x) / slider_width)"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                .min(1.)"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "                .max(0.);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_clamp",
                  "explanation": null
                },
                "level": "warning",
                "message": "clamp-like pattern without using clamp function",
                "spans": [
                  {
                    "byte_end": 3258,
                    "byte_start": 3142,
                    "column_end": 25,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\slider.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 100,
                        "highlight_start": 34,
                        "text": "            let mouse_position = ((context.input.mouse_position.x - slider_start_x) / slider_width)"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                .min(1.)"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                .max(0.);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting to the same type is unnecessary (`f32` -> `f32`)\n  --> src\\ui\\widgets\\tabbar.rs:37:21\n   |\n37 |         let width = self.size.x as f32 / self.tabs.len() as f32;\n   |                     ^^^^^^^^^^^^^^^^^^ help: try: `self.size.x`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 891,
                        "byte_start": 873,
                        "column_end": 39,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\tabbar.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 37,
                        "line_start": 37,
                        "suggested_replacement": "self.size.x",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 21,
                            "text": "        let width = self.size.x as f32 / self.tabs.len() as f32;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting to the same type is unnecessary (`f32` -> `f32`)",
                "spans": [
                  {
                    "byte_end": 891,
                    "byte_start": 873,
                    "column_end": 39,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\tabbar.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 37,
                    "line_start": 37,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 21,
                        "text": "        let width = self.size.x as f32 / self.tabs.len() as f32;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\widgets\\window.rs:79:12\n   |\n79 |         if context.window.was_active == false {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.window.was_active`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2087,
                        "byte_start": 2053,
                        "column_end": 46,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\window.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 79,
                        "line_start": 79,
                        "suggested_replacement": "!context.window.was_active",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 12,
                            "text": "        if context.window.was_active == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 2087,
                    "byte_start": 2053,
                    "column_end": 46,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\window.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 79,
                    "line_start": 79,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 12,
                        "text": "        if context.window.was_active == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui\\widgets\\window.rs:179:22\n    |\n179 |         let opened = context.window.want_close == false;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!context.window.want_close`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5308,
                        "byte_start": 5274,
                        "column_end": 56,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\ui\\widgets\\window.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 179,
                        "line_start": 179,
                        "suggested_replacement": "!context.window.want_close",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 22,
                            "text": "        let opened = context.window.want_close == false;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 5308,
                    "byte_start": 5274,
                    "column_end": 56,
                    "column_start": 22,
                    "expansion": null,
                    "file_name": "src\\ui\\widgets\\window.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 179,
                    "line_start": 179,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 22,
                        "text": "        let opened = context.window.want_close == false;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\input.rs:35:31\n   |\n35 |         self.is_mouse_down && self.cursor_grabbed == false && self.window_active\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.cursor_grabbed`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 845,
                        "byte_start": 817,
                        "column_end": 59,
                        "column_start": 31,
                        "expansion": null,
                        "file_name": "src\\ui\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 35,
                        "line_start": 35,
                        "suggested_replacement": "!self.cursor_grabbed",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 31,
                            "text": "        self.is_mouse_down && self.cursor_grabbed == false && self.window_active"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 845,
                    "byte_start": 817,
                    "column_end": 59,
                    "column_start": 31,
                    "expansion": null,
                    "file_name": "src\\ui\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 35,
                    "line_start": 35,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 31,
                        "text": "        self.is_mouse_down && self.cursor_grabbed == false && self.window_active"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\input.rs:39:28\n   |\n39 |         self.click_down && self.cursor_grabbed == false && self.window_active\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.cursor_grabbed`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 975,
                        "byte_start": 947,
                        "column_end": 56,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\ui\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 39,
                        "line_start": 39,
                        "suggested_replacement": "!self.cursor_grabbed",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 56,
                            "highlight_start": 28,
                            "text": "        self.click_down && self.cursor_grabbed == false && self.window_active"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 975,
                    "byte_start": 947,
                    "column_end": 56,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\ui\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 39,
                    "line_start": 39,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 56,
                        "highlight_start": 28,
                        "text": "        self.click_down && self.cursor_grabbed == false && self.window_active"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\ui\\input.rs:43:26\n   |\n43 |         self.click_up && self.cursor_grabbed == false && self.window_active\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.cursor_grabbed`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1101,
                        "byte_start": 1073,
                        "column_end": 54,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\ui\\input.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 43,
                        "line_start": 43,
                        "suggested_replacement": "!self.cursor_grabbed",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 26,
                            "text": "        self.click_up && self.cursor_grabbed == false && self.window_active"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 1101,
                    "byte_start": 1073,
                    "column_end": 54,
                    "column_start": 26,
                    "expansion": null,
                    "file_name": "src\\ui\\input.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 43,
                    "line_start": 43,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 26,
                        "text": "        self.click_up && self.cursor_grabbed == false && self.window_active"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this function has too many arguments (10/7)\n   --> src\\ui.rs:139:5\n    |\n139 | /     pub fn new(\n140 | |         id: Id,\n141 | |         parent: Option<Id>,\n142 | |         position: Vec2,\n...   |\n149 | |         atlas: Arc<Mutex<Atlas>>,\n150 | |     ) -> Window {\n    | |_______________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::too_many_arguments",
                  "explanation": null
                },
                "level": "warning",
                "message": "this function has too many arguments (10/7)",
                "spans": [
                  {
                    "byte_end": 4082,
                    "byte_start": 3800,
                    "column_end": 16,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 150,
                    "line_start": 139,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 5,
                        "text": "    pub fn new("
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "        id: Id,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "        parent: Option<Id>,"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "        position: Vec2,"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "        size: Vec2,"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "        title_height: f32,"
                      },
                      {
                        "highlight_end": 35,
                        "highlight_start": 1,
                        "text": "        window_margin: RectOffset,"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "        margin: f32,"
                      },
                      {
                        "highlight_end": 23,
                        "highlight_start": 1,
                        "text": "        movable: bool,"
                      },
                      {
                        "highlight_end": 27,
                        "highlight_start": 1,
                        "text": "        force_focus: bool,"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "        atlas: Arc<Mutex<Atlas>>,"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "    ) -> Window {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui.rs:487:33\n    |\n487 |         if scroll.dragging_y && self.input.is_mouse_down == false {\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.input.is_mouse_down`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 13847,
                        "byte_start": 13814,
                        "column_end": 66,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 487,
                        "line_start": 487,
                        "suggested_replacement": "!self.input.is_mouse_down",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 66,
                            "highlight_start": 33,
                            "text": "        if scroll.dragging_y && self.input.is_mouse_down == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 13847,
                    "byte_start": 13814,
                    "column_end": 66,
                    "column_start": 33,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 487,
                    "line_start": 487,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 66,
                        "highlight_start": 33,
                        "text": "        if scroll.dragging_y && self.input.is_mouse_down == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui.rs:526:9\n    |\n526 | /         self.input_focus\n527 | |             .map_or(false, |input_focus| input_focus == id)\n    | |___________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use a standard comparison instead\n    |\n526 -         self.input_focus\n527 -             .map_or(false, |input_focus| input_focus == id)\n526 +         self.input_focus == Some(id)\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use a standard comparison instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15167,
                        "byte_start": 15091,
                        "column_end": 60,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 527,
                        "line_start": 526,
                        "suggested_replacement": "self.input_focus == Some(id)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 25,
                            "highlight_start": 9,
                            "text": "        self.input_focus"
                          },
                          {
                            "highlight_end": 60,
                            "highlight_start": 1,
                            "text": "            .map_or(false, |input_focus| input_focus == id)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 15167,
                    "byte_start": 15091,
                    "column_end": 60,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 527,
                    "line_start": 526,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        self.input_focus"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |input_focus| input_focus == id)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui.rs:554:16\n    |\n554 |             if window.was_active == false {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!window.was_active`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 15944,
                        "byte_start": 15918,
                        "column_end": 42,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 554,
                        "line_start": 554,
                        "suggested_replacement": "!window.was_active",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 16,
                            "text": "            if window.was_active == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 15944,
                    "byte_start": 15918,
                    "column_end": 42,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 554,
                    "line_start": 554,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 16,
                        "text": "            if window.was_active == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui.rs:762:29\n    |\n762 |               Some(parent) => self\n    |  _____________________________^\n763 | |                 .windows\n764 | |                 .get(&parent)\n765 | |                 .map_or(false, |window| window.force_focus),\n    | |___________________________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n765 -                 .map_or(false, |window| window.force_focus),\n765 +                 .is_some_and(|window| window.force_focus),\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 22707,
                        "byte_start": 22701,
                        "column_end": 24,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 765,
                        "line_start": 765,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 18,
                            "text": "                .map_or(false, |window| window.force_focus),"
                          }
                        ]
                      },
                      {
                        "byte_end": 22715,
                        "byte_start": 22708,
                        "column_end": 32,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 765,
                        "line_start": 765,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 25,
                            "text": "                .map_or(false, |window| window.force_focus),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 22743,
                    "byte_start": 22624,
                    "column_end": 60,
                    "column_start": 29,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 765,
                    "line_start": 762,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 29,
                        "text": "            Some(parent) => self"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "                .windows"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "                .get(&parent)"
                      },
                      {
                        "highlight_end": 60,
                        "highlight_start": 1,
                        "text": "                .map_or(false, |window| window.force_focus),"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui.rs:886:25\n    |\n886 |         let window = if self.in_modal == false {\n    |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.in_modal`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 26861,
                        "byte_start": 26839,
                        "column_end": 47,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 886,
                        "line_start": 886,
                        "suggested_replacement": "!self.in_modal",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 25,
                            "text": "        let window = if self.in_modal == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 26861,
                    "byte_start": 26839,
                    "column_end": 47,
                    "column_start": 25,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 886,
                    "line_start": 886,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 25,
                        "text": "        let window = if self.in_modal == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\ui.rs:980:16\n    |\n980 |             if window.was_active == false {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!window.was_active`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30467,
                        "byte_start": 30441,
                        "column_end": 42,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 980,
                        "line_start": 980,
                        "suggested_replacement": "!window.was_active",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 16,
                            "text": "            if window.was_active == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 30467,
                    "byte_start": 30441,
                    "column_end": 42,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 980,
                    "line_start": 980,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 16,
                        "text": "            if window.was_active == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `if` statement can be collapsed\n   --> src\\ui.rs:988:13\n    |\n988 | /             if window.was_active {\n989 | |                 if window.full_rect().contains(mouse_position) {\n990 | |                     return true;\n991 | |                 }\n992 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n988 ~             if window.was_active\n989 ~                 && window.full_rect().contains(mouse_position) {\n990 |                     return true;\n991 ~                 }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "collapse nested if block",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30702,
                        "byte_start": 30700,
                        "column_end": 35,
                        "column_start": 33,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 988,
                        "line_start": 988,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 33,
                            "text": "            if window.was_active {"
                          }
                        ]
                      },
                      {
                        "byte_end": 30832,
                        "byte_start": 30818,
                        "column_end": 14,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 992,
                        "line_start": 991,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 18,
                            "text": "                }"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      },
                      {
                        "byte_end": 30721,
                        "byte_start": 30719,
                        "column_end": 19,
                        "column_start": 17,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 989,
                        "line_start": 989,
                        "suggested_replacement": "&&",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 17,
                            "text": "                if window.full_rect().contains(mouse_position) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::collapsible_if",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `if` statement can be collapsed",
                "spans": [
                  {
                    "byte_end": 30832,
                    "byte_start": 30680,
                    "column_end": 14,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 992,
                    "line_start": 988,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 13,
                        "text": "            if window.was_active {"
                      },
                      {
                        "highlight_end": 65,
                        "highlight_start": 1,
                        "text": "                if window.full_rect().contains(mouse_position) {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "                    return true;"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n   --> src\\ui.rs:998:9\n    |\n998 |         self.active_window.map_or(false, |wnd| self.is_focused(wnd))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n    |\n998 -         self.active_window.map_or(false, |wnd| self.is_focused(wnd))\n998 +         self.active_window.is_some_and(|wnd| self.is_focused(wnd))\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 30947,
                        "byte_start": 30941,
                        "column_end": 34,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 998,
                        "line_start": 998,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 34,
                            "highlight_start": 28,
                            "text": "        self.active_window.map_or(false, |wnd| self.is_focused(wnd))"
                          }
                        ]
                      },
                      {
                        "byte_end": 30955,
                        "byte_start": 30948,
                        "column_end": 42,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 998,
                        "line_start": 998,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 35,
                            "text": "        self.active_window.map_or(false, |wnd| self.is_focused(wnd))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 30982,
                    "byte_start": 30922,
                    "column_end": 69,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 998,
                    "line_start": 998,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 69,
                        "highlight_start": 9,
                        "text": "        self.active_window.map_or(false, |wnd| self.is_focused(wnd))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n    --> src\\ui.rs:1023:13\n     |\n1023 | /             self.child_window_stack\n1024 | |                 .get(0)\n1025 | |                 .map_or(false, |root| *root == self.hovered_window)\n     | |___________________________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n     |\n1025 -                 .map_or(false, |root| *root == self.hovered_window)\n1025 +                 .is_some_and(|root| *root == self.hovered_window)\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31706,
                        "byte_start": 31700,
                        "column_end": 24,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1025,
                        "line_start": 1025,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 18,
                            "text": "                .map_or(false, |root| *root == self.hovered_window)"
                          }
                        ]
                      },
                      {
                        "byte_end": 31714,
                        "byte_start": 31707,
                        "column_end": 32,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1025,
                        "line_start": 1025,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 25,
                            "text": "                .map_or(false, |root| *root == self.hovered_window)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 31750,
                    "byte_start": 31635,
                    "column_end": 68,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1025,
                    "line_start": 1023,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 13,
                        "text": "            self.child_window_stack"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .get(0)"
                      },
                      {
                        "highlight_end": 68,
                        "highlight_start": 1,
                        "text": "                .map_or(false, |root| *root == self.hovered_window)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `self.child_window_stack.get(0)`\n    --> src\\ui.rs:1023:13\n     |\n1023 | /             self.child_window_stack\n1024 | |                 .get(0)\n     | |_______________________^ help: try: `self.child_window_stack.first()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n     = note: `#[warn(clippy::get_first)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::get_first)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31682,
                        "byte_start": 31635,
                        "column_end": 24,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1024,
                        "line_start": 1023,
                        "suggested_replacement": "self.child_window_stack.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 13,
                            "text": "            self.child_window_stack"
                          },
                          {
                            "highlight_end": 24,
                            "highlight_start": 1,
                            "text": "                .get(0)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `self.child_window_stack.get(0)`",
                "spans": [
                  {
                    "byte_end": 31682,
                    "byte_start": 31635,
                    "column_end": 24,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1024,
                    "line_start": 1023,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 13,
                        "text": "            self.child_window_stack"
                      },
                      {
                        "highlight_end": 24,
                        "highlight_start": 1,
                        "text": "                .get(0)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this `map_or` can be simplified\n    --> src\\ui.rs:1030:12\n     |\n1030 |           if self\n     |  ____________^\n1031 | |             .windows\n1032 | |             .get(&id)\n1033 | |             .map_or(false, |window| window.force_focus)\n     | |_______________________________________________________^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or\nhelp: use is_some_and instead\n     |\n1033 -             .map_or(false, |window| window.force_focus)\n1033 +             .is_some_and(|window| window.force_focus)\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use is_some_and instead",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 31889,
                        "byte_start": 31883,
                        "column_end": 20,
                        "column_start": 14,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1033,
                        "line_start": 1033,
                        "suggested_replacement": "is_some_and",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 14,
                            "text": "            .map_or(false, |window| window.force_focus)"
                          }
                        ]
                      },
                      {
                        "byte_end": 31897,
                        "byte_start": 31890,
                        "column_end": 28,
                        "column_start": 21,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1033,
                        "line_start": 1033,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 21,
                            "text": "            .map_or(false, |window| window.force_focus)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_map_or",
                  "explanation": null
                },
                "level": "warning",
                "message": "this `map_or` can be simplified",
                "spans": [
                  {
                    "byte_end": 31925,
                    "byte_start": 31822,
                    "column_end": 56,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1033,
                    "line_start": 1030,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 12,
                        "text": "        if self"
                      },
                      {
                        "highlight_end": 21,
                        "highlight_start": 1,
                        "text": "            .windows"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .get(&id)"
                      },
                      {
                        "highlight_end": 56,
                        "highlight_start": 1,
                        "text": "            .map_or(false, |window| window.force_focus)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: accessing first element with `self.child_window_stack.get(0)`\n    --> src\\ui.rs:1046:35\n     |\n1046 |             if let Some(parent) = self.child_window_stack.get(0) {\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.child_window_stack.first()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 32315,
                        "byte_start": 32285,
                        "column_end": 65,
                        "column_start": 35,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1046,
                        "line_start": 1046,
                        "suggested_replacement": "self.child_window_stack.first()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 35,
                            "text": "            if let Some(parent) = self.child_window_stack.get(0) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::get_first",
                  "explanation": null
                },
                "level": "warning",
                "message": "accessing first element with `self.child_window_stack.get(0)`",
                "spans": [
                  {
                    "byte_end": 32315,
                    "byte_start": 32285,
                    "column_end": 65,
                    "column_start": 35,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1046,
                    "line_start": 1046,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 35,
                        "text": "            if let Some(parent) = self.child_window_stack.get(0) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you seem to want to iterate on a map's values\n    --> src\\ui.rs:1075:28\n     |\n1075 |         for (_, window) in &mut self.windows {\n     |                            ^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map\n     = note: `#[warn(clippy::for_kv_map)]` on by default\nhelp: use the corresponding method\n     |\n1075 -         for (_, window) in &mut self.windows {\n1075 +         for window in self.windows.values_mut() {\n     |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::for_kv_map)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "use the corresponding method",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 33043,
                        "byte_start": 33032,
                        "column_end": 24,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1075,
                        "line_start": 1075,
                        "suggested_replacement": "window",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 24,
                            "highlight_start": 13,
                            "text": "        for (_, window) in &mut self.windows {"
                          }
                        ]
                      },
                      {
                        "byte_end": 33064,
                        "byte_start": 33047,
                        "column_end": 45,
                        "column_start": 28,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1075,
                        "line_start": 1075,
                        "suggested_replacement": "self.windows.values_mut()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 28,
                            "text": "        for (_, window) in &mut self.windows {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::for_kv_map",
                  "explanation": null
                },
                "level": "warning",
                "message": "you seem to want to iterate on a map's values",
                "spans": [
                  {
                    "byte_end": 33064,
                    "byte_start": 33047,
                    "column_end": 45,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1075,
                    "line_start": 1075,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 28,
                        "text": "        for (_, window) in &mut self.windows {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n    --> src\\ui.rs:1241:20\n     |\n1241 |                 if ctrl == false {\n     |                    ^^^^^^^^^^^^^ help: try simplifying it as shown: `!ctrl`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 38086,
                        "byte_start": 38073,
                        "column_end": 33,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\ui.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 1241,
                        "line_start": 1241,
                        "suggested_replacement": "!ctrl",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 20,
                            "text": "                if ctrl == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 38086,
                    "byte_start": 38073,
                    "column_end": 33,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\ui.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 1241,
                    "line_start": 1241,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 20,
                        "text": "                if ctrl == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unsafe function's docs are missing a `# Safety` section\n  --> src\\window.rs:48:1\n   |\n48 | pub unsafe fn get_internal_gl<'a>() -> InternalGlContext<'a> {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_safety_doc)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::missing_safety_doc",
                  "explanation": null
                },
                "level": "warning",
                "message": "unsafe function's docs are missing a `# Safety` section",
                "spans": [
                  {
                    "byte_end": 1467,
                    "byte_start": 1407,
                    "column_end": 61,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\window.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 48,
                    "line_start": 48,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 61,
                        "highlight_start": 1,
                        "text": "pub unsafe fn get_internal_gl<'a>() -> InternalGlContext<'a> {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: useless use of `format!`\n   --> src\\window.rs:131:32\n    |\n131 |         let backtrace_string = format!(\"Macroquad compiled without \\\"backtrace\\\" feature\");\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"Macroquad compiled without \\\"backtrace\\\" feature\".to_string()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format\n    = note: `#[warn(clippy::useless_format)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_format)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider using `.to_string()`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4793,
                        "byte_start": 4734,
                        "column_end": 91,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\window.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 131,
                        "line_start": 131,
                        "suggested_replacement": "\"Macroquad compiled without \\\"backtrace\\\" feature\".to_string()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 91,
                            "highlight_start": 32,
                            "text": "        let backtrace_string = format!(\"Macroquad compiled without \\\"backtrace\\\" feature\");"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::useless_format",
                  "explanation": null
                },
                "level": "warning",
                "message": "useless use of `format!`",
                "spans": [
                  {
                    "byte_end": 4793,
                    "byte_start": 4734,
                    "column_end": 91,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\window.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 131,
                    "line_start": 131,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 32,
                        "text": "        let backtrace_string = format!(\"Macroquad compiled without \\\"backtrace\\\" feature\");"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src\\experimental\\camera\\mouse.rs:64:1\n   |\n64 | impl Into<Camera2D> for &Camera {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<&experimental::camera::mouse::Camera>`\n   |\n64 ~ impl From<&Camera> for Camera2D {\n65 ~     fn from(val: &Camera) -> Self {\n66 |         let aspect = screen_width() / screen_height();\n67 |         Camera2D {\n68 ~             zoom: vec2(val.scale, -val.scale * aspect),\n69 ~             offset: vec2(val.offset.x, -val.offset.y),\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the `Into` implementation with `From<&experimental::camera::mouse::Camera>`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2229,
                        "byte_start": 2225,
                        "column_end": 10,
                        "column_start": 6,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "From",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 10,
                            "highlight_start": 6,
                            "text": "impl Into<Camera2D> for &Camera {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2238,
                        "byte_start": 2230,
                        "column_end": 19,
                        "column_start": 11,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "&Camera",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 19,
                            "highlight_start": 11,
                            "text": "impl Into<Camera2D> for &Camera {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2251,
                        "byte_start": 2244,
                        "column_end": 32,
                        "column_start": 25,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 64,
                        "line_start": 64,
                        "suggested_replacement": "Camera2D",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 25,
                            "text": "impl Into<Camera2D> for &Camera {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2265,
                        "byte_start": 2261,
                        "column_end": 12,
                        "column_start": 8,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "from",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 12,
                            "highlight_start": 8,
                            "text": "    fn into(self) -> Camera2D {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2270,
                        "byte_start": 2266,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "val: &Camera",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "    fn into(self) -> Camera2D {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2283,
                        "byte_start": 2275,
                        "column_end": 30,
                        "column_start": 22,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 65,
                        "line_start": 65,
                        "suggested_replacement": "Self",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 22,
                            "text": "    fn into(self) -> Camera2D {"
                          }
                        ]
                      },
                      {
                        "byte_end": 2387,
                        "byte_start": 2383,
                        "column_end": 28,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 28,
                            "highlight_start": 24,
                            "text": "            zoom: vec2(self.scale, -self.scale * aspect),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2400,
                        "byte_start": 2396,
                        "column_end": 41,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 68,
                        "line_start": 68,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 37,
                            "text": "            zoom: vec2(self.scale, -self.scale * aspect),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2447,
                        "byte_start": 2443,
                        "column_end": 30,
                        "column_start": 26,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 30,
                            "highlight_start": 26,
                            "text": "            offset: vec2(self.offset.x, -self.offset.y),"
                          }
                        ]
                      },
                      {
                        "byte_end": 2463,
                        "byte_start": 2459,
                        "column_end": 46,
                        "column_start": 42,
                        "expansion": null,
                        "file_name": "src\\experimental\\camera\\mouse.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 69,
                        "line_start": 69,
                        "suggested_replacement": "val",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 42,
                            "text": "            offset: vec2(self.offset.x, -self.offset.y),"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::from_over_into",
                  "explanation": null
                },
                "level": "warning",
                "message": "an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true",
                "spans": [
                  {
                    "byte_end": 2251,
                    "byte_start": 2220,
                    "column_end": 32,
                    "column_start": 1,
                    "expansion": null,
                    "file_name": "src\\experimental\\camera\\mouse.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 64,
                    "line_start": 64,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "impl Into<Camera2D> for &Camera {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this block may be rewritten with the `?` operator\n  --> src\\experimental\\coroutines\\generational_storage.rs:54:9\n   |\n54 | /         if self.vec[id.id].is_none() {\n55 | |             return None;\n56 | |         }\n   | |_________^ help: replace it with: `self.vec[id.id].as_ref()?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::question_mark)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1389,
                        "byte_start": 1324,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 56,
                        "line_start": 54,
                        "suggested_replacement": "self.vec[id.id].as_ref()?;",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 9,
                            "text": "        if self.vec[id.id].is_none() {"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "            return None;"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this block may be rewritten with the `?` operator",
                "spans": [
                  {
                    "byte_end": 1389,
                    "byte_start": 1324,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 56,
                    "line_start": 54,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 9,
                        "text": "        if self.vec[id.id].is_none() {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            return None;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this block may be rewritten with the `?` operator\n  --> src\\experimental\\coroutines\\generational_storage.rs:70:9\n   |\n70 | /         if self.vec[id.id].is_none() {\n71 | |             return None;\n72 | |         }\n   | |_________^ help: replace it with: `self.vec[id.id].as_ref()?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1774,
                        "byte_start": 1709,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 72,
                        "line_start": 70,
                        "suggested_replacement": "self.vec[id.id].as_ref()?;",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 39,
                            "highlight_start": 9,
                            "text": "        if self.vec[id.id].is_none() {"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "            return None;"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this block may be rewritten with the `?` operator",
                "spans": [
                  {
                    "byte_end": 1774,
                    "byte_start": 1709,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines\\generational_storage.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 72,
                    "line_start": 70,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 39,
                        "highlight_start": 9,
                        "text": "        if self.vec[id.id].is_none() {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            return None;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n  --> src\\experimental\\coroutines.rs:74:20\n   |\n74 |                 if f.manual_poll == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!f.manual_poll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2056,
                        "byte_start": 2034,
                        "column_end": 42,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 74,
                        "line_start": 74,
                        "suggested_replacement": "!f.manual_poll",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 42,
                            "highlight_start": 20,
                            "text": "                if f.manual_poll == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 2056,
                    "byte_start": 2034,
                    "column_end": 42,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 74,
                    "line_start": 74,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 42,
                        "highlight_start": 20,
                        "text": "                if f.manual_poll == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unneeded `return` statement\n   --> src\\experimental\\coroutines.rs:114:9\n    |\n114 |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n114 -         return true;\n114 +         true\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::needless_return)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "remove `return`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3136,
                        "byte_start": 3125,
                        "column_end": 20,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "true",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 20,
                            "highlight_start": 9,
                            "text": "        return true;"
                          }
                        ]
                      },
                      {
                        "byte_end": 3137,
                        "byte_start": 3136,
                        "column_end": 21,
                        "column_start": 20,
                        "expansion": null,
                        "file_name": "src\\experimental\\coroutines.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 114,
                        "line_start": 114,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 21,
                            "highlight_start": 20,
                            "text": "        return true;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_return",
                  "explanation": null
                },
                "level": "warning",
                "message": "unneeded `return` statement",
                "spans": [
                  {
                    "byte_end": 3136,
                    "byte_start": 3125,
                    "column_end": 20,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\coroutines.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 114,
                    "line_start": 114,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 20,
                        "highlight_start": 9,
                        "text": "        return true;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: non-canonical implementation of `clone` on a `Copy` type\n  --> src\\experimental\\scene.rs:56:34\n   |\n56 |       fn clone(&self) -> Handle<T> {\n   |  __________________________________^\n57 | |         Handle {\n58 | |             id: self.id,\n59 | |             _marker: PhantomData,\n60 | |         }\n61 | |     }\n   | |_____^ help: change this to: `{ *self }`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_clone_impl\n   = note: `#[warn(clippy::non_canonical_clone_impl)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_clone_impl",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::non_canonical_clone_impl)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "change this to",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1309,
                        "byte_start": 1216,
                        "column_end": 6,
                        "column_start": 34,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 61,
                        "line_start": 56,
                        "suggested_replacement": "{ *self }",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 35,
                            "highlight_start": 34,
                            "text": "    fn clone(&self) -> Handle<T> {"
                          },
                          {
                            "highlight_end": 17,
                            "highlight_start": 1,
                            "text": "        Handle {"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "            id: self.id,"
                          },
                          {
                            "highlight_end": 34,
                            "highlight_start": 1,
                            "text": "            _marker: PhantomData,"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          },
                          {
                            "highlight_end": 6,
                            "highlight_start": 1,
                            "text": "    }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::non_canonical_clone_impl",
                  "explanation": null
                },
                "level": "warning",
                "message": "non-canonical implementation of `clone` on a `Copy` type",
                "spans": [
                  {
                    "byte_end": 1309,
                    "byte_start": 1216,
                    "column_end": 6,
                    "column_start": 34,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 61,
                    "line_start": 56,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 35,
                        "highlight_start": 34,
                        "text": "    fn clone(&self) -> Handle<T> {"
                      },
                      {
                        "highlight_end": 17,
                        "highlight_start": 1,
                        "text": "        Handle {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            id: self.id,"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            _marker: PhantomData,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> src\\experimental\\scene.rs:104:27\n    |\n104 |             let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *base.as_mut_ptr()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n    = note: `#[warn(clippy::transmute_ptr_to_ref)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::transmute_ptr_to_ref)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2301,
                        "byte_start": 2263,
                        "column_end": 65,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "&mut *base.as_mut_ptr()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 65,
                            "highlight_start": 27,
                            "text": "            let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::transmute_ptr_to_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)",
                "spans": [
                  {
                    "byte_end": 2301,
                    "byte_start": 2263,
                    "column_end": 65,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 104,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 65,
                        "highlight_start": 27,
                        "text": "            let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:104:37\n    |\n104 |             let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;\n    |                                     ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*mut T, &mut T>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::missing_transmute_annotations)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2282,
                        "byte_start": 2273,
                        "column_end": 46,
                        "column_start": 37,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 104,
                        "line_start": 104,
                        "suggested_replacement": "transmute::<*mut T, &mut T>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 46,
                            "highlight_start": 37,
                            "text": "            let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 2282,
                    "byte_start": 2273,
                    "column_end": 46,
                    "column_start": 37,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 104,
                    "line_start": 104,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 37,
                        "text": "            let field = f(std::mem::transmute(base.as_mut_ptr())) as *mut _ as *mut u8;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*mut u8` -> `*mut u8`)\n   --> src\\experimental\\scene.rs:106:13\n    |\n106 |             (field as *mut u8).offset_from(base.as_mut_ptr() as *mut u8)\n    |             ^^^^^^^^^^^^^^^^^^ help: try: `field`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 2356,
                        "byte_start": 2338,
                        "column_end": 31,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 106,
                        "line_start": 106,
                        "suggested_replacement": "field",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 13,
                            "text": "            (field as *mut u8).offset_from(base.as_mut_ptr() as *mut u8)"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*mut u8` -> `*mut u8`)",
                "spans": [
                  {
                    "byte_end": 2356,
                    "byte_start": 2338,
                    "column_end": 31,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 106,
                    "line_start": 106,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 13,
                        "text": "            (field as *mut u8).offset_from(base.as_mut_ptr() as *mut u8)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `assert_eq!` with a literal bool\n   --> src\\experimental\\scene.rs:175:9\n    |\n175 |         assert_eq!(unsafe { *self.used }, true);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\n    = note: `#[warn(clippy::bool_assert_comparison)]` on by default\nhelp: replace it with `assert!(..)`\n    |\n175 -         assert_eq!(unsafe { *self.used }, true);\n175 +         assert!(unsafe { *self.used });\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::bool_assert_comparison)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with `assert!(..)`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3822,
                        "byte_start": 3813,
                        "column_end": 18,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 175,
                        "line_start": 175,
                        "suggested_replacement": "assert",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 9,
                            "text": "        assert_eq!(unsafe { *self.used }, true);"
                          }
                        ]
                      },
                      {
                        "byte_end": 3851,
                        "byte_start": 3845,
                        "column_end": 47,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 175,
                        "line_start": 175,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 41,
                            "text": "        assert_eq!(unsafe { *self.used }, true);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_assert_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `assert_eq!` with a literal bool",
                "spans": [
                  {
                    "byte_end": 3852,
                    "byte_start": 3813,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 175,
                    "line_start": 175,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        assert_eq!(unsafe { *self.used }, true);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: used `assert_eq!` with a literal bool\n   --> src\\experimental\\scene.rs:247:9\n    |\n247 |         assert_eq!(unsafe { *self.used }, true);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\nhelp: replace it with `assert!(..)`\n    |\n247 -         assert_eq!(unsafe { *self.used }, true);\n247 +         assert!(unsafe { *self.used });\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with `assert!(..)`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 5535,
                        "byte_start": 5526,
                        "column_end": 18,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 247,
                        "line_start": 247,
                        "suggested_replacement": "assert",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 18,
                            "highlight_start": 9,
                            "text": "        assert_eq!(unsafe { *self.used }, true);"
                          }
                        ]
                      },
                      {
                        "byte_end": 5564,
                        "byte_start": 5558,
                        "column_end": 47,
                        "column_start": 41,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 247,
                        "line_start": 247,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 41,
                            "text": "        assert_eq!(unsafe { *self.used }, true);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_assert_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "used `assert_eq!` with a literal bool",
                "spans": [
                  {
                    "byte_end": 5565,
                    "byte_start": 5526,
                    "column_end": 48,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 247,
                    "line_start": 247,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 48,
                        "highlight_start": 9,
                        "text": "        assert_eq!(unsafe { *self.used }, true);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:289:27\n    |\n289 |                 std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                           ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6486,
                        "byte_start": 6477,
                        "column_end": 36,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 289,
                        "line_start": 289,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 27,
                            "text": "                std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 6486,
                    "byte_start": 6477,
                    "column_end": 36,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 289,
                    "line_start": 289,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 27,
                        "text": "                std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:292:27\n    |\n292 |                 std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                           ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6623,
                        "byte_start": 6614,
                        "column_end": 36,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 292,
                        "line_start": 292,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 27,
                            "text": "                std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 6623,
                    "byte_start": 6614,
                    "column_end": 36,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 292,
                    "line_start": 292,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 27,
                        "text": "                std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:295:27\n    |\n295 |                 std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                           ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6767,
                        "byte_start": 6758,
                        "column_end": 36,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 295,
                        "line_start": 295,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 27,
                            "text": "                std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 6767,
                    "byte_start": 6758,
                    "column_end": 36,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 295,
                    "line_start": 295,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 27,
                        "text": "                std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:298:27\n    |\n298 |                 std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                           ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6909,
                        "byte_start": 6900,
                        "column_end": 36,
                        "column_start": 27,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 298,
                        "line_start": 298,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 36,
                            "highlight_start": 27,
                            "text": "                std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 6909,
                    "byte_start": 6900,
                    "column_end": 36,
                    "column_start": 27,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 298,
                    "line_start": 298,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 27,
                        "text": "                std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute from a type (`*const fn(*mut ())`) to itself\n   --> src\\experimental\\scene.rs:301:17\n    |\n301 |                 std::mem::transmute(&(virtual_drop::<T> as fn(*mut ())) as *const fn(*mut ()))\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n    = note: `#[warn(clippy::useless_transmute)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::useless_transmute)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::useless_transmute",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute from a type (`*const fn(*mut ())`) to itself",
                "spans": [
                  {
                    "byte_end": 7110,
                    "byte_start": 7032,
                    "column_end": 95,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 301,
                    "line_start": 301,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 95,
                        "highlight_start": 17,
                        "text": "                std::mem::transmute(&(virtual_drop::<T> as fn(*mut ())) as *const fn(*mut ()))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:312:46\n    |\n312 |         let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<&dyn experimental::scene::NodeAny, (*mut (), *mut ())>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7465,
                        "byte_start": 7431,
                        "column_end": 80,
                        "column_start": 46,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 312,
                        "line_start": 312,
                        "suggested_replacement": "transmute::<&dyn experimental::scene::NodeAny, (*mut (), *mut ())>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 80,
                            "highlight_start": 46,
                            "text": "        let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 7465,
                    "byte_start": 7431,
                    "column_end": 80,
                    "column_start": 46,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 312,
                    "line_start": 312,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 80,
                        "highlight_start": 46,
                        "text": "        let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:316:32\n    |\n316 |             unsafe { std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>)) };\n    |                                ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7572,
                        "byte_start": 7563,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 316,
                        "line_start": 316,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "            unsafe { std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>)) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 7572,
                    "byte_start": 7563,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 316,
                    "line_start": 316,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "            unsafe { std::mem::transmute(&(Node::ready as fn(RefMut<T>)) as *const fn(RefMut<T>)) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:318:23\n    |\n318 |             std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                       ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7695,
                        "byte_start": 7686,
                        "column_end": 32,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 318,
                        "line_start": 318,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 23,
                            "text": "            std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 7695,
                    "byte_start": 7686,
                    "column_end": 32,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 318,
                    "line_start": 318,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 23,
                        "text": "            std::mem::transmute(&(Node::update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:321:23\n    |\n321 |             std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))\n    |                       ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7833,
                        "byte_start": 7824,
                        "column_end": 32,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 321,
                        "line_start": 321,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 32,
                            "highlight_start": 23,
                            "text": "            std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 7833,
                    "byte_start": 7824,
                    "column_end": 32,
                    "column_start": 23,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 321,
                    "line_start": 321,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 32,
                        "highlight_start": 23,
                        "text": "            std::mem::transmute(&(Node::fixed_update as fn(RefMut<T>)) as *const fn(RefMut<T>))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:324:32\n    |\n324 |             unsafe { std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>)) };\n    |                                ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 7969,
                        "byte_start": 7960,
                        "column_end": 41,
                        "column_start": 32,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 324,
                        "line_start": 324,
                        "suggested_replacement": "transmute::<*const fn(experimental::scene::RefMut<T>), *const fn(experimental::scene::RefMut<()>)>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 32,
                            "text": "            unsafe { std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>)) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 7969,
                    "byte_start": 7960,
                    "column_end": 41,
                    "column_start": 32,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 324,
                    "line_start": 324,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 32,
                        "text": "            unsafe { std::mem::transmute(&(Node::draw as fn(RefMut<T>)) as *const fn(RefMut<T>)) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute from a type (`*const fn(*mut ())`) to itself\n   --> src\\experimental\\scene.rs:326:13\n    |\n326 |             std::mem::transmute(&(virtual_drop::<T> as fn(*mut ())) as *const fn(*mut ()))\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::useless_transmute",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute from a type (`*const fn(*mut ())`) to itself",
                "spans": [
                  {
                    "byte_end": 8156,
                    "byte_start": 8078,
                    "column_end": 91,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 326,
                    "line_start": 326,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 91,
                        "highlight_start": 13,
                        "text": "            std::mem::transmute(&(virtual_drop::<T> as fn(*mut ())) as *const fn(*mut ()))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\experimental\\scene.rs:384:38\n    |\n384 |                     assert!(unsafe { *cell.used == false });\n    |                                      ^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!(*cell.used)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 9680,
                        "byte_start": 9661,
                        "column_end": 57,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 384,
                        "line_start": 384,
                        "suggested_replacement": "!(*cell.used)",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 57,
                            "highlight_start": 38,
                            "text": "                    assert!(unsafe { *cell.used == false });"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 9680,
                    "byte_start": 9661,
                    "column_end": 57,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 384,
                    "line_start": 384,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 57,
                        "highlight_start": 38,
                        "text": "                    assert!(unsafe { *cell.used == false });"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this block may be rewritten with the `?` operator\n   --> src\\experimental\\scene.rs:429:9\n    |\n429 | /         if handle.id.is_none() {\n430 | |             return None;\n431 | |         }\n    | |_________^ help: replace it with: `handle.id?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace it with",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 10891,
                        "byte_start": 10832,
                        "column_end": 10,
                        "column_start": 9,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 431,
                        "line_start": 429,
                        "suggested_replacement": "handle.id?;",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 33,
                            "highlight_start": 9,
                            "text": "        if handle.id.is_none() {"
                          },
                          {
                            "highlight_end": 25,
                            "highlight_start": 1,
                            "text": "            return None;"
                          },
                          {
                            "highlight_end": 10,
                            "highlight_start": 1,
                            "text": "        }"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::question_mark",
                  "explanation": null
                },
                "level": "warning",
                "message": "this block may be rewritten with the `?` operator",
                "spans": [
                  {
                    "byte_end": 10891,
                    "byte_start": 10832,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 431,
                    "line_start": 429,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 33,
                        "highlight_start": 9,
                        "text": "        if handle.id.is_none() {"
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            return None;"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: transmute used without annotations\n   --> src\\experimental\\scene.rs:460:50\n    |\n460 |             let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };\n    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<&dyn experimental::scene::NodeAny, (*mut (), *mut ())>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "consider adding missing annotations",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 11737,
                        "byte_start": 11703,
                        "column_end": 84,
                        "column_start": 50,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 460,
                        "line_start": 460,
                        "suggested_replacement": "transmute::<&dyn experimental::scene::NodeAny, (*mut (), *mut ())>",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 84,
                            "highlight_start": 50,
                            "text": "            let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::missing_transmute_annotations",
                  "explanation": null
                },
                "level": "warning",
                "message": "transmute used without annotations",
                "spans": [
                  {
                    "byte_end": 11737,
                    "byte_start": 11703,
                    "column_end": 84,
                    "column_start": 50,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 460,
                    "line_start": 460,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 84,
                        "highlight_start": 50,
                        "text": "            let (_, vtable) = unsafe { std::mem::transmute::<_, (*mut (), *mut ())>(trait_obj) };"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: casting raw pointers to the same type and constness is unnecessary (`*mut bool` -> `*mut bool`)\n   --> src\\experimental\\scene.rs:471:24\n    |\n471 |             let used = used as *mut _ as *mut bool;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `used as *mut _`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12154,
                        "byte_start": 12127,
                        "column_end": 51,
                        "column_start": 24,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 471,
                        "line_start": 471,
                        "suggested_replacement": "used as *mut _",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 51,
                            "highlight_start": 24,
                            "text": "            let used = used as *mut _ as *mut bool;"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::unnecessary_cast",
                  "explanation": null
                },
                "level": "warning",
                "message": "casting raw pointers to the same type and constness is unnecessary (`*mut bool` -> `*mut bool`)",
                "spans": [
                  {
                    "byte_end": 12154,
                    "byte_start": 12127,
                    "column_end": 51,
                    "column_start": 24,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 471,
                    "line_start": 471,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 51,
                        "highlight_start": 24,
                        "text": "            let used = used as *mut _ as *mut bool;"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\experimental\\scene.rs:504:16\n    |\n504 |             if cell.initialized == false {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!cell.initialized`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 12995,
                        "byte_start": 12970,
                        "column_end": 41,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 504,
                        "line_start": 504,
                        "suggested_replacement": "!cell.initialized",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 16,
                            "text": "            if cell.initialized == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 12995,
                    "byte_start": 12970,
                    "column_end": 41,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 504,
                    "line_start": 504,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 41,
                        "highlight_start": 16,
                        "text": "            if cell.initialized == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: unnecessary `if let` since only the `Some` variant of the iterator element is used\n   --> src\\experimental\\scene.rs:546:9\n    |\n546 |           for camera in self.camera.iter() {\n    |           ^             ------------------ help: try: `self.camera.iter().flatten()`\n    |  _________|\n    | |\n547 | |             if let Some(camera) = camera {\n548 | |                 self.camera_pos = camera.target;\n549 | |                 crate::prelude::push_camera_state();\n...   |\n560 | |         }\n    | |_________^\n    |\nhelp: ...and remove the `if let` statement in the for loop\n   --> src\\experimental\\scene.rs:547:13\n    |\n547 | /             if let Some(camera) = camera {\n548 | |                 self.camera_pos = camera.target;\n549 | |                 crate::prelude::push_camera_state();\n550 | |                 crate::prelude::set_camera(&*camera);\n...   |\n558 | |                 crate::prelude::pop_camera_state();\n559 | |             }\n    | |_____________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten\n    = note: `#[warn(clippy::manual_flatten)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "...and remove the `if let` statement in the for loop",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14961,
                        "byte_start": 14446,
                        "column_end": 14,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 559,
                        "line_start": 547,
                        "suggested_replacement": null,
                        "suggestion_applicability": null,
                        "text": [
                          {
                            "highlight_end": 43,
                            "highlight_start": 13,
                            "text": "            if let Some(camera) = camera {"
                          },
                          {
                            "highlight_end": 49,
                            "highlight_start": 1,
                            "text": "                self.camera_pos = camera.target;"
                          },
                          {
                            "highlight_end": 53,
                            "highlight_start": 1,
                            "text": "                crate::prelude::push_camera_state();"
                          },
                          {
                            "highlight_end": 54,
                            "highlight_start": 1,
                            "text": "                crate::prelude::set_camera(&*camera);"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 47,
                            "highlight_start": 1,
                            "text": "                for node in &mut self.iter() {"
                          },
                          {
                            "highlight_end": 79,
                            "highlight_start": 1,
                            "text": "                    let cell = self.nodes[node.handle.0.id].as_mut().unwrap();"
                          },
                          {
                            "highlight_end": 66,
                            "highlight_start": 1,
                            "text": "                    let node: RefMut<()> = node.to_typed::<()>();"
                          },
                          {
                            "highlight_end": 51,
                            "highlight_start": 1,
                            "text": "                    unsafe { (*cell.draw)(node) };"
                          },
                          {
                            "highlight_end": 18,
                            "highlight_start": 1,
                            "text": "                }"
                          },
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": ""
                          },
                          {
                            "highlight_end": 52,
                            "highlight_start": 1,
                            "text": "                crate::prelude::pop_camera_state();"
                          },
                          {
                            "highlight_end": 14,
                            "highlight_start": 1,
                            "text": "            }"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::manual_flatten)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14431,
                        "byte_start": 14413,
                        "column_end": 41,
                        "column_start": 23,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 546,
                        "line_start": 546,
                        "suggested_replacement": "self.camera.iter().flatten()",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 23,
                            "text": "        for camera in self.camera.iter() {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::manual_flatten",
                  "explanation": null
                },
                "level": "warning",
                "message": "unnecessary `if let` since only the `Some` variant of the iterator element is used",
                "spans": [
                  {
                    "byte_end": 14971,
                    "byte_start": 14399,
                    "column_end": 10,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 560,
                    "line_start": 546,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 43,
                        "highlight_start": 9,
                        "text": "        for camera in self.camera.iter() {"
                      },
                      {
                        "highlight_end": 43,
                        "highlight_start": 1,
                        "text": "            if let Some(camera) = camera {"
                      },
                      {
                        "highlight_end": 49,
                        "highlight_start": 1,
                        "text": "                self.camera_pos = camera.target;"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                crate::prelude::push_camera_state();"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                crate::prelude::set_camera(&*camera);"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 47,
                        "highlight_start": 1,
                        "text": "                for node in &mut self.iter() {"
                      },
                      {
                        "highlight_end": 79,
                        "highlight_start": 1,
                        "text": "                    let cell = self.nodes[node.handle.0.id].as_mut().unwrap();"
                      },
                      {
                        "highlight_end": 66,
                        "highlight_start": 1,
                        "text": "                    let node: RefMut<()> = node.to_typed::<()>();"
                      },
                      {
                        "highlight_end": 51,
                        "highlight_start": 1,
                        "text": "                    unsafe { (*cell.draw)(node) };"
                      },
                      {
                        "highlight_end": 18,
                        "highlight_start": 1,
                        "text": "                }"
                      },
                      {
                        "highlight_end": 1,
                        "highlight_start": 1,
                        "text": ""
                      },
                      {
                        "highlight_end": 52,
                        "highlight_start": 1,
                        "text": "                crate::prelude::pop_camera_state();"
                      },
                      {
                        "highlight_end": 14,
                        "highlight_start": 1,
                        "text": "            }"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: deref on an immutable reference\n   --> src\\experimental\\scene.rs:550:44\n    |\n550 |                 crate::prelude::set_camera(&*camera);\n    |                                            ^^^^^^^^ help: if you would like to reborrow, try removing `&*`: `camera`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref\n    = note: `#[warn(clippy::borrow_deref_ref)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_deref_ref",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::borrow_deref_ref)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "if you would like to reborrow, try removing `&*`",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 14630,
                        "byte_start": 14622,
                        "column_end": 52,
                        "column_start": 44,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 550,
                        "line_start": 550,
                        "suggested_replacement": "camera",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 52,
                            "highlight_start": 44,
                            "text": "                crate::prelude::set_camera(&*camera);"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::borrow_deref_ref",
                  "explanation": null
                },
                "level": "warning",
                "message": "deref on an immutable reference",
                "spans": [
                  {
                    "byte_end": 14630,
                    "byte_start": 14622,
                    "column_end": 52,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 550,
                    "line_start": 550,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 52,
                        "highlight_start": 44,
                        "text": "                crate::prelude::set_camera(&*camera);"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: redundant closure\n   --> src\\experimental\\scene.rs:620:30\n    |\n620 |     SCENE.get_or_insert_with(|| Scene::new())\n    |                              ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Scene::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::redundant_closure)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "replace the closure with the function itself",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16434,
                        "byte_start": 16419,
                        "column_end": 45,
                        "column_start": 30,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 620,
                        "line_start": 620,
                        "suggested_replacement": "Scene::new",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 45,
                            "highlight_start": 30,
                            "text": "    SCENE.get_or_insert_with(|| Scene::new())"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::redundant_closure",
                  "explanation": null
                },
                "level": "warning",
                "message": "redundant closure",
                "spans": [
                  {
                    "byte_end": 16434,
                    "byte_start": 16419,
                    "column_end": 45,
                    "column_start": 30,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 620,
                    "line_start": 620,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 45,
                        "highlight_start": 30,
                        "text": "    SCENE.get_or_insert_with(|| Scene::new())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: function call inside of `expect`\n   --> src\\experimental\\scene.rs:637:10\n    |\n637 |         .expect(&format!(\"No such node: {:?}\", handle.id))\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `unwrap_or_else(|| panic!(\"No such node: {:?}\", handle.id))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 16867,
                        "byte_start": 16818,
                        "column_end": 59,
                        "column_start": 10,
                        "expansion": null,
                        "file_name": "src\\experimental\\scene.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 637,
                        "line_start": 637,
                        "suggested_replacement": "unwrap_or_else(|| panic!(\"No such node: {:?}\", handle.id))",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 59,
                            "highlight_start": 10,
                            "text": "        .expect(&format!(\"No such node: {:?}\", handle.id))"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::expect_fun_call",
                  "explanation": null
                },
                "level": "warning",
                "message": "function call inside of `expect`",
                "spans": [
                  {
                    "byte_end": 16867,
                    "byte_start": 16818,
                    "column_end": 59,
                    "column_start": 10,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 637,
                    "line_start": 637,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 59,
                        "highlight_start": 10,
                        "text": "        .expect(&format!(\"No such node: {:?}\", handle.id))"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `State<T>`\n  --> src\\experimental\\state_machine.rs:16:5\n   |\n16 | /     pub fn new() -> Self {\n17 | |         State {\n18 | |             update: None,\n19 | |             coroutine: None,\n...  |\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n15 + impl<T> Default for State<T> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 415,
                        "byte_start": 415,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\experimental\\state_machine.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 15,
                        "line_start": 15,
                        "suggested_replacement": "impl<T> Default for State<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl<T> State<T> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `State<T>`",
                "spans": [
                  {
                    "byte_end": 573,
                    "byte_start": 438,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 22,
                    "line_start": 16,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Self {"
                      },
                      {
                        "highlight_end": 16,
                        "highlight_start": 1,
                        "text": "        State {"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            update: None,"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            coroutine: None,"
                      },
                      {
                        "highlight_end": 26,
                        "highlight_start": 1,
                        "text": "            on_end: None,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `StateMachine<T>`\n  --> src\\experimental\\state_machine.rs:58:5\n   |\n58 | /     pub fn new() -> StateMachine<T> {\n59 | |         StateMachine::Ready(StateMachineOwned::new())\n60 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n57 + impl<T: scene::Node + 'static> Default for StateMachine<T> {\n58 +     fn default() -> Self {\n59 +         Self::new()\n60 +     }\n61 + }\n   |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 1335,
                        "byte_start": 1335,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\experimental\\state_machine.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 57,
                        "line_start": 57,
                        "suggested_replacement": "impl<T: scene::Node + 'static> Default for StateMachine<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl<T: scene::Node + 'static> StateMachine<T> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `StateMachine<T>`",
                "spans": [
                  {
                    "byte_end": 1481,
                    "byte_start": 1388,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 60,
                    "line_start": 58,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 38,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> StateMachine<T> {"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "        StateMachine::Ready(StateMachineOwned::new())"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: this lifetime isn't used in the function definition\n   --> src\\experimental\\state_machine.rs:118:28\n    |\n118 |     pub fn update_detached<'a, F>(mut t: scene::RefMut<T>, mut f: F)\n    |                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::extra_unused_lifetimes)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::extra_unused_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "this lifetime isn't used in the function definition",
                "spans": [
                  {
                    "byte_end": 3217,
                    "byte_start": 3215,
                    "column_end": 30,
                    "column_start": 28,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 118,
                    "line_start": 118,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 28,
                        "text": "    pub fn update_detached<'a, F>(mut t: scene::RefMut<T>, mut f: F)"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: the following explicit lifetimes could be elided: 'a\n   --> src\\experimental\\state_machine.rs:138:19\n    |\n138 |     pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {\n    |                   ^^                 ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n138 -     pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {\n138 +     pub fn update(&mut self, t: &mut scene::RefMut<T>) {\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "elide the lifetimes",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4023,
                        "byte_start": 4019,
                        "column_end": 22,
                        "column_start": 18,
                        "expansion": null,
                        "file_name": "src\\experimental\\state_machine.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 138,
                        "line_start": 138,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 22,
                            "highlight_start": 18,
                            "text": "    pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {"
                          }
                        ]
                      },
                      {
                        "byte_end": 4042,
                        "byte_start": 4039,
                        "column_end": 41,
                        "column_start": 38,
                        "expansion": null,
                        "file_name": "src\\experimental\\state_machine.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 138,
                        "line_start": 138,
                        "suggested_replacement": "",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 41,
                            "highlight_start": 38,
                            "text": "    pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::needless_lifetimes",
                  "explanation": null
                },
                "level": "warning",
                "message": "the following explicit lifetimes could be elided: 'a",
                "spans": [
                  {
                    "byte_end": 4022,
                    "byte_start": 4020,
                    "column_end": 21,
                    "column_start": 19,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 138,
                    "line_start": 138,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 21,
                        "highlight_start": 19,
                        "text": "    pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {"
                      }
                    ]
                  },
                  {
                    "byte_end": 4041,
                    "byte_start": 4039,
                    "column_end": 40,
                    "column_start": 38,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 138,
                    "line_start": 138,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 38,
                        "text": "    pub fn update<'a>(&mut self, t: &'a mut scene::RefMut<T>) {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: you should consider adding a `Default` implementation for `StateMachineOwned<T>`\n   --> src\\experimental\\state_machine.rs:158:5\n    |\n158 | /     pub fn new() -> Self {\n159 | |         let mut states = vec![];\n160 | |         for _ in 0..Self::MAX_STATE {\n161 | |             states.push(State::new());\n...   |\n169 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n155 + impl<T: 'static> Default for StateMachineOwned<T> {\n156 +     fn default() -> Self {\n157 +         Self::new()\n158 +     }\n159 + }\n    |\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try adding this",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 4441,
                        "byte_start": 4441,
                        "column_end": 1,
                        "column_start": 1,
                        "expansion": null,
                        "file_name": "src\\experimental\\state_machine.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 155,
                        "line_start": 155,
                        "suggested_replacement": "impl<T: 'static> Default for StateMachineOwned<T> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 1,
                            "highlight_start": 1,
                            "text": "impl<T: 'static> StateMachineOwned<T> {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::new_without_default",
                  "explanation": null
                },
                "level": "warning",
                "message": "you should consider adding a `Default` implementation for `StateMachineOwned<T>`",
                "spans": [
                  {
                    "byte_end": 4821,
                    "byte_start": 4519,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\state_machine.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 169,
                    "line_start": 158,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 5,
                        "text": "    pub fn new() -> Self {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "        let mut states = vec![];"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "        for _ in 0..Self::MAX_STATE {"
                      },
                      {
                        "highlight_end": 39,
                        "highlight_start": 1,
                        "text": "            states.push(State::new());"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "        StateMachineOwned {"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            states,"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            active_coroutine: None,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "            next_state: None,"
                      },
                      {
                        "highlight_end": 30,
                        "highlight_start": 1,
                        "text": "            current_state: 0,"
                      },
                      {
                        "highlight_end": 10,
                        "highlight_start": 1,
                        "text": "        }"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\telemetry.rs:157:12\n    |\n157 |         if self.active_zone.is_null() == false {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.active_zone.is_null()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 3456,
                        "byte_start": 3421,
                        "column_end": 47,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\telemetry.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 157,
                        "line_start": 157,
                        "suggested_replacement": "!self.active_zone.is_null()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 47,
                            "highlight_start": 12,
                            "text": "        if self.active_zone.is_null() == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 3456,
                    "byte_start": 3421,
                    "column_end": 47,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\telemetry.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 157,
                    "line_start": 157,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 47,
                        "highlight_start": 12,
                        "text": "        if self.active_zone.is_null() == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\telemetry.rs:263:13\n    |\n263 |             self.frame.active_zone.is_null() == false,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!self.frame.active_zone.is_null()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 6255,
                        "byte_start": 6214,
                        "column_end": 54,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\telemetry.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 263,
                        "line_start": 263,
                        "suggested_replacement": "!self.frame.active_zone.is_null()",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 54,
                            "highlight_start": 13,
                            "text": "            self.frame.active_zone.is_null() == false,"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 6255,
                    "byte_start": 6214,
                    "column_end": 54,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\telemetry.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 263,
                    "line_start": 263,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 54,
                        "highlight_start": 13,
                        "text": "            self.frame.active_zone.is_null() == false,"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\lib.rs:665:12\n    |\n665 |         if repeat == false {\n    |            ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!repeat`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 18550,
                        "byte_start": 18535,
                        "column_end": 27,
                        "column_start": 12,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 665,
                        "line_start": 665,
                        "suggested_replacement": "!repeat",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 27,
                            "highlight_start": 12,
                            "text": "        if repeat == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 18550,
                    "byte_start": 18535,
                    "column_end": 27,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 665,
                    "line_start": 665,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 27,
                        "highlight_start": 12,
                        "text": "        if repeat == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: equality checks against false can be replaced by a negation\n   --> src\\lib.rs:758:16\n    |\n758 |             if result == false {\n    |                ^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!result`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try simplifying it as shown",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 21435,
                        "byte_start": 21420,
                        "column_end": 31,
                        "column_start": 16,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 758,
                        "line_start": 758,
                        "suggested_replacement": "!result",
                        "suggestion_applicability": "MachineApplicable",
                        "text": [
                          {
                            "highlight_end": 31,
                            "highlight_start": 16,
                            "text": "            if result == false {"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::bool_comparison",
                  "explanation": null
                },
                "level": "warning",
                "message": "equality checks against false can be replaced by a negation",
                "spans": [
                  {
                    "byte_end": 21435,
                    "byte_start": 21420,
                    "column_end": 31,
                    "column_start": 16,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 758,
                    "line_start": 758,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 31,
                        "highlight_start": 16,
                        "text": "            if result == false {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item overindented\n   --> src\\lib.rs:836:13\n    |\n836 |         ///     the buffer size might be easier than splitting the model.\n    |             ^^^^ help: try using `  ` (2 spaces)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n    = note: `#[warn(clippy::doc_overindented_list_items)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::doc_overindented_list_items)]` on by default",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24111,
                        "byte_start": 24107,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 836,
                        "line_start": 836,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "        ///     the buffer size might be easier than splitting the model."
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 24111,
                    "byte_start": 24107,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 836,
                    "line_start": 836,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "        ///     the buffer size might be easier than splitting the model."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: doc list item overindented\n   --> src\\lib.rs:838:13\n    |\n838 |         ///     buffer size might be reduced to save some memory\n    |             ^^^^ help: try using `  ` (2 spaces)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_overindented_list_items",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "try using `  ` (2 spaces)",
                    "rendered": null,
                    "spans": [
                      {
                        "byte_end": 24243,
                        "byte_start": 24239,
                        "column_end": 17,
                        "column_start": 13,
                        "expansion": null,
                        "file_name": "src\\lib.rs",
                        "is_primary": true,
                        "label": null,
                        "line_end": 838,
                        "line_start": 838,
                        "suggested_replacement": "  ",
                        "suggestion_applicability": "MaybeIncorrect",
                        "text": [
                          {
                            "highlight_end": 17,
                            "highlight_start": 13,
                            "text": "        ///     buffer size might be reduced to save some memory"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "code": {
                  "code": "clippy::doc_overindented_list_items",
                  "explanation": null
                },
                "level": "warning",
                "message": "doc list item overindented",
                "spans": [
                  {
                    "byte_end": 24243,
                    "byte_start": 24239,
                    "column_end": 17,
                    "column_start": 13,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 838,
                    "line_start": 838,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 17,
                        "highlight_start": 13,
                        "text": "        ///     buffer size might be reduced to save some memory"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: methods called `new` usually return `Self`\n   --> src\\lib.rs:873:5\n    |\n873 | /     pub fn new(label: &str, future: impl Future<Output = ()> + 'static) {\n874 | |         Window::from_config(\n875 | |             conf::Conf {\n876 | |                 miniquad_conf: miniquad::conf::Conf {\n...   |\n883 | |         );\n884 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_ret_no_self\n    = note: `#[warn(clippy::new_ret_no_self)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "help",
                    "message": "for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_ret_no_self",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(clippy::new_ret_no_self)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "clippy::new_ret_no_self",
                  "explanation": null
                },
                "level": "warning",
                "message": "methods called `new` usually return `Self`",
                "spans": [
                  {
                    "byte_end": 25633,
                    "byte_start": 25254,
                    "column_end": 6,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": null,
                    "line_end": 884,
                    "line_start": 873,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 74,
                        "highlight_start": 5,
                        "text": "    pub fn new(label: &str, future: impl Future<Output = ()> + 'static) {"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "        Window::from_config("
                      },
                      {
                        "highlight_end": 25,
                        "highlight_start": 1,
                        "text": "            conf::Conf {"
                      },
                      {
                        "highlight_end": 54,
                        "highlight_start": 1,
                        "text": "                miniquad_conf: miniquad::conf::Conf {"
                      },
                      {
                        "highlight_end": 53,
                        "highlight_start": 1,
                        "text": "                    window_title: label.to_string(),"
                      },
                      {
                        "highlight_end": 41,
                        "highlight_start": 1,
                        "text": "                    ..Default::default()"
                      },
                      {
                        "highlight_end": 19,
                        "highlight_start": 1,
                        "text": "                },"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "                ..Default::default()"
                      },
                      {
                        "highlight_end": 15,
                        "highlight_start": 1,
                        "text": "            },"
                      },
                      {
                        "highlight_end": 20,
                        "highlight_start": 1,
                        "text": "            future,"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        );"
                      },
                      {
                        "highlight_end": 6,
                        "highlight_start": 1,
                        "text": "    }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:496:14\n    |\n496 |     unsafe { CONTEXT.as_mut().unwrap_or_else(|| panic!()) }\n    |              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n    = note: `#[warn(static_mut_refs)]` on by default\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "`#[warn(static_mut_refs)]` on by default",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13707,
                    "byte_start": 13691,
                    "column_end": 30,
                    "column_start": 14,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 496,
                    "line_start": 496,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 30,
                        "highlight_start": 14,
                        "text": "    unsafe { CONTEXT.as_mut().unwrap_or_else(|| panic!()) }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n   --> src\\lib.rs:503:17\n    |\n503 |         assert!(CONTEXT.is_some());\n    |                 ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13893,
                    "byte_start": 13876,
                    "column_end": 34,
                    "column_start": 17,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 503,
                    "line_start": 503,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 34,
                        "highlight_start": 17,
                        "text": "        assert!(CONTEXT.is_some());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:506:20\n    |\n506 |     unsafe { &mut *CONTEXT.as_mut().unwrap().quad_context }\n    |                    ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 13938,
                    "byte_start": 13922,
                    "column_end": 36,
                    "column_start": 20,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 506,
                    "line_start": 506,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 36,
                        "highlight_start": 20,
                        "text": "    unsafe { &mut *CONTEXT.as_mut().unwrap().quad_context }"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\lib.rs:908:44\n    |\n908 |                         if let Some(ctx) = CONTEXT.as_mut() {\n    |                                            ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 26510,
                    "byte_start": 26494,
                    "column_end": 60,
                    "column_start": 44,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 908,
                    "line_start": 908,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 60,
                        "highlight_start": 44,
                        "text": "                        if let Some(ctx) = CONTEXT.as_mut() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:32:12\n   |\n32 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 696,
                    "byte_start": 679,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 32,
                    "line_start": 32,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:36:9\n   |\n36 | /         STORAGE\n37 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 791,
                    "byte_start": 762,
                    "column_end": 22,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 37,
                    "line_start": 36,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 16,
                        "highlight_start": 9,
                        "text": "        STORAGE"
                      },
                      {
                        "highlight_end": 22,
                        "highlight_start": 1,
                        "text": "            .as_mut()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:53:12\n   |\n53 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1306,
                    "byte_start": 1289,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 53,
                    "line_start": 53,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:57:9\n   |\n57 |         STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()\n   |         ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1388,
                    "byte_start": 1372,
                    "column_end": 25,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 57,
                    "line_start": 57,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:69:12\n   |\n69 |         if STORAGE.is_none() {\n   |            ^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1786,
                    "byte_start": 1769,
                    "column_end": 29,
                    "column_start": 12,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 69,
                    "line_start": 69,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 29,
                        "highlight_start": 12,
                        "text": "        if STORAGE.is_none() {"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\experimental\\collections\\storage.rs:73:9\n   |\n73 |         STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()\n   |         ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 1868,
                    "byte_start": 1852,
                    "column_end": 25,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\experimental\\collections\\storage.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 73,
                    "line_start": 73,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 25,
                        "highlight_start": 9,
                        "text": "        STORAGE.as_mut().unwrap().get(&TypeId::of::<T>()).as_ref()"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n   --> src\\experimental\\scene.rs:620:5\n    |\n620 |     SCENE.get_or_insert_with(|| Scene::new())\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 16435,
                    "byte_start": 16394,
                    "column_end": 46,
                    "column_start": 5,
                    "expansion": null,
                    "file_name": "src\\experimental\\scene.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 620,
                    "line_start": 620,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 46,
                        "highlight_start": 5,
                        "text": "    SCENE.get_or_insert_with(|| Scene::new())"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a mutable reference to mutable static\n  --> src\\telemetry.rs:9:9\n   |\n9  | /         PROFILER.get_or_insert_with(|| Profiler {\n10 | |             frame: Frame::new(),\n11 | |             queries: HashMap::new(),\n12 | |             active_query: None,\n...  |\n19 | |             strings: vec![],\n20 | |         })\n   | |__________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a mutable reference to mutable static",
                "spans": [
                  {
                    "byte_end": 584,
                    "byte_start": 206,
                    "column_end": 11,
                    "column_start": 9,
                    "expansion": null,
                    "file_name": "src\\telemetry.rs",
                    "is_primary": true,
                    "label": "mutable reference to mutable static",
                    "line_end": 20,
                    "line_start": 9,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 50,
                        "highlight_start": 9,
                        "text": "        PROFILER.get_or_insert_with(|| Profiler {"
                      },
                      {
                        "highlight_end": 33,
                        "highlight_start": 1,
                        "text": "            frame: Frame::new(),"
                      },
                      {
                        "highlight_end": 37,
                        "highlight_start": 1,
                        "text": "            queries: HashMap::new(),"
                      },
                      {
                        "highlight_end": 32,
                        "highlight_start": 1,
                        "text": "            active_query: None,"
                      },
                      {
                        "highlight_end": 38,
                        "highlight_start": 1,
                        "text": "            prev_frame: Frame::new(),"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            enabled: false,"
                      },
                      {
                        "highlight_end": 34,
                        "highlight_start": 1,
                        "text": "            enable_request: None,"
                      },
                      {
                        "highlight_end": 36,
                        "highlight_start": 1,
                        "text": "            capture_request: false,"
                      },
                      {
                        "highlight_end": 28,
                        "highlight_start": 1,
                        "text": "            capture: false,"
                      },
                      {
                        "highlight_end": 31,
                        "highlight_start": 1,
                        "text": "            drawcalls: vec![],"
                      },
                      {
                        "highlight_end": 29,
                        "highlight_start": 1,
                        "text": "            strings: vec![],"
                      },
                      {
                        "highlight_end": 11,
                        "highlight_start": 1,
                        "text": "        })"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-message",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "message": {
                "rendered": "warning: creating a shared reference to mutable static\n   --> src\\lib.rs:172:21\n    |\n172 |             assert!(THREAD_ID.is_some());\n    |                     ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
                "$message_type": "diagnostic",
                "children": [
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>",
                    "rendered": null,
                    "spans": []
                  },
                  {
                    "children": [],
                    "code": null,
                    "level": "note",
                    "message": "shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives",
                    "rendered": null,
                    "spans": []
                  }
                ],
                "code": {
                  "code": "static_mut_refs",
                  "explanation": null
                },
                "level": "warning",
                "message": "creating a shared reference to mutable static",
                "spans": [
                  {
                    "byte_end": 4443,
                    "byte_start": 4424,
                    "column_end": 40,
                    "column_start": 21,
                    "expansion": null,
                    "file_name": "src\\lib.rs",
                    "is_primary": true,
                    "label": "shared reference to mutable static",
                    "line_end": 172,
                    "line_start": 172,
                    "suggested_replacement": null,
                    "suggestion_applicability": null,
                    "text": [
                      {
                        "highlight_end": 40,
                        "highlight_start": 21,
                        "text": "            assert!(THREAD_ID.is_some());"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "reason": "compiler-artifact",
              "package_id": "path+file:///C:/Users/davet/AppData/Local/Temp/tmpdp1_ape0/macroquad-0.4.14#macroquad@0.4.14",
              "manifest_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\Cargo.toml",
              "target": {
                "kind": [
                  "lib"
                ],
                "crate_types": [
                  "lib"
                ],
                "name": "macroquad",
                "src_path": "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\src\\lib.rs",
                "edition": "2021",
                "doc": true,
                "doctest": true,
                "test": true
              },
              "profile": {
                "opt_level": "0",
                "debuginfo": 2,
                "debug_assertions": true,
                "overflow_checks": true,
                "test": false
              },
              "features": [
                "default"
              ],
              "filenames": [
                "C:\\Users\\davet\\AppData\\Local\\Temp\\tmpdp1_ape0\\macroquad-0.4.14\\target\\debug\\deps\\libmacroquad-a8b56cbbd35f2660.rmeta"
              ],
              "executable": null,
              "fresh": false
            },
            {
              "reason": "build-finished",
              "success": true
            }
          ],
          "audit": {
            "database": {
              "advisory-count": 787,
              "last-commit": "7573f55ba337263f61167dbb0ea926cdc7c8eb5d",
              "last-updated": "2025-06-17T11:04:25+02:00"
            },
            "lockfile": {
              "dependency-count": 66
            },
            "settings": {
              "target_arch": [],
              "target_os": [],
              "severity": null,
              "ignore": [],
              "informational_warnings": [
                "unmaintained",
                "unsound",
                "notice"
              ]
            },
            "vulnerabilities": {
              "found": false,
              "count": 0,
              "list": []
            },
            "warnings": {
              "unsound": [
                {
                  "kind": "unsound",
                  "package": {
                    "name": "macroquad",
                    "version": "0.4.14",
                    "source": null,
                    "checksum": null,
                    "dependencies": [
                      {
                        "name": "backtrace",
                        "version": "0.3.74",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "fontdue",
                        "version": "0.9.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "glam",
                        "version": "0.27.0",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "image",
                        "version": "0.24.9",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "log",
                        "version": "0.4.26",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "macroquad_macro",
                        "version": "0.1.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "miniquad",
                        "version": "0.4.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "quad-rand",
                        "version": "0.2.3",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      },
                      {
                        "name": "quad-snd",
                        "version": "0.2.8",
                        "source": "registry+https://github.com/rust-lang/crates.io-index"
                      }
                    ],
                    "replace": null
                  },
                  "advisory": {
                    "id": "RUSTSEC-2025-0035",
                    "package": "macroquad",
                    "title": "Multiple soundness issues in `macroquad`",
                    "description": "Several soundness issues have been reported. Resolving them doesn't seem to be considered a priority. In particular, unprincipled use of\nmutable statics is pervasive throughout the library, making it possible to cause use-after-free in safe code.\n\nCurrently, no fixed version is available.",
                    "date": "2025-04-23",
                    "aliases": [],
                    "related": [],
                    "collection": "crates",
                    "categories": [
                      "memory-corruption"
                    ],
                    "keywords": [
                      "buffer overflow",
                      "use-after-free",
                      "undefined behavior"
                    ],
                    "cvss": null,
                    "informational": "unsound",
                    "references": [
                      "https://github.com/not-fl3/macroquad/issues/333",
                      "https://github.com/not-fl3/macroquad/issues/634",
                      "https://github.com/not-fl3/macroquad/issues/746",
                      "https://github.com/not-fl3/macroquad/issues/723"
                    ],
                    "source": null,
                    "url": null,
                    "withdrawn": null,
                    "license": "CC0-1.0"
                  },
                  "affected": null,
                  "versions": {
                    "patched": [],
                    "unaffected": []
                  }
                }
              ]
            }
          },
          "note": "Crate analysis performed with stable toolchain."
        },
        "crate_metadata": {
          "name": "macroquad",
          "version": "0.4.14",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\n[Settings](https://docs.rs/macroquad/latest/settings.html)\n[Help](https://docs.rs/macroquad/latest/help.html)\nSummary[Source](https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922)\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#supported-platforms)Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#features)Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android [build instructions](https://github.com/not-fl3/miniquad/#building-examples)\n\n\n## [\u00a7](https://docs.rs/macroquad/latest/macroquad/#example)Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/macroquad/latest/macroquad/#reexports)\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules[\u00a7](https://docs.rs/macroquad/latest/macroquad/#modules)\n\n[audio](https://docs.rs/macroquad/latest/macroquad/audio/index.html \"mod macroquad::audio\")\n    Loading and playing sounds.\n\n[camera](https://docs.rs/macroquad/latest/macroquad/camera/index.html \"mod macroquad::camera\")\n    2D and 3D camera.\n\n[color](https://docs.rs/macroquad/latest/macroquad/color/index.html \"mod macroquad::color\")\n    Color types and helpers.\n\n[conf](https://docs.rs/macroquad/latest/macroquad/conf/index.html \"mod macroquad::conf\")\n\n\n[experimental](https://docs.rs/macroquad/latest/macroquad/experimental/index.html \"mod macroquad::experimental\")\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\n[file](https://docs.rs/macroquad/latest/macroquad/file/index.html \"mod macroquad::file\")\n    Cross platform file management functions.\n\n[input](https://docs.rs/macroquad/latest/macroquad/input/index.html \"mod macroquad::input\")\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\n[material](https://docs.rs/macroquad/latest/macroquad/material/index.html \"mod macroquad::material\")\n    Custom materials - shaders, uniforms.\n\n[math](https://docs.rs/macroquad/latest/macroquad/math/index.html \"mod macroquad::math\")\n    Math types and helpers.\n\n[models](https://docs.rs/macroquad/latest/macroquad/models/index.html \"mod macroquad::models\")\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\n[prelude](https://docs.rs/macroquad/latest/macroquad/prelude/index.html \"mod macroquad::prelude\")\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\n[rand](https://docs.rs/macroquad/latest/macroquad/rand/index.html \"mod macroquad::rand\")\n    Cross platform random generator.\n\n[shapes](https://docs.rs/macroquad/latest/macroquad/shapes/index.html \"mod macroquad::shapes\")\n    2D shapes rendering.\n\n[telemetry](https://docs.rs/macroquad/latest/macroquad/telemetry/index.html \"mod macroquad::telemetry\")\n\n\n[text](https://docs.rs/macroquad/latest/macroquad/text/index.html \"mod macroquad::text\")\n    Functions to load fonts and draw text.\n\n[texture](https://docs.rs/macroquad/latest/macroquad/texture/index.html \"mod macroquad::texture\")\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\n[time](https://docs.rs/macroquad/latest/macroquad/time/index.html \"mod macroquad::time\")\n    Cross platform system time access and FPS counters.\n\n[ui](https://docs.rs/macroquad/latest/macroquad/ui/index.html \"mod macroquad::ui\")\n    Immediate mode UI.\n\n[window](https://docs.rs/macroquad/latest/macroquad/window/index.html \"mod macroquad::window\")\n    Window and associated to window rendering context related functions.\n## Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#macros)\n\n[color_u8](https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html \"macro macroquad::color_u8\")\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for [this issue](https://github.com/rust-lang/rust/issues/57241) to be resolved.\n## Structs[\u00a7](https://docs.rs/macroquad/latest/macroquad/#structs)\n\n[DroppedFile](https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html \"struct macroquad::DroppedFile\")\n    Information about a dropped file.\n## Enums[\u00a7](https://docs.rs/macroquad/latest/macroquad/#enums)\n\n[Error](https://docs.rs/macroquad/latest/macroquad/enum.Error.html \"enum macroquad::Error\")\n\n## Attribute Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#attributes)\n\n[main](https://docs.rs/macroquad/latest/macroquad/attr.main.html \"attr macroquad::main\")\n    Macroquad entry point.\n",
            "markdown_with_citations": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### \u00a7\u27e84\u27e9Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### \u00a7\u27e85\u27e9Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android build instructions\u27e86\u27e9\n\n\n## \u00a7\u27e87\u27e9Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports\u00a7\u27e88\u27e9\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules\u00a7\u27e89\u27e9\n\naudio\u27e810\u27e9\n    Loading and playing sounds.\n\ncamera\u27e811\u27e9\n    2D and 3D camera.\n\ncolor\u27e812\u27e9\n    Color types and helpers.\n\nconf\u27e813\u27e9\n\n\nexperimental\u27e814\u27e9\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\nfile\u27e815\u27e9\n    Cross platform file management functions.\n\ninput\u27e816\u27e9\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\nmaterial\u27e817\u27e9\n    Custom materials - shaders, uniforms.\n\nmath\u27e818\u27e9\n    Math types and helpers.\n\nmodels\u27e819\u27e9\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\nprelude\u27e820\u27e9\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\nrand\u27e821\u27e9\n    Cross platform random generator.\n\nshapes\u27e822\u27e9\n    2D shapes rendering.\n\ntelemetry\u27e823\u27e9\n\n\ntext\u27e824\u27e9\n    Functions to load fonts and draw text.\n\ntexture\u27e825\u27e9\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\ntime\u27e826\u27e9\n    Cross platform system time access and FPS counters.\n\nui\u27e827\u27e9\n    Immediate mode UI.\n\nwindow\u27e828\u27e9\n    Window and associated to window rendering context related functions.\n## Macros\u00a7\u27e829\u27e9\n\ncolor_u8\u27e830\u27e9\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for this issue\u27e831\u27e9 to be resolved.\n## Structs\u00a7\u27e832\u27e9\n\nDroppedFile\u27e833\u27e9\n    Information about a dropped file.\n## Enums\u00a7\u27e834\u27e9\n\nError\u27e835\u27e9\n\n## Attribute Macros\u00a7\u27e836\u27e9\n\nmain\u27e837\u27e9\n    Macroquad entry point.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/macroquad/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/macroquad/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922: Source\n\u27e84\u27e9 https://docs.rs/macroquad/latest/macroquad/#supported-platforms: \u00a7\n\u27e85\u27e9 https://docs.rs/macroquad/latest/macroquad/#features: \u00a7\n\u27e86\u27e9 https://github.com/not-fl3/miniquad/#building-examples: build instructions\n\u27e87\u27e9 https://docs.rs/macroquad/latest/macroquad/#example: \u00a7\n\u27e88\u27e9 https://docs.rs/macroquad/latest/macroquad/#reexports: \u00a7\n\u27e89\u27e9 https://docs.rs/macroquad/latest/macroquad/#modules: \u00a7\n\u27e810\u27e9 https://docs.rs/macroquad/latest/macroquad/audio/index.html: mod macroquad::audio - audio\n\u27e811\u27e9 https://docs.rs/macroquad/latest/macroquad/camera/index.html: mod macroquad::camera - camera\n\u27e812\u27e9 https://docs.rs/macroquad/latest/macroquad/color/index.html: mod macroquad::color - color\n\u27e813\u27e9 https://docs.rs/macroquad/latest/macroquad/conf/index.html: mod macroquad::conf - conf\n\u27e814\u27e9 https://docs.rs/macroquad/latest/macroquad/experimental/index.html: mod macroquad::experimental - experimental\n\u27e815\u27e9 https://docs.rs/macroquad/latest/macroquad/file/index.html: mod macroquad::file - file\n\u27e816\u27e9 https://docs.rs/macroquad/latest/macroquad/input/index.html: mod macroquad::input - input\n\u27e817\u27e9 https://docs.rs/macroquad/latest/macroquad/material/index.html: mod macroquad::material - material\n\u27e818\u27e9 https://docs.rs/macroquad/latest/macroquad/math/index.html: mod macroquad::math - math\n\u27e819\u27e9 https://docs.rs/macroquad/latest/macroquad/models/index.html: mod macroquad::models - models\n\u27e820\u27e9 https://docs.rs/macroquad/latest/macroquad/prelude/index.html: mod macroquad::prelude - prelude\n\u27e821\u27e9 https://docs.rs/macroquad/latest/macroquad/rand/index.html: mod macroquad::rand - rand\n\u27e822\u27e9 https://docs.rs/macroquad/latest/macroquad/shapes/index.html: mod macroquad::shapes - shapes\n\u27e823\u27e9 https://docs.rs/macroquad/latest/macroquad/telemetry/index.html: mod macroquad::telemetry - telemetry\n\u27e824\u27e9 https://docs.rs/macroquad/latest/macroquad/text/index.html: mod macroquad::text - text\n\u27e825\u27e9 https://docs.rs/macroquad/latest/macroquad/texture/index.html: mod macroquad::texture - texture\n\u27e826\u27e9 https://docs.rs/macroquad/latest/macroquad/time/index.html: mod macroquad::time - time\n\u27e827\u27e9 https://docs.rs/macroquad/latest/macroquad/ui/index.html: mod macroquad::ui - ui\n\u27e828\u27e9 https://docs.rs/macroquad/latest/macroquad/window/index.html: mod macroquad::window - window\n\u27e829\u27e9 https://docs.rs/macroquad/latest/macroquad/#macros: \u00a7\n\u27e830\u27e9 https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html: macro macroquad::color_u8 - color_u8\n\u27e831\u27e9 https://github.com/rust-lang/rust/issues/57241: this issue\n\u27e832\u27e9 https://docs.rs/macroquad/latest/macroquad/#structs: \u00a7\n\u27e833\u27e9 https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html: struct macroquad::DroppedFile - DroppedFile\n\u27e834\u27e9 https://docs.rs/macroquad/latest/macroquad/#enums: \u00a7\n\u27e835\u27e9 https://docs.rs/macroquad/latest/macroquad/enum.Error.html: enum macroquad::Error - Error\n\u27e836\u27e9 https://docs.rs/macroquad/latest/macroquad/#attributes: \u00a7\n\u27e837\u27e9 https://docs.rs/macroquad/latest/macroquad/attr.main.html: attr macroquad::main - main\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": []
        },
        "enriched_crate": {
          "name": "macroquad",
          "version": "0.4.14",
          "description": "ALLOW: Positive community sentiment",
          "repository": "",
          "keywords": [],
          "categories": [],
          "readme": {
            "raw_markdown": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\n[Settings](https://docs.rs/macroquad/latest/settings.html)\n[Help](https://docs.rs/macroquad/latest/help.html)\nSummary[Source](https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922)\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#supported-platforms)Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#features)Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android [build instructions](https://github.com/not-fl3/miniquad/#building-examples)\n\n\n## [\u00a7](https://docs.rs/macroquad/latest/macroquad/#example)Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/macroquad/latest/macroquad/#reexports)\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules[\u00a7](https://docs.rs/macroquad/latest/macroquad/#modules)\n\n[audio](https://docs.rs/macroquad/latest/macroquad/audio/index.html \"mod macroquad::audio\")\n    Loading and playing sounds.\n\n[camera](https://docs.rs/macroquad/latest/macroquad/camera/index.html \"mod macroquad::camera\")\n    2D and 3D camera.\n\n[color](https://docs.rs/macroquad/latest/macroquad/color/index.html \"mod macroquad::color\")\n    Color types and helpers.\n\n[conf](https://docs.rs/macroquad/latest/macroquad/conf/index.html \"mod macroquad::conf\")\n\n\n[experimental](https://docs.rs/macroquad/latest/macroquad/experimental/index.html \"mod macroquad::experimental\")\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\n[file](https://docs.rs/macroquad/latest/macroquad/file/index.html \"mod macroquad::file\")\n    Cross platform file management functions.\n\n[input](https://docs.rs/macroquad/latest/macroquad/input/index.html \"mod macroquad::input\")\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\n[material](https://docs.rs/macroquad/latest/macroquad/material/index.html \"mod macroquad::material\")\n    Custom materials - shaders, uniforms.\n\n[math](https://docs.rs/macroquad/latest/macroquad/math/index.html \"mod macroquad::math\")\n    Math types and helpers.\n\n[models](https://docs.rs/macroquad/latest/macroquad/models/index.html \"mod macroquad::models\")\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\n[prelude](https://docs.rs/macroquad/latest/macroquad/prelude/index.html \"mod macroquad::prelude\")\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\n[rand](https://docs.rs/macroquad/latest/macroquad/rand/index.html \"mod macroquad::rand\")\n    Cross platform random generator.\n\n[shapes](https://docs.rs/macroquad/latest/macroquad/shapes/index.html \"mod macroquad::shapes\")\n    2D shapes rendering.\n\n[telemetry](https://docs.rs/macroquad/latest/macroquad/telemetry/index.html \"mod macroquad::telemetry\")\n\n\n[text](https://docs.rs/macroquad/latest/macroquad/text/index.html \"mod macroquad::text\")\n    Functions to load fonts and draw text.\n\n[texture](https://docs.rs/macroquad/latest/macroquad/texture/index.html \"mod macroquad::texture\")\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\n[time](https://docs.rs/macroquad/latest/macroquad/time/index.html \"mod macroquad::time\")\n    Cross platform system time access and FPS counters.\n\n[ui](https://docs.rs/macroquad/latest/macroquad/ui/index.html \"mod macroquad::ui\")\n    Immediate mode UI.\n\n[window](https://docs.rs/macroquad/latest/macroquad/window/index.html \"mod macroquad::window\")\n    Window and associated to window rendering context related functions.\n## Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#macros)\n\n[color_u8](https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html \"macro macroquad::color_u8\")\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for [this issue](https://github.com/rust-lang/rust/issues/57241) to be resolved.\n## Structs[\u00a7](https://docs.rs/macroquad/latest/macroquad/#structs)\n\n[DroppedFile](https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html \"struct macroquad::DroppedFile\")\n    Information about a dropped file.\n## Enums[\u00a7](https://docs.rs/macroquad/latest/macroquad/#enums)\n\n[Error](https://docs.rs/macroquad/latest/macroquad/enum.Error.html \"enum macroquad::Error\")\n\n## Attribute Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#attributes)\n\n[main](https://docs.rs/macroquad/latest/macroquad/attr.main.html \"attr macroquad::main\")\n    Macroquad entry point.\n",
            "markdown_with_citations": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### \u00a7\u27e84\u27e9Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### \u00a7\u27e85\u27e9Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android build instructions\u27e86\u27e9\n\n\n## \u00a7\u27e87\u27e9Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports\u00a7\u27e88\u27e9\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules\u00a7\u27e89\u27e9\n\naudio\u27e810\u27e9\n    Loading and playing sounds.\n\ncamera\u27e811\u27e9\n    2D and 3D camera.\n\ncolor\u27e812\u27e9\n    Color types and helpers.\n\nconf\u27e813\u27e9\n\n\nexperimental\u27e814\u27e9\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\nfile\u27e815\u27e9\n    Cross platform file management functions.\n\ninput\u27e816\u27e9\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\nmaterial\u27e817\u27e9\n    Custom materials - shaders, uniforms.\n\nmath\u27e818\u27e9\n    Math types and helpers.\n\nmodels\u27e819\u27e9\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\nprelude\u27e820\u27e9\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\nrand\u27e821\u27e9\n    Cross platform random generator.\n\nshapes\u27e822\u27e9\n    2D shapes rendering.\n\ntelemetry\u27e823\u27e9\n\n\ntext\u27e824\u27e9\n    Functions to load fonts and draw text.\n\ntexture\u27e825\u27e9\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\ntime\u27e826\u27e9\n    Cross platform system time access and FPS counters.\n\nui\u27e827\u27e9\n    Immediate mode UI.\n\nwindow\u27e828\u27e9\n    Window and associated to window rendering context related functions.\n## Macros\u00a7\u27e829\u27e9\n\ncolor_u8\u27e830\u27e9\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for this issue\u27e831\u27e9 to be resolved.\n## Structs\u00a7\u27e832\u27e9\n\nDroppedFile\u27e833\u27e9\n    Information about a dropped file.\n## Enums\u00a7\u27e834\u27e9\n\nError\u27e835\u27e9\n\n## Attribute Macros\u00a7\u27e836\u27e9\n\nmain\u27e837\u27e9\n    Macroquad entry point.\n",
            "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/macroquad/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/macroquad/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922: Source\n\u27e84\u27e9 https://docs.rs/macroquad/latest/macroquad/#supported-platforms: \u00a7\n\u27e85\u27e9 https://docs.rs/macroquad/latest/macroquad/#features: \u00a7\n\u27e86\u27e9 https://github.com/not-fl3/miniquad/#building-examples: build instructions\n\u27e87\u27e9 https://docs.rs/macroquad/latest/macroquad/#example: \u00a7\n\u27e88\u27e9 https://docs.rs/macroquad/latest/macroquad/#reexports: \u00a7\n\u27e89\u27e9 https://docs.rs/macroquad/latest/macroquad/#modules: \u00a7\n\u27e810\u27e9 https://docs.rs/macroquad/latest/macroquad/audio/index.html: mod macroquad::audio - audio\n\u27e811\u27e9 https://docs.rs/macroquad/latest/macroquad/camera/index.html: mod macroquad::camera - camera\n\u27e812\u27e9 https://docs.rs/macroquad/latest/macroquad/color/index.html: mod macroquad::color - color\n\u27e813\u27e9 https://docs.rs/macroquad/latest/macroquad/conf/index.html: mod macroquad::conf - conf\n\u27e814\u27e9 https://docs.rs/macroquad/latest/macroquad/experimental/index.html: mod macroquad::experimental - experimental\n\u27e815\u27e9 https://docs.rs/macroquad/latest/macroquad/file/index.html: mod macroquad::file - file\n\u27e816\u27e9 https://docs.rs/macroquad/latest/macroquad/input/index.html: mod macroquad::input - input\n\u27e817\u27e9 https://docs.rs/macroquad/latest/macroquad/material/index.html: mod macroquad::material - material\n\u27e818\u27e9 https://docs.rs/macroquad/latest/macroquad/math/index.html: mod macroquad::math - math\n\u27e819\u27e9 https://docs.rs/macroquad/latest/macroquad/models/index.html: mod macroquad::models - models\n\u27e820\u27e9 https://docs.rs/macroquad/latest/macroquad/prelude/index.html: mod macroquad::prelude - prelude\n\u27e821\u27e9 https://docs.rs/macroquad/latest/macroquad/rand/index.html: mod macroquad::rand - rand\n\u27e822\u27e9 https://docs.rs/macroquad/latest/macroquad/shapes/index.html: mod macroquad::shapes - shapes\n\u27e823\u27e9 https://docs.rs/macroquad/latest/macroquad/telemetry/index.html: mod macroquad::telemetry - telemetry\n\u27e824\u27e9 https://docs.rs/macroquad/latest/macroquad/text/index.html: mod macroquad::text - text\n\u27e825\u27e9 https://docs.rs/macroquad/latest/macroquad/texture/index.html: mod macroquad::texture - texture\n\u27e826\u27e9 https://docs.rs/macroquad/latest/macroquad/time/index.html: mod macroquad::time - time\n\u27e827\u27e9 https://docs.rs/macroquad/latest/macroquad/ui/index.html: mod macroquad::ui - ui\n\u27e828\u27e9 https://docs.rs/macroquad/latest/macroquad/window/index.html: mod macroquad::window - window\n\u27e829\u27e9 https://docs.rs/macroquad/latest/macroquad/#macros: \u00a7\n\u27e830\u27e9 https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html: macro macroquad::color_u8 - color_u8\n\u27e831\u27e9 https://github.com/rust-lang/rust/issues/57241: this issue\n\u27e832\u27e9 https://docs.rs/macroquad/latest/macroquad/#structs: \u00a7\n\u27e833\u27e9 https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html: struct macroquad::DroppedFile - DroppedFile\n\u27e834\u27e9 https://docs.rs/macroquad/latest/macroquad/#enums: \u00a7\n\u27e835\u27e9 https://docs.rs/macroquad/latest/macroquad/enum.Error.html: enum macroquad::Error - Error\n\u27e836\u27e9 https://docs.rs/macroquad/latest/macroquad/#attributes: \u00a7\n\u27e837\u27e9 https://docs.rs/macroquad/latest/macroquad/attr.main.html: attr macroquad::main - main\n",
            "fit_markdown": "",
            "fit_html": ""
          },
          "downloads": 0,
          "github_stars": 0,
          "dependencies": [],
          "features": {},
          "code_snippets": [],
          "readme_sections": {},
          "librs_downloads": null,
          "source": "crates.io",
          "enhanced_scraping": {},
          "enhanced_features": [],
          "enhanced_dependencies": [],
          "readme_summary": "The `macroquad` crate is a beginner-friendly, cross-platform game development library for Rust, supporting PC, HTML5, Android, and iOS. It offers efficient 2D rendering, immediate mode UI, and a unified codebase for all platforms, with minimal dependencies for fast builds. Key features include modules for audio, input handling, 2D/3D rendering, textures, and system time, along with single-command deployment for WASM and Android.",
          "feature_summary": null,
          "use_case": "Unknown",
          "score": 8.0,
          "factual_counterfactual": "### Pair 1: Platform Support  \n\u2705 Factual: `macroquad` supports cross-platform development, allowing the same codebase to run on PC (Windows/Linux/MacOS), HTML5, Android, and iOS without requiring platform-specific defines.  \n\u274c Counterfactual: `macroquad` only supports desktop platforms like Windows, Linux, and MacOS, and does not provide compatibility with mobile platforms or HTML5.  \n\n---\n\n### Pair 2: Rendering Efficiency  \n\u2705 Factual: `macroquad` achieves efficient 2D rendering through automatic geometry batching, reducing the overhead of individual draw calls.  \n\u274c Counterfactual: `macroquad` relies on manual geometry batching, requiring developers to optimize rendering performance themselves.  \n\n---\n\n### Pair 3: Build Speed  \n\u2705 Factual: After running `cargo clean`, `macroquad` can rebuild in approximately 16 seconds on an older laptop like the ThinkPad x230 (~6 years old).  \n\u274c Counterfactual: `macroquad` has a slow build process, often taking several minutes even on modern hardware after running `cargo clean`.",
          "source_analysis": null,
          "user_behavior": null,
          "security": null
        }
      },
      "irl_score": 8.6,
      "execution_id": "exec-06ca4f66-7903b527-1751265047",
      "timestamp": "2025-06-30T06:30:47.143450+00:00",
      "canon_version": "1.3.0"
    },
    "rule_zero_compliant": true
  }
]