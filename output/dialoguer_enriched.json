{
    "name": "dialoguer",
    "version": "0.11.0",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/dialoguer/latest/dialoguer/all.html \"show sidebar\")\n# Crate dialoguerCopy item path\n[Settings](https://docs.rs/dialoguer/latest/settings.html)\n[Help](https://docs.rs/dialoguer/latest/help.html)\nSummary[Source](https://docs.rs/dialoguer/latest/src/dialoguer/lib.rs.html#1-64)\nExpand description\ndialoguer is a library for Rust that helps you build useful small interactive user inputs for the command line. It provides utilities to render various simple dialogs like confirmation prompts, text inputs and more.\nBest paired with other libraries in the family:\n  * [indicatif](https://docs.rs/indicatif)\n  * [console](https://docs.rs/console)\n\n\n## [\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#crate-contents)Crate Contents\n  * Confirmation prompts\n  * Input prompts (regular and password)\n  * Input validation\n  * Selections prompts (single and multi)\n  * Fuzzy select prompt\n  * Other kind of prompts\n  * Editor launching\n\n\n## [\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#crate-features)Crate Features\nThe following crate features are available:\n  * `editor`: enables bindings to launch editor to edit strings\n  * `fuzzy-select`: enables fuzzy select prompt\n  * `history`: enables input prompts to be able to track history of inputs\n  * `password`: enables password input prompt\n  * `completion`: enables ability to implement custom tab-completion for input prompts\n\n\nBy default `editor` and `password` are enabled.\n## Re-exports[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#reexports)\n\n`pub use console[](https://docs.rs/console/0.15.11/x86_64-unknown-linux-gnu/console/index.html \"mod console\");`\n\n## Modules[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#modules)\n\n[theme](https://docs.rs/dialoguer/latest/dialoguer/theme/index.html \"mod dialoguer::theme\")\n    Customizes the rendering of the elements.\n## Structs[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#structs)\n\n[BasicHistory](https://docs.rs/dialoguer/latest/dialoguer/struct.BasicHistory.html \"struct dialoguer::BasicHistory\")\n\n\n[Confirm](https://docs.rs/dialoguer/latest/dialoguer/struct.Confirm.html \"struct dialoguer::Confirm\")\n    Renders a confirm prompt.\n\n[Editor](https://docs.rs/dialoguer/latest/dialoguer/struct.Editor.html \"struct dialoguer::Editor\")\n    Launches the default editor to edit a string.\n\n[FuzzySelect](https://docs.rs/dialoguer/latest/dialoguer/struct.FuzzySelect.html \"struct dialoguer::FuzzySelect\")\n    Renders a select prompt with fuzzy search.\n\n[Input](https://docs.rs/dialoguer/latest/dialoguer/struct.Input.html \"struct dialoguer::Input\")\n    Renders an input prompt.\n\n[MultiSelect](https://docs.rs/dialoguer/latest/dialoguer/struct.MultiSelect.html \"struct dialoguer::MultiSelect\")\n    Renders a multi select prompt.\n\n[Password](https://docs.rs/dialoguer/latest/dialoguer/struct.Password.html \"struct dialoguer::Password\")\n    Renders a password input prompt.\n\n[Select](https://docs.rs/dialoguer/latest/dialoguer/struct.Select.html \"struct dialoguer::Select\")\n    Renders a select prompt.\n\n[Sort](https://docs.rs/dialoguer/latest/dialoguer/struct.Sort.html \"struct dialoguer::Sort\")\n    Renders a sort prompt.\n## Enums[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#enums)\n\n[Error](https://docs.rs/dialoguer/latest/dialoguer/enum.Error.html \"enum dialoguer::Error\")\n    Possible errors returned by prompts.\n## Traits[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#traits)\n\n[Completion](https://docs.rs/dialoguer/latest/dialoguer/trait.Completion.html \"trait dialoguer::Completion\")\n    Trait for completion handling.\n\n[History](https://docs.rs/dialoguer/latest/dialoguer/trait.History.html \"trait dialoguer::History\")\n    Trait for history handling.\n\n[InputValidator](https://docs.rs/dialoguer/latest/dialoguer/trait.InputValidator.html \"trait dialoguer::InputValidator\")\n    Trait for input validators.\n\n[PasswordValidator](https://docs.rs/dialoguer/latest/dialoguer/trait.PasswordValidator.html \"trait dialoguer::PasswordValidator\")\n    Trait for password validators.\n## Type Aliases[\u00a7](https://docs.rs/dialoguer/latest/dialoguer/#types)\n\n[Result](https://docs.rs/dialoguer/latest/dialoguer/type.Result.html \"type dialoguer::Result\")\n    Result type where errors are of type [Error](crate::error::Error)\n",
        "markdown_with_citations": "[](https://docs.rs/dialoguer/latest/dialoguer/all.html \"show sidebar\")\n# Crate dialoguerCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\ndialoguer is a library for Rust that helps you build useful small interactive user inputs for the command line. It provides utilities to render various simple dialogs like confirmation prompts, text inputs and more.\nBest paired with other libraries in the family:\n  * indicatif\u27e84\u27e9\n  * console\u27e85\u27e9\n\n\n## \u00a7\u27e86\u27e9Crate Contents\n  * Confirmation prompts\n  * Input prompts (regular and password)\n  * Input validation\n  * Selections prompts (single and multi)\n  * Fuzzy select prompt\n  * Other kind of prompts\n  * Editor launching\n\n\n## \u00a7\u27e87\u27e9Crate Features\nThe following crate features are available:\n  * `editor`: enables bindings to launch editor to edit strings\n  * `fuzzy-select`: enables fuzzy select prompt\n  * `history`: enables input prompts to be able to track history of inputs\n  * `password`: enables password input prompt\n  * `completion`: enables ability to implement custom tab-completion for input prompts\n\n\nBy default `editor` and `password` are enabled.\n## Re-exports\u00a7\u27e88\u27e9\n\n`pub use console[](https://docs.rs/console/0.15.11/x86_64-unknown-linux-gnu/console/index.html \"mod console\");`\n\n## Modules\u00a7\u27e89\u27e9\n\ntheme\u27e810\u27e9\n    Customizes the rendering of the elements.\n## Structs\u00a7\u27e811\u27e9\n\nBasicHistory\u27e812\u27e9\n\n\nConfirm\u27e813\u27e9\n    Renders a confirm prompt.\n\nEditor\u27e814\u27e9\n    Launches the default editor to edit a string.\n\nFuzzySelect\u27e815\u27e9\n    Renders a select prompt with fuzzy search.\n\nInput\u27e816\u27e9\n    Renders an input prompt.\n\nMultiSelect\u27e817\u27e9\n    Renders a multi select prompt.\n\nPassword\u27e818\u27e9\n    Renders a password input prompt.\n\nSelect\u27e819\u27e9\n    Renders a select prompt.\n\nSort\u27e820\u27e9\n    Renders a sort prompt.\n## Enums\u00a7\u27e821\u27e9\n\nError\u27e822\u27e9\n    Possible errors returned by prompts.\n## Traits\u00a7\u27e823\u27e9\n\nCompletion\u27e824\u27e9\n    Trait for completion handling.\n\nHistory\u27e825\u27e9\n    Trait for history handling.\n\nInputValidator\u27e826\u27e9\n    Trait for input validators.\n\nPasswordValidator\u27e827\u27e9\n    Trait for password validators.\n## Type Aliases\u00a7\u27e828\u27e9\n\nResult\u27e829\u27e9\n    Result type where errors are of type Error\u27e830\u27e9\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/dialoguer/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/dialoguer/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/dialoguer/latest/src/dialoguer/lib.rs.html#1-64: Source\n\u27e84\u27e9 https://docs.rs/indicatif: indicatif\n\u27e85\u27e9 https://docs.rs/console: console\n\u27e86\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#crate-contents: \u00a7\n\u27e87\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#crate-features: \u00a7\n\u27e88\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#reexports: \u00a7\n\u27e89\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#modules: \u00a7\n\u27e810\u27e9 https://docs.rs/dialoguer/latest/dialoguer/theme/index.html: mod dialoguer::theme - theme\n\u27e811\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#structs: \u00a7\n\u27e812\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.BasicHistory.html: struct dialoguer::BasicHistory - BasicHistory\n\u27e813\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Confirm.html: struct dialoguer::Confirm - Confirm\n\u27e814\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Editor.html: struct dialoguer::Editor - Editor\n\u27e815\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.FuzzySelect.html: struct dialoguer::FuzzySelect - FuzzySelect\n\u27e816\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Input.html: struct dialoguer::Input - Input\n\u27e817\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.MultiSelect.html: struct dialoguer::MultiSelect - MultiSelect\n\u27e818\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Password.html: struct dialoguer::Password - Password\n\u27e819\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Select.html: struct dialoguer::Select - Select\n\u27e820\u27e9 https://docs.rs/dialoguer/latest/dialoguer/struct.Sort.html: struct dialoguer::Sort - Sort\n\u27e821\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#enums: \u00a7\n\u27e822\u27e9 https://docs.rs/dialoguer/latest/dialoguer/enum.Error.html: enum dialoguer::Error - Error\n\u27e823\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#traits: \u00a7\n\u27e824\u27e9 https://docs.rs/dialoguer/latest/dialoguer/trait.Completion.html: trait dialoguer::Completion - Completion\n\u27e825\u27e9 https://docs.rs/dialoguer/latest/dialoguer/trait.History.html: trait dialoguer::History - History\n\u27e826\u27e9 https://docs.rs/dialoguer/latest/dialoguer/trait.InputValidator.html: trait dialoguer::InputValidator - InputValidator\n\u27e827\u27e9 https://docs.rs/dialoguer/latest/dialoguer/trait.PasswordValidator.html: trait dialoguer::PasswordValidator - PasswordValidator\n\u27e828\u27e9 https://docs.rs/dialoguer/latest/dialoguer/#types: \u00a7\n\u27e829\u27e9 https://docs.rs/dialoguer/latest/dialoguer/type.Result.html: type dialoguer::Result - Result\n\u27e830\u27e9 crate::error::Error: Error\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `dialoguer` crate provides utilities for building interactive command-line user inputs in Rust, including confirmation prompts, text inputs (regular and password), input validation, single/multi-selection prompts, fuzzy search, and editor launching. It supports features like input history, custom tab-completion, and password handling, with `editor` and `password` enabled by default. It integrates well with related libraries like `indicatif` and `console`.",
    "feature_summary": null,
    "use_case": "Utilities",
    "score": 8.0,
    "factual_counterfactual": "### Pair 1: Input Prompts  \n\u2705 **Factual:** The `dialoguer` crate supports both regular text input prompts and password input prompts, with the `password` feature enabled by default.  \n\u274c **Counterfactual:** The `dialoguer` crate only supports regular text input prompts and does not have built-in support for password input prompts.  \n\n---\n\n### Pair 2: Fuzzy Select  \n\u2705 **Factual:** The `dialoguer` crate includes a `FuzzySelect` prompt that allows users to perform fuzzy searches when selecting an option from a list.  \n\u274c **Counterfactual:** The `dialoguer` crate does not support fuzzy searches for selection prompts and only provides basic single and multi-select options.  \n\n---\n\n### Pair 3: Editor Integration  \n\u2705 **Factual:** The `dialoguer` crate provides an `Editor` struct that can launch the system's default text editor to allow users to edit a string.  \n\u274c **Counterfactual:** The `dialoguer` crate requires users to manually integrate external libraries for editor support, as it does not include built-in functionality for launching a text editor.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}