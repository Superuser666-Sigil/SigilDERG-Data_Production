{
    "name": "thruster",
    "version": "1.3.13",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/thruster/latest/thruster/all.html \"show sidebar\")\n# Crate thrusterCopy item path\n[Settings](https://docs.rs/thruster/latest/settings.html)\n[Help](https://docs.rs/thruster/latest/help.html)\nSummary[Source](https://docs.rs/thruster/latest/src/thruster/lib.rs.html#1-52)\n## Re-exports[\u00a7](https://docs.rs/thruster/latest/thruster/#reexports)\n\n`pub use context::basic_context::BasicContext[](https://docs.rs/thruster/latest/thruster/context/basic_context/struct.BasicContext.html \"struct thruster::context::basic_context::BasicContext\");`\n\n## Modules[\u00a7](https://docs.rs/thruster/latest/thruster/#modules)\n\n[context](https://docs.rs/thruster/latest/thruster/context/index.html \"mod thruster::context\")\n\n\n[errors](https://docs.rs/thruster/latest/thruster/errors/index.html \"mod thruster::errors\")\n\n\n[middleware](https://docs.rs/thruster/latest/thruster/middleware/index.html \"mod thruster::middleware\")\n\n\n[parser](https://docs.rs/thruster/latest/thruster/parser/index.html \"mod thruster::parser\")\n\n\n[testing](https://docs.rs/thruster/latest/thruster/testing/index.html \"mod thruster::testing\")\n\n## Macros[\u00a7](https://docs.rs/thruster/latest/thruster/#macros)\n\n[async_middleware](https://docs.rs/thruster/latest/thruster/macro.async_middleware.html \"macro thruster::async_middleware\")\n\n\n[generate_tuples](https://docs.rs/thruster/latest/thruster/macro.generate_tuples.html \"macro thruster::generate_tuples\")\n\n\n[m](https://docs.rs/thruster/latest/thruster/macro.m.html \"macro thruster::m\")\n\n\n[map_try](https://docs.rs/thruster/latest/thruster/macro.map_try.html \"macro thruster::map_try\")\n\n\n[pinbox](https://docs.rs/thruster/latest/thruster/macro.pinbox.html \"macro thruster::pinbox\")\n\n## Structs[\u00a7](https://docs.rs/thruster/latest/thruster/#structs)\n\n[App](https://docs.rs/thruster/latest/thruster/struct.App.html \"struct thruster::App\")\n    App, the main component of Thruster. The App is the entry point for your application and handles all incomming requests. Apps are also composeable, that is, via the `subapp` method, you can use all of the methods and middlewares contained within an app as a subset of your app\u2019s routes.\n\n[Http](https://docs.rs/thruster/latest/thruster/struct.Http.html \"struct thruster::Http\")\n\n\n[Request](https://docs.rs/thruster/latest/thruster/struct.Request.html \"struct thruster::Request\")\n    The request object is the default request object provied by Thruster. If a different server is used, such as Hyper, then you\u2019ll need to reference that server\u2019s \u201crequest\u201d documentation instead.\n\n[Response](https://docs.rs/thruster/latest/thruster/struct.Response.html \"struct thruster::Response\")\n\n\n[ReusableBoxFuture](https://docs.rs/thruster/latest/thruster/struct.ReusableBoxFuture.html \"struct thruster::ReusableBoxFuture\")\n    A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.\n\n[Server](https://docs.rs/thruster/latest/thruster/struct.Server.html \"struct thruster::Server\")\n\n## Traits[\u00a7](https://docs.rs/thruster/latest/thruster/#traits)\n\n[Context](https://docs.rs/thruster/latest/thruster/trait.Context.html \"trait thruster::Context\")\n    A `Context` is what will be passed between functions in the middleware for the defined routes of Thruster. Since a new context is made for each incomming request, it\u2019s important to keep this struct lean and quick, as well as the `context_generator` associated with it.\n\n[ContextState](https://docs.rs/thruster/latest/thruster/trait.ContextState.html \"trait thruster::ContextState\")\n\n\n[RequestWithParams](https://docs.rs/thruster/latest/thruster/trait.RequestWithParams.html \"trait thruster::RequestWithParams\")\n\n\n[Testable](https://docs.rs/thruster/latest/thruster/trait.Testable.html \"trait thruster::Testable\")\n\n\n[ThrusterRequest](https://docs.rs/thruster/latest/thruster/trait.ThrusterRequest.html \"trait thruster::ThrusterRequest\")\n\n\n[ThrusterServer](https://docs.rs/thruster/latest/thruster/trait.ThrusterServer.html \"trait thruster::ThrusterServer\")\n\n## Functions[\u00a7](https://docs.rs/thruster/latest/thruster/#functions)\n\n[decode](https://docs.rs/thruster/latest/thruster/fn.decode.html \"fn thruster::decode\")\n\n\n[encode](https://docs.rs/thruster/latest/thruster/fn.encode.html \"fn thruster::encode\")\n\n## Type Aliases[\u00a7](https://docs.rs/thruster/latest/thruster/#types)\n\n[MiddlewareFn](https://docs.rs/thruster/latest/thruster/type.MiddlewareFn.html \"type thruster::MiddlewareFn\")\n\n\n[MiddlewareNext](https://docs.rs/thruster/latest/thruster/type.MiddlewareNext.html \"type thruster::MiddlewareNext\")\n\n\n[MiddlewareResult](https://docs.rs/thruster/latest/thruster/type.MiddlewareResult.html \"type thruster::MiddlewareResult\")\n\n\n[MiddlewareReturnValue](https://docs.rs/thruster/latest/thruster/type.MiddlewareReturnValue.html \"type thruster::MiddlewareReturnValue\")\n\n## Attribute Macros[\u00a7](https://docs.rs/thruster/latest/thruster/#attributes)\n\n[context_state](https://docs.rs/thruster/latest/thruster/attr.context_state.html \"attr thruster::context_state\")\n\n\n[json_request](https://docs.rs/thruster/latest/thruster/attr.json_request.html \"attr thruster::json_request\")\n\n\n[middleware](https://docs.rs/thruster/latest/thruster/attr.middleware.html \"attr thruster::middleware\")\n\n\n[middleware_fn](https://docs.rs/thruster/latest/thruster/attr.middleware_fn.html \"attr thruster::middleware_fn\")\n\n",
        "markdown_with_citations": "[](https://docs.rs/thruster/latest/thruster/all.html \"show sidebar\")\n# Crate thrusterCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub use context::basic_context::BasicContext[](https://docs.rs/thruster/latest/thruster/context/basic_context/struct.BasicContext.html \"struct thruster::context::basic_context::BasicContext\");`\n\n## Modules\u00a7\u27e85\u27e9\n\ncontext\u27e86\u27e9\n\n\nerrors\u27e87\u27e9\n\n\nmiddleware\u27e88\u27e9\n\n\nparser\u27e89\u27e9\n\n\ntesting\u27e810\u27e9\n\n## Macros\u00a7\u27e811\u27e9\n\nasync_middleware\u27e812\u27e9\n\n\ngenerate_tuples\u27e813\u27e9\n\n\nm\u27e814\u27e9\n\n\nmap_try\u27e815\u27e9\n\n\npinbox\u27e816\u27e9\n\n## Structs\u00a7\u27e817\u27e9\n\nApp\u27e818\u27e9\n    App, the main component of Thruster. The App is the entry point for your application and handles all incomming requests. Apps are also composeable, that is, via the `subapp` method, you can use all of the methods and middlewares contained within an app as a subset of your app\u2019s routes.\n\nHttp\u27e819\u27e9\n\n\nRequest\u27e820\u27e9\n    The request object is the default request object provied by Thruster. If a different server is used, such as Hyper, then you\u2019ll need to reference that server\u2019s \u201crequest\u201d documentation instead.\n\nResponse\u27e821\u27e9\n\n\nReusableBoxFuture\u27e822\u27e9\n    A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.\n\nServer\u27e823\u27e9\n\n## Traits\u00a7\u27e824\u27e9\n\nContext\u27e825\u27e9\n    A `Context` is what will be passed between functions in the middleware for the defined routes of Thruster. Since a new context is made for each incomming request, it\u2019s important to keep this struct lean and quick, as well as the `context_generator` associated with it.\n\nContextState\u27e826\u27e9\n\n\nRequestWithParams\u27e827\u27e9\n\n\nTestable\u27e828\u27e9\n\n\nThrusterRequest\u27e829\u27e9\n\n\nThrusterServer\u27e830\u27e9\n\n## Functions\u00a7\u27e831\u27e9\n\ndecode\u27e832\u27e9\n\n\nencode\u27e833\u27e9\n\n## Type Aliases\u00a7\u27e834\u27e9\n\nMiddlewareFn\u27e835\u27e9\n\n\nMiddlewareNext\u27e836\u27e9\n\n\nMiddlewareResult\u27e837\u27e9\n\n\nMiddlewareReturnValue\u27e838\u27e9\n\n## Attribute Macros\u00a7\u27e839\u27e9\n\ncontext_state\u27e840\u27e9\n\n\njson_request\u27e841\u27e9\n\n\nmiddleware\u27e842\u27e9\n\n\nmiddleware_fn\u27e843\u27e9\n\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/thruster/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/thruster/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/thruster/latest/src/thruster/lib.rs.html#1-52: Source\n\u27e84\u27e9 https://docs.rs/thruster/latest/thruster/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/thruster/latest/thruster/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/thruster/latest/thruster/context/index.html: mod thruster::context - context\n\u27e87\u27e9 https://docs.rs/thruster/latest/thruster/errors/index.html: mod thruster::errors - errors\n\u27e88\u27e9 https://docs.rs/thruster/latest/thruster/middleware/index.html: mod thruster::middleware - middleware\n\u27e89\u27e9 https://docs.rs/thruster/latest/thruster/parser/index.html: mod thruster::parser - parser\n\u27e810\u27e9 https://docs.rs/thruster/latest/thruster/testing/index.html: mod thruster::testing - testing\n\u27e811\u27e9 https://docs.rs/thruster/latest/thruster/#macros: \u00a7\n\u27e812\u27e9 https://docs.rs/thruster/latest/thruster/macro.async_middleware.html: macro thruster::async_middleware - async_middleware\n\u27e813\u27e9 https://docs.rs/thruster/latest/thruster/macro.generate_tuples.html: macro thruster::generate_tuples - generate_tuples\n\u27e814\u27e9 https://docs.rs/thruster/latest/thruster/macro.m.html: macro thruster::m - m\n\u27e815\u27e9 https://docs.rs/thruster/latest/thruster/macro.map_try.html: macro thruster::map_try - map_try\n\u27e816\u27e9 https://docs.rs/thruster/latest/thruster/macro.pinbox.html: macro thruster::pinbox - pinbox\n\u27e817\u27e9 https://docs.rs/thruster/latest/thruster/#structs: \u00a7\n\u27e818\u27e9 https://docs.rs/thruster/latest/thruster/struct.App.html: struct thruster::App - App\n\u27e819\u27e9 https://docs.rs/thruster/latest/thruster/struct.Http.html: struct thruster::Http - Http\n\u27e820\u27e9 https://docs.rs/thruster/latest/thruster/struct.Request.html: struct thruster::Request - Request\n\u27e821\u27e9 https://docs.rs/thruster/latest/thruster/struct.Response.html: struct thruster::Response - Response\n\u27e822\u27e9 https://docs.rs/thruster/latest/thruster/struct.ReusableBoxFuture.html: struct thruster::ReusableBoxFuture - ReusableBoxFuture\n\u27e823\u27e9 https://docs.rs/thruster/latest/thruster/struct.Server.html: struct thruster::Server - Server\n\u27e824\u27e9 https://docs.rs/thruster/latest/thruster/#traits: \u00a7\n\u27e825\u27e9 https://docs.rs/thruster/latest/thruster/trait.Context.html: trait thruster::Context - Context\n\u27e826\u27e9 https://docs.rs/thruster/latest/thruster/trait.ContextState.html: trait thruster::ContextState - ContextState\n\u27e827\u27e9 https://docs.rs/thruster/latest/thruster/trait.RequestWithParams.html: trait thruster::RequestWithParams - RequestWithParams\n\u27e828\u27e9 https://docs.rs/thruster/latest/thruster/trait.Testable.html: trait thruster::Testable - Testable\n\u27e829\u27e9 https://docs.rs/thruster/latest/thruster/trait.ThrusterRequest.html: trait thruster::ThrusterRequest - ThrusterRequest\n\u27e830\u27e9 https://docs.rs/thruster/latest/thruster/trait.ThrusterServer.html: trait thruster::ThrusterServer - ThrusterServer\n\u27e831\u27e9 https://docs.rs/thruster/latest/thruster/#functions: \u00a7\n\u27e832\u27e9 https://docs.rs/thruster/latest/thruster/fn.decode.html: fn thruster::decode - decode\n\u27e833\u27e9 https://docs.rs/thruster/latest/thruster/fn.encode.html: fn thruster::encode - encode\n\u27e834\u27e9 https://docs.rs/thruster/latest/thruster/#types: \u00a7\n\u27e835\u27e9 https://docs.rs/thruster/latest/thruster/type.MiddlewareFn.html: type thruster::MiddlewareFn - MiddlewareFn\n\u27e836\u27e9 https://docs.rs/thruster/latest/thruster/type.MiddlewareNext.html: type thruster::MiddlewareNext - MiddlewareNext\n\u27e837\u27e9 https://docs.rs/thruster/latest/thruster/type.MiddlewareResult.html: type thruster::MiddlewareResult - MiddlewareResult\n\u27e838\u27e9 https://docs.rs/thruster/latest/thruster/type.MiddlewareReturnValue.html: type thruster::MiddlewareReturnValue - MiddlewareReturnValue\n\u27e839\u27e9 https://docs.rs/thruster/latest/thruster/#attributes: \u00a7\n\u27e840\u27e9 https://docs.rs/thruster/latest/thruster/attr.context_state.html: attr thruster::context_state - context_state\n\u27e841\u27e9 https://docs.rs/thruster/latest/thruster/attr.json_request.html: attr thruster::json_request - json_request\n\u27e842\u27e9 https://docs.rs/thruster/latest/thruster/attr.middleware.html: attr thruster::middleware - middleware\n\u27e843\u27e9 https://docs.rs/thruster/latest/thruster/attr.middleware_fn.html: attr thruster::middleware_fn - middleware_fn\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `thruster` crate is a high-performance, composable web framework for Rust designed to handle incoming requests efficiently. It provides key components like `App` for routing and middleware management, `Request` and `Response` for handling HTTP interactions, and reusable futures for asynchronous operations. Thruster supports custom contexts, middleware macros, and testing utilities, making it suitable for building scalable and modular web applications.",
    "feature_summary": null,
    "use_case": "Web Framework",
    "score": 4.0,
    "factual_counterfactual": "### Pair 1: Middleware Functionality  \n\u2705 **Factual:** Thruster provides the `async_middleware` macro, which allows developers to create asynchronous middleware functions for handling requests efficiently.  \n\u274c **Counterfactual:** Thruster requires all middleware functions to be synchronous and does not support asynchronous middleware.  \n\n---\n\n### Pair 2: Application Composition  \n\u2705 **Factual:** Thruster's `App` struct supports the `subapp` method, enabling developers to compose multiple applications and reuse routes and middleware across different parts of their application.  \n\u274c **Counterfactual:** Thruster's `App` struct does not support application composition, requiring developers to define all routes and middleware in a single monolithic structure.  \n\n---\n\n### Pair 3: Request Object Compatibility  \n\u2705 **Factual:** Thruster's default `Request` struct is designed for use with its built-in HTTP server but can be replaced with custom request objects from other servers like Hyper.  \n\u274c **Counterfactual:** Thruster's `Request` struct is mandatory and cannot be replaced with custom request objects from other HTTP servers.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}