{
    "name": "capnp",
    "version": "0.21.1",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/capnp/latest/capnp/all.html \"show sidebar\")\n# Crate capnpCopy item path\n[Settings](https://docs.rs/capnp/latest/settings.html)\n[Help](https://docs.rs/capnp/latest/help.html)\nSummary[Source](https://docs.rs/capnp/latest/src/capnp/lib.rs.html#22-648)\nExpand description\n## [\u00a7](https://docs.rs/capnp/latest/capnp/#capn-proto-runtime-library)Cap\u2019n Proto Runtime Library\nThis crate contains basic facilities for reading and writing [Cap\u2019n Proto](https://capnproto.org) messages in Rust. It is intended to be used in conjunction with code generated by the [capnpc-rust](https://crates.io/crates/capnpc) crate.\n## Modules[\u00a7](https://docs.rs/capnp/latest/capnp/#modules)\n\n[any_pointer](https://docs.rs/capnp/latest/capnp/any_pointer/index.html \"mod capnp::any_pointer\")\n    Untyped pointer that can be cast to any struct, list, or capability type.\n\n[any_pointer_list](https://docs.rs/capnp/latest/capnp/any_pointer_list/index.html \"mod capnp::any_pointer_list\")\n    List of AnyPointers.\n\n[capability](https://docs.rs/capnp/latest/capnp/capability/index.html \"mod capnp::capability\")\n    Hooks for the RPC system.\n\n[capability_list](https://docs.rs/capnp/latest/capnp/capability_list/index.html \"mod capnp::capability_list\")\n    List of capabilities.\n\n[constant](https://docs.rs/capnp/latest/capnp/constant/index.html \"mod capnp::constant\")\n    Helper type for generated Struct and List constants.\n\n[data](https://docs.rs/capnp/latest/capnp/data/index.html \"mod capnp::data\")\n    Sequence of bytes.\n\n[data_list](https://docs.rs/capnp/latest/capnp/data_list/index.html \"mod capnp::data_list\")\n    List of sequences of bytes.\n\n[dynamic_list](https://docs.rs/capnp/latest/capnp/dynamic_list/index.html \"mod capnp::dynamic_list\")\n    Dynamically-typed lists.\n\n[dynamic_struct](https://docs.rs/capnp/latest/capnp/dynamic_struct/index.html \"mod capnp::dynamic_struct\")\n    Dynamically-typed structs.\n\n[dynamic_value](https://docs.rs/capnp/latest/capnp/dynamic_value/index.html \"mod capnp::dynamic_value\")\n    Dynamically typed values.\n\n[enum_list](https://docs.rs/capnp/latest/capnp/enum_list/index.html \"mod capnp::enum_list\")\n    List of enums.\n\n[introspect](https://docs.rs/capnp/latest/capnp/introspect/index.html \"mod capnp::introspect\")\n    Traits and types to support run-time type introspection, i.e. reflection.\n\n[io](https://docs.rs/capnp/latest/capnp/io/index.html \"mod capnp::io\")\n    Custom I/O traits that roughly mirror `std::io::{Read, BufRead, Write}`. This extra layer of indirection enables support of no-std environments.\n\n[list_list](https://docs.rs/capnp/latest/capnp/list_list/index.html \"mod capnp::list_list\")\n    List of lists.\n\n[message](https://docs.rs/capnp/latest/capnp/message/index.html \"mod capnp::message\")\n    Untyped root container for a Cap\u2019n Proto value.\n\n[primitive_list](https://docs.rs/capnp/latest/capnp/primitive_list/index.html \"mod capnp::primitive_list\")\n    List of primitives.\n\n[private](https://docs.rs/capnp/latest/capnp/private/index.html \"mod capnp::private\")\n    Implementation details that should never be directly used by clients.\n\n[raw](https://docs.rs/capnp/latest/capnp/raw/index.html \"mod capnp::raw\")\n    Functions providing low level access to encoded data.\n\n[schema](https://docs.rs/capnp/latest/capnp/schema/index.html \"mod capnp::schema\")\n    Convenience wrappers of the datatypes defined in schema.capnp.\n\n[schema_capnp](https://docs.rs/capnp/latest/capnp/schema_capnp/index.html \"mod capnp::schema_capnp\")\n    Code generated from [schema.capnp](https://github.com/capnproto/capnproto/blob/master/c%2B%2B/src/capnp/schema.capnp).\n\n[serialize](https://docs.rs/capnp/latest/capnp/serialize/index.html \"mod capnp::serialize\")\n    Reading and writing of messages using the [standard stream framing](https://capnproto.org/encoding.html#serialization-over-a-stream).\n\n[serialize_packed](https://docs.rs/capnp/latest/capnp/serialize_packed/index.html \"mod capnp::serialize_packed\")\n    Reading and writing of messages using the [packed stream encoding](https://capnproto.org/encoding.html#packing).\n\n[struct_list](https://docs.rs/capnp/latest/capnp/struct_list/index.html \"mod capnp::struct_list\")\n    List of structs.\n\n[text](https://docs.rs/capnp/latest/capnp/text/index.html \"mod capnp::text\")\n    UTF-8 encoded text.\n\n[text_list](https://docs.rs/capnp/latest/capnp/text_list/index.html \"mod capnp::text_list\")\n    List of strings containing UTF-8 encoded text.\n\n[traits](https://docs.rs/capnp/latest/capnp/traits/index.html \"mod capnp::traits\")\n\n## Structs[\u00a7](https://docs.rs/capnp/latest/capnp/#structs)\n\n[Error](https://docs.rs/capnp/latest/capnp/struct.Error.html \"struct capnp::Error\")\n    Describes an arbitrary error that prevented an operation from completing.\n\n[MessageSize](https://docs.rs/capnp/latest/capnp/struct.MessageSize.html \"struct capnp::MessageSize\")\n    Size of a message. Every generated struct has a method `.total_size()` that returns this.\n\n[NotInSchema](https://docs.rs/capnp/latest/capnp/struct.NotInSchema.html \"struct capnp::NotInSchema\")\n    An enum value or union discriminant that was not found among those defined in a schema.\n\n[Word](https://docs.rs/capnp/latest/capnp/struct.Word.html \"struct capnp::Word\")\n    8 bytes, aligned to an 8-byte boundary.\n## Enums[\u00a7](https://docs.rs/capnp/latest/capnp/#enums)\n\n[ErrorKind](https://docs.rs/capnp/latest/capnp/enum.ErrorKind.html \"enum capnp::ErrorKind\")\n    The general nature of an error. The purpose of this enum is not to describe the error itself, but rather to describe how the client might want to respond to the error.\n\n[OutputSegments](https://docs.rs/capnp/latest/capnp/enum.OutputSegments.html \"enum capnp::OutputSegments\")\n    Helper struct that allows `MessageBuilder::get_segments_for_output()` to avoid heap allocations in the single-segment case.\n## Functions[\u00a7](https://docs.rs/capnp/latest/capnp/#functions)\n\n[word](https://docs.rs/capnp/latest/capnp/fn.word.html \"fn capnp::word\")\n    Constructs a word with the given bytes.\n## Type Aliases[\u00a7](https://docs.rs/capnp/latest/capnp/#types)\n\n[Result](https://docs.rs/capnp/latest/capnp/type.Result.html \"type capnp::Result\")\n    Because messages are lazily validated, the return type of any method that reads a pointer field must be wrapped in a Result.\n",
        "markdown_with_citations": "[](https://docs.rs/capnp/latest/capnp/all.html \"show sidebar\")\n# Crate capnpCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Cap\u2019n Proto Runtime Library\nThis crate contains basic facilities for reading and writing Cap\u2019n Proto\u27e85\u27e9 messages in Rust. It is intended to be used in conjunction with code generated by the capnpc-rust\u27e86\u27e9 crate.\n## Modules\u00a7\u27e87\u27e9\n\nany_pointer\u27e88\u27e9\n    Untyped pointer that can be cast to any struct, list, or capability type.\n\nany_pointer_list\u27e89\u27e9\n    List of AnyPointers.\n\ncapability\u27e810\u27e9\n    Hooks for the RPC system.\n\ncapability_list\u27e811\u27e9\n    List of capabilities.\n\nconstant\u27e812\u27e9\n    Helper type for generated Struct and List constants.\n\ndata\u27e813\u27e9\n    Sequence of bytes.\n\ndata_list\u27e814\u27e9\n    List of sequences of bytes.\n\ndynamic_list\u27e815\u27e9\n    Dynamically-typed lists.\n\ndynamic_struct\u27e816\u27e9\n    Dynamically-typed structs.\n\ndynamic_value\u27e817\u27e9\n    Dynamically typed values.\n\nenum_list\u27e818\u27e9\n    List of enums.\n\nintrospect\u27e819\u27e9\n    Traits and types to support run-time type introspection, i.e. reflection.\n\nio\u27e820\u27e9\n    Custom I/O traits that roughly mirror `std::io::{Read, BufRead, Write}`. This extra layer of indirection enables support of no-std environments.\n\nlist_list\u27e821\u27e9\n    List of lists.\n\nmessage\u27e822\u27e9\n    Untyped root container for a Cap\u2019n Proto value.\n\nprimitive_list\u27e823\u27e9\n    List of primitives.\n\nprivate\u27e824\u27e9\n    Implementation details that should never be directly used by clients.\n\nraw\u27e825\u27e9\n    Functions providing low level access to encoded data.\n\nschema\u27e826\u27e9\n    Convenience wrappers of the datatypes defined in schema.capnp.\n\nschema_capnp\u27e827\u27e9\n    Code generated from schema.capnp\u27e828\u27e9.\n\nserialize\u27e829\u27e9\n    Reading and writing of messages using the standard stream framing\u27e830\u27e9.\n\nserialize_packed\u27e831\u27e9\n    Reading and writing of messages using the packed stream encoding\u27e832\u27e9.\n\nstruct_list\u27e833\u27e9\n    List of structs.\n\ntext\u27e834\u27e9\n    UTF-8 encoded text.\n\ntext_list\u27e835\u27e9\n    List of strings containing UTF-8 encoded text.\n\ntraits\u27e836\u27e9\n\n## Structs\u00a7\u27e837\u27e9\n\nError\u27e838\u27e9\n    Describes an arbitrary error that prevented an operation from completing.\n\nMessageSize\u27e839\u27e9\n    Size of a message. Every generated struct has a method `.total_size()` that returns this.\n\nNotInSchema\u27e840\u27e9\n    An enum value or union discriminant that was not found among those defined in a schema.\n\nWord\u27e841\u27e9\n    8 bytes, aligned to an 8-byte boundary.\n## Enums\u00a7\u27e842\u27e9\n\nErrorKind\u27e843\u27e9\n    The general nature of an error. The purpose of this enum is not to describe the error itself, but rather to describe how the client might want to respond to the error.\n\nOutputSegments\u27e844\u27e9\n    Helper struct that allows `MessageBuilder::get_segments_for_output()` to avoid heap allocations in the single-segment case.\n## Functions\u00a7\u27e845\u27e9\n\nword\u27e846\u27e9\n    Constructs a word with the given bytes.\n## Type Aliases\u00a7\u27e847\u27e9\n\nResult\u27e848\u27e9\n    Because messages are lazily validated, the return type of any method that reads a pointer field must be wrapped in a Result.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/capnp/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/capnp/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/capnp/latest/src/capnp/lib.rs.html#22-648: Source\n\u27e84\u27e9 https://docs.rs/capnp/latest/capnp/#capn-proto-runtime-library: \u00a7\n\u27e85\u27e9 https://capnproto.org: Cap\u2019n Proto\n\u27e86\u27e9 https://crates.io/crates/capnpc: capnpc-rust\n\u27e87\u27e9 https://docs.rs/capnp/latest/capnp/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/capnp/latest/capnp/any_pointer/index.html: mod capnp::any_pointer - any_pointer\n\u27e89\u27e9 https://docs.rs/capnp/latest/capnp/any_pointer_list/index.html: mod capnp::any_pointer_list - any_pointer_list\n\u27e810\u27e9 https://docs.rs/capnp/latest/capnp/capability/index.html: mod capnp::capability - capability\n\u27e811\u27e9 https://docs.rs/capnp/latest/capnp/capability_list/index.html: mod capnp::capability_list - capability_list\n\u27e812\u27e9 https://docs.rs/capnp/latest/capnp/constant/index.html: mod capnp::constant - constant\n\u27e813\u27e9 https://docs.rs/capnp/latest/capnp/data/index.html: mod capnp::data - data\n\u27e814\u27e9 https://docs.rs/capnp/latest/capnp/data_list/index.html: mod capnp::data_list - data_list\n\u27e815\u27e9 https://docs.rs/capnp/latest/capnp/dynamic_list/index.html: mod capnp::dynamic_list - dynamic_list\n\u27e816\u27e9 https://docs.rs/capnp/latest/capnp/dynamic_struct/index.html: mod capnp::dynamic_struct - dynamic_struct\n\u27e817\u27e9 https://docs.rs/capnp/latest/capnp/dynamic_value/index.html: mod capnp::dynamic_value - dynamic_value\n\u27e818\u27e9 https://docs.rs/capnp/latest/capnp/enum_list/index.html: mod capnp::enum_list - enum_list\n\u27e819\u27e9 https://docs.rs/capnp/latest/capnp/introspect/index.html: mod capnp::introspect - introspect\n\u27e820\u27e9 https://docs.rs/capnp/latest/capnp/io/index.html: mod capnp::io - io\n\u27e821\u27e9 https://docs.rs/capnp/latest/capnp/list_list/index.html: mod capnp::list_list - list_list\n\u27e822\u27e9 https://docs.rs/capnp/latest/capnp/message/index.html: mod capnp::message - message\n\u27e823\u27e9 https://docs.rs/capnp/latest/capnp/primitive_list/index.html: mod capnp::primitive_list - primitive_list\n\u27e824\u27e9 https://docs.rs/capnp/latest/capnp/private/index.html: mod capnp::private - private\n\u27e825\u27e9 https://docs.rs/capnp/latest/capnp/raw/index.html: mod capnp::raw - raw\n\u27e826\u27e9 https://docs.rs/capnp/latest/capnp/schema/index.html: mod capnp::schema - schema\n\u27e827\u27e9 https://docs.rs/capnp/latest/capnp/schema_capnp/index.html: mod capnp::schema_capnp - schema_capnp\n\u27e828\u27e9 https://github.com/capnproto/capnproto/blob/master/c%2B%2B/src/capnp/schema.capnp: schema.capnp\n\u27e829\u27e9 https://docs.rs/capnp/latest/capnp/serialize/index.html: mod capnp::serialize - serialize\n\u27e830\u27e9 https://capnproto.org/encoding.html#serialization-over-a-stream: standard stream framing\n\u27e831\u27e9 https://docs.rs/capnp/latest/capnp/serialize_packed/index.html: mod capnp::serialize_packed - serialize_packed\n\u27e832\u27e9 https://capnproto.org/encoding.html#packing: packed stream encoding\n\u27e833\u27e9 https://docs.rs/capnp/latest/capnp/struct_list/index.html: mod capnp::struct_list - struct_list\n\u27e834\u27e9 https://docs.rs/capnp/latest/capnp/text/index.html: mod capnp::text - text\n\u27e835\u27e9 https://docs.rs/capnp/latest/capnp/text_list/index.html: mod capnp::text_list - text_list\n\u27e836\u27e9 https://docs.rs/capnp/latest/capnp/traits/index.html: mod capnp::traits - traits\n\u27e837\u27e9 https://docs.rs/capnp/latest/capnp/#structs: \u00a7\n\u27e838\u27e9 https://docs.rs/capnp/latest/capnp/struct.Error.html: struct capnp::Error - Error\n\u27e839\u27e9 https://docs.rs/capnp/latest/capnp/struct.MessageSize.html: struct capnp::MessageSize - MessageSize\n\u27e840\u27e9 https://docs.rs/capnp/latest/capnp/struct.NotInSchema.html: struct capnp::NotInSchema - NotInSchema\n\u27e841\u27e9 https://docs.rs/capnp/latest/capnp/struct.Word.html: struct capnp::Word - Word\n\u27e842\u27e9 https://docs.rs/capnp/latest/capnp/#enums: \u00a7\n\u27e843\u27e9 https://docs.rs/capnp/latest/capnp/enum.ErrorKind.html: enum capnp::ErrorKind - ErrorKind\n\u27e844\u27e9 https://docs.rs/capnp/latest/capnp/enum.OutputSegments.html: enum capnp::OutputSegments - OutputSegments\n\u27e845\u27e9 https://docs.rs/capnp/latest/capnp/#functions: \u00a7\n\u27e846\u27e9 https://docs.rs/capnp/latest/capnp/fn.word.html: fn capnp::word - word\n\u27e847\u27e9 https://docs.rs/capnp/latest/capnp/#types: \u00a7\n\u27e848\u27e9 https://docs.rs/capnp/latest/capnp/type.Result.html: type capnp::Result - Result\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `capnp` crate provides a runtime library for working with [Cap\u2019n Proto](https://capnproto.org) messages in Rust, enabling efficient serialization and deserialization. It supports reading and writing messages using standard and packed stream encodings, dynamic introspection, and custom I/O traits for `no-std` environments. The crate is designed to work alongside code generated by the `capnpc-rust` crate, offering modules for handling various data types, lists, and RPC capabilities.",
    "feature_summary": null,
    "use_case": "Serialization",
    "score": 7.0,
    "factual_counterfactual": "### Pair 1: Serialization Features  \n\u2705 **Factual:** The `capnp` crate supports reading and writing messages using both standard stream framing and packed stream encoding, as defined by the Cap\u2019n Proto specification.  \n\u274c **Counterfactual:** The `capnp` crate only supports packed stream encoding and does not provide functionality for standard stream framing.  \n\n---\n\n### Pair 2: Runtime Reflection  \n\u2705 **Factual:** The `capnp` crate provides runtime type introspection capabilities through its `introspect` module, enabling reflection on Cap\u2019n Proto schemas.  \n\u274c **Counterfactual:** The `capnp` crate does not support runtime type introspection, requiring all schema-related operations to be handled at compile time.  \n\n---\n\n### Pair 3: No-Std Compatibility  \n\u2705 **Factual:** The `capnp` crate includes custom I/O traits in the `io` module, which allow it to function in `no-std` environments by avoiding direct reliance on `std::io`.  \n\u274c **Counterfactual:** The `capnp` crate requires the standard library and cannot be used in `no-std` environments due to its dependency on `std::io`.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}