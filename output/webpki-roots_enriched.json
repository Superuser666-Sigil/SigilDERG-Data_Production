{
    "name": "webpki-roots",
    "version": "1.0.1",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/webpki-roots/latest/webpki_roots/all.html \"show sidebar\")\n# Crate webpki_rootsCopy item path\n[Settings](https://docs.rs/webpki-roots/latest/settings.html)\n[Help](https://docs.rs/webpki-roots/latest/help.html)\nSummary[Source](https://docs.rs/webpki-roots/latest/src/webpki_roots/lib.rs.html#1-5339)\nExpand description\nA compiled-in copy of the root certificates trusted by Mozilla.\nTo use this library with rustls 0.22:\n```\nlet root_store = rustls::RootCertStore {\n roots: webpki_roots::TLS_SERVER_ROOTS.to_vec(),\n};\n```\n\nThis library is suitable for use in applications that can always be recompiled and instantly deployed. For applications that are deployed to end-users and cannot be recompiled, or which need certification before deployment, consider a library that uses the platform native certificate verifier such as [rustls-platform-verifier](https://docs.rs/rustls-platform-verifier). This has the additional benefit of supporting OS provided CA constraints and revocation data.\n## Constants[\u00a7](https://docs.rs/webpki-roots/latest/webpki_roots/#constants)\n\n[TLS_SERVER_ROOTS](https://docs.rs/webpki-roots/latest/webpki_roots/constant.TLS_SERVER_ROOTS.html \"constant webpki_roots::TLS_SERVER_ROOTS\")\n\n",
        "markdown_with_citations": "[](https://docs.rs/webpki-roots/latest/webpki_roots/all.html \"show sidebar\")\n# Crate webpki_rootsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA compiled-in copy of the root certificates trusted by Mozilla.\nTo use this library with rustls 0.22:\n```\nlet root_store = rustls::RootCertStore {\n roots: webpki_roots::TLS_SERVER_ROOTS.to_vec(),\n};\n```\n\nThis library is suitable for use in applications that can always be recompiled and instantly deployed. For applications that are deployed to end-users and cannot be recompiled, or which need certification before deployment, consider a library that uses the platform native certificate verifier such as rustls-platform-verifier\u27e84\u27e9. This has the additional benefit of supporting OS provided CA constraints and revocation data.\n## Constants\u00a7\u27e85\u27e9\n\nTLS_SERVER_ROOTS\u27e86\u27e9\n\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/webpki-roots/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/webpki-roots/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/webpki-roots/latest/src/webpki_roots/lib.rs.html#1-5339: Source\n\u27e84\u27e9 https://docs.rs/rustls-platform-verifier: rustls-platform-verifier\n\u27e85\u27e9 https://docs.rs/webpki-roots/latest/webpki_roots/#constants: \u00a7\n\u27e86\u27e9 https://docs.rs/webpki-roots/latest/webpki_roots/constant.TLS_SERVER_ROOTS.html: constant webpki_roots::TLS_SERVER_ROOTS - TLS_SERVER_ROOTS\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `webpki-roots` crate provides a compiled-in copy of Mozilla's trusted root certificates, enabling easy integration with `rustls` for TLS server authentication. It is ideal for applications that can be recompiled and deployed instantly, but for end-user applications requiring native certificate verification or OS-provided CA constraints, alternatives like `rustls-platform-verifier` are recommended. The crate exposes the `TLS_SERVER_ROOTS` constant for straightforward usage.",
    "feature_summary": null,
    "use_case": "Cryptography",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Root Certificates Integration\n\u2705 Factual: The `webpki-roots` crate provides a compiled-in copy of the root certificates trusted by Mozilla, making it suitable for applications that can be recompiled and instantly deployed.  \n\u274c Counterfactual: The `webpki-roots` crate dynamically fetches root certificates from Mozilla's servers at runtime to ensure they are always up-to-date.  \n\n---\n\n### Pair 2: Compatibility with rustls\n\u2705 Factual: The `webpki-roots` crate is compatible with `rustls` version 0.22 and can be used to initialize a `rustls::RootCertStore` using the `TLS_SERVER_ROOTS` constant.  \n\u274c Counterfactual: The `webpki-roots` crate is incompatible with `rustls` and requires a separate certificate parsing library to work with TLS connections.  \n\n---\n\n### Pair 3: Platform Native Certificate Verification\n\u2705 Factual: For applications requiring certification before deployment or platform-native certificate verification, it is recommended to use a library like `rustls-platform-verifier` instead of `webpki-roots`.  \n\u274c Counterfactual: The `webpki-roots` crate natively supports platform-specific certificate verification, including OS-provided CA constraints and revocation data.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}