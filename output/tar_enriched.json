{
    "name": "tar",
    "version": "0.4.44",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/tar/latest/tar/all.html \"show sidebar\")\n# Crate tarCopy item path\n[Settings](https://docs.rs/tar/latest/settings.html)\n[Help](https://docs.rs/tar/latest/help.html)\nSummary[Source](https://docs.rs/tar/latest/src/tar/lib.rs.html#1-44)\nExpand description\nA library for reading and writing TAR archives\nThis library provides utilities necessary to manage [TAR archives](http://en.wikipedia.org/wiki/Tar_%28computing%29) abstracted over a reader or writer. Great strides are taken to ensure that an archive is never required to be fully resident in memory, and all objects provide largely a streaming interface to read bytes from.\n## Structs[\u00a7](https://docs.rs/tar/latest/tar/#structs)\n\n[Archive](https://docs.rs/tar/latest/tar/struct.Archive.html \"struct tar::Archive\")\n    A top-level representation of an archive file.\n\n[Builder](https://docs.rs/tar/latest/tar/struct.Builder.html \"struct tar::Builder\")\n    A structure for building archives\n\n[Entries](https://docs.rs/tar/latest/tar/struct.Entries.html \"struct tar::Entries\")\n    An iterator over the entries of an archive.\n\n[Entry](https://docs.rs/tar/latest/tar/struct.Entry.html \"struct tar::Entry\")\n    A read-only view into an entry of an archive.\n\n[EntryWriter](https://docs.rs/tar/latest/tar/struct.EntryWriter.html \"struct tar::EntryWriter\")\n    A writer for a single entry in a tar archive.\n\n[GnuExtSparseHeader](https://docs.rs/tar/latest/tar/struct.GnuExtSparseHeader.html \"struct tar::GnuExtSparseHeader\")\n    Representation of the entry found to represent extended GNU sparse files.\n\n[GnuHeader](https://docs.rs/tar/latest/tar/struct.GnuHeader.html \"struct tar::GnuHeader\")\n    Representation of the header of an entry in an archive\n\n[GnuSparseHeader](https://docs.rs/tar/latest/tar/struct.GnuSparseHeader.html \"struct tar::GnuSparseHeader\")\n    Description of the header of a spare entry.\n\n[Header](https://docs.rs/tar/latest/tar/struct.Header.html \"struct tar::Header\")\n    Representation of the header of an entry in an archive\n\n[OldHeader](https://docs.rs/tar/latest/tar/struct.OldHeader.html \"struct tar::OldHeader\")\n    Representation of the header of an entry in an archive\n\n[PaxExtension](https://docs.rs/tar/latest/tar/struct.PaxExtension.html \"struct tar::PaxExtension\")\n    A key/value pair corresponding to a pax extension.\n\n[PaxExtensions](https://docs.rs/tar/latest/tar/struct.PaxExtensions.html \"struct tar::PaxExtensions\")\n    An iterator over the pax extensions in an archive entry.\n\n[UstarHeader](https://docs.rs/tar/latest/tar/struct.UstarHeader.html \"struct tar::UstarHeader\")\n    Representation of the header of an entry in an archive\n## Enums[\u00a7](https://docs.rs/tar/latest/tar/#enums)\n\n[EntryType](https://docs.rs/tar/latest/tar/enum.EntryType.html \"enum tar::EntryType\")\n    Indicate for the type of file described by a header.\n\n[HeaderMode](https://docs.rs/tar/latest/tar/enum.HeaderMode.html \"enum tar::HeaderMode\")\n    Declares the information that should be included when filling a Header from filesystem metadata.\n\n[Unpacked](https://docs.rs/tar/latest/tar/enum.Unpacked.html \"enum tar::Unpacked\")\n    When unpacking items the unpacked thing is returned to allow custom additional handling by users. Today the File is returned, in future the enum may be extended with kinds for links, directories etc.\n",
        "markdown_with_citations": "[](https://docs.rs/tar/latest/tar/all.html \"show sidebar\")\n# Crate tarCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA library for reading and writing TAR archives\nThis library provides utilities necessary to manage TAR archives\u27e84\u27e9 abstracted over a reader or writer. Great strides are taken to ensure that an archive is never required to be fully resident in memory, and all objects provide largely a streaming interface to read bytes from.\n## Structs\u00a7\u27e85\u27e9\n\nArchive\u27e86\u27e9\n    A top-level representation of an archive file.\n\nBuilder\u27e87\u27e9\n    A structure for building archives\n\nEntries\u27e88\u27e9\n    An iterator over the entries of an archive.\n\nEntry\u27e89\u27e9\n    A read-only view into an entry of an archive.\n\nEntryWriter\u27e810\u27e9\n    A writer for a single entry in a tar archive.\n\nGnuExtSparseHeader\u27e811\u27e9\n    Representation of the entry found to represent extended GNU sparse files.\n\nGnuHeader\u27e812\u27e9\n    Representation of the header of an entry in an archive\n\nGnuSparseHeader\u27e813\u27e9\n    Description of the header of a spare entry.\n\nHeader\u27e814\u27e9\n    Representation of the header of an entry in an archive\n\nOldHeader\u27e815\u27e9\n    Representation of the header of an entry in an archive\n\nPaxExtension\u27e816\u27e9\n    A key/value pair corresponding to a pax extension.\n\nPaxExtensions\u27e817\u27e9\n    An iterator over the pax extensions in an archive entry.\n\nUstarHeader\u27e818\u27e9\n    Representation of the header of an entry in an archive\n## Enums\u00a7\u27e819\u27e9\n\nEntryType\u27e820\u27e9\n    Indicate for the type of file described by a header.\n\nHeaderMode\u27e821\u27e9\n    Declares the information that should be included when filling a Header from filesystem metadata.\n\nUnpacked\u27e822\u27e9\n    When unpacking items the unpacked thing is returned to allow custom additional handling by users. Today the File is returned, in future the enum may be extended with kinds for links, directories etc.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/tar/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/tar/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/tar/latest/src/tar/lib.rs.html#1-44: Source\n\u27e84\u27e9 http://en.wikipedia.org/wiki/Tar_%28computing%29: TAR archives\n\u27e85\u27e9 https://docs.rs/tar/latest/tar/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/tar/latest/tar/struct.Archive.html: struct tar::Archive - Archive\n\u27e87\u27e9 https://docs.rs/tar/latest/tar/struct.Builder.html: struct tar::Builder - Builder\n\u27e88\u27e9 https://docs.rs/tar/latest/tar/struct.Entries.html: struct tar::Entries - Entries\n\u27e89\u27e9 https://docs.rs/tar/latest/tar/struct.Entry.html: struct tar::Entry - Entry\n\u27e810\u27e9 https://docs.rs/tar/latest/tar/struct.EntryWriter.html: struct tar::EntryWriter - EntryWriter\n\u27e811\u27e9 https://docs.rs/tar/latest/tar/struct.GnuExtSparseHeader.html: struct tar::GnuExtSparseHeader - GnuExtSparseHeader\n\u27e812\u27e9 https://docs.rs/tar/latest/tar/struct.GnuHeader.html: struct tar::GnuHeader - GnuHeader\n\u27e813\u27e9 https://docs.rs/tar/latest/tar/struct.GnuSparseHeader.html: struct tar::GnuSparseHeader - GnuSparseHeader\n\u27e814\u27e9 https://docs.rs/tar/latest/tar/struct.Header.html: struct tar::Header - Header\n\u27e815\u27e9 https://docs.rs/tar/latest/tar/struct.OldHeader.html: struct tar::OldHeader - OldHeader\n\u27e816\u27e9 https://docs.rs/tar/latest/tar/struct.PaxExtension.html: struct tar::PaxExtension - PaxExtension\n\u27e817\u27e9 https://docs.rs/tar/latest/tar/struct.PaxExtensions.html: struct tar::PaxExtensions - PaxExtensions\n\u27e818\u27e9 https://docs.rs/tar/latest/tar/struct.UstarHeader.html: struct tar::UstarHeader - UstarHeader\n\u27e819\u27e9 https://docs.rs/tar/latest/tar/#enums: \u00a7\n\u27e820\u27e9 https://docs.rs/tar/latest/tar/enum.EntryType.html: enum tar::EntryType - EntryType\n\u27e821\u27e9 https://docs.rs/tar/latest/tar/enum.HeaderMode.html: enum tar::HeaderMode - HeaderMode\n\u27e822\u27e9 https://docs.rs/tar/latest/tar/enum.Unpacked.html: enum tar::Unpacked - Unpacked\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `tar` crate provides utilities for reading and writing TAR archives using a streaming interface, ensuring archives don't need to be fully loaded into memory. It includes structures like `Archive` for managing archive files, `Builder` for creating archives, and `Entries` for iterating over archive contents. Additionally, it supports various header formats (e.g., GNU, Ustar, Pax) and file metadata handling via enums like `EntryType` and `HeaderMode`.",
    "feature_summary": null,
    "use_case": "Serialization",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Streaming Interface\n\u2705 **Factual:** The `tar` crate provides a streaming interface for reading and writing TAR archives, ensuring that an archive does not need to be fully loaded into memory.  \n\u274c **Counterfactual:** The `tar` crate requires the entire archive to be loaded into memory before it can be read or written.  \n\n---\n\n### Pair 2: Archive Struct\n\u2705 **Factual:** The `Archive` struct in the `tar` crate serves as the top-level representation of a TAR archive, allowing users to iterate over entries or extract them.  \n\u274c **Counterfactual:** The `Archive` struct in the `tar` crate is used exclusively for creating new TAR archives and cannot be used to read existing ones.  \n\n---\n\n### Pair 3: Header Representation\n\u2705 **Factual:** The `tar` crate supports multiple header formats, including `GnuHeader`, `UstarHeader`, and `OldHeader`, to accommodate different TAR archive standards.  \n\u274c **Counterfactual:** The `tar` crate only supports the `UstarHeader` format and cannot handle GNU or older TAR archive headers.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}