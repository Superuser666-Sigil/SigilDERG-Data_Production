{
    "name": "three-d",
    "version": "0.18.2",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\n[Settings](https://docs.rs/three-d/latest/settings.html)\n[Help](https://docs.rs/three-d/latest/help.html)\nSummary[Source](https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25)\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the [README](https://crates.io/crates/three-d) for more information and the [examples](https://github.com/asny/three-d/tree/master/examples) for how to use it.\n## Re-exports[\u00a7](https://docs.rs/three-d/latest/three_d/#reexports)\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules[\u00a7](https://docs.rs/three-d/latest/three_d/#modules)\n\n[context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\")\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the [glow](https://crates.io/crates/glow) crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\n[core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\")\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module as well as high-level functionality in the [renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\") module.\n\n[renderer](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the [core](https://docs.rs/three-d/latest/three_d/core/index.html \"mod three_d::core\") module as well as functionality in the [context](https://docs.rs/three-d/latest/three_d/context/index.html \"mod three_d::context\") module.\n\n[window](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")\n    Window, event handling and context creation for easy setup.\n## Structs[\u00a7](https://docs.rs/three-d/latest/three_d/#structs)\n\n[GUI](https://docs.rs/three-d/latest/three_d/struct.GUI.html \"struct three_d::GUI\")`egui-gui`\n    Integration of [egui](https://crates.io/crates/egui), an immediate mode GUI.\n",
        "markdown_with_citations": "[](https://docs.rs/three-d/latest/three_d/all.html \"show sidebar\")\n# Crate three_dCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA 3D renderer which enables out-of-the-box build to both desktop and web with the same code. See the README\u27e84\u27e9 for more information and the examples\u27e85\u27e9 for how to use it.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer[](https://docs.rs/three-d/latest/three_d/renderer/index.html \"mod three_d::renderer\")::*;`\n\n\n`pub use window[](https://docs.rs/three-d/latest/three_d/window/index.html \"mod three_d::window\")::*;`\n\n## Modules\u00a7\u27e87\u27e9\n\ncontext\u27e88\u27e9\n    Low-level graphics abstraction layer which maps one-to-one with the OpenGL graphics API on native and WebGL2 graphics API on web. This is just a re-export of the glow\u27e89\u27e9 crate. Use this if you want to have complete control of a feature but be aware that there are no safety checks.\n\ncore\u27e810\u27e9\n    Mid-level modular abstractions of common graphics concepts such as buffer, texture, program, render target and so on. Can be combined with low-level calls in the context\u27e88\u27e9 module as well as high-level functionality in the renderer\u27e811\u27e9 module.\n\nrenderer\u27e811\u27e9\n    High-level features for easy rendering of different types of objects with different types of shading. Can be combined seamlessly with the mid-level features in the core\u27e810\u27e9 module as well as functionality in the context\u27e88\u27e9 module.\n\nwindow\u27e812\u27e9\n    Window, event handling and context creation for easy setup.\n## Structs\u00a7\u27e813\u27e9\n\nGUI\u27e814\u27e9`egui-gui`\n    Integration of egui\u27e815\u27e9, an immediate mode GUI.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/three-d/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/three-d/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/three-d/latest/src/three_d/lib.rs.html#1-25: Source\n\u27e84\u27e9 https://crates.io/crates/three-d: README\n\u27e85\u27e9 https://github.com/asny/three-d/tree/master/examples: examples\n\u27e86\u27e9 https://docs.rs/three-d/latest/three_d/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/three-d/latest/three_d/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/three-d/latest/three_d/context/index.html: mod three_d::context - context\n\u27e89\u27e9 https://crates.io/crates/glow: glow\n\u27e810\u27e9 https://docs.rs/three-d/latest/three_d/core/index.html: mod three_d::core - core\n\u27e811\u27e9 https://docs.rs/three-d/latest/three_d/renderer/index.html: mod three_d::renderer - renderer\n\u27e812\u27e9 https://docs.rs/three-d/latest/three_d/window/index.html: mod three_d::window - window\n\u27e813\u27e9 https://docs.rs/three-d/latest/three_d/#structs: \u00a7\n\u27e814\u27e9 https://docs.rs/three-d/latest/three_d/struct.GUI.html: struct three_d::GUI - GUI\n\u27e815\u27e9 https://crates.io/crates/egui: egui\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `three-d` crate is a versatile 3D renderer that supports building applications for both desktop and web platforms using the same code. It offers a layered architecture with low-level OpenGL/WebGL2 abstractions (`context`), mid-level modular graphics components (`core`), high-level rendering features (`renderer`), and easy window/context setup (`window`). Additionally, it integrates with `egui` for immediate mode GUI support.",
    "feature_summary": null,
    "use_case": "Unknown",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Rendering Capabilities  \n\u2705 Factual: The `three-d` crate provides high-level features for rendering different types of objects with various shading techniques, and these features can be seamlessly combined with mid-level abstractions from the `core` module.  \n\u274c Counterfactual: The `three-d` crate only supports rendering objects using flat shading and does not support combining high-level rendering features with mid-level abstractions.  \n\n---\n\n### Pair 2: Cross-Platform Compatibility  \n\u2705 Factual: The `three-d` crate enables out-of-the-box builds for both desktop and web platforms using the same codebase, leveraging OpenGL for native and WebGL2 for web.  \n\u274c Counterfactual: The `three-d` crate requires separate codebases for desktop and web builds, as it does not support unified cross-platform rendering.  \n\n---\n\n### Pair 3: GUI Integration  \n\u2705 Factual: The `three-d` crate integrates with the `egui` crate to provide immediate mode GUI functionality, allowing developers to create graphical user interfaces alongside 3D rendering.  \n\u274c Counterfactual: The `three-d` crate does not support GUI integration and requires developers to use external libraries for GUI functionality.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}