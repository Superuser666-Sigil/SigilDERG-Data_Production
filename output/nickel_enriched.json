{
    "name": "nickel",
    "version": "0.11.0",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/nickel/latest/nickel/all.html \"show sidebar\")\n# Crate nickelCopy item path\n[Settings](https://docs.rs/nickel/latest/settings.html)\n[Help](https://docs.rs/nickel/latest/help.html)\nSummary[Source](https://docs.rs/nickel/latest/src/nickel/lib.rs.html#1-59)\n## Re-exports[\u00a7](https://docs.rs/nickel/latest/nickel/#reexports)\n\n`pub extern crate hyper[](https://docs.rs/hyper/0.10.16/x86_64-unknown-linux-gnu/hyper/index.html \"mod hyper\");`\n\n\n`pub use middleware::Continue[](https://docs.rs/nickel/latest/nickel/enum.Action.html \"enum nickel::Action\");`\n\n\n`pub use middleware::Halt[](https://docs.rs/nickel/latest/nickel/enum.Action.html \"enum nickel::Action\");`\n\n\n`pub use router::Router[](https://docs.rs/nickel/latest/nickel/router/router/struct.Router.html \"struct nickel::router::router::Router\");`\n\n\n`pub use router::Route[](https://docs.rs/nickel/latest/nickel/router/router/struct.Route.html \"struct nickel::router::router::Route\");`\n\n\n`pub use router::RouteResult[](https://docs.rs/nickel/latest/nickel/router/router/struct.RouteResult.html \"struct nickel::router::router::RouteResult\");`\n\n\n`pub use router::HttpRouter[](https://docs.rs/nickel/latest/nickel/router/http_router/trait.HttpRouter.html \"trait nickel::router::http_router::HttpRouter\");`\n\n\n`pub use mimes::MediaType[](https://docs.rs/nickel/latest/nickel/mimes/enum.MediaType.html \"enum nickel::mimes::MediaType\");`\n\n\n`pub use template_cache::ReloadPolicy[](https://docs.rs/nickel/latest/nickel/template_cache/enum.ReloadPolicy.html \"enum nickel::template_cache::ReloadPolicy\");`\n\n\n`pub use template_cache::TemplateCache[](https://docs.rs/nickel/latest/nickel/template_cache/struct.TemplateCache.html \"struct nickel::template_cache::TemplateCache\");`\n\n## Modules[\u00a7](https://docs.rs/nickel/latest/nickel/#modules)\n\n[extensions](https://docs.rs/nickel/latest/nickel/extensions/index.html \"mod nickel::extensions\")\n\n\n[macros](https://docs.rs/nickel/latest/nickel/macros/index.html \"mod nickel::macros\")\n\n\n[mimes](https://docs.rs/nickel/latest/nickel/mimes/index.html \"mod nickel::mimes\")\n\n\n[router](https://docs.rs/nickel/latest/nickel/router/index.html \"mod nickel::router\")\n    A `Router` assigns `Middleware` to paths and resolves them per request\n\n[status](https://docs.rs/nickel/latest/nickel/status/index.html \"mod nickel::status\")\n\n\n[template_cache](https://docs.rs/nickel/latest/nickel/template_cache/index.html \"mod nickel::template_cache\")\n\n## Macros[\u00a7](https://docs.rs/nickel/latest/nickel/#macros)\n\n[middleware](https://docs.rs/nickel/latest/nickel/macro.middleware.html \"macro nickel::middleware\")\n    Macro to reduce the boilerplate required for using unboxed closures as `Middleware` due to current type inference behaviour.\n\n[router](https://docs.rs/nickel/latest/nickel/macro.router.html \"macro nickel::router\")\n\n\n[try_with](https://docs.rs/nickel/latest/nickel/macro.try_with.html \"macro nickel::try_with\")\n\n## Structs[\u00a7](https://docs.rs/nickel/latest/nickel/#structs)\n\n[DefaultErrorHandler](https://docs.rs/nickel/latest/nickel/struct.DefaultErrorHandler.html \"struct nickel::DefaultErrorHandler\")\n\n\n[FaviconHandler](https://docs.rs/nickel/latest/nickel/struct.FaviconHandler.html \"struct nickel::FaviconHandler\")\n\n\n[ListeningServer](https://docs.rs/nickel/latest/nickel/struct.ListeningServer.html \"struct nickel::ListeningServer\")\n    A server listeing on a socket\n\n[Mount](https://docs.rs/nickel/latest/nickel/struct.Mount.html \"struct nickel::Mount\")\n\n\n[Nickel](https://docs.rs/nickel/latest/nickel/struct.Nickel.html \"struct nickel::Nickel\")\n    Nickel is the application object. It\u2019s the surface that holds all public APIs.\n\n[NickelError](https://docs.rs/nickel/latest/nickel/struct.NickelError.html \"struct nickel::NickelError\")\n    NickelError is the basic error type for HTTP errors as well as user defined errors. One can pattern match against the `kind` property to handle the different cases.\n\n[Options](https://docs.rs/nickel/latest/nickel/struct.Options.html \"struct nickel::Options\")\n    Configuration options for the server.\n\n[Params](https://docs.rs/nickel/latest/nickel/struct.Params.html \"struct nickel::Params\")\n\n\n[Request](https://docs.rs/nickel/latest/nickel/struct.Request.html \"struct nickel::Request\")\n    A container for all the request data.\n\n[Response](https://docs.rs/nickel/latest/nickel/struct.Response.html \"struct nickel::Response\")\n    A container for the response\n\n[StaticFilesHandler](https://docs.rs/nickel/latest/nickel/struct.StaticFilesHandler.html \"struct nickel::StaticFilesHandler\")\n\n## Enums[\u00a7](https://docs.rs/nickel/latest/nickel/#enums)\n\n[Action](https://docs.rs/nickel/latest/nickel/enum.Action.html \"enum nickel::Action\")\n\n\n[BodyError](https://docs.rs/nickel/latest/nickel/enum.BodyError.html \"enum nickel::BodyError\")\n\n## Traits[\u00a7](https://docs.rs/nickel/latest/nickel/#traits)\n\n[ErrorHandler](https://docs.rs/nickel/latest/nickel/trait.ErrorHandler.html \"trait nickel::ErrorHandler\")\n\n\n[FormBody](https://docs.rs/nickel/latest/nickel/trait.FormBody.html \"trait nickel::FormBody\")\n\n\n[JsonBody](https://docs.rs/nickel/latest/nickel/trait.JsonBody.html \"trait nickel::JsonBody\")\n\n\n[Middleware](https://docs.rs/nickel/latest/nickel/trait.Middleware.html \"trait nickel::Middleware\")\n\n\n[Mountable](https://docs.rs/nickel/latest/nickel/trait.Mountable.html \"trait nickel::Mountable\")\n\n\n[QueryString](https://docs.rs/nickel/latest/nickel/trait.QueryString.html \"trait nickel::QueryString\")\n\n\n[Responder](https://docs.rs/nickel/latest/nickel/trait.Responder.html \"trait nickel::Responder\")\n    This trait provides convenience for translating a number of common return types into a `MiddlewareResult` while also modifying the `Response` as required.\n## Type Aliases[\u00a7](https://docs.rs/nickel/latest/nickel/#types)\n\n[MiddlewareResult](https://docs.rs/nickel/latest/nickel/type.MiddlewareResult.html \"type nickel::MiddlewareResult\")\n\n\n[Query](https://docs.rs/nickel/latest/nickel/type.Query.html \"type nickel::Query\")\n\n",
        "markdown_with_citations": "[](https://docs.rs/nickel/latest/nickel/all.html \"show sidebar\")\n# Crate nickelCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub extern crate hyper[](https://docs.rs/hyper/0.10.16/x86_64-unknown-linux-gnu/hyper/index.html \"mod hyper\");`\n\n\n`pub use middleware::Continue[](https://docs.rs/nickel/latest/nickel/enum.Action.html \"enum nickel::Action\");`\n\n\n`pub use middleware::Halt[](https://docs.rs/nickel/latest/nickel/enum.Action.html \"enum nickel::Action\");`\n\n\n`pub use router::Router[](https://docs.rs/nickel/latest/nickel/router/router/struct.Router.html \"struct nickel::router::router::Router\");`\n\n\n`pub use router::Route[](https://docs.rs/nickel/latest/nickel/router/router/struct.Route.html \"struct nickel::router::router::Route\");`\n\n\n`pub use router::RouteResult[](https://docs.rs/nickel/latest/nickel/router/router/struct.RouteResult.html \"struct nickel::router::router::RouteResult\");`\n\n\n`pub use router::HttpRouter[](https://docs.rs/nickel/latest/nickel/router/http_router/trait.HttpRouter.html \"trait nickel::router::http_router::HttpRouter\");`\n\n\n`pub use mimes::MediaType[](https://docs.rs/nickel/latest/nickel/mimes/enum.MediaType.html \"enum nickel::mimes::MediaType\");`\n\n\n`pub use template_cache::ReloadPolicy[](https://docs.rs/nickel/latest/nickel/template_cache/enum.ReloadPolicy.html \"enum nickel::template_cache::ReloadPolicy\");`\n\n\n`pub use template_cache::TemplateCache[](https://docs.rs/nickel/latest/nickel/template_cache/struct.TemplateCache.html \"struct nickel::template_cache::TemplateCache\");`\n\n## Modules\u00a7\u27e85\u27e9\n\nextensions\u27e86\u27e9\n\n\nmacros\u27e87\u27e9\n\n\nmimes\u27e88\u27e9\n\n\nrouter\u27e89\u27e9\n    A `Router` assigns `Middleware` to paths and resolves them per request\n\nstatus\u27e810\u27e9\n\n\ntemplate_cache\u27e811\u27e9\n\n## Macros\u00a7\u27e812\u27e9\n\nmiddleware\u27e813\u27e9\n    Macro to reduce the boilerplate required for using unboxed closures as `Middleware` due to current type inference behaviour.\n\nrouter\u27e814\u27e9\n\n\ntry_with\u27e815\u27e9\n\n## Structs\u00a7\u27e816\u27e9\n\nDefaultErrorHandler\u27e817\u27e9\n\n\nFaviconHandler\u27e818\u27e9\n\n\nListeningServer\u27e819\u27e9\n    A server listeing on a socket\n\nMount\u27e820\u27e9\n\n\nNickel\u27e821\u27e9\n    Nickel is the application object. It\u2019s the surface that holds all public APIs.\n\nNickelError\u27e822\u27e9\n    NickelError is the basic error type for HTTP errors as well as user defined errors. One can pattern match against the `kind` property to handle the different cases.\n\nOptions\u27e823\u27e9\n    Configuration options for the server.\n\nParams\u27e824\u27e9\n\n\nRequest\u27e825\u27e9\n    A container for all the request data.\n\nResponse\u27e826\u27e9\n    A container for the response\n\nStaticFilesHandler\u27e827\u27e9\n\n## Enums\u00a7\u27e828\u27e9\n\nAction\u27e829\u27e9\n\n\nBodyError\u27e830\u27e9\n\n## Traits\u00a7\u27e831\u27e9\n\nErrorHandler\u27e832\u27e9\n\n\nFormBody\u27e833\u27e9\n\n\nJsonBody\u27e834\u27e9\n\n\nMiddleware\u27e835\u27e9\n\n\nMountable\u27e836\u27e9\n\n\nQueryString\u27e837\u27e9\n\n\nResponder\u27e838\u27e9\n    This trait provides convenience for translating a number of common return types into a `MiddlewareResult` while also modifying the `Response` as required.\n## Type Aliases\u00a7\u27e839\u27e9\n\nMiddlewareResult\u27e840\u27e9\n\n\nQuery\u27e841\u27e9\n\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/nickel/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/nickel/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/nickel/latest/src/nickel/lib.rs.html#1-59: Source\n\u27e84\u27e9 https://docs.rs/nickel/latest/nickel/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/nickel/latest/nickel/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/nickel/latest/nickel/extensions/index.html: mod nickel::extensions - extensions\n\u27e87\u27e9 https://docs.rs/nickel/latest/nickel/macros/index.html: mod nickel::macros - macros\n\u27e88\u27e9 https://docs.rs/nickel/latest/nickel/mimes/index.html: mod nickel::mimes - mimes\n\u27e89\u27e9 https://docs.rs/nickel/latest/nickel/router/index.html: mod nickel::router - router\n\u27e810\u27e9 https://docs.rs/nickel/latest/nickel/status/index.html: mod nickel::status - status\n\u27e811\u27e9 https://docs.rs/nickel/latest/nickel/template_cache/index.html: mod nickel::template_cache - template_cache\n\u27e812\u27e9 https://docs.rs/nickel/latest/nickel/#macros: \u00a7\n\u27e813\u27e9 https://docs.rs/nickel/latest/nickel/macro.middleware.html: macro nickel::middleware - middleware\n\u27e814\u27e9 https://docs.rs/nickel/latest/nickel/macro.router.html: macro nickel::router - router\n\u27e815\u27e9 https://docs.rs/nickel/latest/nickel/macro.try_with.html: macro nickel::try_with - try_with\n\u27e816\u27e9 https://docs.rs/nickel/latest/nickel/#structs: \u00a7\n\u27e817\u27e9 https://docs.rs/nickel/latest/nickel/struct.DefaultErrorHandler.html: struct nickel::DefaultErrorHandler - DefaultErrorHandler\n\u27e818\u27e9 https://docs.rs/nickel/latest/nickel/struct.FaviconHandler.html: struct nickel::FaviconHandler - FaviconHandler\n\u27e819\u27e9 https://docs.rs/nickel/latest/nickel/struct.ListeningServer.html: struct nickel::ListeningServer - ListeningServer\n\u27e820\u27e9 https://docs.rs/nickel/latest/nickel/struct.Mount.html: struct nickel::Mount - Mount\n\u27e821\u27e9 https://docs.rs/nickel/latest/nickel/struct.Nickel.html: struct nickel::Nickel - Nickel\n\u27e822\u27e9 https://docs.rs/nickel/latest/nickel/struct.NickelError.html: struct nickel::NickelError - NickelError\n\u27e823\u27e9 https://docs.rs/nickel/latest/nickel/struct.Options.html: struct nickel::Options - Options\n\u27e824\u27e9 https://docs.rs/nickel/latest/nickel/struct.Params.html: struct nickel::Params - Params\n\u27e825\u27e9 https://docs.rs/nickel/latest/nickel/struct.Request.html: struct nickel::Request - Request\n\u27e826\u27e9 https://docs.rs/nickel/latest/nickel/struct.Response.html: struct nickel::Response - Response\n\u27e827\u27e9 https://docs.rs/nickel/latest/nickel/struct.StaticFilesHandler.html: struct nickel::StaticFilesHandler - StaticFilesHandler\n\u27e828\u27e9 https://docs.rs/nickel/latest/nickel/#enums: \u00a7\n\u27e829\u27e9 https://docs.rs/nickel/latest/nickel/enum.Action.html: enum nickel::Action - Action\n\u27e830\u27e9 https://docs.rs/nickel/latest/nickel/enum.BodyError.html: enum nickel::BodyError - BodyError\n\u27e831\u27e9 https://docs.rs/nickel/latest/nickel/#traits: \u00a7\n\u27e832\u27e9 https://docs.rs/nickel/latest/nickel/trait.ErrorHandler.html: trait nickel::ErrorHandler - ErrorHandler\n\u27e833\u27e9 https://docs.rs/nickel/latest/nickel/trait.FormBody.html: trait nickel::FormBody - FormBody\n\u27e834\u27e9 https://docs.rs/nickel/latest/nickel/trait.JsonBody.html: trait nickel::JsonBody - JsonBody\n\u27e835\u27e9 https://docs.rs/nickel/latest/nickel/trait.Middleware.html: trait nickel::Middleware - Middleware\n\u27e836\u27e9 https://docs.rs/nickel/latest/nickel/trait.Mountable.html: trait nickel::Mountable - Mountable\n\u27e837\u27e9 https://docs.rs/nickel/latest/nickel/trait.QueryString.html: trait nickel::QueryString - QueryString\n\u27e838\u27e9 https://docs.rs/nickel/latest/nickel/trait.Responder.html: trait nickel::Responder - Responder\n\u27e839\u27e9 https://docs.rs/nickel/latest/nickel/#types: \u00a7\n\u27e840\u27e9 https://docs.rs/nickel/latest/nickel/type.MiddlewareResult.html: type nickel::MiddlewareResult - MiddlewareResult\n\u27e841\u27e9 https://docs.rs/nickel/latest/nickel/type.Query.html: type nickel::Query - Query\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `nickel` crate is a lightweight and extensible web framework for Rust, designed to simplify building HTTP servers. It features routing with middleware support, JSON and form body parsing, static file handling, and template caching. Additionally, it provides macros to reduce boilerplate and traits for error handling, query string parsing, and response customization.",
    "feature_summary": null,
    "use_case": "Web Framework",
    "score": 2.0,
    "factual_counterfactual": "### Pair 1: Routing Capabilities\n\u2705 Factual: The `nickel` crate provides a `Router` struct that allows assigning middleware to specific paths and resolving them per request.  \n\u274c Counterfactual: The `nickel` crate does not support routing and requires external crates like `hyper` to handle path resolution.  \n\n---\n\n### Pair 2: Middleware Integration\n\u2705 Factual: The `nickel` crate includes a `middleware` macro that reduces boilerplate when using unboxed closures as middleware due to current type inference limitations.  \n\u274c Counterfactual: The `nickel` crate requires developers to write extensive boilerplate code for middleware integration and does not provide macro support.  \n\n---\n\n### Pair 3: Error Handling\n\u2705 Factual: The `NickelError` struct in the `nickel` crate allows pattern matching against the `kind` property to handle different HTTP and user-defined error cases.  \n\u274c Counterfactual: The `nickel` crate does not have a dedicated error-handling mechanism and requires manual implementation of error handling for HTTP requests.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}