{
    "name": "femtovg",
    "version": "0.14.1",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\n[Settings](https://docs.rs/femtovg/latest/settings.html)\n[Help](https://docs.rs/femtovg/latest/help.html)\nSummary[Source](https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637)\nExpand description\nThe femtovg API is (like [NanoVG](https://github.com/memononen/nanovg)) loosely modeled on the [HTML5 Canvas API](https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html).\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports[\u00a7](https://docs.rs/femtovg/latest/femtovg/#reexports)\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules[\u00a7](https://docs.rs/femtovg/latest/femtovg/#modules)\n\n[renderer](https://docs.rs/femtovg/latest/femtovg/renderer/index.html \"mod femtovg::renderer\")\n    Module containing renderer implementations.\n## Structs[\u00a7](https://docs.rs/femtovg/latest/femtovg/#structs)\n\n[Atlas](https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html \"struct femtovg::Atlas\")\n    Represents an atlas for packing rectangles.\n\n[Canvas](https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html \"struct femtovg::Canvas\")\n    Main 2D drawing context.\n\n[Color](https://docs.rs/femtovg/latest/femtovg/struct.Color.html \"struct femtovg::Color\")\n    Struct representing a color with red, green, blue, and alpha components.\n\n[CompositeOperationState](https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html \"struct femtovg::CompositeOperationState\")\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\n[DrawCommand](https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html \"struct femtovg::DrawCommand\")\n    Represents a command to draw an image with a set of quads.\n\n[FontId](https://docs.rs/femtovg/latest/femtovg/struct.FontId.html \"struct femtovg::FontId\")\n    A font handle.\n\n[FontMetrics](https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html \"struct femtovg::FontMetrics\")\n    Information about a font.\n\n[GlyphDrawCommands](https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html \"struct femtovg::GlyphDrawCommands\")\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\n[ImageFlags](https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html \"struct femtovg::ImageFlags\")\n    Represents a set of flags that modify the behavior of an image.\n\n[ImageId](https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html \"struct femtovg::ImageId\")\n    An image handle.\n\n[ImageInfo](https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html \"struct femtovg::ImageInfo\")\n    Information about an image.\n\n[Paint](https://docs.rs/femtovg/latest/femtovg/struct.Paint.html \"struct femtovg::Paint\")\n    Struct controlling how graphical shapes are rendered.\n\n[Path](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\")\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\n[PathIter](https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html \"struct femtovg::PathIter\")\n    An iterator over the verbs and coordinates of a path.\n\n[Quad](https://docs.rs/femtovg/latest/femtovg/struct.Quad.html \"struct femtovg::Quad\")\n    Represents a quad with position and texture coordinates.\n\n[TextContext](https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html \"struct femtovg::TextContext\")\n    `TextContext` provides functionality for text processing in femtovg.\n\n[TextMetrics](https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html \"struct femtovg::TextMetrics\")\n    Represents the result of a text shaping run.\n\n[Transform2D](https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html \"struct femtovg::Transform2D\")\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums[\u00a7](https://docs.rs/femtovg/latest/femtovg/#enums)\n\n[Align](https://docs.rs/femtovg/latest/femtovg/enum.Align.html \"enum femtovg::Align\")\n    Represents the horizontal alignment of text.\n\n[Baseline](https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html \"enum femtovg::Baseline\")\n    Represents the vertical alignment of a text baseline.\n\n[BlendFactor](https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html \"enum femtovg::BlendFactor\")\n    Blend factors.\n\n[CompositeOperation](https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html \"enum femtovg::CompositeOperation\")\n    Predefined composite oprations.\n\n[ErrorKind](https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html \"enum femtovg::ErrorKind\")\n    Enum representing different types of errors that can occur in the canvas.\n\n[FillRule](https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html \"enum femtovg::FillRule\")\n    Determines the fill rule used when filling paths.\n\n[ImageFilter](https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html \"enum femtovg::ImageFilter\")\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\n[ImageSource](https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html \"enum femtovg::ImageSource\")\n    Represents the source of an image.\n\n[LineCap](https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html \"enum femtovg::LineCap\")\n    Determines the shape used to draw the end points of lines.\n\n[LineJoin](https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html \"enum femtovg::LineJoin\")\n    Determines the shape used to join two line segments where they meet.\n\n[PixelFormat](https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html \"enum femtovg::PixelFormat\")\n    Specifies the format of an image\u2019s pixels.\n\n[RenderMode](https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html \"enum femtovg::RenderMode\")\n    Represents the rendering mode for a path.\n\n[Solidity](https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html \"enum femtovg::Solidity\")\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\n[Verb](https://docs.rs/femtovg/latest/femtovg/enum.Verb.html \"enum femtovg::Verb\")\n    A verb describes how to interpret one or more points to continue the countour of a [`Path`](https://docs.rs/femtovg/latest/femtovg/struct.Path.html \"struct femtovg::Path\").\n",
        "markdown_with_citations": "[](https://docs.rs/femtovg/latest/femtovg/all.html \"show sidebar\")\n# Crate femtovgCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nThe femtovg API is (like NanoVG\u27e84\u27e9) loosely modeled on the HTML5 Canvas API\u27e85\u27e9.\nThe coordinate system\u2019s origin is the top-left corner, with positive X rightwards, positive Y downwards.\n## Re-exports\u00a7\u27e86\u27e9\n\n`pub use renderer::RenderTarget[](https://docs.rs/femtovg/latest/femtovg/renderer/enum.RenderTarget.html \"enum femtovg::renderer::RenderTarget\");`\n\n\n`pub use renderer::Renderer[](https://docs.rs/femtovg/latest/femtovg/renderer/trait.Renderer.html \"trait femtovg::renderer::Renderer\");`\n\n\n`pub use ::image[](https://docs.rs/image/0.25.6/x86_64-unknown-linux-gnu/image/index.html \"mod image\") as img;``image-loading`\n\n\n`pub use imgref[](https://docs.rs/imgref/1.11.0/x86_64-unknown-linux-gnu/imgref/index.html \"mod imgref\");`\n\n\n`pub use rgb[](https://docs.rs/rgb/0.8.50/x86_64-unknown-linux-gnu/rgb/index.html \"mod rgb\");`\n\n## Modules\u00a7\u27e87\u27e9\n\nrenderer\u27e88\u27e9\n    Module containing renderer implementations.\n## Structs\u00a7\u27e89\u27e9\n\nAtlas\u27e810\u27e9\n    Represents an atlas for packing rectangles.\n\nCanvas\u27e811\u27e9\n    Main 2D drawing context.\n\nColor\u27e812\u27e9\n    Struct representing a color with red, green, blue, and alpha components.\n\nCompositeOperationState\u27e813\u27e9\n    Determines how a new (\u201csource\u201d) data is displayed against an existing (\u201cdestination\u201d) data.\n\nDrawCommand\u27e814\u27e9\n    Represents a command to draw an image with a set of quads.\n\nFontId\u27e815\u27e9\n    A font handle.\n\nFontMetrics\u27e816\u27e9\n    Information about a font.\n\nGlyphDrawCommands\u27e817\u27e9\n    Represents the drawing commands for glyphs, separated into alpha and color glyphs.\n\nImageFlags\u27e818\u27e9\n    Represents a set of flags that modify the behavior of an image.\n\nImageId\u27e819\u27e9\n    An image handle.\n\nImageInfo\u27e820\u27e9\n    Information about an image.\n\nPaint\u27e821\u27e9\n    Struct controlling how graphical shapes are rendered.\n\nPath\u27e822\u27e9\n    A collection of verbs (`move_to()`, `line_to()`, `bezier_to()`, etc.) describing one or more contours.\n\nPathIter\u27e823\u27e9\n    An iterator over the verbs and coordinates of a path.\n\nQuad\u27e824\u27e9\n    Represents a quad with position and texture coordinates.\n\nTextContext\u27e825\u27e9\n    `TextContext` provides functionality for text processing in femtovg.\n\nTextMetrics\u27e826\u27e9\n    Represents the result of a text shaping run.\n\nTransform2D\u27e827\u27e9\n    2\u00d73 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling.\n## Enums\u00a7\u27e828\u27e9\n\nAlign\u27e829\u27e9\n    Represents the horizontal alignment of text.\n\nBaseline\u27e830\u27e9\n    Represents the vertical alignment of a text baseline.\n\nBlendFactor\u27e831\u27e9\n    Blend factors.\n\nCompositeOperation\u27e832\u27e9\n    Predefined composite oprations.\n\nErrorKind\u27e833\u27e9\n    Enum representing different types of errors that can occur in the canvas.\n\nFillRule\u27e834\u27e9\n    Determines the fill rule used when filling paths.\n\nImageFilter\u27e835\u27e9\n    Specifies the type of filter to apply to images with `crate::Canvas::filter_image`.\n\nImageSource\u27e836\u27e9\n    Represents the source of an image.\n\nLineCap\u27e837\u27e9\n    Determines the shape used to draw the end points of lines.\n\nLineJoin\u27e838\u27e9\n    Determines the shape used to join two line segments where they meet.\n\nPixelFormat\u27e839\u27e9\n    Specifies the format of an image\u2019s pixels.\n\nRenderMode\u27e840\u27e9\n    Represents the rendering mode for a path.\n\nSolidity\u27e841\u27e9\n    Specifies whether a shape is solid or a hole when adding it to a path.\n\nVerb\u27e842\u27e9\n    A verb describes how to interpret one or more points to continue the countour of a `Path`\u27e822\u27e9.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/femtovg/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/femtovg/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/femtovg/latest/src/femtovg/lib.rs.html#1-1637: Source\n\u27e84\u27e9 https://github.com/memononen/nanovg: NanoVG\n\u27e85\u27e9 https://bucephalus.org/text/CanvasHandbook/CanvasHandbook.html: HTML5 Canvas API\n\u27e86\u27e9 https://docs.rs/femtovg/latest/femtovg/#reexports: \u00a7\n\u27e87\u27e9 https://docs.rs/femtovg/latest/femtovg/#modules: \u00a7\n\u27e88\u27e9 https://docs.rs/femtovg/latest/femtovg/renderer/index.html: mod femtovg::renderer - renderer\n\u27e89\u27e9 https://docs.rs/femtovg/latest/femtovg/#structs: \u00a7\n\u27e810\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Atlas.html: struct femtovg::Atlas - Atlas\n\u27e811\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Canvas.html: struct femtovg::Canvas - Canvas\n\u27e812\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Color.html: struct femtovg::Color - Color\n\u27e813\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.CompositeOperationState.html: struct femtovg::CompositeOperationState - CompositeOperationState\n\u27e814\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.DrawCommand.html: struct femtovg::DrawCommand - DrawCommand\n\u27e815\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontId.html: struct femtovg::FontId - FontId\n\u27e816\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.FontMetrics.html: struct femtovg::FontMetrics - FontMetrics\n\u27e817\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.GlyphDrawCommands.html: struct femtovg::GlyphDrawCommands - GlyphDrawCommands\n\u27e818\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageFlags.html: struct femtovg::ImageFlags - ImageFlags\n\u27e819\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageId.html: struct femtovg::ImageId - ImageId\n\u27e820\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.ImageInfo.html: struct femtovg::ImageInfo - ImageInfo\n\u27e821\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Paint.html: struct femtovg::Paint - Paint\n\u27e822\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Path.html: struct femtovg::Path - Path\n\u27e823\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.PathIter.html: struct femtovg::PathIter - PathIter\n\u27e824\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Quad.html: struct femtovg::Quad - Quad\n\u27e825\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextContext.html: struct femtovg::TextContext - TextContext\n\u27e826\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.TextMetrics.html: struct femtovg::TextMetrics - TextMetrics\n\u27e827\u27e9 https://docs.rs/femtovg/latest/femtovg/struct.Transform2D.html: struct femtovg::Transform2D - Transform2D\n\u27e828\u27e9 https://docs.rs/femtovg/latest/femtovg/#enums: \u00a7\n\u27e829\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Align.html: enum femtovg::Align - Align\n\u27e830\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Baseline.html: enum femtovg::Baseline - Baseline\n\u27e831\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.BlendFactor.html: enum femtovg::BlendFactor - BlendFactor\n\u27e832\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.CompositeOperation.html: enum femtovg::CompositeOperation - CompositeOperation\n\u27e833\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ErrorKind.html: enum femtovg::ErrorKind - ErrorKind\n\u27e834\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.FillRule.html: enum femtovg::FillRule - FillRule\n\u27e835\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageFilter.html: enum femtovg::ImageFilter - ImageFilter\n\u27e836\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.ImageSource.html: enum femtovg::ImageSource - ImageSource\n\u27e837\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineCap.html: enum femtovg::LineCap - LineCap\n\u27e838\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.LineJoin.html: enum femtovg::LineJoin - LineJoin\n\u27e839\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.PixelFormat.html: enum femtovg::PixelFormat - PixelFormat\n\u27e840\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.RenderMode.html: enum femtovg::RenderMode - RenderMode\n\u27e841\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Solidity.html: enum femtovg::Solidity - Solidity\n\u27e842\u27e9 https://docs.rs/femtovg/latest/femtovg/enum.Verb.html: enum femtovg::Verb - Verb\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `femtovg` crate is a lightweight 2D graphics rendering library inspired by the HTML5 Canvas API and NanoVG. It provides a flexible `Canvas` for drawing shapes, text, and images, supports transformations, color manipulation, and path-based rendering, and includes features like text shaping, image filtering, and compositing operations. Its modular design integrates with external crates like `image`, `rgb`, and `imgref` for enhanced functionality.",
    "feature_summary": null,
    "use_case": "Unknown",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Canvas and Drawing Context  \n\u2705 **Factual**: The `Canvas` struct in `femtovg` serves as the primary 2D drawing context, allowing users to draw shapes, text, and images using an API modeled on the HTML5 Canvas API.  \n\u274c **Counterfactual**: The `Canvas` struct in `femtovg` is designed exclusively for 3D rendering and does not support 2D graphics operations.  \n\n---\n\n### Pair 2: Coordinate System  \n\u2705 **Factual**: The coordinate system in `femtovg` has its origin at the top-left corner, with positive X values extending rightwards and positive Y values extending downwards.  \n\u274c **Counterfactual**: The coordinate system in `femtovg` is centered at the middle of the canvas, with positive X values extending leftwards and positive Y values extending upwards.  \n\n---\n\n### Pair 3: Image Handling  \n\u2705 **Factual**: The `ImageId` struct in `femtovg` acts as a handle for managing images, allowing users to reference and manipulate images loaded into the canvas.  \n\u274c **Counterfactual**: The `ImageId` struct in `femtovg` automatically performs image filtering and resizing without requiring explicit operations from the user.  \n\n---",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}