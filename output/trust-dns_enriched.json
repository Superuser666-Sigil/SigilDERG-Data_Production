{
    "name": "trust-dns",
    "version": "0.23.2",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "###  [81 releases](https://lib.rs/crates/trust-dns/versions)\n0.23.2 |  Oct 23, 2023   \n---|---  \n0.23.0 |  Aug 22, 2023   \n0.23.0-alpha.4 |  Jun 11, 2023   \n0.22.0 |  Sep 2, 2022   \n0.4.0 |  Nov 9, 2015   \n#**4** in [#dynamic-dns](https://lib.rs/keywords/dynamic-dns)\nDownload history 261/week @ 2025-03-08 384/week @ 2025-03-15 247/week @ 2025-03-22 159/week @ 2025-03-29 233/week @ 2025-04-05 290/week @ 2025-04-12 271/week @ 2025-04-19 337/week @ 2025-04-26 269/week @ 2025-05-03 277/week @ 2025-05-10 165/week @ 2025-05-17 175/week @ 2025-05-24 225/week @ 2025-05-31 186/week @ 2025-06-07 238/week @ 2025-06-14 318/week @ 2025-06-21\n**993** downloads per month Used in [**14** crates (11 directly)](https://lib.rs/crates/trust-dns/rev)\n**MIT/Apache**\n2.5MB  **38K** SLoC\n**NOTICE** This project has been rebranded to Hickory DNS and has been moved to the <https://github.com/hickory-dns/hickory-dns> organization and repo, this crate/binary has been moved to [hickory-dns](https://lib.rs/crates/hickory-dns), from ```0.``24```\n# Overview\nTrust-DNS provides a binary for hosting or forwarding DNS zones.\nThis a named implementation for DNS zone hosting. It is capable of performing signing all records in the zone for server DNSSEC RRSIG records associated with all records in a zone. There is also a ``trust-dns`` binary that can be generated from the library with ````cargo``` install trust-dns```. Dynamic updates are supported via ```SIG0``` (an mTLS authentication method is under development).\n## Features\n  * Dynamic Update with sqlite journaling backend (SIG0)\n  * DNSSEC online signing (NSEC not NSEC3)\n  * DNS over TLS (DoT)\n  * DNS over HTTPS (DoH)\n  * Forwarding stub resolver\n  * ANAME resolution, for zone mapping aliass to A and AAAA records\n  * Additionals section generation for aliasing record types\n\n\n## DNS-over-TLS and DNS-over-HTTPS\nSupport of TLS on the Server is managed through a pkcs12 der file. The documentation is captured in the example test config file, [example.toml](https://github.com/bluejekyll/trust-dns/blob/main/tests/test-data/test_configs/example.toml). A registered certificate to the server can be pinned to the Client with the ```add_ca``(``)``` method. Alternatively, as the client uses the rust-native-tls library, it should work with certificate signed by any standard CA.\nDoT and DoH are supported. This is accomplished through the use of one of ``native-tls``, ``openssl``, or ``rustls`` (only ``rustls`` is currently supported for DoH). The Resolver requires only requires valid DoT or DoH resolvers being registered in order to be used.\nTo use with the ``Client``, the ``TlsClientConnection`` or ``HttpsClientConnection`` should be used. Similarly, to use with the tokio ``AsyncClient`` the ``TlsClientStream`` or ``HttpsClientStream`` should be used. ClientAuth, mTLS, is currently not supported, there are some issues still being worked on. TLS is useful for Server authentication and connection privacy.\nTo enable DoT one of the features ``dns-over-native-tls``, ``dns-over-openssl``, or ``dns-over-rustls`` must be enabled, ``dns-over-https-rustls`` is used for DoH.\n## DNSSEC status\nCurrently the root key is hardcoded into the system. This gives validation of DNSKEY and DS records back to the root. NSEC is implemented, but not NSEC3. Because caching is not yet enabled, it has been noticed that some DNS servers appear to rate limit the connections, validating RRSIG records back to the root can require a significant number of additional queries for those records.\nZones will be automatically resigned on any record updates via dynamic DNS. To enable DNSSEC, one of the features ``dnssec-openssl`` or ``dnssec-ring`` must be enabled.\n## Future goals\n  * Distributed dynamic DNS updates, with consensus\n  * mTLS based authorization for Dynamic Updates\n  * Online NSEC creation for queries\n  * Full hint based resolving\n  * Maybe NSEC3 and/or NSEC5 support\n\n\n## Minimum Rust Version\nThe current minimum rustc version for this project is ```1.``64```\n## Versioning\nTrust-DNS does it's best job to follow semver. Trust-DNS will be promoted to 1.0 upon stabilization of the publicly exposed APIs. This does not mean that Trust-DNS will necessarily break on upgrades between 0.x updates. Whenever possible, old APIs will be deprecated with notes on what replaced those deprecations. Trust-DNS will make a best effort to never break software which depends on it due to API changes, though this can not be guaranteed. Deprecated interfaces will be maintained for at minimum one major release after that in which they were deprecated (where possible), with the exception of the upgrade to 1.0 where all deprecated interfaces will be planned to be removed.\n#### Dependencies\n~13\u201332MB  ~493K SLoC\n  * [clap](https://lib.rs/crates/clap \"new\") 4.0[+std](https://lib.rs/crates/clap/features#feature-std)[+cargo](https://lib.rs/crates/clap/features#feature-cargo)[+help](https://lib.rs/crates/clap/features#feature-help)[+derive](https://lib.rs/crates/clap/features#feature-derive)[+suggestions](https://lib.rs/crates/clap/features#feature-suggestions)\n  * [futures](https://lib.rs/crates/futures \"0.3.5\")[+std](https://lib.rs/crates/futures/features#feature-std)\n  * [dns-over-rustls?](https://lib.rs/crates/trust-dns/features#feature-dns-over-rustls \"optional feature\") [rustls](https://lib.rs/crates/rustls \"obsolete\") 0.21\n  * [time](https://lib.rs/crates/time \"0.3\")\n  * [tokio](https://lib.rs/crates/tokio \"1.21\")[+time](https://lib.rs/crates/tokio/features#feature-time)[+rt](https://lib.rs/crates/tokio/features#feature-rt)\n  * [tracing](https://lib.rs/crates/tracing \"0.1.30\")\n  * [tracing-subscriber](https://lib.rs/crates/tracing-subscriber \"0.3\")[+std](https://lib.rs/crates/tracing-subscriber/features#feature-std)[+fmt](https://lib.rs/crates/tracing-subscriber/features#feature-fmt)[+env-filter](https://lib.rs/crates/tracing-subscriber/features#feature-env-filter)\n  * [trust-dns-client](https://lib.rs/crates/trust-dns-client \"obsolete\") 0.23.2\n  * [trust-dns-proto](https://lib.rs/crates/trust-dns-proto \"new\") 0.23.2\n  * [trust-dns-server](https://lib.rs/crates/trust-dns-server \"new\") 0.23.2\n\n\n  * dev  [native-tls](https://lib.rs/crates/native-tls \"0.2\")\n  * dev  [regex](https://lib.rs/crates/regex \"1.3.4\")\n  * dev  [trust-dns-resolver](https://lib.rs/crates/trust-dns-resolver \"new\") 0.23.2\n  * dev  [webpki-roots](https://lib.rs/crates/webpki-roots \"outdated\") 0.25\n\n\n#### [Other features](https://lib.rs/crates/trust-dns/features)\n  * [dns-over-https](https://lib.rs/crates/trust-dns/features#feature-dns-over-https)\n  * [dns-over-https-rustls](https://lib.rs/crates/trust-dns/features#feature-dns-over-https-rustls)\n  * [dns-over-openssl](https://lib.rs/crates/trust-dns/features#feature-dns-over-openssl)\n  * [dns-over-quic](https://lib.rs/crates/trust-dns/features#feature-dns-over-quic)\n  * [dns-over-tls](https://lib.rs/crates/trust-dns/features#feature-dns-over-tls)\n  * [dnssec](https://lib.rs/crates/trust-dns/features#feature-dnssec)\n  * [dnssec-openssl](https://lib.rs/crates/trust-dns/features#feature-dnssec-openssl)\n  * [dnssec-ring](https://lib.rs/crates/trust-dns/features#feature-dnssec-ring)\n  * [recursor](https://lib.rs/crates/trust-dns/features#feature-recursor)\n  * [resolver](https://lib.rs/crates/trust-dns/features#feature-resolver)\n  * [sqlite](https://lib.rs/crates/trust-dns/features#feature-sqlite)\n  * [tls](https://lib.rs/crates/trust-dns/features#feature-tls)\n  * [tls-openssl](https://lib.rs/crates/trust-dns/features#feature-tls-openssl)\n\n\n  *[SLoC]: approx. additional lines of code\n",
        "markdown_with_citations": "###  81 releases\u27e81\u27e9\n0.23.2 |  Oct 23, 2023   \n---|---  \n0.23.0 |  Aug 22, 2023   \n0.23.0-alpha.4 |  Jun 11, 2023   \n0.22.0 |  Sep 2, 2022   \n0.4.0 |  Nov 9, 2015   \n#**4** in #dynamic-dns\u27e82\u27e9\nDownload history 261/week @ 2025-03-08 384/week @ 2025-03-15 247/week @ 2025-03-22 159/week @ 2025-03-29 233/week @ 2025-04-05 290/week @ 2025-04-12 271/week @ 2025-04-19 337/week @ 2025-04-26 269/week @ 2025-05-03 277/week @ 2025-05-10 165/week @ 2025-05-17 175/week @ 2025-05-24 225/week @ 2025-05-31 186/week @ 2025-06-07 238/week @ 2025-06-14 318/week @ 2025-06-21\n**993** downloads per month Used in **14** crates (11 directly)\u27e83\u27e9\n**MIT/Apache**\n2.5MB  **38K** SLoC\n**NOTICE** This project has been rebranded to Hickory DNS and has been moved to the <https://github.com/hickory-dns/hickory-dns> organization and repo, this crate/binary has been moved to hickory-dns\u27e84\u27e9, from ```0.``24```\n# Overview\nTrust-DNS provides a binary for hosting or forwarding DNS zones.\nThis a named implementation for DNS zone hosting. It is capable of performing signing all records in the zone for server DNSSEC RRSIG records associated with all records in a zone. There is also a ``trust-dns`` binary that can be generated from the library with ````cargo``` install trust-dns```. Dynamic updates are supported via ```SIG0``` (an mTLS authentication method is under development).\n## Features\n  * Dynamic Update with sqlite journaling backend (SIG0)\n  * DNSSEC online signing (NSEC not NSEC3)\n  * DNS over TLS (DoT)\n  * DNS over HTTPS (DoH)\n  * Forwarding stub resolver\n  * ANAME resolution, for zone mapping aliass to A and AAAA records\n  * Additionals section generation for aliasing record types\n\n\n## DNS-over-TLS and DNS-over-HTTPS\nSupport of TLS on the Server is managed through a pkcs12 der file. The documentation is captured in the example test config file, example.toml\u27e85\u27e9. A registered certificate to the server can be pinned to the Client with the ```add_ca``(``)``` method. Alternatively, as the client uses the rust-native-tls library, it should work with certificate signed by any standard CA.\nDoT and DoH are supported. This is accomplished through the use of one of ``native-tls``, ``openssl``, or ``rustls`` (only ``rustls`` is currently supported for DoH). The Resolver requires only requires valid DoT or DoH resolvers being registered in order to be used.\nTo use with the ``Client``, the ``TlsClientConnection`` or ``HttpsClientConnection`` should be used. Similarly, to use with the tokio ``AsyncClient`` the ``TlsClientStream`` or ``HttpsClientStream`` should be used. ClientAuth, mTLS, is currently not supported, there are some issues still being worked on. TLS is useful for Server authentication and connection privacy.\nTo enable DoT one of the features ``dns-over-native-tls``, ``dns-over-openssl``, or ``dns-over-rustls`` must be enabled, ``dns-over-https-rustls`` is used for DoH.\n## DNSSEC status\nCurrently the root key is hardcoded into the system. This gives validation of DNSKEY and DS records back to the root. NSEC is implemented, but not NSEC3. Because caching is not yet enabled, it has been noticed that some DNS servers appear to rate limit the connections, validating RRSIG records back to the root can require a significant number of additional queries for those records.\nZones will be automatically resigned on any record updates via dynamic DNS. To enable DNSSEC, one of the features ``dnssec-openssl`` or ``dnssec-ring`` must be enabled.\n## Future goals\n  * Distributed dynamic DNS updates, with consensus\n  * mTLS based authorization for Dynamic Updates\n  * Online NSEC creation for queries\n  * Full hint based resolving\n  * Maybe NSEC3 and/or NSEC5 support\n\n\n## Minimum Rust Version\nThe current minimum rustc version for this project is ```1.``64```\n## Versioning\nTrust-DNS does it's best job to follow semver. Trust-DNS will be promoted to 1.0 upon stabilization of the publicly exposed APIs. This does not mean that Trust-DNS will necessarily break on upgrades between 0.x updates. Whenever possible, old APIs will be deprecated with notes on what replaced those deprecations. Trust-DNS will make a best effort to never break software which depends on it due to API changes, though this can not be guaranteed. Deprecated interfaces will be maintained for at minimum one major release after that in which they were deprecated (where possible), with the exception of the upgrade to 1.0 where all deprecated interfaces will be planned to be removed.\n#### Dependencies\n~13\u201332MB  ~493K SLoC\n  * clap\u27e86\u27e9 4.0+std\u27e87\u27e9+cargo\u27e88\u27e9+help\u27e89\u27e9+derive\u27e810\u27e9+suggestions\u27e811\u27e9\n  * futures\u27e812\u27e9+std\u27e813\u27e9\n  * dns-over-rustls?\u27e814\u27e9 rustls\u27e815\u27e9 0.21\n  * time\u27e816\u27e9\n  * tokio\u27e817\u27e9+time\u27e818\u27e9+rt\u27e819\u27e9\n  * tracing\u27e820\u27e9\n  * tracing-subscriber\u27e821\u27e9+std\u27e822\u27e9+fmt\u27e823\u27e9+env-filter\u27e824\u27e9\n  * trust-dns-client\u27e825\u27e9 0.23.2\n  * trust-dns-proto\u27e826\u27e9 0.23.2\n  * trust-dns-server\u27e827\u27e9 0.23.2\n\n\n  * dev  native-tls\u27e828\u27e9\n  * dev  regex\u27e829\u27e9\n  * dev  trust-dns-resolver\u27e830\u27e9 0.23.2\n  * dev  webpki-roots\u27e831\u27e9 0.25\n\n\n#### Other features\u27e832\u27e9\n  * dns-over-https\u27e833\u27e9\n  * dns-over-https-rustls\u27e834\u27e9\n  * dns-over-openssl\u27e835\u27e9\n  * dns-over-quic\u27e836\u27e9\n  * dns-over-tls\u27e837\u27e9\n  * dnssec\u27e838\u27e9\n  * dnssec-openssl\u27e839\u27e9\n  * dnssec-ring\u27e840\u27e9\n  * recursor\u27e841\u27e9\n  * resolver\u27e842\u27e9\n  * sqlite\u27e843\u27e9\n  * tls\u27e844\u27e9\n  * tls-openssl\u27e845\u27e9\n\n\n  *[SLoC]: approx. additional lines of code\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://lib.rs/crates/trust-dns/versions: 81 releases\n\u27e82\u27e9 https://lib.rs/keywords/dynamic-dns: #dynamic-dns\n\u27e83\u27e9 https://lib.rs/crates/trust-dns/rev: **14** crates (11 directly)\n\u27e84\u27e9 https://lib.rs/crates/hickory-dns: hickory-dns\n\u27e85\u27e9 https://github.com/bluejekyll/trust-dns/blob/main/tests/test-data/test_configs/example.toml: example.toml\n\u27e86\u27e9 https://lib.rs/crates/clap: new - clap\n\u27e87\u27e9 https://lib.rs/crates/clap/features#feature-std: +std\n\u27e88\u27e9 https://lib.rs/crates/clap/features#feature-cargo: +cargo\n\u27e89\u27e9 https://lib.rs/crates/clap/features#feature-help: +help\n\u27e810\u27e9 https://lib.rs/crates/clap/features#feature-derive: +derive\n\u27e811\u27e9 https://lib.rs/crates/clap/features#feature-suggestions: +suggestions\n\u27e812\u27e9 https://lib.rs/crates/futures: 0.3.5 - futures\n\u27e813\u27e9 https://lib.rs/crates/futures/features#feature-std: +std\n\u27e814\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-rustls: optional feature - dns-over-rustls?\n\u27e815\u27e9 https://lib.rs/crates/rustls: obsolete - rustls\n\u27e816\u27e9 https://lib.rs/crates/time: 0.3 - time\n\u27e817\u27e9 https://lib.rs/crates/tokio: 1.21 - tokio\n\u27e818\u27e9 https://lib.rs/crates/tokio/features#feature-time: +time\n\u27e819\u27e9 https://lib.rs/crates/tokio/features#feature-rt: +rt\n\u27e820\u27e9 https://lib.rs/crates/tracing: 0.1.30 - tracing\n\u27e821\u27e9 https://lib.rs/crates/tracing-subscriber: 0.3 - tracing-subscriber\n\u27e822\u27e9 https://lib.rs/crates/tracing-subscriber/features#feature-std: +std\n\u27e823\u27e9 https://lib.rs/crates/tracing-subscriber/features#feature-fmt: +fmt\n\u27e824\u27e9 https://lib.rs/crates/tracing-subscriber/features#feature-env-filter: +env-filter\n\u27e825\u27e9 https://lib.rs/crates/trust-dns-client: obsolete - trust-dns-client\n\u27e826\u27e9 https://lib.rs/crates/trust-dns-proto: new - trust-dns-proto\n\u27e827\u27e9 https://lib.rs/crates/trust-dns-server: new - trust-dns-server\n\u27e828\u27e9 https://lib.rs/crates/native-tls: 0.2 - native-tls\n\u27e829\u27e9 https://lib.rs/crates/regex: 1.3.4 - regex\n\u27e830\u27e9 https://lib.rs/crates/trust-dns-resolver: new - trust-dns-resolver\n\u27e831\u27e9 https://lib.rs/crates/webpki-roots: outdated - webpki-roots\n\u27e832\u27e9 https://lib.rs/crates/trust-dns/features: Other features\n\u27e833\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-https: dns-over-https\n\u27e834\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-https-rustls: dns-over-https-rustls\n\u27e835\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-openssl: dns-over-openssl\n\u27e836\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-quic: dns-over-quic\n\u27e837\u27e9 https://lib.rs/crates/trust-dns/features#feature-dns-over-tls: dns-over-tls\n\u27e838\u27e9 https://lib.rs/crates/trust-dns/features#feature-dnssec: dnssec\n\u27e839\u27e9 https://lib.rs/crates/trust-dns/features#feature-dnssec-openssl: dnssec-openssl\n\u27e840\u27e9 https://lib.rs/crates/trust-dns/features#feature-dnssec-ring: dnssec-ring\n\u27e841\u27e9 https://lib.rs/crates/trust-dns/features#feature-recursor: recursor\n\u27e842\u27e9 https://lib.rs/crates/trust-dns/features#feature-resolver: resolver\n\u27e843\u27e9 https://lib.rs/crates/trust-dns/features#feature-sqlite: sqlite\n\u27e844\u27e9 https://lib.rs/crates/trust-dns/features#feature-tls: tls\n\u27e845\u27e9 https://lib.rs/crates/trust-dns/features#feature-tls-openssl: tls-openssl\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `trust-dns` crate provides tools for DNS zone hosting, forwarding, and dynamic updates, with support for DNSSEC signing and modern protocols like DNS-over-TLS (DoT) and DNS-over-HTTPS (DoH). It includes features like ANAME resolution, SQLite-backed journaling for dynamic updates, and online signing of DNS records. Future goals include distributed updates, mTLS authorization, and enhanced DNSSEC capabilities.",
    "feature_summary": null,
    "use_case": "Networking",
    "score": 8.0,
    "factual_counterfactual": "### Pair 1: DNS-over-TLS and DNS-over-HTTPS Support  \n\u2705 Factual: Trust-DNS supports DNS-over-TLS (DoT) and DNS-over-HTTPS (DoH) using various libraries, including `native-tls`, `openssl`, and `rustls`, with `rustls` being the only supported library for DoH.  \n\u274c Counterfactual: Trust-DNS exclusively supports DNS-over-TLS and DNS-over-HTTPS using `native-tls`, and does not provide compatibility with `openssl` or `rustls`.\n\n---\n\n### Pair 2: DNSSEC Capabilities  \n\u2705 Factual: Trust-DNS provides DNSSEC online signing for zones, including automatic resigning of records upon updates, but supports NSEC and not NSEC3.  \n\u274c Counterfactual: Trust-DNS fully supports both NSEC and NSEC3 for DNSSEC validation and signing, allowing more advanced DNSSEC configurations.\n\n---\n\n### Pair 3: Dynamic DNS Updates  \n\u2705 Factual: Trust-DNS supports dynamic DNS updates with a SQLite journaling backend and SIG0 authentication, with mTLS-based authorization planned for future releases.  \n\u274c Counterfactual: Trust-DNS currently supports mTLS-based authorization for dynamic DNS updates, providing secure authentication for all update operations.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}