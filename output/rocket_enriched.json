{
    "name": "rocket",
    "version": "0.5.1",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/rocket/latest/rocket/all.html \"show sidebar\")\n# Crate rocketCopy item path\n[Settings](https://docs.rs/rocket/latest/settings.html)\n[Help](https://docs.rs/rocket/latest/help.html)\nSummary[Source](https://docs.rs/rocket/latest/src/rocket/lib.rs.html#1-364)\nExpand description\n## [\u00a7](https://docs.rs/rocket/latest/rocket/#rocket---core-api-documentation)Rocket - Core API Documentation\nHello, and welcome to the core Rocket API documentation!\nThis API documentation is highly technical and is purely a reference. There\u2019s an [overview](https://rocket.rs/v0.5/overview) of Rocket on the main site as well as a [full, detailed guide](https://rocket.rs/v0.5/guide). If you\u2019d like pointers on getting started, see the [quickstart](https://rocket.rs/v0.5/guide/quickstart) or [getting started](https://rocket.rs/v0.5/guide/getting-started) chapters of the guide.\n### [\u00a7](https://docs.rs/rocket/latest/rocket/#usage)Usage\nDepend on `rocket` in `Cargo.toml`:\n```\n[dependencies]\nrocket = \"0.5.1\"\n```\n\nNote that development versions, tagged with `-dev`, are not published and need to be specified as [git dependencies](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-git-repositories).\nSee the [guide](https://rocket.rs/v0.5/guide) for more information on how to write Rocket applications. Here\u2019s a simple example to get you started:\n```\n#[macro_use] extern crate rocket;\n#[get(\"/\")]\nfn hello() -> &'static str {\n  \"Hello, world!\"\n}\n#[launch]\nfn rocket() -> _ {\n  rocket::build().mount(\"/\", routes![hello])\n}\n```\n\n### [\u00a7](https://docs.rs/rocket/latest/rocket/#features)Features\nTo avoid compiling unused dependencies, Rocket gates certain features. With the exception of `http2`, all are disabled by default:\nFeature| Description  \n---|---  \n`secrets`| Support for authenticated, encrypted [private cookies](https://rocket.rs/v0.5/guide/requests/#private-cookies).  \n`tls`| Support for [TLS](https://rocket.rs/v0.5/guide/configuration/#tls) encrypted connections.  \n`mtls`| Support for verified clients via [mutual TLS](https://docs.rs/rocket/latest/rocket/mtls/index.html \"mod rocket::mtls\").  \n`http2`| Support for HTTP/2 (enabled by default).  \n`json`| Support for [JSON (de)serialization](https://docs.rs/rocket/latest/rocket/serde/json/index.html \"mod rocket::serde::json\").  \n`msgpack`| Support for [MessagePack (de)serialization](https://docs.rs/rocket/latest/rocket/serde/msgpack/index.html \"mod rocket::serde::msgpack\").  \n`uuid`| Support for [UUID value parsing and (de)serialization](https://docs.rs/rocket/latest/rocket/serde/uuid/index.html \"mod rocket::serde::uuid\").  \nDisabled features can be selectively enabled in `Cargo.toml`:\n```\n[dependencies]\nrocket = { version = \"0.5.1\", features = [\"secrets\", \"tls\", \"json\"] }\n```\n\nConversely, HTTP/2 can be disabled:\n```\n[dependencies]\nrocket = { version = \"0.5.1\", default-features = false }\n```\n\n### [\u00a7](https://docs.rs/rocket/latest/rocket/#configuration)Configuration\nRocket offers a rich, extensible configuration system built on [Figment](https://docs.rs/figment). By default, Rocket applications are configured via a `Rocket.toml` file and/or `ROCKET_{PARAM}` environment variables, but applications may configure their own sources. See the [configuration guide](https://rocket.rs/v0.5/guide/configuration/) for full details.\n### [\u00a7](https://docs.rs/rocket/latest/rocket/#testing)Testing\nThe [`local`](https://docs.rs/rocket/latest/rocket/local/index.html \"mod rocket::local\") module contains structures that facilitate unit and integration testing of a Rocket application. The top-level [`local`](https://docs.rs/rocket/latest/rocket/local/index.html \"mod rocket::local\") module documentation and the [testing guide](https://rocket.rs/v0.5/guide/testing/#testing) include detailed examples.\n## Re-exports[\u00a7](https://docs.rs/rocket/latest/rocket/#reexports)\n\n`pub use futures[](https://docs.rs/futures/0.3.31/x86_64-unknown-linux-gnu/futures/index.html \"mod futures\");`\n\n\n`pub use tokio[](https://docs.rs/tokio/1.45.0/x86_64-unknown-linux-gnu/tokio/index.html \"mod tokio\");`\n\n\n`pub use figment[](https://docs.rs/figment/0.10.19/x86_64-unknown-linux-gnu/figment/index.html \"mod figment\");`\n\n\n`pub use time[](https://docs.rs/time/0.3.41/x86_64-unknown-linux-gnu/time/index.html \"mod time\");`\n\n## Modules[\u00a7](https://docs.rs/rocket/latest/rocket/#modules)\n\n[catcher](https://docs.rs/rocket/latest/rocket/catcher/index.html \"mod rocket::catcher\")\n    Types and traits for error catchers and their handlers and return types.\n\n[config](https://docs.rs/rocket/latest/rocket/config/index.html \"mod rocket::config\")\n    Server and application configuration.\n\n[data](https://docs.rs/rocket/latest/rocket/data/index.html \"mod rocket::data\")\n    Types and traits for handling incoming body data.\n\n[error](https://docs.rs/rocket/latest/rocket/error/index.html \"mod rocket::error\")\n    Types representing various errors that can occur in a Rocket application.\n\n[fairing](https://docs.rs/rocket/latest/rocket/fairing/index.html \"mod rocket::fairing\")\n    Fairings: callbacks at launch, liftoff, request, and response time.\n\n[form](https://docs.rs/rocket/latest/rocket/form/index.html \"mod rocket::form\")\n    Parsing and validation of HTTP forms and fields.\n\n[fs](https://docs.rs/rocket/latest/rocket/fs/index.html \"mod rocket::fs\")\n    File serving, file accepting, and file metadata types.\n\n[http](https://docs.rs/rocket/latest/rocket/http/index.html \"mod rocket::http\")\n    Types that map to concepts in HTTP.\n\n[local](https://docs.rs/rocket/latest/rocket/local/index.html \"mod rocket::local\")\n    Structures for local dispatching of requests, primarily for testing.\n\n[mtls](https://docs.rs/rocket/latest/rocket/mtls/index.html \"mod rocket::mtls\")`mtls`\n    Support for mutual TLS client certificates.\n\n[outcome](https://docs.rs/rocket/latest/rocket/outcome/index.html \"mod rocket::outcome\")\n    Success, error, and forward handling.\n\n[request](https://docs.rs/rocket/latest/rocket/request/index.html \"mod rocket::request\")\n    Types and traits for request parsing and handling.\n\n[response](https://docs.rs/rocket/latest/rocket/response/index.html \"mod rocket::response\")\n    Types and traits to build and send responses.\n\n[route](https://docs.rs/rocket/latest/rocket/route/index.html \"mod rocket::route\")\n    Types and traits for routes and their request handlers and return types.\n\n[serde](https://docs.rs/rocket/latest/rocket/serde/index.html \"mod rocket::serde\")\n    Serialization and deserialization support.\n\n[shield](https://docs.rs/rocket/latest/rocket/shield/index.html \"mod rocket::shield\")\n    Security and privacy headers for all outgoing responses.\n## Macros[\u00a7](https://docs.rs/rocket/latest/rocket/#macros)\n\n[catchers](https://docs.rs/rocket/latest/rocket/macro.catchers.html \"macro rocket::catchers\")\n    Generates a `Vec` of [`Catcher`](https://docs.rs/rocket/latest/rocket/struct.Catcher.html)s from a set of catcher paths.\n\n[routes](https://docs.rs/rocket/latest/rocket/macro.routes.html \"macro rocket::routes\")\n    Generates a `Vec` of [`Route`](https://docs.rs/rocket/latest/rocket/struct.Route.html)s from a set of route paths.\n\n[uri](https://docs.rs/rocket/latest/rocket/macro.uri.html \"macro rocket::uri\")\n    Type-safe, encoding-safe route and non-route URI generation.\n## Structs[\u00a7](https://docs.rs/rocket/latest/rocket/#structs)\n\n[Catcher](https://docs.rs/rocket/latest/rocket/struct.Catcher.html \"struct rocket::Catcher\")\n    An error catching route.\n\n[Config](https://docs.rs/rocket/latest/rocket/struct.Config.html \"struct rocket::Config\")\n    Rocket server configuration.\n\n[Data](https://docs.rs/rocket/latest/rocket/struct.Data.html \"struct rocket::Data\")\n    Type representing the body data of a request.\n\n[Error](https://docs.rs/rocket/latest/rocket/struct.Error.html \"struct rocket::Error\")\n    An error that occurs during launch.\n\n[Request](https://docs.rs/rocket/latest/rocket/struct.Request.html \"struct rocket::Request\")\n    The type of an incoming web request.\n\n[Response](https://docs.rs/rocket/latest/rocket/struct.Response.html \"struct rocket::Response\")\n    A response, as returned by types implementing [`Responder`](https://docs.rs/rocket/latest/rocket/response/trait.Responder.html \"trait rocket::response::Responder\").\n\n[Rocket](https://docs.rs/rocket/latest/rocket/struct.Rocket.html \"struct rocket::Rocket\")\n    The application server itself.\n\n[Route](https://docs.rs/rocket/latest/rocket/struct.Route.html \"struct rocket::Route\")\n    A request handling route.\n\n[Shutdown](https://docs.rs/rocket/latest/rocket/struct.Shutdown.html \"struct rocket::Shutdown\")\n    A request guard and future for graceful shutdown.\n\n[State](https://docs.rs/rocket/latest/rocket/struct.State.html \"struct rocket::State\")\n    Request guard to retrieve managed state.\n## Enums[\u00a7](https://docs.rs/rocket/latest/rocket/#enums)\n\n[Build](https://docs.rs/rocket/latest/rocket/enum.Build.html \"enum rocket::Build\")\n    The initial launch [`Phase`](https://docs.rs/rocket/latest/rocket/trait.Phase.html \"trait rocket::Phase\"). See [Rocket#build](https://docs.rs/rocket/latest/rocket/struct.Rocket.html#build \"struct rocket::Rocket\") for phase details.\n\n[Ignite](https://docs.rs/rocket/latest/rocket/enum.Ignite.html \"enum rocket::Ignite\")\n    The second launch [`Phase`](https://docs.rs/rocket/latest/rocket/trait.Phase.html \"trait rocket::Phase\"): post-build but pre-orbit. See [Rocket#ignite](https://docs.rs/rocket/latest/rocket/struct.Rocket.html#ignite \"struct rocket::Rocket\") for details.\n\n[Orbit](https://docs.rs/rocket/latest/rocket/enum.Orbit.html \"enum rocket::Orbit\")\n    The final launch [`Phase`](https://docs.rs/rocket/latest/rocket/trait.Phase.html \"trait rocket::Phase\"). See [Rocket#orbit](https://docs.rs/rocket/latest/rocket/struct.Rocket.html#orbit \"struct rocket::Rocket\") for details.\n## Traits[\u00a7](https://docs.rs/rocket/latest/rocket/#traits)\n\n[Phase](https://docs.rs/rocket/latest/rocket/trait.Phase.html \"trait rocket::Phase\")\n    A marker trait for Rocket\u2019s launch phases.\n\n[Sentinel](https://docs.rs/rocket/latest/rocket/trait.Sentinel.html \"trait rocket::Sentinel\")\n    An automatic last line of defense against launching an invalid [`Rocket`](https://docs.rs/rocket/latest/rocket/struct.Rocket.html \"struct rocket::Rocket\").\n## Functions[\u00a7](https://docs.rs/rocket/latest/rocket/#functions)\n\n[build](https://docs.rs/rocket/latest/rocket/fn.build.html \"fn rocket::build\")\n    Creates a [`Rocket`](https://docs.rs/rocket/latest/rocket/struct.Rocket.html \"struct rocket::Rocket\") instance with the default config provider: aliases [`Rocket::build()`](https://docs.rs/rocket/latest/rocket/struct.Rocket.html#method.build \"associated function rocket::Rocket::build\").\n\n[custom](https://docs.rs/rocket/latest/rocket/fn.custom.html \"fn rocket::custom\")\n    Creates a [`Rocket`](https://docs.rs/rocket/latest/rocket/struct.Rocket.html \"struct rocket::Rocket\") instance with a custom config provider: aliases [`Rocket::custom()`](https://docs.rs/rocket/latest/rocket/struct.Rocket.html#method.custom \"associated function rocket::Rocket::custom\").\n\n[execute](https://docs.rs/rocket/latest/rocket/fn.execute.html \"fn rocket::execute\")\n    Executes a `future` to completion on a new tokio-based Rocket async runtime.\n## Attribute Macros[\u00a7](https://docs.rs/rocket/latest/rocket/#attributes)\n\n[async_test](https://docs.rs/rocket/latest/rocket/attr.async_test.html \"attr rocket::async_test\")\n    Retrofits supports for `async fn` in unit tests.\n\n[async_trait](https://docs.rs/rocket/latest/rocket/attr.async_trait.html \"attr rocket::async_trait\")\n    Retrofits support for `async fn` in trait impls and declarations.\n\n[catch](https://docs.rs/rocket/latest/rocket/attr.catch.html \"attr rocket::catch\")\n    Attribute to generate a [`Catcher`](https://docs.rs/rocket/latest/rocket/struct.Catcher.html) and associated metadata.\n\n[delete](https://docs.rs/rocket/latest/rocket/attr.delete.html \"attr rocket::delete\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[get](https://docs.rs/rocket/latest/rocket/attr.get.html \"attr rocket::get\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[head](https://docs.rs/rocket/latest/rocket/attr.head.html \"attr rocket::head\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[launch](https://docs.rs/rocket/latest/rocket/attr.launch.html \"attr rocket::launch\")\n    Generates a `main` function that launches a returned `Rocket<Build>`.\n\n[main](https://docs.rs/rocket/latest/rocket/attr.main.html \"attr rocket::main\")\n    Retrofits `async fn` support in `main` functions.\n\n[options](https://docs.rs/rocket/latest/rocket/attr.options.html \"attr rocket::options\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[patch](https://docs.rs/rocket/latest/rocket/attr.patch.html \"attr rocket::patch\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[post](https://docs.rs/rocket/latest/rocket/attr.post.html \"attr rocket::post\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[put](https://docs.rs/rocket/latest/rocket/attr.put.html \"attr rocket::put\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n\n[route](https://docs.rs/rocket/latest/rocket/attr.route.html \"attr rocket::route\")\n    Attribute to generate a [`Route`](https://docs.rs/rocket/latest/rocket/attr.route.html) and associated metadata.\n## Derive Macros[\u00a7](https://docs.rs/rocket/latest/rocket/#derives)\n\n[FromForm](https://docs.rs/rocket/latest/rocket/derive.FromForm.html \"derive rocket::FromForm\")\n    Derive for the [`FromForm`](https://docs.rs/rocket/latest/rocket/form/trait.FromForm.html) trait.\n\n[FromFormField](https://docs.rs/rocket/latest/rocket/derive.FromFormField.html \"derive rocket::FromFormField\")\n    Derive for the [`FromFormField`](https://docs.rs/rocket/latest/rocket/form/trait.FromFormField.html) trait.\n\n[Responder](https://docs.rs/rocket/latest/rocket/derive.Responder.html \"derive rocket::Responder\")\n    Derive for the [`Responder`](https://docs.rs/rocket/latest/rocket/response/trait.Responder.html) trait.\n\n[UriDisplayPath](https://docs.rs/rocket/latest/rocket/derive.UriDisplayPath.html \"derive rocket::UriDisplayPath\")\n    Derive for the [`UriDisplay<Path>`](https://docs.rs/rocket/latest/rocket/http/uri/fmt/trait.UriDisplay.html) trait.\n\n[UriDisplayQuery](https://docs.rs/rocket/latest/rocket/derive.UriDisplayQuery.html \"derive rocket::UriDisplayQuery\")\n    Derive for the [`UriDisplay<Query>`](https://docs.rs/rocket/latest/rocket/http/uri/fmt/trait.UriDisplay.html) trait.\n",
        "markdown_with_citations": "[](https://docs.rs/rocket/latest/rocket/all.html \"show sidebar\")\n# Crate rocketCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n## \u00a7\u27e84\u27e9Rocket - Core API Documentation\nHello, and welcome to the core Rocket API documentation!\nThis API documentation is highly technical and is purely a reference. There\u2019s an overview\u27e85\u27e9 of Rocket on the main site as well as a full, detailed guide\u27e86\u27e9. If you\u2019d like pointers on getting started, see the quickstart\u27e87\u27e9 or getting started\u27e88\u27e9 chapters of the guide.\n### \u00a7\u27e89\u27e9Usage\nDepend on `rocket` in `Cargo.toml`:\n```\n[dependencies]\nrocket = \"0.5.1\"\n```\n\nNote that development versions, tagged with `-dev`, are not published and need to be specified as git dependencies\u27e810\u27e9.\nSee the guide\u27e86\u27e9 for more information on how to write Rocket applications. Here\u2019s a simple example to get you started:\n```\n#[macro_use] extern crate rocket;\n#[get(\"/\")]\nfn hello() -> &'static str {\n  \"Hello, world!\"\n}\n#[launch]\nfn rocket() -> _ {\n  rocket::build().mount(\"/\", routes![hello])\n}\n```\n\n### \u00a7\u27e811\u27e9Features\nTo avoid compiling unused dependencies, Rocket gates certain features. With the exception of `http2`, all are disabled by default:\nFeature| Description  \n---|---  \n`secrets`| Support for authenticated, encrypted private cookies\u27e812\u27e9.  \n`tls`| Support for TLS\u27e813\u27e9 encrypted connections.  \n`mtls`| Support for verified clients via mutual TLS\u27e814\u27e9.  \n`http2`| Support for HTTP/2 (enabled by default).  \n`json`| Support for JSON (de)serialization\u27e815\u27e9.  \n`msgpack`| Support for MessagePack (de)serialization\u27e816\u27e9.  \n`uuid`| Support for UUID value parsing and (de)serialization\u27e817\u27e9.  \nDisabled features can be selectively enabled in `Cargo.toml`:\n```\n[dependencies]\nrocket = { version = \"0.5.1\", features = [\"secrets\", \"tls\", \"json\"] }\n```\n\nConversely, HTTP/2 can be disabled:\n```\n[dependencies]\nrocket = { version = \"0.5.1\", default-features = false }\n```\n\n### \u00a7\u27e818\u27e9Configuration\nRocket offers a rich, extensible configuration system built on Figment\u27e819\u27e9. By default, Rocket applications are configured via a `Rocket.toml` file and/or `ROCKET_{PARAM}` environment variables, but applications may configure their own sources. See the configuration guide\u27e820\u27e9 for full details.\n### \u00a7\u27e821\u27e9Testing\nThe `local`\u27e822\u27e9 module contains structures that facilitate unit and integration testing of a Rocket application. The top-level `local`\u27e822\u27e9 module documentation and the testing guide\u27e823\u27e9 include detailed examples.\n## Re-exports\u00a7\u27e824\u27e9\n\n`pub use futures[](https://docs.rs/futures/0.3.31/x86_64-unknown-linux-gnu/futures/index.html \"mod futures\");`\n\n\n`pub use tokio[](https://docs.rs/tokio/1.45.0/x86_64-unknown-linux-gnu/tokio/index.html \"mod tokio\");`\n\n\n`pub use figment[](https://docs.rs/figment/0.10.19/x86_64-unknown-linux-gnu/figment/index.html \"mod figment\");`\n\n\n`pub use time[](https://docs.rs/time/0.3.41/x86_64-unknown-linux-gnu/time/index.html \"mod time\");`\n\n## Modules\u00a7\u27e825\u27e9\n\ncatcher\u27e826\u27e9\n    Types and traits for error catchers and their handlers and return types.\n\nconfig\u27e827\u27e9\n    Server and application configuration.\n\ndata\u27e828\u27e9\n    Types and traits for handling incoming body data.\n\nerror\u27e829\u27e9\n    Types representing various errors that can occur in a Rocket application.\n\nfairing\u27e830\u27e9\n    Fairings: callbacks at launch, liftoff, request, and response time.\n\nform\u27e831\u27e9\n    Parsing and validation of HTTP forms and fields.\n\nfs\u27e832\u27e9\n    File serving, file accepting, and file metadata types.\n\nhttp\u27e833\u27e9\n    Types that map to concepts in HTTP.\n\nlocal\u27e822\u27e9\n    Structures for local dispatching of requests, primarily for testing.\n\nmtls\u27e814\u27e9`mtls`\n    Support for mutual TLS client certificates.\n\noutcome\u27e834\u27e9\n    Success, error, and forward handling.\n\nrequest\u27e835\u27e9\n    Types and traits for request parsing and handling.\n\nresponse\u27e836\u27e9\n    Types and traits to build and send responses.\n\nroute\u27e837\u27e9\n    Types and traits for routes and their request handlers and return types.\n\nserde\u27e838\u27e9\n    Serialization and deserialization support.\n\nshield\u27e839\u27e9\n    Security and privacy headers for all outgoing responses.\n## Macros\u00a7\u27e840\u27e9\n\ncatchers\u27e841\u27e9\n    Generates a `Vec` of `Catcher`\u27e842\u27e9s from a set of catcher paths.\n\nroutes\u27e843\u27e9\n    Generates a `Vec` of `Route`\u27e844\u27e9s from a set of route paths.\n\nuri\u27e845\u27e9\n    Type-safe, encoding-safe route and non-route URI generation.\n## Structs\u00a7\u27e846\u27e9\n\nCatcher\u27e842\u27e9\n    An error catching route.\n\nConfig\u27e847\u27e9\n    Rocket server configuration.\n\nData\u27e848\u27e9\n    Type representing the body data of a request.\n\nError\u27e849\u27e9\n    An error that occurs during launch.\n\nRequest\u27e850\u27e9\n    The type of an incoming web request.\n\nResponse\u27e851\u27e9\n    A response, as returned by types implementing `Responder`\u27e852\u27e9.\n\nRocket\u27e853\u27e9\n    The application server itself.\n\nRoute\u27e844\u27e9\n    A request handling route.\n\nShutdown\u27e854\u27e9\n    A request guard and future for graceful shutdown.\n\nState\u27e855\u27e9\n    Request guard to retrieve managed state.\n## Enums\u00a7\u27e856\u27e9\n\nBuild\u27e857\u27e9\n    The initial launch `Phase`\u27e858\u27e9. See Rocket#build\u27e859\u27e9 for phase details.\n\nIgnite\u27e860\u27e9\n    The second launch `Phase`\u27e858\u27e9: post-build but pre-orbit. See Rocket#ignite\u27e861\u27e9 for details.\n\nOrbit\u27e862\u27e9\n    The final launch `Phase`\u27e858\u27e9. See Rocket#orbit\u27e863\u27e9 for details.\n## Traits\u00a7\u27e864\u27e9\n\nPhase\u27e858\u27e9\n    A marker trait for Rocket\u2019s launch phases.\n\nSentinel\u27e865\u27e9\n    An automatic last line of defense against launching an invalid `Rocket`\u27e853\u27e9.\n## Functions\u00a7\u27e866\u27e9\n\nbuild\u27e867\u27e9\n    Creates a `Rocket`\u27e853\u27e9 instance with the default config provider: aliases `Rocket::build()`\u27e868\u27e9.\n\ncustom\u27e869\u27e9\n    Creates a `Rocket`\u27e853\u27e9 instance with a custom config provider: aliases `Rocket::custom()`\u27e870\u27e9.\n\nexecute\u27e871\u27e9\n    Executes a `future` to completion on a new tokio-based Rocket async runtime.\n## Attribute Macros\u00a7\u27e872\u27e9\n\nasync_test\u27e873\u27e9\n    Retrofits supports for `async fn` in unit tests.\n\nasync_trait\u27e874\u27e9\n    Retrofits support for `async fn` in trait impls and declarations.\n\ncatch\u27e875\u27e9\n    Attribute to generate a `Catcher`\u27e842\u27e9 and associated metadata.\n\ndelete\u27e876\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\nget\u27e878\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\nhead\u27e879\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\nlaunch\u27e880\u27e9\n    Generates a `main` function that launches a returned `Rocket<Build>`.\n\nmain\u27e881\u27e9\n    Retrofits `async fn` support in `main` functions.\n\noptions\u27e882\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\npatch\u27e883\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\npost\u27e884\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\nput\u27e885\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n\nroute\u27e877\u27e9\n    Attribute to generate a `Route`\u27e877\u27e9 and associated metadata.\n## Derive Macros\u00a7\u27e886\u27e9\n\nFromForm\u27e887\u27e9\n    Derive for the `FromForm`\u27e888\u27e9 trait.\n\nFromFormField\u27e889\u27e9\n    Derive for the `FromFormField`\u27e890\u27e9 trait.\n\nResponder\u27e891\u27e9\n    Derive for the `Responder`\u27e852\u27e9 trait.\n\nUriDisplayPath\u27e892\u27e9\n    Derive for the `UriDisplay<Path>`\u27e893\u27e9 trait.\n\nUriDisplayQuery\u27e894\u27e9\n    Derive for the `UriDisplay<Query>`\u27e893\u27e9 trait.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rocket/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rocket/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rocket/latest/src/rocket/lib.rs.html#1-364: Source\n\u27e84\u27e9 https://docs.rs/rocket/latest/rocket/#rocket---core-api-documentation: \u00a7\n\u27e85\u27e9 https://rocket.rs/v0.5/overview: overview\n\u27e86\u27e9 https://rocket.rs/v0.5/guide: full, detailed guide\n\u27e87\u27e9 https://rocket.rs/v0.5/guide/quickstart: quickstart\n\u27e88\u27e9 https://rocket.rs/v0.5/guide/getting-started: getting started\n\u27e89\u27e9 https://docs.rs/rocket/latest/rocket/#usage: \u00a7\n\u27e810\u27e9 https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-git-repositories: git dependencies\n\u27e811\u27e9 https://docs.rs/rocket/latest/rocket/#features: \u00a7\n\u27e812\u27e9 https://rocket.rs/v0.5/guide/requests/#private-cookies: private cookies\n\u27e813\u27e9 https://rocket.rs/v0.5/guide/configuration/#tls: TLS\n\u27e814\u27e9 https://docs.rs/rocket/latest/rocket/mtls/index.html: mod rocket::mtls - mutual TLS\n\u27e815\u27e9 https://docs.rs/rocket/latest/rocket/serde/json/index.html: mod rocket::serde::json - JSON (de)serialization\n\u27e816\u27e9 https://docs.rs/rocket/latest/rocket/serde/msgpack/index.html: mod rocket::serde::msgpack - MessagePack (de)serialization\n\u27e817\u27e9 https://docs.rs/rocket/latest/rocket/serde/uuid/index.html: mod rocket::serde::uuid - UUID value parsing and (de)serialization\n\u27e818\u27e9 https://docs.rs/rocket/latest/rocket/#configuration: \u00a7\n\u27e819\u27e9 https://docs.rs/figment: Figment\n\u27e820\u27e9 https://rocket.rs/v0.5/guide/configuration/: configuration guide\n\u27e821\u27e9 https://docs.rs/rocket/latest/rocket/#testing: \u00a7\n\u27e822\u27e9 https://docs.rs/rocket/latest/rocket/local/index.html: mod rocket::local - `local`\n\u27e823\u27e9 https://rocket.rs/v0.5/guide/testing/#testing: testing guide\n\u27e824\u27e9 https://docs.rs/rocket/latest/rocket/#reexports: \u00a7\n\u27e825\u27e9 https://docs.rs/rocket/latest/rocket/#modules: \u00a7\n\u27e826\u27e9 https://docs.rs/rocket/latest/rocket/catcher/index.html: mod rocket::catcher - catcher\n\u27e827\u27e9 https://docs.rs/rocket/latest/rocket/config/index.html: mod rocket::config - config\n\u27e828\u27e9 https://docs.rs/rocket/latest/rocket/data/index.html: mod rocket::data - data\n\u27e829\u27e9 https://docs.rs/rocket/latest/rocket/error/index.html: mod rocket::error - error\n\u27e830\u27e9 https://docs.rs/rocket/latest/rocket/fairing/index.html: mod rocket::fairing - fairing\n\u27e831\u27e9 https://docs.rs/rocket/latest/rocket/form/index.html: mod rocket::form - form\n\u27e832\u27e9 https://docs.rs/rocket/latest/rocket/fs/index.html: mod rocket::fs - fs\n\u27e833\u27e9 https://docs.rs/rocket/latest/rocket/http/index.html: mod rocket::http - http\n\u27e834\u27e9 https://docs.rs/rocket/latest/rocket/outcome/index.html: mod rocket::outcome - outcome\n\u27e835\u27e9 https://docs.rs/rocket/latest/rocket/request/index.html: mod rocket::request - request\n\u27e836\u27e9 https://docs.rs/rocket/latest/rocket/response/index.html: mod rocket::response - response\n\u27e837\u27e9 https://docs.rs/rocket/latest/rocket/route/index.html: mod rocket::route - route\n\u27e838\u27e9 https://docs.rs/rocket/latest/rocket/serde/index.html: mod rocket::serde - serde\n\u27e839\u27e9 https://docs.rs/rocket/latest/rocket/shield/index.html: mod rocket::shield - shield\n\u27e840\u27e9 https://docs.rs/rocket/latest/rocket/#macros: \u00a7\n\u27e841\u27e9 https://docs.rs/rocket/latest/rocket/macro.catchers.html: macro rocket::catchers - catchers\n\u27e842\u27e9 https://docs.rs/rocket/latest/rocket/struct.Catcher.html: `Catcher`\n\u27e843\u27e9 https://docs.rs/rocket/latest/rocket/macro.routes.html: macro rocket::routes - routes\n\u27e844\u27e9 https://docs.rs/rocket/latest/rocket/struct.Route.html: `Route`\n\u27e845\u27e9 https://docs.rs/rocket/latest/rocket/macro.uri.html: macro rocket::uri - uri\n\u27e846\u27e9 https://docs.rs/rocket/latest/rocket/#structs: \u00a7\n\u27e847\u27e9 https://docs.rs/rocket/latest/rocket/struct.Config.html: struct rocket::Config - Config\n\u27e848\u27e9 https://docs.rs/rocket/latest/rocket/struct.Data.html: struct rocket::Data - Data\n\u27e849\u27e9 https://docs.rs/rocket/latest/rocket/struct.Error.html: struct rocket::Error - Error\n\u27e850\u27e9 https://docs.rs/rocket/latest/rocket/struct.Request.html: struct rocket::Request - Request\n\u27e851\u27e9 https://docs.rs/rocket/latest/rocket/struct.Response.html: struct rocket::Response - Response\n\u27e852\u27e9 https://docs.rs/rocket/latest/rocket/response/trait.Responder.html: trait rocket::response::Responder - `Responder`\n\u27e853\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html: struct rocket::Rocket - Rocket\n\u27e854\u27e9 https://docs.rs/rocket/latest/rocket/struct.Shutdown.html: struct rocket::Shutdown - Shutdown\n\u27e855\u27e9 https://docs.rs/rocket/latest/rocket/struct.State.html: struct rocket::State - State\n\u27e856\u27e9 https://docs.rs/rocket/latest/rocket/#enums: \u00a7\n\u27e857\u27e9 https://docs.rs/rocket/latest/rocket/enum.Build.html: enum rocket::Build - Build\n\u27e858\u27e9 https://docs.rs/rocket/latest/rocket/trait.Phase.html: trait rocket::Phase - `Phase`\n\u27e859\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html#build: struct rocket::Rocket - Rocket#build\n\u27e860\u27e9 https://docs.rs/rocket/latest/rocket/enum.Ignite.html: enum rocket::Ignite - Ignite\n\u27e861\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html#ignite: struct rocket::Rocket - Rocket#ignite\n\u27e862\u27e9 https://docs.rs/rocket/latest/rocket/enum.Orbit.html: enum rocket::Orbit - Orbit\n\u27e863\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html#orbit: struct rocket::Rocket - Rocket#orbit\n\u27e864\u27e9 https://docs.rs/rocket/latest/rocket/#traits: \u00a7\n\u27e865\u27e9 https://docs.rs/rocket/latest/rocket/trait.Sentinel.html: trait rocket::Sentinel - Sentinel\n\u27e866\u27e9 https://docs.rs/rocket/latest/rocket/#functions: \u00a7\n\u27e867\u27e9 https://docs.rs/rocket/latest/rocket/fn.build.html: fn rocket::build - build\n\u27e868\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html#method.build: associated function rocket::Rocket::build - `Rocket::build()`\n\u27e869\u27e9 https://docs.rs/rocket/latest/rocket/fn.custom.html: fn rocket::custom - custom\n\u27e870\u27e9 https://docs.rs/rocket/latest/rocket/struct.Rocket.html#method.custom: associated function rocket::Rocket::custom - `Rocket::custom()`\n\u27e871\u27e9 https://docs.rs/rocket/latest/rocket/fn.execute.html: fn rocket::execute - execute\n\u27e872\u27e9 https://docs.rs/rocket/latest/rocket/#attributes: \u00a7\n\u27e873\u27e9 https://docs.rs/rocket/latest/rocket/attr.async_test.html: attr rocket::async_test - async_test\n\u27e874\u27e9 https://docs.rs/rocket/latest/rocket/attr.async_trait.html: attr rocket::async_trait - async_trait\n\u27e875\u27e9 https://docs.rs/rocket/latest/rocket/attr.catch.html: attr rocket::catch - catch\n\u27e876\u27e9 https://docs.rs/rocket/latest/rocket/attr.delete.html: attr rocket::delete - delete\n\u27e877\u27e9 https://docs.rs/rocket/latest/rocket/attr.route.html: `Route`\n\u27e878\u27e9 https://docs.rs/rocket/latest/rocket/attr.get.html: attr rocket::get - get\n\u27e879\u27e9 https://docs.rs/rocket/latest/rocket/attr.head.html: attr rocket::head - head\n\u27e880\u27e9 https://docs.rs/rocket/latest/rocket/attr.launch.html: attr rocket::launch - launch\n\u27e881\u27e9 https://docs.rs/rocket/latest/rocket/attr.main.html: attr rocket::main - main\n\u27e882\u27e9 https://docs.rs/rocket/latest/rocket/attr.options.html: attr rocket::options - options\n\u27e883\u27e9 https://docs.rs/rocket/latest/rocket/attr.patch.html: attr rocket::patch - patch\n\u27e884\u27e9 https://docs.rs/rocket/latest/rocket/attr.post.html: attr rocket::post - post\n\u27e885\u27e9 https://docs.rs/rocket/latest/rocket/attr.put.html: attr rocket::put - put\n\u27e886\u27e9 https://docs.rs/rocket/latest/rocket/#derives: \u00a7\n\u27e887\u27e9 https://docs.rs/rocket/latest/rocket/derive.FromForm.html: derive rocket::FromForm - FromForm\n\u27e888\u27e9 https://docs.rs/rocket/latest/rocket/form/trait.FromForm.html: `FromForm`\n\u27e889\u27e9 https://docs.rs/rocket/latest/rocket/derive.FromFormField.html: derive rocket::FromFormField - FromFormField\n\u27e890\u27e9 https://docs.rs/rocket/latest/rocket/form/trait.FromFormField.html: `FromFormField`\n\u27e891\u27e9 https://docs.rs/rocket/latest/rocket/derive.Responder.html: derive rocket::Responder - Responder\n\u27e892\u27e9 https://docs.rs/rocket/latest/rocket/derive.UriDisplayPath.html: derive rocket::UriDisplayPath - UriDisplayPath\n\u27e893\u27e9 https://docs.rs/rocket/latest/rocket/http/uri/fmt/trait.UriDisplay.html: `UriDisplay<Path>`\n\u27e894\u27e9 https://docs.rs/rocket/latest/rocket/derive.UriDisplayQuery.html: derive rocket::UriDisplayQuery - UriDisplayQuery\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `rocket` crate is a web framework for building fast and flexible web applications in Rust. It offers features like type-safe routing, request handling, and response generation, along with support for JSON and MessagePack serialization, private cookies, TLS, and HTTP/2. It includes an extensible configuration system, testing utilities, and macros for defining routes and error handlers, making it easy to create robust and secure web services.",
    "feature_summary": null,
    "use_case": "Web Framework",
    "score": 8.5,
    "factual_counterfactual": "### Pair 1: Feature Support  \n\u2705 Factual: Rocket supports HTTP/2 by default, enabling faster and more efficient communication between clients and servers.  \n\u274c Counterfactual: Rocket disables HTTP/2 by default and requires manual configuration to enable it.  \n\n---\n\n### Pair 2: JSON Serialization  \n\u2705 Factual: Rocket provides built-in support for JSON (de)serialization through the `json` feature, which can be enabled in `Cargo.toml`.  \n\u274c Counterfactual: Rocket does not support JSON serialization natively and requires third-party crates for JSON handling.  \n\n---\n\n### Pair 3: Configuration System  \n\u2705 Factual: Rocket uses Figment as its configuration system, allowing applications to be configured via `Rocket.toml` files or environment variables.  \n\u274c Counterfactual: Rocket relies on hardcoded configuration values and does not support external configuration files like `Rocket.toml`.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}