{
    "name": "webpki",
    "version": "0.22.4",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/webpki/latest/webpki/all.html \"show sidebar\")\n# Crate webpkiCopy item path\n[Settings](https://docs.rs/webpki/latest/settings.html)\n[Help](https://docs.rs/webpki/latest/help.html)\nSummary[Source](https://docs.rs/webpki/latest/src/webpki/lib.rs.html#15-103)\nExpand description\nwebpki: Web PKI X.509 Certificate Validation.\nSee `EndEntityCert`\u2019s documentation for a description of the certificate processing steps necessary for a TLS connection.\n## [\u00a7](https://docs.rs/webpki/latest/webpki/#features)Features\nFeature| Description  \n---|---  \n`alloc`| Enable features that require use of the heap. Currently all RSA signature algorithms require this feature.  \n`std`| Enable features that require libstd. Implies `alloc`.  \n## Structs[\u00a7](https://docs.rs/webpki/latest/webpki/#structs)\n\n[DnsName](https://docs.rs/webpki/latest/webpki/struct.DnsName.html \"struct webpki::DnsName\")\n    Requires the `alloc` feature. A DNS Name suitable for use in the TLS Server Name Indication (SNI) extension and/or for use as the reference hostname for which to verify a certificate.\n\n[DnsNameRef](https://docs.rs/webpki/latest/webpki/struct.DnsNameRef.html \"struct webpki::DnsNameRef\")\n    A reference to a DNS Name suitable for use in the TLS Server Name Indication (SNI) extension and/or for use as the reference hostname for which to verify a certificate.\n\n[EndEntityCert](https://docs.rs/webpki/latest/webpki/struct.EndEntityCert.html \"struct webpki::EndEntityCert\")\n    An end-entity certificate.\n\n[InvalidDnsNameError](https://docs.rs/webpki/latest/webpki/struct.InvalidDnsNameError.html \"struct webpki::InvalidDnsNameError\")\n    An error indicating that a `DnsNameRef` could not built because the input is not a syntactically-valid DNS Name.\n\n[SignatureAlgorithm](https://docs.rs/webpki/latest/webpki/struct.SignatureAlgorithm.html \"struct webpki::SignatureAlgorithm\")\n    A signature algorithm.\n\n[Time](https://docs.rs/webpki/latest/webpki/struct.Time.html \"struct webpki::Time\")\n    The time type.\n\n[TlsClientTrustAnchors](https://docs.rs/webpki/latest/webpki/struct.TlsClientTrustAnchors.html \"struct webpki::TlsClientTrustAnchors\")\n    Trust anchors which may be used for authenticating clients.\n\n[TlsServerTrustAnchors](https://docs.rs/webpki/latest/webpki/struct.TlsServerTrustAnchors.html \"struct webpki::TlsServerTrustAnchors\")\n    Trust anchors which may be used for authenticating servers.\n\n[TrustAnchor](https://docs.rs/webpki/latest/webpki/struct.TrustAnchor.html \"struct webpki::TrustAnchor\")\n    A trust anchor (a.k.a. root CA).\n## Enums[\u00a7](https://docs.rs/webpki/latest/webpki/#enums)\n\n[Error](https://docs.rs/webpki/latest/webpki/enum.Error.html \"enum webpki::Error\")\n    An error that occurs during certificate validation or name validation.\n\n[ErrorExt](https://docs.rs/webpki/latest/webpki/enum.ErrorExt.html \"enum webpki::ErrorExt\")\n    An error that occurs during certificate validation or name validation.\n## Statics[\u00a7](https://docs.rs/webpki/latest/webpki/#statics)\n\n[ECDSA_P256_SHA256](https://docs.rs/webpki/latest/webpki/static.ECDSA_P256_SHA256.html \"static webpki::ECDSA_P256_SHA256\")\n    ECDSA signatures using the P-256 curve and SHA-256.\n\n[ECDSA_P256_SHA384](https://docs.rs/webpki/latest/webpki/static.ECDSA_P256_SHA384.html \"static webpki::ECDSA_P256_SHA384\")\n    ECDSA signatures using the P-256 curve and SHA-384. Deprecated.\n\n[ECDSA_P384_SHA256](https://docs.rs/webpki/latest/webpki/static.ECDSA_P384_SHA256.html \"static webpki::ECDSA_P384_SHA256\")\n    ECDSA signatures using the P-384 curve and SHA-256. Deprecated.\n\n[ECDSA_P384_SHA384](https://docs.rs/webpki/latest/webpki/static.ECDSA_P384_SHA384.html \"static webpki::ECDSA_P384_SHA384\")\n    ECDSA signatures using the P-384 curve and SHA-384.\n\n[ED25519](https://docs.rs/webpki/latest/webpki/static.ED25519.html \"static webpki::ED25519\")\n    ED25519 signatures according to RFC 8410\n\n[RSA_PKCS1_2048_8192_SHA256](https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA256.html \"static webpki::RSA_PKCS1_2048_8192_SHA256\")\n    RSA PKCS#1 1.5 signatures using SHA-256 for keys of 2048-8192 bits.\n\n[RSA_PKCS1_2048_8192_SHA384](https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA384.html \"static webpki::RSA_PKCS1_2048_8192_SHA384\")\n    RSA PKCS#1 1.5 signatures using SHA-384 for keys of 2048-8192 bits.\n\n[RSA_PKCS1_2048_8192_SHA512](https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA512.html \"static webpki::RSA_PKCS1_2048_8192_SHA512\")\n    RSA PKCS#1 1.5 signatures using SHA-512 for keys of 2048-8192 bits.\n\n[RSA_PKCS1_3072_8192_SHA384](https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_3072_8192_SHA384.html \"static webpki::RSA_PKCS1_3072_8192_SHA384\")\n    RSA PKCS#1 1.5 signatures using SHA-384 for keys of 3072-8192 bits.\n\n[RSA_PSS_2048_8192_SHA256_LEGACY_KEY](https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA256_LEGACY_KEY.html \"static webpki::RSA_PSS_2048_8192_SHA256_LEGACY_KEY\")\n    RSA PSS signatures using SHA-256 for keys of 2048-8192 bits and of type rsaEncryption; see [RFC 4055 Section 1.2](https://tools.ietf.org/html/rfc4055#section-1.2).\n\n[RSA_PSS_2048_8192_SHA384_LEGACY_KEY](https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA384_LEGACY_KEY.html \"static webpki::RSA_PSS_2048_8192_SHA384_LEGACY_KEY\")\n    RSA PSS signatures using SHA-384 for keys of 2048-8192 bits and of type rsaEncryption; see [RFC 4055 Section 1.2](https://tools.ietf.org/html/rfc4055#section-1.2).\n\n[RSA_PSS_2048_8192_SHA512_LEGACY_KEY](https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA512_LEGACY_KEY.html \"static webpki::RSA_PSS_2048_8192_SHA512_LEGACY_KEY\")\n    RSA PSS signatures using SHA-512 for keys of 2048-8192 bits and of type rsaEncryption; see [RFC 4055 Section 1.2](https://tools.ietf.org/html/rfc4055#section-1.2).\n## Type Aliases[\u00a7](https://docs.rs/webpki/latest/webpki/#types)\n\n[DNSName](https://docs.rs/webpki/latest/webpki/type.DNSName.html \"type webpki::DNSName\")Deprecated\n\n\n[DNSNameRef](https://docs.rs/webpki/latest/webpki/type.DNSNameRef.html \"type webpki::DNSNameRef\")Deprecated\n\n\n[TLSClientTrustAnchors](https://docs.rs/webpki/latest/webpki/type.TLSClientTrustAnchors.html \"type webpki::TLSClientTrustAnchors\")Deprecated\n\n\n[TLSServerTrustAnchors](https://docs.rs/webpki/latest/webpki/type.TLSServerTrustAnchors.html \"type webpki::TLSServerTrustAnchors\")Deprecated\n\n",
        "markdown_with_citations": "[](https://docs.rs/webpki/latest/webpki/all.html \"show sidebar\")\n# Crate webpkiCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nwebpki: Web PKI X.509 Certificate Validation.\nSee `EndEntityCert`\u2019s documentation for a description of the certificate processing steps necessary for a TLS connection.\n## \u00a7\u27e84\u27e9Features\nFeature| Description  \n---|---  \n`alloc`| Enable features that require use of the heap. Currently all RSA signature algorithms require this feature.  \n`std`| Enable features that require libstd. Implies `alloc`.  \n## Structs\u00a7\u27e85\u27e9\n\nDnsName\u27e86\u27e9\n    Requires the `alloc` feature. A DNS Name suitable for use in the TLS Server Name Indication (SNI) extension and/or for use as the reference hostname for which to verify a certificate.\n\nDnsNameRef\u27e87\u27e9\n    A reference to a DNS Name suitable for use in the TLS Server Name Indication (SNI) extension and/or for use as the reference hostname for which to verify a certificate.\n\nEndEntityCert\u27e88\u27e9\n    An end-entity certificate.\n\nInvalidDnsNameError\u27e89\u27e9\n    An error indicating that a `DnsNameRef` could not built because the input is not a syntactically-valid DNS Name.\n\nSignatureAlgorithm\u27e810\u27e9\n    A signature algorithm.\n\nTime\u27e811\u27e9\n    The time type.\n\nTlsClientTrustAnchors\u27e812\u27e9\n    Trust anchors which may be used for authenticating clients.\n\nTlsServerTrustAnchors\u27e813\u27e9\n    Trust anchors which may be used for authenticating servers.\n\nTrustAnchor\u27e814\u27e9\n    A trust anchor (a.k.a. root CA).\n## Enums\u00a7\u27e815\u27e9\n\nError\u27e816\u27e9\n    An error that occurs during certificate validation or name validation.\n\nErrorExt\u27e817\u27e9\n    An error that occurs during certificate validation or name validation.\n## Statics\u00a7\u27e818\u27e9\n\nECDSA_P256_SHA256\u27e819\u27e9\n    ECDSA signatures using the P-256 curve and SHA-256.\n\nECDSA_P256_SHA384\u27e820\u27e9\n    ECDSA signatures using the P-256 curve and SHA-384. Deprecated.\n\nECDSA_P384_SHA256\u27e821\u27e9\n    ECDSA signatures using the P-384 curve and SHA-256. Deprecated.\n\nECDSA_P384_SHA384\u27e822\u27e9\n    ECDSA signatures using the P-384 curve and SHA-384.\n\nED25519\u27e823\u27e9\n    ED25519 signatures according to RFC 8410\n\nRSA_PKCS1_2048_8192_SHA256\u27e824\u27e9\n    RSA PKCS#1 1.5 signatures using SHA-256 for keys of 2048-8192 bits.\n\nRSA_PKCS1_2048_8192_SHA384\u27e825\u27e9\n    RSA PKCS#1 1.5 signatures using SHA-384 for keys of 2048-8192 bits.\n\nRSA_PKCS1_2048_8192_SHA512\u27e826\u27e9\n    RSA PKCS#1 1.5 signatures using SHA-512 for keys of 2048-8192 bits.\n\nRSA_PKCS1_3072_8192_SHA384\u27e827\u27e9\n    RSA PKCS#1 1.5 signatures using SHA-384 for keys of 3072-8192 bits.\n\nRSA_PSS_2048_8192_SHA256_LEGACY_KEY\u27e828\u27e9\n    RSA PSS signatures using SHA-256 for keys of 2048-8192 bits and of type rsaEncryption; see RFC 4055 Section 1.2\u27e829\u27e9.\n\nRSA_PSS_2048_8192_SHA384_LEGACY_KEY\u27e830\u27e9\n    RSA PSS signatures using SHA-384 for keys of 2048-8192 bits and of type rsaEncryption; see RFC 4055 Section 1.2\u27e829\u27e9.\n\nRSA_PSS_2048_8192_SHA512_LEGACY_KEY\u27e831\u27e9\n    RSA PSS signatures using SHA-512 for keys of 2048-8192 bits and of type rsaEncryption; see RFC 4055 Section 1.2\u27e829\u27e9.\n## Type Aliases\u00a7\u27e832\u27e9\n\nDNSName\u27e833\u27e9Deprecated\n\n\nDNSNameRef\u27e834\u27e9Deprecated\n\n\nTLSClientTrustAnchors\u27e835\u27e9Deprecated\n\n\nTLSServerTrustAnchors\u27e836\u27e9Deprecated\n\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/webpki/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/webpki/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/webpki/latest/src/webpki/lib.rs.html#15-103: Source\n\u27e84\u27e9 https://docs.rs/webpki/latest/webpki/#features: \u00a7\n\u27e85\u27e9 https://docs.rs/webpki/latest/webpki/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/webpki/latest/webpki/struct.DnsName.html: struct webpki::DnsName - DnsName\n\u27e87\u27e9 https://docs.rs/webpki/latest/webpki/struct.DnsNameRef.html: struct webpki::DnsNameRef - DnsNameRef\n\u27e88\u27e9 https://docs.rs/webpki/latest/webpki/struct.EndEntityCert.html: struct webpki::EndEntityCert - EndEntityCert\n\u27e89\u27e9 https://docs.rs/webpki/latest/webpki/struct.InvalidDnsNameError.html: struct webpki::InvalidDnsNameError - InvalidDnsNameError\n\u27e810\u27e9 https://docs.rs/webpki/latest/webpki/struct.SignatureAlgorithm.html: struct webpki::SignatureAlgorithm - SignatureAlgorithm\n\u27e811\u27e9 https://docs.rs/webpki/latest/webpki/struct.Time.html: struct webpki::Time - Time\n\u27e812\u27e9 https://docs.rs/webpki/latest/webpki/struct.TlsClientTrustAnchors.html: struct webpki::TlsClientTrustAnchors - TlsClientTrustAnchors\n\u27e813\u27e9 https://docs.rs/webpki/latest/webpki/struct.TlsServerTrustAnchors.html: struct webpki::TlsServerTrustAnchors - TlsServerTrustAnchors\n\u27e814\u27e9 https://docs.rs/webpki/latest/webpki/struct.TrustAnchor.html: struct webpki::TrustAnchor - TrustAnchor\n\u27e815\u27e9 https://docs.rs/webpki/latest/webpki/#enums: \u00a7\n\u27e816\u27e9 https://docs.rs/webpki/latest/webpki/enum.Error.html: enum webpki::Error - Error\n\u27e817\u27e9 https://docs.rs/webpki/latest/webpki/enum.ErrorExt.html: enum webpki::ErrorExt - ErrorExt\n\u27e818\u27e9 https://docs.rs/webpki/latest/webpki/#statics: \u00a7\n\u27e819\u27e9 https://docs.rs/webpki/latest/webpki/static.ECDSA_P256_SHA256.html: static webpki::ECDSA_P256_SHA256 - ECDSA_P256_SHA256\n\u27e820\u27e9 https://docs.rs/webpki/latest/webpki/static.ECDSA_P256_SHA384.html: static webpki::ECDSA_P256_SHA384 - ECDSA_P256_SHA384\n\u27e821\u27e9 https://docs.rs/webpki/latest/webpki/static.ECDSA_P384_SHA256.html: static webpki::ECDSA_P384_SHA256 - ECDSA_P384_SHA256\n\u27e822\u27e9 https://docs.rs/webpki/latest/webpki/static.ECDSA_P384_SHA384.html: static webpki::ECDSA_P384_SHA384 - ECDSA_P384_SHA384\n\u27e823\u27e9 https://docs.rs/webpki/latest/webpki/static.ED25519.html: static webpki::ED25519 - ED25519\n\u27e824\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA256.html: static webpki::RSA_PKCS1_2048_8192_SHA256 - RSA_PKCS1_2048_8192_SHA256\n\u27e825\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA384.html: static webpki::RSA_PKCS1_2048_8192_SHA384 - RSA_PKCS1_2048_8192_SHA384\n\u27e826\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_2048_8192_SHA512.html: static webpki::RSA_PKCS1_2048_8192_SHA512 - RSA_PKCS1_2048_8192_SHA512\n\u27e827\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PKCS1_3072_8192_SHA384.html: static webpki::RSA_PKCS1_3072_8192_SHA384 - RSA_PKCS1_3072_8192_SHA384\n\u27e828\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA256_LEGACY_KEY.html: static webpki::RSA_PSS_2048_8192_SHA256_LEGACY_KEY - RSA_PSS_2048_8192_SHA256_LEGACY_KEY\n\u27e829\u27e9 https://tools.ietf.org/html/rfc4055#section-1.2: RFC 4055 Section 1.2\n\u27e830\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA384_LEGACY_KEY.html: static webpki::RSA_PSS_2048_8192_SHA384_LEGACY_KEY - RSA_PSS_2048_8192_SHA384_LEGACY_KEY\n\u27e831\u27e9 https://docs.rs/webpki/latest/webpki/static.RSA_PSS_2048_8192_SHA512_LEGACY_KEY.html: static webpki::RSA_PSS_2048_8192_SHA512_LEGACY_KEY - RSA_PSS_2048_8192_SHA512_LEGACY_KEY\n\u27e832\u27e9 https://docs.rs/webpki/latest/webpki/#types: \u00a7\n\u27e833\u27e9 https://docs.rs/webpki/latest/webpki/type.DNSName.html: type webpki::DNSName - DNSName\n\u27e834\u27e9 https://docs.rs/webpki/latest/webpki/type.DNSNameRef.html: type webpki::DNSNameRef - DNSNameRef\n\u27e835\u27e9 https://docs.rs/webpki/latest/webpki/type.TLSClientTrustAnchors.html: type webpki::TLSClientTrustAnchors - TLSClientTrustAnchors\n\u27e836\u27e9 https://docs.rs/webpki/latest/webpki/type.TLSServerTrustAnchors.html: type webpki::TLSServerTrustAnchors - TLSServerTrustAnchors\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `webpki` crate provides X.509 certificate validation for Web PKI, primarily used in TLS connections. It supports DNS name validation, trust anchors, and various signature algorithms, including ECDSA, ED25519, and RSA (PKCS#1 and PSS). Key features include optional `alloc` and `std` support for heap-based operations and compatibility with modern cryptographic standards like RFC 8410 and RFC 4055.",
    "feature_summary": null,
    "use_case": "Cryptography",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Certificate Validation\n\u2705 Factual: The `webpki` crate provides X.509 certificate validation, including verifying certificates for use in TLS connections through the `EndEntityCert` struct.  \n\u274c Counterfactual: The `webpki` crate supports X.509 certificate generation in addition to validation, allowing users to create new certificates directly.\n\n---\n\n### Pair 2: Supported Signature Algorithms\n\u2705 Factual: The `webpki` crate supports ED25519 signatures as defined by RFC 8410, making it suitable for modern cryptographic applications.  \n\u274c Counterfactual: The `webpki` crate supports ED448 signatures in addition to ED25519, providing broader elliptic curve cryptography compatibility.\n\n---\n\n### Pair 3: Feature Flags\n\u2705 Factual: The `alloc` feature flag in `webpki` enables functionality requiring heap allocation, such as RSA signature algorithm support.  \n\u274c Counterfactual: The `alloc` feature flag in `webpki` is required for all cryptographic operations, including ECDSA and ED25519 signatures.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}