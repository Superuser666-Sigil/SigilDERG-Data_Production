{
    "name": "num-traits",
    "version": "0.2.19",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/num-traits/latest/num_traits/all.html \"show sidebar\")\n# Crate num_traitsCopy item path\n[Settings](https://docs.rs/num-traits/latest/settings.html)\n[Help](https://docs.rs/num-traits/latest/help.html)\nSummary[Source](https://docs.rs/num-traits/latest/src/num_traits/lib.rs.html#11-635)\nExpand description\nNumeric traits for generic mathematics\n### [\u00a7](https://docs.rs/num-traits/latest/num_traits/#compatibility)Compatibility\nThe `num-traits` crate is tested for rustc 1.60 and greater.\n## Re-exports[\u00a7](https://docs.rs/num-traits/latest/num_traits/#reexports)\n\n`pub use crate::bounds::Bounded[](https://docs.rs/num-traits/latest/num_traits/bounds/trait.Bounded.html \"trait num_traits::bounds::Bounded\");`\n\n\n`pub use crate::float::Float[](https://docs.rs/num-traits/latest/num_traits/float/trait.Float.html \"trait num_traits::float::Float\");`\n\n\n`pub use crate::float::FloatConst[](https://docs.rs/num-traits/latest/num_traits/float/trait.FloatConst.html \"trait num_traits::float::FloatConst\");`\n\n\n`pub use crate::cast::cast[](https://docs.rs/num-traits/latest/num_traits/cast/fn.cast.html \"fn num_traits::cast::cast\");`\n\n\n`pub use crate::cast::AsPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.AsPrimitive.html \"trait num_traits::cast::AsPrimitive\");`\n\n\n`pub use crate::cast::FromPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.FromPrimitive.html \"trait num_traits::cast::FromPrimitive\");`\n\n\n`pub use crate::cast::NumCast[](https://docs.rs/num-traits/latest/num_traits/cast/trait.NumCast.html \"trait num_traits::cast::NumCast\");`\n\n\n`pub use crate::cast::ToPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.ToPrimitive.html \"trait num_traits::cast::ToPrimitive\");`\n\n\n`pub use crate::identities::one[](https://docs.rs/num-traits/latest/num_traits/identities/fn.one.html \"fn num_traits::identities::one\");`\n\n\n`pub use crate::identities::zero[](https://docs.rs/num-traits/latest/num_traits/identities/fn.zero.html \"fn num_traits::identities::zero\");`\n\n\n`pub use crate::identities::ConstOne[](https://docs.rs/num-traits/latest/num_traits/identities/trait.ConstOne.html \"trait num_traits::identities::ConstOne\");`\n\n\n`pub use crate::identities::ConstZero[](https://docs.rs/num-traits/latest/num_traits/identities/trait.ConstZero.html \"trait num_traits::identities::ConstZero\");`\n\n\n`pub use crate::identities::One[](https://docs.rs/num-traits/latest/num_traits/identities/trait.One.html \"trait num_traits::identities::One\");`\n\n\n`pub use crate::identities::Zero[](https://docs.rs/num-traits/latest/num_traits/identities/trait.Zero.html \"trait num_traits::identities::Zero\");`\n\n\n`pub use crate::int::PrimInt[](https://docs.rs/num-traits/latest/num_traits/int/trait.PrimInt.html \"trait num_traits::int::PrimInt\");`\n\n\n`pub use crate::ops::bytes::FromBytes[](https://docs.rs/num-traits/latest/num_traits/ops/bytes/trait.FromBytes.html \"trait num_traits::ops::bytes::FromBytes\");`\n\n\n`pub use crate::ops::bytes::ToBytes[](https://docs.rs/num-traits/latest/num_traits/ops/bytes/trait.ToBytes.html \"trait num_traits::ops::bytes::ToBytes\");`\n\n\n`pub use crate::ops::checked::CheckedAdd[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedAdd.html \"trait num_traits::ops::checked::CheckedAdd\");`\n\n\n`pub use crate::ops::checked::CheckedDiv[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedDiv.html \"trait num_traits::ops::checked::CheckedDiv\");`\n\n\n`pub use crate::ops::checked::CheckedMul[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedMul.html \"trait num_traits::ops::checked::CheckedMul\");`\n\n\n`pub use crate::ops::checked::CheckedNeg[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedNeg.html \"trait num_traits::ops::checked::CheckedNeg\");`\n\n\n`pub use crate::ops::checked::CheckedRem[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedRem.html \"trait num_traits::ops::checked::CheckedRem\");`\n\n\n`pub use crate::ops::checked::CheckedShl[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedShl.html \"trait num_traits::ops::checked::CheckedShl\");`\n\n\n`pub use crate::ops::checked::CheckedShr[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedShr.html \"trait num_traits::ops::checked::CheckedShr\");`\n\n\n`pub use crate::ops::checked::CheckedSub[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedSub.html \"trait num_traits::ops::checked::CheckedSub\");`\n\n\n`pub use crate::ops::euclid::CheckedEuclid[](https://docs.rs/num-traits/latest/num_traits/ops/euclid/trait.CheckedEuclid.html \"trait num_traits::ops::euclid::CheckedEuclid\");`\n\n\n`pub use crate::ops::euclid::Euclid[](https://docs.rs/num-traits/latest/num_traits/ops/euclid/trait.Euclid.html \"trait num_traits::ops::euclid::Euclid\");`\n\n\n`pub use crate::ops::inv::Inv[](https://docs.rs/num-traits/latest/num_traits/ops/inv/trait.Inv.html \"trait num_traits::ops::inv::Inv\");`\n\n\n`pub use crate::ops::mul_add::MulAdd[](https://docs.rs/num-traits/latest/num_traits/ops/mul_add/trait.MulAdd.html \"trait num_traits::ops::mul_add::MulAdd\");`\n\n\n`pub use crate::ops::mul_add::MulAddAssign[](https://docs.rs/num-traits/latest/num_traits/ops/mul_add/trait.MulAddAssign.html \"trait num_traits::ops::mul_add::MulAddAssign\");`\n\n\n`pub use crate::ops::saturating::Saturating[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.Saturating.html \"trait num_traits::ops::saturating::Saturating\");`\n\n\n`pub use crate::ops::saturating::SaturatingAdd[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingAdd.html \"trait num_traits::ops::saturating::SaturatingAdd\");`\n\n\n`pub use crate::ops::saturating::SaturatingMul[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingMul.html \"trait num_traits::ops::saturating::SaturatingMul\");`\n\n\n`pub use crate::ops::saturating::SaturatingSub[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingSub.html \"trait num_traits::ops::saturating::SaturatingSub\");`\n\n\n`pub use crate::ops::wrapping::WrappingAdd[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingAdd.html \"trait num_traits::ops::wrapping::WrappingAdd\");`\n\n\n`pub use crate::ops::wrapping::WrappingMul[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingMul.html \"trait num_traits::ops::wrapping::WrappingMul\");`\n\n\n`pub use crate::ops::wrapping::WrappingNeg[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingNeg.html \"trait num_traits::ops::wrapping::WrappingNeg\");`\n\n\n`pub use crate::ops::wrapping::WrappingShl[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingShl.html \"trait num_traits::ops::wrapping::WrappingShl\");`\n\n\n`pub use crate::ops::wrapping::WrappingShr[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingShr.html \"trait num_traits::ops::wrapping::WrappingShr\");`\n\n\n`pub use crate::ops::wrapping::WrappingSub[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingSub.html \"trait num_traits::ops::wrapping::WrappingSub\");`\n\n\n`pub use crate::pow::checked_pow[](https://docs.rs/num-traits/latest/num_traits/pow/fn.checked_pow.html \"fn num_traits::pow::checked_pow\");`\n\n\n`pub use crate::pow::pow[](https://docs.rs/num-traits/latest/num_traits/pow/fn.pow.html \"fn num_traits::pow::pow\");`\n\n\n`pub use crate::pow::Pow[](https://docs.rs/num-traits/latest/num_traits/pow/trait.Pow.html \"trait num_traits::pow::Pow\");`\n\n\n`pub use crate::sign::abs[](https://docs.rs/num-traits/latest/num_traits/sign/fn.abs.html \"fn num_traits::sign::abs\");`\n\n\n`pub use crate::sign::abs_sub[](https://docs.rs/num-traits/latest/num_traits/sign/fn.abs_sub.html \"fn num_traits::sign::abs_sub\");`\n\n\n`pub use crate::sign::signum[](https://docs.rs/num-traits/latest/num_traits/sign/fn.signum.html \"fn num_traits::sign::signum\");`\n\n\n`pub use crate::sign::Signed[](https://docs.rs/num-traits/latest/num_traits/sign/trait.Signed.html \"trait num_traits::sign::Signed\");`\n\n\n`pub use crate::sign::Unsigned[](https://docs.rs/num-traits/latest/num_traits/sign/trait.Unsigned.html \"trait num_traits::sign::Unsigned\");`\n\n## Modules[\u00a7](https://docs.rs/num-traits/latest/num_traits/#modules)\n\n[bounds](https://docs.rs/num-traits/latest/num_traits/bounds/index.html \"mod num_traits::bounds\")\n\n\n[cast](https://docs.rs/num-traits/latest/num_traits/cast/index.html \"mod num_traits::cast\")\n\n\n[float](https://docs.rs/num-traits/latest/num_traits/float/index.html \"mod num_traits::float\")\n\n\n[identities](https://docs.rs/num-traits/latest/num_traits/identities/index.html \"mod num_traits::identities\")\n\n\n[int](https://docs.rs/num-traits/latest/num_traits/int/index.html \"mod num_traits::int\")\n\n\n[ops](https://docs.rs/num-traits/latest/num_traits/ops/index.html \"mod num_traits::ops\")\n\n\n[pow](https://docs.rs/num-traits/latest/num_traits/pow/index.html \"mod num_traits::pow\")\n\n\n[real](https://docs.rs/num-traits/latest/num_traits/real/index.html \"mod num_traits::real\")\n\n\n[sign](https://docs.rs/num-traits/latest/num_traits/sign/index.html \"mod num_traits::sign\")\n\n## Structs[\u00a7](https://docs.rs/num-traits/latest/num_traits/#structs)\n\n[ParseFloatError](https://docs.rs/num-traits/latest/num_traits/struct.ParseFloatError.html \"struct num_traits::ParseFloatError\")\n\n## Enums[\u00a7](https://docs.rs/num-traits/latest/num_traits/#enums)\n\n[FloatErrorKind](https://docs.rs/num-traits/latest/num_traits/enum.FloatErrorKind.html \"enum num_traits::FloatErrorKind\")\n\n## Traits[\u00a7](https://docs.rs/num-traits/latest/num_traits/#traits)\n\n[Num](https://docs.rs/num-traits/latest/num_traits/trait.Num.html \"trait num_traits::Num\")\n    The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.\n\n[NumAssign](https://docs.rs/num-traits/latest/num_traits/trait.NumAssign.html \"trait num_traits::NumAssign\")\n    The trait for `Num` types which also implement assignment operators.\n\n[NumAssignOps](https://docs.rs/num-traits/latest/num_traits/trait.NumAssignOps.html \"trait num_traits::NumAssignOps\")\n    Generic trait for types implementing numeric assignment operators (like `+=`).\n\n[NumAssignRef](https://docs.rs/num-traits/latest/num_traits/trait.NumAssignRef.html \"trait num_traits::NumAssignRef\")\n    The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.\n\n[NumOps](https://docs.rs/num-traits/latest/num_traits/trait.NumOps.html \"trait num_traits::NumOps\")\n    Generic trait for types implementing basic numeric operations\n\n[NumRef](https://docs.rs/num-traits/latest/num_traits/trait.NumRef.html \"trait num_traits::NumRef\")\n    The trait for `Num` types which also implement numeric operations taking the second operand by reference.\n\n[RefNum](https://docs.rs/num-traits/latest/num_traits/trait.RefNum.html \"trait num_traits::RefNum\")\n    The trait for `Num` references which implement numeric operations, taking the second operand either by value or by reference.\n## Functions[\u00a7](https://docs.rs/num-traits/latest/num_traits/#functions)\n\n[clamp](https://docs.rs/num-traits/latest/num_traits/fn.clamp.html \"fn num_traits::clamp\")\n    A value bounded by a minimum and a maximum\n\n[clamp_max](https://docs.rs/num-traits/latest/num_traits/fn.clamp_max.html \"fn num_traits::clamp_max\")\n    A value bounded by a maximum value\n\n[clamp_min](https://docs.rs/num-traits/latest/num_traits/fn.clamp_min.html \"fn num_traits::clamp_min\")\n    A value bounded by a minimum value\n",
        "markdown_with_citations": "[](https://docs.rs/num-traits/latest/num_traits/all.html \"show sidebar\")\n# Crate num_traitsCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nNumeric traits for generic mathematics\n### \u00a7\u27e84\u27e9Compatibility\nThe `num-traits` crate is tested for rustc 1.60 and greater.\n## Re-exports\u00a7\u27e85\u27e9\n\n`pub use crate::bounds::Bounded[](https://docs.rs/num-traits/latest/num_traits/bounds/trait.Bounded.html \"trait num_traits::bounds::Bounded\");`\n\n\n`pub use crate::float::Float[](https://docs.rs/num-traits/latest/num_traits/float/trait.Float.html \"trait num_traits::float::Float\");`\n\n\n`pub use crate::float::FloatConst[](https://docs.rs/num-traits/latest/num_traits/float/trait.FloatConst.html \"trait num_traits::float::FloatConst\");`\n\n\n`pub use crate::cast::cast[](https://docs.rs/num-traits/latest/num_traits/cast/fn.cast.html \"fn num_traits::cast::cast\");`\n\n\n`pub use crate::cast::AsPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.AsPrimitive.html \"trait num_traits::cast::AsPrimitive\");`\n\n\n`pub use crate::cast::FromPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.FromPrimitive.html \"trait num_traits::cast::FromPrimitive\");`\n\n\n`pub use crate::cast::NumCast[](https://docs.rs/num-traits/latest/num_traits/cast/trait.NumCast.html \"trait num_traits::cast::NumCast\");`\n\n\n`pub use crate::cast::ToPrimitive[](https://docs.rs/num-traits/latest/num_traits/cast/trait.ToPrimitive.html \"trait num_traits::cast::ToPrimitive\");`\n\n\n`pub use crate::identities::one[](https://docs.rs/num-traits/latest/num_traits/identities/fn.one.html \"fn num_traits::identities::one\");`\n\n\n`pub use crate::identities::zero[](https://docs.rs/num-traits/latest/num_traits/identities/fn.zero.html \"fn num_traits::identities::zero\");`\n\n\n`pub use crate::identities::ConstOne[](https://docs.rs/num-traits/latest/num_traits/identities/trait.ConstOne.html \"trait num_traits::identities::ConstOne\");`\n\n\n`pub use crate::identities::ConstZero[](https://docs.rs/num-traits/latest/num_traits/identities/trait.ConstZero.html \"trait num_traits::identities::ConstZero\");`\n\n\n`pub use crate::identities::One[](https://docs.rs/num-traits/latest/num_traits/identities/trait.One.html \"trait num_traits::identities::One\");`\n\n\n`pub use crate::identities::Zero[](https://docs.rs/num-traits/latest/num_traits/identities/trait.Zero.html \"trait num_traits::identities::Zero\");`\n\n\n`pub use crate::int::PrimInt[](https://docs.rs/num-traits/latest/num_traits/int/trait.PrimInt.html \"trait num_traits::int::PrimInt\");`\n\n\n`pub use crate::ops::bytes::FromBytes[](https://docs.rs/num-traits/latest/num_traits/ops/bytes/trait.FromBytes.html \"trait num_traits::ops::bytes::FromBytes\");`\n\n\n`pub use crate::ops::bytes::ToBytes[](https://docs.rs/num-traits/latest/num_traits/ops/bytes/trait.ToBytes.html \"trait num_traits::ops::bytes::ToBytes\");`\n\n\n`pub use crate::ops::checked::CheckedAdd[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedAdd.html \"trait num_traits::ops::checked::CheckedAdd\");`\n\n\n`pub use crate::ops::checked::CheckedDiv[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedDiv.html \"trait num_traits::ops::checked::CheckedDiv\");`\n\n\n`pub use crate::ops::checked::CheckedMul[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedMul.html \"trait num_traits::ops::checked::CheckedMul\");`\n\n\n`pub use crate::ops::checked::CheckedNeg[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedNeg.html \"trait num_traits::ops::checked::CheckedNeg\");`\n\n\n`pub use crate::ops::checked::CheckedRem[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedRem.html \"trait num_traits::ops::checked::CheckedRem\");`\n\n\n`pub use crate::ops::checked::CheckedShl[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedShl.html \"trait num_traits::ops::checked::CheckedShl\");`\n\n\n`pub use crate::ops::checked::CheckedShr[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedShr.html \"trait num_traits::ops::checked::CheckedShr\");`\n\n\n`pub use crate::ops::checked::CheckedSub[](https://docs.rs/num-traits/latest/num_traits/ops/checked/trait.CheckedSub.html \"trait num_traits::ops::checked::CheckedSub\");`\n\n\n`pub use crate::ops::euclid::CheckedEuclid[](https://docs.rs/num-traits/latest/num_traits/ops/euclid/trait.CheckedEuclid.html \"trait num_traits::ops::euclid::CheckedEuclid\");`\n\n\n`pub use crate::ops::euclid::Euclid[](https://docs.rs/num-traits/latest/num_traits/ops/euclid/trait.Euclid.html \"trait num_traits::ops::euclid::Euclid\");`\n\n\n`pub use crate::ops::inv::Inv[](https://docs.rs/num-traits/latest/num_traits/ops/inv/trait.Inv.html \"trait num_traits::ops::inv::Inv\");`\n\n\n`pub use crate::ops::mul_add::MulAdd[](https://docs.rs/num-traits/latest/num_traits/ops/mul_add/trait.MulAdd.html \"trait num_traits::ops::mul_add::MulAdd\");`\n\n\n`pub use crate::ops::mul_add::MulAddAssign[](https://docs.rs/num-traits/latest/num_traits/ops/mul_add/trait.MulAddAssign.html \"trait num_traits::ops::mul_add::MulAddAssign\");`\n\n\n`pub use crate::ops::saturating::Saturating[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.Saturating.html \"trait num_traits::ops::saturating::Saturating\");`\n\n\n`pub use crate::ops::saturating::SaturatingAdd[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingAdd.html \"trait num_traits::ops::saturating::SaturatingAdd\");`\n\n\n`pub use crate::ops::saturating::SaturatingMul[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingMul.html \"trait num_traits::ops::saturating::SaturatingMul\");`\n\n\n`pub use crate::ops::saturating::SaturatingSub[](https://docs.rs/num-traits/latest/num_traits/ops/saturating/trait.SaturatingSub.html \"trait num_traits::ops::saturating::SaturatingSub\");`\n\n\n`pub use crate::ops::wrapping::WrappingAdd[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingAdd.html \"trait num_traits::ops::wrapping::WrappingAdd\");`\n\n\n`pub use crate::ops::wrapping::WrappingMul[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingMul.html \"trait num_traits::ops::wrapping::WrappingMul\");`\n\n\n`pub use crate::ops::wrapping::WrappingNeg[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingNeg.html \"trait num_traits::ops::wrapping::WrappingNeg\");`\n\n\n`pub use crate::ops::wrapping::WrappingShl[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingShl.html \"trait num_traits::ops::wrapping::WrappingShl\");`\n\n\n`pub use crate::ops::wrapping::WrappingShr[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingShr.html \"trait num_traits::ops::wrapping::WrappingShr\");`\n\n\n`pub use crate::ops::wrapping::WrappingSub[](https://docs.rs/num-traits/latest/num_traits/ops/wrapping/trait.WrappingSub.html \"trait num_traits::ops::wrapping::WrappingSub\");`\n\n\n`pub use crate::pow::checked_pow[](https://docs.rs/num-traits/latest/num_traits/pow/fn.checked_pow.html \"fn num_traits::pow::checked_pow\");`\n\n\n`pub use crate::pow::pow[](https://docs.rs/num-traits/latest/num_traits/pow/fn.pow.html \"fn num_traits::pow::pow\");`\n\n\n`pub use crate::pow::Pow[](https://docs.rs/num-traits/latest/num_traits/pow/trait.Pow.html \"trait num_traits::pow::Pow\");`\n\n\n`pub use crate::sign::abs[](https://docs.rs/num-traits/latest/num_traits/sign/fn.abs.html \"fn num_traits::sign::abs\");`\n\n\n`pub use crate::sign::abs_sub[](https://docs.rs/num-traits/latest/num_traits/sign/fn.abs_sub.html \"fn num_traits::sign::abs_sub\");`\n\n\n`pub use crate::sign::signum[](https://docs.rs/num-traits/latest/num_traits/sign/fn.signum.html \"fn num_traits::sign::signum\");`\n\n\n`pub use crate::sign::Signed[](https://docs.rs/num-traits/latest/num_traits/sign/trait.Signed.html \"trait num_traits::sign::Signed\");`\n\n\n`pub use crate::sign::Unsigned[](https://docs.rs/num-traits/latest/num_traits/sign/trait.Unsigned.html \"trait num_traits::sign::Unsigned\");`\n\n## Modules\u00a7\u27e86\u27e9\n\nbounds\u27e87\u27e9\n\n\ncast\u27e88\u27e9\n\n\nfloat\u27e89\u27e9\n\n\nidentities\u27e810\u27e9\n\n\nint\u27e811\u27e9\n\n\nops\u27e812\u27e9\n\n\npow\u27e813\u27e9\n\n\nreal\u27e814\u27e9\n\n\nsign\u27e815\u27e9\n\n## Structs\u00a7\u27e816\u27e9\n\nParseFloatError\u27e817\u27e9\n\n## Enums\u00a7\u27e818\u27e9\n\nFloatErrorKind\u27e819\u27e9\n\n## Traits\u00a7\u27e820\u27e9\n\nNum\u27e821\u27e9\n    The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.\n\nNumAssign\u27e822\u27e9\n    The trait for `Num` types which also implement assignment operators.\n\nNumAssignOps\u27e823\u27e9\n    Generic trait for types implementing numeric assignment operators (like `+=`).\n\nNumAssignRef\u27e824\u27e9\n    The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.\n\nNumOps\u27e825\u27e9\n    Generic trait for types implementing basic numeric operations\n\nNumRef\u27e826\u27e9\n    The trait for `Num` types which also implement numeric operations taking the second operand by reference.\n\nRefNum\u27e827\u27e9\n    The trait for `Num` references which implement numeric operations, taking the second operand either by value or by reference.\n## Functions\u00a7\u27e828\u27e9\n\nclamp\u27e829\u27e9\n    A value bounded by a minimum and a maximum\n\nclamp_max\u27e830\u27e9\n    A value bounded by a maximum value\n\nclamp_min\u27e831\u27e9\n    A value bounded by a minimum value\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/num-traits/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/num-traits/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/num-traits/latest/src/num_traits/lib.rs.html#11-635: Source\n\u27e84\u27e9 https://docs.rs/num-traits/latest/num_traits/#compatibility: \u00a7\n\u27e85\u27e9 https://docs.rs/num-traits/latest/num_traits/#reexports: \u00a7\n\u27e86\u27e9 https://docs.rs/num-traits/latest/num_traits/#modules: \u00a7\n\u27e87\u27e9 https://docs.rs/num-traits/latest/num_traits/bounds/index.html: mod num_traits::bounds - bounds\n\u27e88\u27e9 https://docs.rs/num-traits/latest/num_traits/cast/index.html: mod num_traits::cast - cast\n\u27e89\u27e9 https://docs.rs/num-traits/latest/num_traits/float/index.html: mod num_traits::float - float\n\u27e810\u27e9 https://docs.rs/num-traits/latest/num_traits/identities/index.html: mod num_traits::identities - identities\n\u27e811\u27e9 https://docs.rs/num-traits/latest/num_traits/int/index.html: mod num_traits::int - int\n\u27e812\u27e9 https://docs.rs/num-traits/latest/num_traits/ops/index.html: mod num_traits::ops - ops\n\u27e813\u27e9 https://docs.rs/num-traits/latest/num_traits/pow/index.html: mod num_traits::pow - pow\n\u27e814\u27e9 https://docs.rs/num-traits/latest/num_traits/real/index.html: mod num_traits::real - real\n\u27e815\u27e9 https://docs.rs/num-traits/latest/num_traits/sign/index.html: mod num_traits::sign - sign\n\u27e816\u27e9 https://docs.rs/num-traits/latest/num_traits/#structs: \u00a7\n\u27e817\u27e9 https://docs.rs/num-traits/latest/num_traits/struct.ParseFloatError.html: struct num_traits::ParseFloatError - ParseFloatError\n\u27e818\u27e9 https://docs.rs/num-traits/latest/num_traits/#enums: \u00a7\n\u27e819\u27e9 https://docs.rs/num-traits/latest/num_traits/enum.FloatErrorKind.html: enum num_traits::FloatErrorKind - FloatErrorKind\n\u27e820\u27e9 https://docs.rs/num-traits/latest/num_traits/#traits: \u00a7\n\u27e821\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.Num.html: trait num_traits::Num - Num\n\u27e822\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.NumAssign.html: trait num_traits::NumAssign - NumAssign\n\u27e823\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.NumAssignOps.html: trait num_traits::NumAssignOps - NumAssignOps\n\u27e824\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.NumAssignRef.html: trait num_traits::NumAssignRef - NumAssignRef\n\u27e825\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.NumOps.html: trait num_traits::NumOps - NumOps\n\u27e826\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.NumRef.html: trait num_traits::NumRef - NumRef\n\u27e827\u27e9 https://docs.rs/num-traits/latest/num_traits/trait.RefNum.html: trait num_traits::RefNum - RefNum\n\u27e828\u27e9 https://docs.rs/num-traits/latest/num_traits/#functions: \u00a7\n\u27e829\u27e9 https://docs.rs/num-traits/latest/num_traits/fn.clamp.html: fn num_traits::clamp - clamp\n\u27e830\u27e9 https://docs.rs/num-traits/latest/num_traits/fn.clamp_max.html: fn num_traits::clamp_max - clamp_max\n\u27e831\u27e9 https://docs.rs/num-traits/latest/num_traits/fn.clamp_min.html: fn num_traits::clamp_min - clamp_min\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `num-traits` crate provides a collection of numeric traits for generic mathematics in Rust, enabling operations like casting, bounds checking, and arithmetic with various numeric types. It includes traits for fundamental operations (`Num`, `NumOps`), numeric identities (`Zero`, `One`), checked and saturating arithmetic, and conversions between primitive types (`ToPrimitive`, `FromPrimitive`). Additionally, it supports specialized traits for floating-point operations, integer manipulation, and wrapping arithmetic.",
    "feature_summary": null,
    "use_case": "Utilities",
    "score": 8.5,
    "factual_counterfactual": "### Pair 1: Numeric Traits and Compatibility  \n\u2705 Factual: The `num-traits` crate provides traits like `Zero`, `One`, and `Float` to enable generic numeric programming in Rust.  \n\u274c Counterfactual: The `num-traits` crate is only compatible with floating-point types and does not support integer types.  \n\n---\n\n### Pair 2: Version Compatibility  \n\u2705 Factual: The `num-traits` crate is tested and compatible with `rustc` version 1.60 and greater.  \n\u274c Counterfactual: The `num-traits` crate requires `rustc` version 1.70 or higher to function correctly.  \n\n---\n\n### Pair 3: Checked Arithmetic Operations  \n\u2705 Factual: The `num-traits` crate includes traits like `CheckedAdd`, `CheckedMul`, and `CheckedSub` for safe arithmetic operations that avoid overflow.  \n\u274c Counterfactual: The `num-traits` crate does not provide any traits for checked arithmetic operations, relying entirely on Rust's built-in operators.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}