{
    "name": "mint",
    "version": "0.5.9",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/mint/latest/mint/all.html \"show sidebar\")\n# Crate mintCopy item path\n[Settings](https://docs.rs/mint/latest/settings.html)\n[Help](https://docs.rs/mint/latest/help.html)\nSummary[Source](https://docs.rs/mint/latest/src/mint/lib.rs.html#1-26)\nExpand description\nMint - Math interoperability standard types.\nDefines basic math types useful for computer graphics. Designed to serve as an interoperability standard between libraries.\n## Structs[\u00a7](https://docs.rs/mint/latest/mint/#structs)\n\n[ColumnMatrix2](https://docs.rs/mint/latest/mint/struct.ColumnMatrix2.html \"struct mint::ColumnMatrix2\")\n\n\n[ColumnMatrix3](https://docs.rs/mint/latest/mint/struct.ColumnMatrix3.html \"struct mint::ColumnMatrix3\")\n\n\n[ColumnMatrix4](https://docs.rs/mint/latest/mint/struct.ColumnMatrix4.html \"struct mint::ColumnMatrix4\")\n\n\n[ColumnMatrix2x3](https://docs.rs/mint/latest/mint/struct.ColumnMatrix2x3.html \"struct mint::ColumnMatrix2x3\")\n\n\n[ColumnMatrix2x4](https://docs.rs/mint/latest/mint/struct.ColumnMatrix2x4.html \"struct mint::ColumnMatrix2x4\")\n\n\n[ColumnMatrix3x2](https://docs.rs/mint/latest/mint/struct.ColumnMatrix3x2.html \"struct mint::ColumnMatrix3x2\")\n\n\n[ColumnMatrix3x4](https://docs.rs/mint/latest/mint/struct.ColumnMatrix3x4.html \"struct mint::ColumnMatrix3x4\")\n\n\n[ColumnMatrix4x2](https://docs.rs/mint/latest/mint/struct.ColumnMatrix4x2.html \"struct mint::ColumnMatrix4x2\")\n\n\n[ColumnMatrix4x3](https://docs.rs/mint/latest/mint/struct.ColumnMatrix4x3.html \"struct mint::ColumnMatrix4x3\")\n\n\n[EulerAngles](https://docs.rs/mint/latest/mint/struct.EulerAngles.html \"struct mint::EulerAngles\")\n    Abstract set of Euler angles in 3D space. The basis of angles is defined by the generic parameter `B`.\n\n[Point2](https://docs.rs/mint/latest/mint/struct.Point2.html \"struct mint::Point2\")\n\n\n[Point3](https://docs.rs/mint/latest/mint/struct.Point3.html \"struct mint::Point3\")\n\n\n[Quaternion](https://docs.rs/mint/latest/mint/struct.Quaternion.html \"struct mint::Quaternion\")\n    Standard quaternion represented by the scalar and vector parts. Useful for representing rotation in 3D space. Corresponds to a right-handed rotation matrix.\n\n[RowMatrix2](https://docs.rs/mint/latest/mint/struct.RowMatrix2.html \"struct mint::RowMatrix2\")\n\n\n[RowMatrix3](https://docs.rs/mint/latest/mint/struct.RowMatrix3.html \"struct mint::RowMatrix3\")\n\n\n[RowMatrix4](https://docs.rs/mint/latest/mint/struct.RowMatrix4.html \"struct mint::RowMatrix4\")\n\n\n[RowMatrix2x3](https://docs.rs/mint/latest/mint/struct.RowMatrix2x3.html \"struct mint::RowMatrix2x3\")\n\n\n[RowMatrix2x4](https://docs.rs/mint/latest/mint/struct.RowMatrix2x4.html \"struct mint::RowMatrix2x4\")\n\n\n[RowMatrix3x2](https://docs.rs/mint/latest/mint/struct.RowMatrix3x2.html \"struct mint::RowMatrix3x2\")\n\n\n[RowMatrix3x4](https://docs.rs/mint/latest/mint/struct.RowMatrix3x4.html \"struct mint::RowMatrix3x4\")\n\n\n[RowMatrix4x2](https://docs.rs/mint/latest/mint/struct.RowMatrix4x2.html \"struct mint::RowMatrix4x2\")\n\n\n[RowMatrix4x3](https://docs.rs/mint/latest/mint/struct.RowMatrix4x3.html \"struct mint::RowMatrix4x3\")\n\n\n[Vector2](https://docs.rs/mint/latest/mint/struct.Vector2.html \"struct mint::Vector2\")\n\n\n[Vector3](https://docs.rs/mint/latest/mint/struct.Vector3.html \"struct mint::Vector3\")\n\n\n[Vector4](https://docs.rs/mint/latest/mint/struct.Vector4.html \"struct mint::Vector4\")\n\n## Enums[\u00a7](https://docs.rs/mint/latest/mint/#enums)\n\n[ExtraXYZ](https://docs.rs/mint/latest/mint/enum.ExtraXYZ.html \"enum mint::ExtraXYZ\")\n    Extrinsic rotation around X, then Y, then Z axis.\n\n[ExtraZXZ](https://docs.rs/mint/latest/mint/enum.ExtraZXZ.html \"enum mint::ExtraZXZ\")\n    Extrinsic rotation around Z, then X, then Z axis.\n\n[ExtraZYX](https://docs.rs/mint/latest/mint/enum.ExtraZYX.html \"enum mint::ExtraZYX\")\n    Extrinsic rotation around Z, then Y, then X axis.\n\n[IntraXYZ](https://docs.rs/mint/latest/mint/enum.IntraXYZ.html \"enum mint::IntraXYZ\")\n    Intrinsic rotation around X, then Y, then Z axis.\n\n[IntraZXZ](https://docs.rs/mint/latest/mint/enum.IntraZXZ.html \"enum mint::IntraZXZ\")\n    Intrinsic rotation around Z, then X, then Z axis.\n\n[IntraZYX](https://docs.rs/mint/latest/mint/enum.IntraZYX.html \"enum mint::IntraZYX\")\n    Intrinsic rotation around Z, then Y, then X axis.\n## Traits[\u00a7](https://docs.rs/mint/latest/mint/#traits)\n\n[IntoMint](https://docs.rs/mint/latest/mint/trait.IntoMint.html \"trait mint::IntoMint\")\n    Defines which mint type a given type is associated with. This trait enables converting a type into its mint equivalent without having to name the mint type.\n",
        "markdown_with_citations": "[](https://docs.rs/mint/latest/mint/all.html \"show sidebar\")\n# Crate mintCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nMint - Math interoperability standard types.\nDefines basic math types useful for computer graphics. Designed to serve as an interoperability standard between libraries.\n## Structs\u00a7\u27e84\u27e9\n\nColumnMatrix2\u27e85\u27e9\n\n\nColumnMatrix3\u27e86\u27e9\n\n\nColumnMatrix4\u27e87\u27e9\n\n\nColumnMatrix2x3\u27e88\u27e9\n\n\nColumnMatrix2x4\u27e89\u27e9\n\n\nColumnMatrix3x2\u27e810\u27e9\n\n\nColumnMatrix3x4\u27e811\u27e9\n\n\nColumnMatrix4x2\u27e812\u27e9\n\n\nColumnMatrix4x3\u27e813\u27e9\n\n\nEulerAngles\u27e814\u27e9\n    Abstract set of Euler angles in 3D space. The basis of angles is defined by the generic parameter `B`.\n\nPoint2\u27e815\u27e9\n\n\nPoint3\u27e816\u27e9\n\n\nQuaternion\u27e817\u27e9\n    Standard quaternion represented by the scalar and vector parts. Useful for representing rotation in 3D space. Corresponds to a right-handed rotation matrix.\n\nRowMatrix2\u27e818\u27e9\n\n\nRowMatrix3\u27e819\u27e9\n\n\nRowMatrix4\u27e820\u27e9\n\n\nRowMatrix2x3\u27e821\u27e9\n\n\nRowMatrix2x4\u27e822\u27e9\n\n\nRowMatrix3x2\u27e823\u27e9\n\n\nRowMatrix3x4\u27e824\u27e9\n\n\nRowMatrix4x2\u27e825\u27e9\n\n\nRowMatrix4x3\u27e826\u27e9\n\n\nVector2\u27e827\u27e9\n\n\nVector3\u27e828\u27e9\n\n\nVector4\u27e829\u27e9\n\n## Enums\u00a7\u27e830\u27e9\n\nExtraXYZ\u27e831\u27e9\n    Extrinsic rotation around X, then Y, then Z axis.\n\nExtraZXZ\u27e832\u27e9\n    Extrinsic rotation around Z, then X, then Z axis.\n\nExtraZYX\u27e833\u27e9\n    Extrinsic rotation around Z, then Y, then X axis.\n\nIntraXYZ\u27e834\u27e9\n    Intrinsic rotation around X, then Y, then Z axis.\n\nIntraZXZ\u27e835\u27e9\n    Intrinsic rotation around Z, then X, then Z axis.\n\nIntraZYX\u27e836\u27e9\n    Intrinsic rotation around Z, then Y, then X axis.\n## Traits\u00a7\u27e837\u27e9\n\nIntoMint\u27e838\u27e9\n    Defines which mint type a given type is associated with. This trait enables converting a type into its mint equivalent without having to name the mint type.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/mint/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/mint/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/mint/latest/src/mint/lib.rs.html#1-26: Source\n\u27e84\u27e9 https://docs.rs/mint/latest/mint/#structs: \u00a7\n\u27e85\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix2.html: struct mint::ColumnMatrix2 - ColumnMatrix2\n\u27e86\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix3.html: struct mint::ColumnMatrix3 - ColumnMatrix3\n\u27e87\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix4.html: struct mint::ColumnMatrix4 - ColumnMatrix4\n\u27e88\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix2x3.html: struct mint::ColumnMatrix2x3 - ColumnMatrix2x3\n\u27e89\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix2x4.html: struct mint::ColumnMatrix2x4 - ColumnMatrix2x4\n\u27e810\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix3x2.html: struct mint::ColumnMatrix3x2 - ColumnMatrix3x2\n\u27e811\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix3x4.html: struct mint::ColumnMatrix3x4 - ColumnMatrix3x4\n\u27e812\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix4x2.html: struct mint::ColumnMatrix4x2 - ColumnMatrix4x2\n\u27e813\u27e9 https://docs.rs/mint/latest/mint/struct.ColumnMatrix4x3.html: struct mint::ColumnMatrix4x3 - ColumnMatrix4x3\n\u27e814\u27e9 https://docs.rs/mint/latest/mint/struct.EulerAngles.html: struct mint::EulerAngles - EulerAngles\n\u27e815\u27e9 https://docs.rs/mint/latest/mint/struct.Point2.html: struct mint::Point2 - Point2\n\u27e816\u27e9 https://docs.rs/mint/latest/mint/struct.Point3.html: struct mint::Point3 - Point3\n\u27e817\u27e9 https://docs.rs/mint/latest/mint/struct.Quaternion.html: struct mint::Quaternion - Quaternion\n\u27e818\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix2.html: struct mint::RowMatrix2 - RowMatrix2\n\u27e819\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix3.html: struct mint::RowMatrix3 - RowMatrix3\n\u27e820\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix4.html: struct mint::RowMatrix4 - RowMatrix4\n\u27e821\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix2x3.html: struct mint::RowMatrix2x3 - RowMatrix2x3\n\u27e822\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix2x4.html: struct mint::RowMatrix2x4 - RowMatrix2x4\n\u27e823\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix3x2.html: struct mint::RowMatrix3x2 - RowMatrix3x2\n\u27e824\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix3x4.html: struct mint::RowMatrix3x4 - RowMatrix3x4\n\u27e825\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix4x2.html: struct mint::RowMatrix4x2 - RowMatrix4x2\n\u27e826\u27e9 https://docs.rs/mint/latest/mint/struct.RowMatrix4x3.html: struct mint::RowMatrix4x3 - RowMatrix4x3\n\u27e827\u27e9 https://docs.rs/mint/latest/mint/struct.Vector2.html: struct mint::Vector2 - Vector2\n\u27e828\u27e9 https://docs.rs/mint/latest/mint/struct.Vector3.html: struct mint::Vector3 - Vector3\n\u27e829\u27e9 https://docs.rs/mint/latest/mint/struct.Vector4.html: struct mint::Vector4 - Vector4\n\u27e830\u27e9 https://docs.rs/mint/latest/mint/#enums: \u00a7\n\u27e831\u27e9 https://docs.rs/mint/latest/mint/enum.ExtraXYZ.html: enum mint::ExtraXYZ - ExtraXYZ\n\u27e832\u27e9 https://docs.rs/mint/latest/mint/enum.ExtraZXZ.html: enum mint::ExtraZXZ - ExtraZXZ\n\u27e833\u27e9 https://docs.rs/mint/latest/mint/enum.ExtraZYX.html: enum mint::ExtraZYX - ExtraZYX\n\u27e834\u27e9 https://docs.rs/mint/latest/mint/enum.IntraXYZ.html: enum mint::IntraXYZ - IntraXYZ\n\u27e835\u27e9 https://docs.rs/mint/latest/mint/enum.IntraZXZ.html: enum mint::IntraZXZ - IntraZXZ\n\u27e836\u27e9 https://docs.rs/mint/latest/mint/enum.IntraZYX.html: enum mint::IntraZYX - IntraZYX\n\u27e837\u27e9 https://docs.rs/mint/latest/mint/#traits: \u00a7\n\u27e838\u27e9 https://docs.rs/mint/latest/mint/trait.IntoMint.html: trait mint::IntoMint - IntoMint\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `mint` crate provides a collection of standard mathematical types designed for interoperability between computer graphics libraries. It includes structures for vectors, points, matrices (row and column variants), quaternions, and Euler angles, as well as enums for intrinsic and extrinsic rotation orders. Additionally, it features the `IntoMint` trait for seamless conversion of custom types into `mint` types.",
    "feature_summary": null,
    "use_case": "Utilities",
    "score": 4.0,
    "factual_counterfactual": "### Pair 1: Math Interoperability  \n\u2705 **Factual:** The `mint` crate provides standard types like `Vector2`, `Vector3`, and `Quaternion` to facilitate interoperability between libraries for computer graphics.  \n\u274c **Counterfactual:** The `mint` crate includes advanced numerical solvers for differential equations, making it suitable for scientific simulations.  \n\n---\n\n### Pair 2: Matrix Representations  \n\u2705 **Factual:** The `mint` crate supports both column-major and row-major matrix representations, such as `ColumnMatrix3` and `RowMatrix3`.  \n\u274c **Counterfactual:** The `mint` crate automatically converts between column-major and row-major matrices during runtime computations.  \n\n---\n\n### Pair 3: Rotation Enums  \n\u2705 **Factual:** The `mint` crate provides enums like `ExtraXYZ` and `IntraZYX` for defining extrinsic and intrinsic rotations in 3D space.  \n\u274c **Counterfactual:** The `mint` crate uses enums like `ExtraXYZ` and `IntraZYX` to perform runtime rotation calculations directly within the library.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}