{
    "name": "tokio-util",
    "version": "0.7.15",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/tokio-util/latest/tokio_util/all.html \"show sidebar\")\n# Crate tokio_utilCopy item path\n[Settings](https://docs.rs/tokio-util/latest/settings.html)\n[Help](https://docs.rs/tokio-util/latest/help.html)\nSummary[Source](https://docs.rs/tokio-util/latest/src/tokio_util/lib.rs.html#1-63)\nExpand description\nUtilities for working with Tokio.\nThis crate is not versioned in lockstep with the core [`tokio`](https://docs.rs/tokio) crate. However, `tokio-util` _will_ respect Rust\u2019s semantic versioning policy, especially with regard to breaking changes.\n## Re-exports[\u00a7](https://docs.rs/tokio-util/latest/tokio_util/#reexports)\n\n`pub use bytes[](https://docs.rs/bytes/1.10.1/x86_64-unknown-linux-gnu/bytes/index.html \"mod bytes\");`\n\n## Modules[\u00a7](https://docs.rs/tokio-util/latest/tokio_util/#modules)\n\n[codec](https://docs.rs/tokio-util/latest/tokio_util/codec/index.html \"mod tokio_util::codec\")`codec`\n    Adaptors from `AsyncRead`/`AsyncWrite` to Stream/Sink\n\n[compat](https://docs.rs/tokio-util/latest/tokio_util/compat/index.html \"mod tokio_util::compat\")`compat`\n    Compatibility between the `tokio::io` and `futures-io` versions of the `AsyncRead` and `AsyncWrite` traits.\n\n[context](https://docs.rs/tokio-util/latest/tokio_util/context/index.html \"mod tokio_util::context\")`rt`\n    Tokio context aware futures utilities.\n\n[either](https://docs.rs/tokio-util/latest/tokio_util/either/index.html \"mod tokio_util::either\")\n    Module defining an Either type.\n\n[io](https://docs.rs/tokio-util/latest/tokio_util/io/index.html \"mod tokio_util::io\")`io`\n    Helpers for IO related tasks.\n\n[net](https://docs.rs/tokio-util/latest/tokio_util/net/index.html \"mod tokio_util::net\")`net` and `codec`\n    TCP/UDP/Unix helpers for tokio.\n\n[sync](https://docs.rs/tokio-util/latest/tokio_util/sync/index.html \"mod tokio_util::sync\")\n    Synchronization primitives\n\n[task](https://docs.rs/tokio-util/latest/tokio_util/task/index.html \"mod tokio_util::task\")`rt`\n    Extra utilities for spawning tasks\n\n[time](https://docs.rs/tokio-util/latest/tokio_util/time/index.html \"mod tokio_util::time\")`time`\n    Additional utilities for tracking time.\n\n[udp](https://docs.rs/tokio-util/latest/tokio_util/udp/index.html \"mod tokio_util::udp\")`net` and `codec`\n    UDP framing\n",
        "markdown_with_citations": "[](https://docs.rs/tokio-util/latest/tokio_util/all.html \"show sidebar\")\n# Crate tokio_utilCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nUtilities for working with Tokio.\nThis crate is not versioned in lockstep with the core `tokio`\u27e84\u27e9 crate. However, `tokio-util` _will_ respect Rust\u2019s semantic versioning policy, especially with regard to breaking changes.\n## Re-exports\u00a7\u27e85\u27e9\n\n`pub use bytes[](https://docs.rs/bytes/1.10.1/x86_64-unknown-linux-gnu/bytes/index.html \"mod bytes\");`\n\n## Modules\u00a7\u27e86\u27e9\n\ncodec\u27e87\u27e9`codec`\n    Adaptors from `AsyncRead`/`AsyncWrite` to Stream/Sink\n\ncompat\u27e88\u27e9`compat`\n    Compatibility between the `tokio::io` and `futures-io` versions of the `AsyncRead` and `AsyncWrite` traits.\n\ncontext\u27e89\u27e9`rt`\n    Tokio context aware futures utilities.\n\neither\u27e810\u27e9\n    Module defining an Either type.\n\nio\u27e811\u27e9`io`\n    Helpers for IO related tasks.\n\nnet\u27e812\u27e9`net` and `codec`\n    TCP/UDP/Unix helpers for tokio.\n\nsync\u27e813\u27e9\n    Synchronization primitives\n\ntask\u27e814\u27e9`rt`\n    Extra utilities for spawning tasks\n\ntime\u27e815\u27e9`time`\n    Additional utilities for tracking time.\n\nudp\u27e816\u27e9`net` and `codec`\n    UDP framing\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/tokio-util/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/tokio-util/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/tokio-util/latest/src/tokio_util/lib.rs.html#1-63: Source\n\u27e84\u27e9 https://docs.rs/tokio: `tokio`\n\u27e85\u27e9 https://docs.rs/tokio-util/latest/tokio_util/#reexports: \u00a7\n\u27e86\u27e9 https://docs.rs/tokio-util/latest/tokio_util/#modules: \u00a7\n\u27e87\u27e9 https://docs.rs/tokio-util/latest/tokio_util/codec/index.html: mod tokio_util::codec - codec\n\u27e88\u27e9 https://docs.rs/tokio-util/latest/tokio_util/compat/index.html: mod tokio_util::compat - compat\n\u27e89\u27e9 https://docs.rs/tokio-util/latest/tokio_util/context/index.html: mod tokio_util::context - context\n\u27e810\u27e9 https://docs.rs/tokio-util/latest/tokio_util/either/index.html: mod tokio_util::either - either\n\u27e811\u27e9 https://docs.rs/tokio-util/latest/tokio_util/io/index.html: mod tokio_util::io - io\n\u27e812\u27e9 https://docs.rs/tokio-util/latest/tokio_util/net/index.html: mod tokio_util::net - net\n\u27e813\u27e9 https://docs.rs/tokio-util/latest/tokio_util/sync/index.html: mod tokio_util::sync - sync\n\u27e814\u27e9 https://docs.rs/tokio-util/latest/tokio_util/task/index.html: mod tokio_util::task - task\n\u27e815\u27e9 https://docs.rs/tokio-util/latest/tokio_util/time/index.html: mod tokio_util::time - time\n\u27e816\u27e9 https://docs.rs/tokio-util/latest/tokio_util/udp/index.html: mod tokio_util::udp - udp\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `tokio-util` crate provides a collection of utilities to enhance working with the Tokio asynchronous runtime. Key features include adaptors for converting `AsyncRead`/`AsyncWrite` to `Stream`/`Sink`, compatibility between `tokio::io` and `futures-io`, helpers for IO tasks, TCP/UDP/Unix networking utilities, synchronization primitives, task spawning utilities, and time tracking tools. It also includes modules like `codec`, `net`, and `udp` for framing and networking support.",
    "feature_summary": null,
    "use_case": "Networking",
    "score": 8.0,
    "factual_counterfactual": "### Pair 1: Codec Utilities  \n\u2705 **Factual:** The `tokio-util` crate provides the `codec` module, which includes adaptors for converting `AsyncRead`/`AsyncWrite` traits into `Stream`/`Sink` interfaces, simplifying asynchronous data processing.  \n\u274c **Counterfactual:** The `codec` module in `tokio-util` is designed exclusively for handling synchronous I/O operations and does not support `AsyncRead`/`AsyncWrite` traits.  \n\n---\n\n### Pair 2: Compatibility Layer  \n\u2705 **Factual:** The `compat` module in `tokio-util` enables compatibility between `tokio::io` and `futures-io` versions of the `AsyncRead` and `AsyncWrite` traits, making it easier to integrate libraries that use different async I/O ecosystems.  \n\u274c **Counterfactual:** The `compat` module in `tokio-util` is primarily used for converting synchronous I/O traits into asynchronous ones, rather than bridging compatibility between `tokio::io` and `futures-io`.  \n\n---\n\n### Pair 3: Synchronization Primitives  \n\u2705 **Factual:** The `sync` module in `tokio-util` provides additional synchronization primitives, such as utilities for managing asynchronous state across tasks.  \n\u274c **Counterfactual:** The `sync` module in `tokio-util` is focused on providing thread-safe synchronization primitives for synchronous Rust programs and does not include utilities",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}