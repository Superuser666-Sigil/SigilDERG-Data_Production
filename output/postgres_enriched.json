{
    "name": "postgres",
    "version": "0.19.10",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/postgres/latest/postgres/all.html \"show sidebar\")\n# Crate postgresCopy item path\n[Settings](https://docs.rs/postgres/latest/settings.html)\n[Help](https://docs.rs/postgres/latest/help.html)\nSummary[Source](https://docs.rs/postgres/latest/src/postgres/lib.rs.html#1-108)\nExpand description\nA synchronous client for the PostgreSQL database.\n## [\u00a7](https://docs.rs/postgres/latest/postgres/#example)Example\n```\nuse postgres::{Client, NoTls};\nlet mut client = Client::connect(\"host=localhost user=postgres\", NoTls)?;\nclient.batch_execute(\"\n  CREATE TABLE person (\n    id   SERIAL PRIMARY KEY,\n    name  TEXT NOT NULL,\n    data  BYTEA\n  )\n\")?;\nlet name = \"Ferris\";\nlet data = None::<&[u8]>;\nclient.execute(\n  \"INSERT INTO person (name, data) VALUES ($1, $2)\",\n  &[&name, &data],\n)?;\nfor row in client.query(\"SELECT id, name, data FROM person\", &[])? {\n  let id: i32 = row.get(0);\n  let name: &str = row.get(1);\n  let data: Option<&[u8]> = row.get(2);\n  println!(\"found person: {} {} {:?}\", id, name, data);\n}\n```\n\n## [\u00a7](https://docs.rs/postgres/latest/postgres/#implementation)Implementation\nThis crate is a lightweight wrapper over tokio-postgres. The `postgres::Client` is simply a wrapper around a `tokio_postgres::Client` along side a tokio `Runtime`. The client simply blocks on the futures provided by the async client.\n## [\u00a7](https://docs.rs/postgres/latest/postgres/#ssltls-support)SSL/TLS support\nTLS support is implemented via external libraries. `Client::connect` and `Config::connect` take a TLS implementation as an argument. The `NoTls` type in this crate can be used when TLS is not required. Otherwise, the `postgres-openssl` and `postgres-native-tls` crates provide implementations backed by the `openssl` and `native-tls` crates, respectively.\n## [\u00a7](https://docs.rs/postgres/latest/postgres/#features)Features\nThe following features can be enabled from `Cargo.toml`:\nFeature| Description| Extra dependencies| Default  \n---|---|---|---  \n`with-bit-vec-0_6`| Enable support for the `bit-vec` crate.| [bit-vec](https://crates.io/crates/bit-vec) 0.6| no  \n`with-chrono-0_4`| Enable support for the `chrono` crate.| [chrono](https://crates.io/crates/chrono) 0.4| no  \n`with-eui48-0_4`| Enable support for the 0.4 version of the `eui48` crate. This is deprecated and will be removed.| [eui48](https://crates.io/crates/eui48) 0.4| no  \n`with-eui48-1`| Enable support for the 1.0 version of the `eui48` crate.| [eui48](https://crates.io/crates/eui48) 1.0| no  \n`with-geo-types-0_6`| Enable support for the 0.6 version of the `geo-types` crate.| [geo-types](https://crates.io/crates/geo-types/0.6.0) 0.6| no  \n`with-geo-types-0_7`| Enable support for the 0.7 version of the `geo-types` crate.| [geo-types](https://crates.io/crates/geo-types/0.7.0) 0.7| no  \n`with-serde_json-1`| Enable support for the `serde_json` crate.| [serde_json](https://crates.io/crates/serde_json) 1.0| no  \n`with-uuid-0_8`| Enable support for the `uuid` crate.| [uuid](https://crates.io/crates/uuid) 0.8| no  \n`with-uuid-1`| Enable support for the `uuid` crate.| [uuid](https://crates.io/crates/uuid) 1.0| no  \n`with-time-0_2`| Enable support for the 0.2 version of the `time` crate.| [time](https://crates.io/crates/time/0.2.0) 0.2| no  \n`with-time-0_3`| Enable support for the 0.3 version of the `time` crate.| [time](https://crates.io/crates/time/0.3.0) 0.3| no  \n## Re-exports[\u00a7](https://docs.rs/postgres/latest/postgres/#reexports)\n\n`pub use crate::config::Config[](https://docs.rs/postgres/latest/postgres/config/struct.Config.html \"struct postgres::config::Config\");`\n\n\n`pub use crate::error::Error[](https://docs.rs/postgres/latest/postgres/error/struct.Error.html \"struct postgres::error::Error\");`\n\n\n`pub use crate::row::Row[](https://docs.rs/postgres/latest/postgres/row/struct.Row.html \"struct postgres::row::Row\");`\n\n\n`pub use crate::row::SimpleQueryRow[](https://docs.rs/postgres/latest/postgres/row/struct.SimpleQueryRow.html \"struct postgres::row::SimpleQueryRow\");`\n\n\n`pub use crate::tls::NoTls[](https://docs.rs/postgres/latest/postgres/tls/struct.NoTls.html \"struct postgres::tls::NoTls\");`\n\n\n`pub use fallible_iterator[](https://docs.rs/fallible-iterator/0.2.0/x86_64-unknown-linux-gnu/fallible_iterator/index.html \"mod fallible_iterator\");`\n\n## Modules[\u00a7](https://docs.rs/postgres/latest/postgres/#modules)\n\n[binary_copy](https://docs.rs/postgres/latest/postgres/binary_copy/index.html \"mod postgres::binary_copy\")\n    Utilities for working with the PostgreSQL binary copy format.\n\n[config](https://docs.rs/postgres/latest/postgres/config/index.html \"mod postgres::config\")\n    Connection configuration.\n\n[error](https://docs.rs/postgres/latest/postgres/error/index.html \"mod postgres::error\")\n    Errors.\n\n[notifications](https://docs.rs/postgres/latest/postgres/notifications/index.html \"mod postgres::notifications\")\n    Asynchronous notifications.\n\n[row](https://docs.rs/postgres/latest/postgres/row/index.html \"mod postgres::row\")\n    Rows.\n\n[tls](https://docs.rs/postgres/latest/postgres/tls/index.html \"mod postgres::tls\")\n    TLS support.\n\n[types](https://docs.rs/postgres/latest/postgres/types/index.html \"mod postgres::types\")\n    Types.\n## Structs[\u00a7](https://docs.rs/postgres/latest/postgres/#structs)\n\n[CancelToken](https://docs.rs/postgres/latest/postgres/struct.CancelToken.html \"struct postgres::CancelToken\")\n    The capability to request cancellation of in-progress queries on a connection.\n\n[Client](https://docs.rs/postgres/latest/postgres/struct.Client.html \"struct postgres::Client\")\n    A synchronous PostgreSQL client.\n\n[Column](https://docs.rs/postgres/latest/postgres/struct.Column.html \"struct postgres::Column\")\n    Information about a column of a query.\n\n[CopyInWriter](https://docs.rs/postgres/latest/postgres/struct.CopyInWriter.html \"struct postgres::CopyInWriter\")\n    The writer returned by the `copy_in` method.\n\n[CopyOutReader](https://docs.rs/postgres/latest/postgres/struct.CopyOutReader.html \"struct postgres::CopyOutReader\")\n    The reader returned by the `copy_out` method.\n\n[Notification](https://docs.rs/postgres/latest/postgres/struct.Notification.html \"struct postgres::Notification\")\n    An asynchronous notification.\n\n[Notifications](https://docs.rs/postgres/latest/postgres/struct.Notifications.html \"struct postgres::Notifications\")\n    Notifications from a PostgreSQL backend.\n\n[Portal](https://docs.rs/postgres/latest/postgres/struct.Portal.html \"struct postgres::Portal\")\n    A portal.\n\n[RowIter](https://docs.rs/postgres/latest/postgres/struct.RowIter.html \"struct postgres::RowIter\")\n    The iterator returned by `query_raw`.\n\n[Socket](https://docs.rs/postgres/latest/postgres/struct.Socket.html \"struct postgres::Socket\")\n    The standard stream type used by the crate.\n\n[Statement](https://docs.rs/postgres/latest/postgres/struct.Statement.html \"struct postgres::Statement\")\n    A prepared statement.\n\n[Transaction](https://docs.rs/postgres/latest/postgres/struct.Transaction.html \"struct postgres::Transaction\")\n    A representation of a PostgreSQL database transaction.\n\n[TransactionBuilder](https://docs.rs/postgres/latest/postgres/struct.TransactionBuilder.html \"struct postgres::TransactionBuilder\")\n    A builder for database transactions.\n## Enums[\u00a7](https://docs.rs/postgres/latest/postgres/#enums)\n\n[IsolationLevel](https://docs.rs/postgres/latest/postgres/enum.IsolationLevel.html \"enum postgres::IsolationLevel\")\n    The isolation level of a database transaction.\n\n[SimpleQueryMessage](https://docs.rs/postgres/latest/postgres/enum.SimpleQueryMessage.html \"enum postgres::SimpleQueryMessage\")\n    Message returned by the `SimpleQuery` stream.\n## Traits[\u00a7](https://docs.rs/postgres/latest/postgres/#traits)\n\n[GenericClient](https://docs.rs/postgres/latest/postgres/trait.GenericClient.html \"trait postgres::GenericClient\")\n    A trait allowing abstraction over connections and transactions.\n\n[ToStatement](https://docs.rs/postgres/latest/postgres/trait.ToStatement.html \"trait postgres::ToStatement\")\n    A trait abstracting over prepared and unprepared statements.\n",
        "markdown_with_citations": "[](https://docs.rs/postgres/latest/postgres/all.html \"show sidebar\")\n# Crate postgresCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nA synchronous client for the PostgreSQL database.\n## \u00a7\u27e84\u27e9Example\n```\nuse postgres::{Client, NoTls};\nlet mut client = Client::connect(\"host=localhost user=postgres\", NoTls)?;\nclient.batch_execute(\"\n  CREATE TABLE person (\n    id   SERIAL PRIMARY KEY,\n    name  TEXT NOT NULL,\n    data  BYTEA\n  )\n\")?;\nlet name = \"Ferris\";\nlet data = None::<&[u8]>;\nclient.execute(\n  \"INSERT INTO person (name, data) VALUES ($1, $2)\",\n  &[&name, &data],\n)?;\nfor row in client.query(\"SELECT id, name, data FROM person\", &[])? {\n  let id: i32 = row.get(0);\n  let name: &str = row.get(1);\n  let data: Option<&[u8]> = row.get(2);\n  println!(\"found person: {} {} {:?}\", id, name, data);\n}\n```\n\n## \u00a7\u27e85\u27e9Implementation\nThis crate is a lightweight wrapper over tokio-postgres. The `postgres::Client` is simply a wrapper around a `tokio_postgres::Client` along side a tokio `Runtime`. The client simply blocks on the futures provided by the async client.\n## \u00a7\u27e86\u27e9SSL/TLS support\nTLS support is implemented via external libraries. `Client::connect` and `Config::connect` take a TLS implementation as an argument. The `NoTls` type in this crate can be used when TLS is not required. Otherwise, the `postgres-openssl` and `postgres-native-tls` crates provide implementations backed by the `openssl` and `native-tls` crates, respectively.\n## \u00a7\u27e87\u27e9Features\nThe following features can be enabled from `Cargo.toml`:\nFeature| Description| Extra dependencies| Default  \n---|---|---|---  \n`with-bit-vec-0_6`| Enable support for the `bit-vec` crate.| bit-vec\u27e88\u27e9 0.6| no  \n`with-chrono-0_4`| Enable support for the `chrono` crate.| chrono\u27e89\u27e9 0.4| no  \n`with-eui48-0_4`| Enable support for the 0.4 version of the `eui48` crate. This is deprecated and will be removed.| eui48\u27e810\u27e9 0.4| no  \n`with-eui48-1`| Enable support for the 1.0 version of the `eui48` crate.| eui48\u27e810\u27e9 1.0| no  \n`with-geo-types-0_6`| Enable support for the 0.6 version of the `geo-types` crate.| geo-types\u27e811\u27e9 0.6| no  \n`with-geo-types-0_7`| Enable support for the 0.7 version of the `geo-types` crate.| geo-types\u27e812\u27e9 0.7| no  \n`with-serde_json-1`| Enable support for the `serde_json` crate.| serde_json\u27e813\u27e9 1.0| no  \n`with-uuid-0_8`| Enable support for the `uuid` crate.| uuid\u27e814\u27e9 0.8| no  \n`with-uuid-1`| Enable support for the `uuid` crate.| uuid\u27e814\u27e9 1.0| no  \n`with-time-0_2`| Enable support for the 0.2 version of the `time` crate.| time\u27e815\u27e9 0.2| no  \n`with-time-0_3`| Enable support for the 0.3 version of the `time` crate.| time\u27e816\u27e9 0.3| no  \n## Re-exports\u00a7\u27e817\u27e9\n\n`pub use crate::config::Config[](https://docs.rs/postgres/latest/postgres/config/struct.Config.html \"struct postgres::config::Config\");`\n\n\n`pub use crate::error::Error[](https://docs.rs/postgres/latest/postgres/error/struct.Error.html \"struct postgres::error::Error\");`\n\n\n`pub use crate::row::Row[](https://docs.rs/postgres/latest/postgres/row/struct.Row.html \"struct postgres::row::Row\");`\n\n\n`pub use crate::row::SimpleQueryRow[](https://docs.rs/postgres/latest/postgres/row/struct.SimpleQueryRow.html \"struct postgres::row::SimpleQueryRow\");`\n\n\n`pub use crate::tls::NoTls[](https://docs.rs/postgres/latest/postgres/tls/struct.NoTls.html \"struct postgres::tls::NoTls\");`\n\n\n`pub use fallible_iterator[](https://docs.rs/fallible-iterator/0.2.0/x86_64-unknown-linux-gnu/fallible_iterator/index.html \"mod fallible_iterator\");`\n\n## Modules\u00a7\u27e818\u27e9\n\nbinary_copy\u27e819\u27e9\n    Utilities for working with the PostgreSQL binary copy format.\n\nconfig\u27e820\u27e9\n    Connection configuration.\n\nerror\u27e821\u27e9\n    Errors.\n\nnotifications\u27e822\u27e9\n    Asynchronous notifications.\n\nrow\u27e823\u27e9\n    Rows.\n\ntls\u27e824\u27e9\n    TLS support.\n\ntypes\u27e825\u27e9\n    Types.\n## Structs\u00a7\u27e826\u27e9\n\nCancelToken\u27e827\u27e9\n    The capability to request cancellation of in-progress queries on a connection.\n\nClient\u27e828\u27e9\n    A synchronous PostgreSQL client.\n\nColumn\u27e829\u27e9\n    Information about a column of a query.\n\nCopyInWriter\u27e830\u27e9\n    The writer returned by the `copy_in` method.\n\nCopyOutReader\u27e831\u27e9\n    The reader returned by the `copy_out` method.\n\nNotification\u27e832\u27e9\n    An asynchronous notification.\n\nNotifications\u27e833\u27e9\n    Notifications from a PostgreSQL backend.\n\nPortal\u27e834\u27e9\n    A portal.\n\nRowIter\u27e835\u27e9\n    The iterator returned by `query_raw`.\n\nSocket\u27e836\u27e9\n    The standard stream type used by the crate.\n\nStatement\u27e837\u27e9\n    A prepared statement.\n\nTransaction\u27e838\u27e9\n    A representation of a PostgreSQL database transaction.\n\nTransactionBuilder\u27e839\u27e9\n    A builder for database transactions.\n## Enums\u00a7\u27e840\u27e9\n\nIsolationLevel\u27e841\u27e9\n    The isolation level of a database transaction.\n\nSimpleQueryMessage\u27e842\u27e9\n    Message returned by the `SimpleQuery` stream.\n## Traits\u00a7\u27e843\u27e9\n\nGenericClient\u27e844\u27e9\n    A trait allowing abstraction over connections and transactions.\n\nToStatement\u27e845\u27e9\n    A trait abstracting over prepared and unprepared statements.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/postgres/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/postgres/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/postgres/latest/src/postgres/lib.rs.html#1-108: Source\n\u27e84\u27e9 https://docs.rs/postgres/latest/postgres/#example: \u00a7\n\u27e85\u27e9 https://docs.rs/postgres/latest/postgres/#implementation: \u00a7\n\u27e86\u27e9 https://docs.rs/postgres/latest/postgres/#ssltls-support: \u00a7\n\u27e87\u27e9 https://docs.rs/postgres/latest/postgres/#features: \u00a7\n\u27e88\u27e9 https://crates.io/crates/bit-vec: bit-vec\n\u27e89\u27e9 https://crates.io/crates/chrono: chrono\n\u27e810\u27e9 https://crates.io/crates/eui48: eui48\n\u27e811\u27e9 https://crates.io/crates/geo-types/0.6.0: geo-types\n\u27e812\u27e9 https://crates.io/crates/geo-types/0.7.0: geo-types\n\u27e813\u27e9 https://crates.io/crates/serde_json: serde_json\n\u27e814\u27e9 https://crates.io/crates/uuid: uuid\n\u27e815\u27e9 https://crates.io/crates/time/0.2.0: time\n\u27e816\u27e9 https://crates.io/crates/time/0.3.0: time\n\u27e817\u27e9 https://docs.rs/postgres/latest/postgres/#reexports: \u00a7\n\u27e818\u27e9 https://docs.rs/postgres/latest/postgres/#modules: \u00a7\n\u27e819\u27e9 https://docs.rs/postgres/latest/postgres/binary_copy/index.html: mod postgres::binary_copy - binary_copy\n\u27e820\u27e9 https://docs.rs/postgres/latest/postgres/config/index.html: mod postgres::config - config\n\u27e821\u27e9 https://docs.rs/postgres/latest/postgres/error/index.html: mod postgres::error - error\n\u27e822\u27e9 https://docs.rs/postgres/latest/postgres/notifications/index.html: mod postgres::notifications - notifications\n\u27e823\u27e9 https://docs.rs/postgres/latest/postgres/row/index.html: mod postgres::row - row\n\u27e824\u27e9 https://docs.rs/postgres/latest/postgres/tls/index.html: mod postgres::tls - tls\n\u27e825\u27e9 https://docs.rs/postgres/latest/postgres/types/index.html: mod postgres::types - types\n\u27e826\u27e9 https://docs.rs/postgres/latest/postgres/#structs: \u00a7\n\u27e827\u27e9 https://docs.rs/postgres/latest/postgres/struct.CancelToken.html: struct postgres::CancelToken - CancelToken\n\u27e828\u27e9 https://docs.rs/postgres/latest/postgres/struct.Client.html: struct postgres::Client - Client\n\u27e829\u27e9 https://docs.rs/postgres/latest/postgres/struct.Column.html: struct postgres::Column - Column\n\u27e830\u27e9 https://docs.rs/postgres/latest/postgres/struct.CopyInWriter.html: struct postgres::CopyInWriter - CopyInWriter\n\u27e831\u27e9 https://docs.rs/postgres/latest/postgres/struct.CopyOutReader.html: struct postgres::CopyOutReader - CopyOutReader\n\u27e832\u27e9 https://docs.rs/postgres/latest/postgres/struct.Notification.html: struct postgres::Notification - Notification\n\u27e833\u27e9 https://docs.rs/postgres/latest/postgres/struct.Notifications.html: struct postgres::Notifications - Notifications\n\u27e834\u27e9 https://docs.rs/postgres/latest/postgres/struct.Portal.html: struct postgres::Portal - Portal\n\u27e835\u27e9 https://docs.rs/postgres/latest/postgres/struct.RowIter.html: struct postgres::RowIter - RowIter\n\u27e836\u27e9 https://docs.rs/postgres/latest/postgres/struct.Socket.html: struct postgres::Socket - Socket\n\u27e837\u27e9 https://docs.rs/postgres/latest/postgres/struct.Statement.html: struct postgres::Statement - Statement\n\u27e838\u27e9 https://docs.rs/postgres/latest/postgres/struct.Transaction.html: struct postgres::Transaction - Transaction\n\u27e839\u27e9 https://docs.rs/postgres/latest/postgres/struct.TransactionBuilder.html: struct postgres::TransactionBuilder - TransactionBuilder\n\u27e840\u27e9 https://docs.rs/postgres/latest/postgres/#enums: \u00a7\n\u27e841\u27e9 https://docs.rs/postgres/latest/postgres/enum.IsolationLevel.html: enum postgres::IsolationLevel - IsolationLevel\n\u27e842\u27e9 https://docs.rs/postgres/latest/postgres/enum.SimpleQueryMessage.html: enum postgres::SimpleQueryMessage - SimpleQueryMessage\n\u27e843\u27e9 https://docs.rs/postgres/latest/postgres/#traits: \u00a7\n\u27e844\u27e9 https://docs.rs/postgres/latest/postgres/trait.GenericClient.html: trait postgres::GenericClient - GenericClient\n\u27e845\u27e9 https://docs.rs/postgres/latest/postgres/trait.ToStatement.html: trait postgres::ToStatement - ToStatement\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `postgres` crate provides a synchronous client for interacting with PostgreSQL databases, built as a lightweight wrapper around `tokio-postgres`. It supports features like query execution, transactions, prepared statements, and asynchronous notifications, with optional SSL/TLS support via external libraries (`openssl` or `native-tls`). Additional functionality can be enabled through features like `serde_json`, `uuid`, and `chrono` integration.",
    "feature_summary": null,
    "use_case": "Database",
    "score": 0.0,
    "factual_counterfactual": "### Pair 1: TLS Support  \n\u2705 Factual: The `postgres` crate supports SSL/TLS connections by allowing users to specify a TLS implementation, such as `postgres-openssl` or `postgres-native-tls`.  \n\u274c Counterfactual: The `postgres` crate includes built-in TLS support without requiring external libraries like `openssl` or `native-tls`.  \n\n---\n\n### Pair 2: Synchronous Client  \n\u2705 Factual: The `postgres::Client` in the crate is a synchronous wrapper around the `tokio-postgres` async client, blocking on futures using a `tokio` runtime.  \n\u274c Counterfactual: The `postgres::Client` is fully asynchronous and does not rely on blocking operations for database queries.  \n\n---\n\n### Pair 3: Feature Flags  \n\u2705 Factual: The `postgres` crate allows enabling optional features like `with-chrono-0_4` and `with-uuid-1` via feature flags in `Cargo.toml`.  \n\u274c Counterfactual: All optional features in the `postgres` crate, such as `with-chrono-0_4` and `with-uuid-1`, are enabled by default without requiring explicit configuration in `Cargo.toml`.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}