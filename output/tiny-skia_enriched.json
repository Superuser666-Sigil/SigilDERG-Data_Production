{
    "name": "tiny-skia",
    "version": "0.11.4",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/tiny-skia/latest/tiny_skia/all.html \"show sidebar\")\n# Crate tiny_skiaCopy item path\n[Settings](https://docs.rs/tiny-skia/latest/settings.html)\n[Help](https://docs.rs/tiny-skia/latest/help.html)\nSummary[Source](https://docs.rs/tiny-skia/latest/src/tiny_skia/lib.rs.html#1-73)\nExpand description\n`tiny-skia` is a tiny [Skia](https://skia.org/) subset ported to Rust.\n`tiny-skia` API is a bit unconventional. It doesn\u2019t look like cairo, QPainter (Qt), HTML Canvas or even Skia itself. Instead, `tiny-skia` provides a set of low-level drawing APIs and a user should manage the world transform, clipping mask and style manually.\nSee the `examples/` directory for usage examples.\n## Structs[\u00a7](https://docs.rs/tiny-skia/latest/tiny_skia/#structs)\n\n[Color](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Color.html \"struct tiny_skia::Color\")\n    An RGBA color value, holding four floating point components.\n\n[ColorU8](https://docs.rs/tiny-skia/latest/tiny_skia/struct.ColorU8.html \"struct tiny_skia::ColorU8\")\n    A 32-bit RGBA color value.\n\n[GradientStop](https://docs.rs/tiny-skia/latest/tiny_skia/struct.GradientStop.html \"struct tiny_skia::GradientStop\")\n    A gradient point.\n\n[IntRect](https://docs.rs/tiny-skia/latest/tiny_skia/struct.IntRect.html \"struct tiny_skia::IntRect\")\n    An integer rectangle.\n\n[IntSize](https://docs.rs/tiny-skia/latest/tiny_skia/struct.IntSize.html \"struct tiny_skia::IntSize\")\n    An integer size.\n\n[LinearGradient](https://docs.rs/tiny-skia/latest/tiny_skia/struct.LinearGradient.html \"struct tiny_skia::LinearGradient\")\n    A linear gradient shader.\n\n[Mask](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Mask.html \"struct tiny_skia::Mask\")\n    A mask.\n\n[NonZeroRect](https://docs.rs/tiny-skia/latest/tiny_skia/struct.NonZeroRect.html \"struct tiny_skia::NonZeroRect\")\n    A rectangle defined by left, top, right and bottom edges.\n\n[Paint](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Paint.html \"struct tiny_skia::Paint\")\n    Controls how a shape should be painted.\n\n[Path](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Path.html \"struct tiny_skia::Path\")\n    A Bezier path.\n\n[PathBuilder](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathBuilder.html \"struct tiny_skia::PathBuilder\")\n    A path builder.\n\n[PathSegmentsIter](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathSegmentsIter.html \"struct tiny_skia::PathSegmentsIter\")\n    A path segments iterator.\n\n[PathStroker](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathStroker.html \"struct tiny_skia::PathStroker\")\n    A path stroker.\n\n[Pattern](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Pattern.html \"struct tiny_skia::Pattern\")\n    A pattern shader.\n\n[Pixmap](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Pixmap.html \"struct tiny_skia::Pixmap\")\n    A container that owns premultiplied RGBA pixels.\n\n[PixmapMut](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapMut.html \"struct tiny_skia::PixmapMut\")\n    A container that references mutable premultiplied RGBA pixels.\n\n[PixmapPaint](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapPaint.html \"struct tiny_skia::PixmapPaint\")\n    Controls how a pixmap should be blended.\n\n[PixmapRef](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapRef.html \"struct tiny_skia::PixmapRef\")\n    A container that references premultiplied RGBA pixels.\n\n[Point](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Point.html \"struct tiny_skia::Point\")\n    A point.\n\n[PremultipliedColor](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PremultipliedColor.html \"struct tiny_skia::PremultipliedColor\")\n    A premultiplied RGBA color value, holding four floating point components.\n\n[PremultipliedColorU8](https://docs.rs/tiny-skia/latest/tiny_skia/struct.PremultipliedColorU8.html \"struct tiny_skia::PremultipliedColorU8\")\n    A 32-bit premultiplied RGBA color value.\n\n[RadialGradient](https://docs.rs/tiny-skia/latest/tiny_skia/struct.RadialGradient.html \"struct tiny_skia::RadialGradient\")\n    A radial gradient shader.\n\n[Rect](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Rect.html \"struct tiny_skia::Rect\")\n    A rectangle defined by left, top, right and bottom edges.\n\n[Size](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Size.html \"struct tiny_skia::Size\")\n    A size.\n\n[Stroke](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Stroke.html \"struct tiny_skia::Stroke\")\n    Stroke properties.\n\n[StrokeDash](https://docs.rs/tiny-skia/latest/tiny_skia/struct.StrokeDash.html \"struct tiny_skia::StrokeDash\")\n    A stroke dashing properties.\n\n[Transform](https://docs.rs/tiny-skia/latest/tiny_skia/struct.Transform.html \"struct tiny_skia::Transform\")\n    An affine transformation matrix.\n## Enums[\u00a7](https://docs.rs/tiny-skia/latest/tiny_skia/#enums)\n\n[BlendMode](https://docs.rs/tiny-skia/latest/tiny_skia/enum.BlendMode.html \"enum tiny_skia::BlendMode\")\n    A blending mode.\n\n[FillRule](https://docs.rs/tiny-skia/latest/tiny_skia/enum.FillRule.html \"enum tiny_skia::FillRule\")\n    A path filling rule.\n\n[FilterQuality](https://docs.rs/tiny-skia/latest/tiny_skia/enum.FilterQuality.html \"enum tiny_skia::FilterQuality\")\n    Controls how much filtering to be done when transforming images.\n\n[LineCap](https://docs.rs/tiny-skia/latest/tiny_skia/enum.LineCap.html \"enum tiny_skia::LineCap\")\n    Draws at the beginning and end of an open path contour.\n\n[LineJoin](https://docs.rs/tiny-skia/latest/tiny_skia/enum.LineJoin.html \"enum tiny_skia::LineJoin\")\n    Specifies how corners are drawn when a shape is stroked.\n\n[MaskType](https://docs.rs/tiny-skia/latest/tiny_skia/enum.MaskType.html \"enum tiny_skia::MaskType\")\n    A mask type.\n\n[PathSegment](https://docs.rs/tiny-skia/latest/tiny_skia/enum.PathSegment.html \"enum tiny_skia::PathSegment\")\n    A path segment.\n\n[Shader](https://docs.rs/tiny-skia/latest/tiny_skia/enum.Shader.html \"enum tiny_skia::Shader\")\n    A shader specifies the source color(s) for what is being drawn.\n\n[SpreadMode](https://docs.rs/tiny-skia/latest/tiny_skia/enum.SpreadMode.html \"enum tiny_skia::SpreadMode\")\n    A shader spreading mode.\n## Constants[\u00a7](https://docs.rs/tiny-skia/latest/tiny_skia/#constants)\n\n[ALPHA_OPAQUE](https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_OPAQUE.html \"constant tiny_skia::ALPHA_OPAQUE\")\n    Represents fully opaque Alpha value.\n\n[ALPHA_TRANSPARENT](https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_TRANSPARENT.html \"constant tiny_skia::ALPHA_TRANSPARENT\")\n    Represents fully transparent Alpha value.\n\n[ALPHA_U8_OPAQUE](https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_U8_OPAQUE.html \"constant tiny_skia::ALPHA_U8_OPAQUE\")\n    Represents fully opaque AlphaU8 value.\n\n[ALPHA_U8_TRANSPARENT](https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_U8_TRANSPARENT.html \"constant tiny_skia::ALPHA_U8_TRANSPARENT\")\n    Represents fully transparent AlphaU8 value.\n\n[BYTES_PER_PIXEL](https://docs.rs/tiny-skia/latest/tiny_skia/constant.BYTES_PER_PIXEL.html \"constant tiny_skia::BYTES_PER_PIXEL\")\n    Number of bytes per pixel.\n",
        "markdown_with_citations": "[](https://docs.rs/tiny-skia/latest/tiny_skia/all.html \"show sidebar\")\n# Crate tiny_skiaCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`tiny-skia` is a tiny Skia\u27e84\u27e9 subset ported to Rust.\n`tiny-skia` API is a bit unconventional. It doesn\u2019t look like cairo, QPainter (Qt), HTML Canvas or even Skia itself. Instead, `tiny-skia` provides a set of low-level drawing APIs and a user should manage the world transform, clipping mask and style manually.\nSee the `examples/` directory for usage examples.\n## Structs\u00a7\u27e85\u27e9\n\nColor\u27e86\u27e9\n    An RGBA color value, holding four floating point components.\n\nColorU8\u27e87\u27e9\n    A 32-bit RGBA color value.\n\nGradientStop\u27e88\u27e9\n    A gradient point.\n\nIntRect\u27e89\u27e9\n    An integer rectangle.\n\nIntSize\u27e810\u27e9\n    An integer size.\n\nLinearGradient\u27e811\u27e9\n    A linear gradient shader.\n\nMask\u27e812\u27e9\n    A mask.\n\nNonZeroRect\u27e813\u27e9\n    A rectangle defined by left, top, right and bottom edges.\n\nPaint\u27e814\u27e9\n    Controls how a shape should be painted.\n\nPath\u27e815\u27e9\n    A Bezier path.\n\nPathBuilder\u27e816\u27e9\n    A path builder.\n\nPathSegmentsIter\u27e817\u27e9\n    A path segments iterator.\n\nPathStroker\u27e818\u27e9\n    A path stroker.\n\nPattern\u27e819\u27e9\n    A pattern shader.\n\nPixmap\u27e820\u27e9\n    A container that owns premultiplied RGBA pixels.\n\nPixmapMut\u27e821\u27e9\n    A container that references mutable premultiplied RGBA pixels.\n\nPixmapPaint\u27e822\u27e9\n    Controls how a pixmap should be blended.\n\nPixmapRef\u27e823\u27e9\n    A container that references premultiplied RGBA pixels.\n\nPoint\u27e824\u27e9\n    A point.\n\nPremultipliedColor\u27e825\u27e9\n    A premultiplied RGBA color value, holding four floating point components.\n\nPremultipliedColorU8\u27e826\u27e9\n    A 32-bit premultiplied RGBA color value.\n\nRadialGradient\u27e827\u27e9\n    A radial gradient shader.\n\nRect\u27e828\u27e9\n    A rectangle defined by left, top, right and bottom edges.\n\nSize\u27e829\u27e9\n    A size.\n\nStroke\u27e830\u27e9\n    Stroke properties.\n\nStrokeDash\u27e831\u27e9\n    A stroke dashing properties.\n\nTransform\u27e832\u27e9\n    An affine transformation matrix.\n## Enums\u00a7\u27e833\u27e9\n\nBlendMode\u27e834\u27e9\n    A blending mode.\n\nFillRule\u27e835\u27e9\n    A path filling rule.\n\nFilterQuality\u27e836\u27e9\n    Controls how much filtering to be done when transforming images.\n\nLineCap\u27e837\u27e9\n    Draws at the beginning and end of an open path contour.\n\nLineJoin\u27e838\u27e9\n    Specifies how corners are drawn when a shape is stroked.\n\nMaskType\u27e839\u27e9\n    A mask type.\n\nPathSegment\u27e840\u27e9\n    A path segment.\n\nShader\u27e841\u27e9\n    A shader specifies the source color(s) for what is being drawn.\n\nSpreadMode\u27e842\u27e9\n    A shader spreading mode.\n## Constants\u00a7\u27e843\u27e9\n\nALPHA_OPAQUE\u27e844\u27e9\n    Represents fully opaque Alpha value.\n\nALPHA_TRANSPARENT\u27e845\u27e9\n    Represents fully transparent Alpha value.\n\nALPHA_U8_OPAQUE\u27e846\u27e9\n    Represents fully opaque AlphaU8 value.\n\nALPHA_U8_TRANSPARENT\u27e847\u27e9\n    Represents fully transparent AlphaU8 value.\n\nBYTES_PER_PIXEL\u27e848\u27e9\n    Number of bytes per pixel.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/tiny-skia/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/tiny-skia/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/tiny-skia/latest/src/tiny_skia/lib.rs.html#1-73: Source\n\u27e84\u27e9 https://skia.org/: Skia\n\u27e85\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Color.html: struct tiny_skia::Color - Color\n\u27e87\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.ColorU8.html: struct tiny_skia::ColorU8 - ColorU8\n\u27e88\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.GradientStop.html: struct tiny_skia::GradientStop - GradientStop\n\u27e89\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.IntRect.html: struct tiny_skia::IntRect - IntRect\n\u27e810\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.IntSize.html: struct tiny_skia::IntSize - IntSize\n\u27e811\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.LinearGradient.html: struct tiny_skia::LinearGradient - LinearGradient\n\u27e812\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Mask.html: struct tiny_skia::Mask - Mask\n\u27e813\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.NonZeroRect.html: struct tiny_skia::NonZeroRect - NonZeroRect\n\u27e814\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Paint.html: struct tiny_skia::Paint - Paint\n\u27e815\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Path.html: struct tiny_skia::Path - Path\n\u27e816\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathBuilder.html: struct tiny_skia::PathBuilder - PathBuilder\n\u27e817\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathSegmentsIter.html: struct tiny_skia::PathSegmentsIter - PathSegmentsIter\n\u27e818\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PathStroker.html: struct tiny_skia::PathStroker - PathStroker\n\u27e819\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Pattern.html: struct tiny_skia::Pattern - Pattern\n\u27e820\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Pixmap.html: struct tiny_skia::Pixmap - Pixmap\n\u27e821\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapMut.html: struct tiny_skia::PixmapMut - PixmapMut\n\u27e822\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapPaint.html: struct tiny_skia::PixmapPaint - PixmapPaint\n\u27e823\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PixmapRef.html: struct tiny_skia::PixmapRef - PixmapRef\n\u27e824\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Point.html: struct tiny_skia::Point - Point\n\u27e825\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PremultipliedColor.html: struct tiny_skia::PremultipliedColor - PremultipliedColor\n\u27e826\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.PremultipliedColorU8.html: struct tiny_skia::PremultipliedColorU8 - PremultipliedColorU8\n\u27e827\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.RadialGradient.html: struct tiny_skia::RadialGradient - RadialGradient\n\u27e828\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Rect.html: struct tiny_skia::Rect - Rect\n\u27e829\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Size.html: struct tiny_skia::Size - Size\n\u27e830\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Stroke.html: struct tiny_skia::Stroke - Stroke\n\u27e831\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.StrokeDash.html: struct tiny_skia::StrokeDash - StrokeDash\n\u27e832\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/struct.Transform.html: struct tiny_skia::Transform - Transform\n\u27e833\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/#enums: \u00a7\n\u27e834\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.BlendMode.html: enum tiny_skia::BlendMode - BlendMode\n\u27e835\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.FillRule.html: enum tiny_skia::FillRule - FillRule\n\u27e836\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.FilterQuality.html: enum tiny_skia::FilterQuality - FilterQuality\n\u27e837\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.LineCap.html: enum tiny_skia::LineCap - LineCap\n\u27e838\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.LineJoin.html: enum tiny_skia::LineJoin - LineJoin\n\u27e839\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.MaskType.html: enum tiny_skia::MaskType - MaskType\n\u27e840\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.PathSegment.html: enum tiny_skia::PathSegment - PathSegment\n\u27e841\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.Shader.html: enum tiny_skia::Shader - Shader\n\u27e842\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/enum.SpreadMode.html: enum tiny_skia::SpreadMode - SpreadMode\n\u27e843\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/#constants: \u00a7\n\u27e844\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_OPAQUE.html: constant tiny_skia::ALPHA_OPAQUE - ALPHA_OPAQUE\n\u27e845\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_TRANSPARENT.html: constant tiny_skia::ALPHA_TRANSPARENT - ALPHA_TRANSPARENT\n\u27e846\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_U8_OPAQUE.html: constant tiny_skia::ALPHA_U8_OPAQUE - ALPHA_U8_OPAQUE\n\u27e847\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/constant.ALPHA_U8_TRANSPARENT.html: constant tiny_skia::ALPHA_U8_TRANSPARENT - ALPHA_U8_TRANSPARENT\n\u27e848\u27e9 https://docs.rs/tiny-skia/latest/tiny_skia/constant.BYTES_PER_PIXEL.html: constant tiny_skia::BYTES_PER_PIXEL - BYTES_PER_PIXEL\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `tiny-skia` crate is a lightweight subset of the Skia graphics library, ported to Rust, offering low-level drawing APIs for 2D graphics. It provides primitives like paths, gradients, transformations, and pixmap manipulation, while requiring users to manually manage world transforms, clipping masks, and styles. Key features include support for Bezier paths, gradient shaders, affine transformations, and customizable blending and stroke properties.",
    "feature_summary": null,
    "use_case": "Unknown",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Drawing APIs and Transform Management  \n\u2705 **Factual:** `tiny-skia` provides low-level drawing APIs that require users to manually manage the world transform, clipping mask, and style.  \n\u274c **Counterfactual:** `tiny-skia` includes high-level drawing APIs that automatically handle world transforms, clipping masks, and styles, similar to HTML Canvas or QPainter.  \n\n---\n\n### Pair 2: Gradient Support  \n\u2705 **Factual:** `tiny-skia` supports both linear and radial gradient shaders through the `LinearGradient` and `RadialGradient` structs.  \n\u274c **Counterfactual:** `tiny-skia` only supports linear gradients and does not provide functionality for radial gradients.  \n\n---\n\n### Pair 3: Pixel Container Types  \n\u2705 **Factual:** `tiny-skia` offers multiple pixel container types, such as `Pixmap`, `PixmapMut`, and `PixmapRef`, to manage premultiplied RGBA pixel data.  \n\u274c **Counterfactual:** `tiny-skia` only provides a single pixel container type, `Pixmap`, for handling RGBA pixel data.  \n\n---",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}