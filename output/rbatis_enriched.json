{
    "name": "rbatis",
    "version": "4.6.7",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/rbatis/latest/rbatis/all.html \"show sidebar\")\n# Crate rbatisCopy item path\n[Settings](https://docs.rs/rbatis/latest/settings.html)\n[Help](https://docs.rs/rbatis/latest/help.html)\nSummary[Source](https://docs.rs/rbatis/latest/src/rbatis/lib.rs.html#1-28)\n## Re-exports[\u00a7](https://docs.rs/rbatis/latest/rbatis/#reexports)\n\n`pub extern crate dark_std[](https://docs.rs/dark-std/0.2.16/x86_64-unknown-linux-gnu/dark_std/index.html \"mod dark_std\");`\n\n\n`pub extern crate rbatis_codegen[](https://docs.rs/rbatis-codegen/4.6.5/x86_64-unknown-linux-gnu/rbatis_codegen/index.html \"mod rbatis_codegen\");`\n\n\n`pub extern crate rbdc[](https://docs.rs/rbdc/4.6.0/x86_64-unknown-linux-gnu/rbdc/index.html \"mod rbdc\");`\n\n\n`pub use decode[](https://docs.rs/rbatis/latest/rbatis/decode/index.html \"mod rbatis::decode\")::*;`\n\n\n`pub use error[](https://docs.rs/rbatis/latest/rbatis/error/index.html \"mod rbatis::error\")::*;`\n\n\n`pub use plugin[](https://docs.rs/rbatis/latest/rbatis/plugin/index.html \"mod rbatis::plugin\")::*;`\n\n\n`pub use rbatis[](https://docs.rs/rbatis/latest/rbatis/rbatis/index.html \"mod rbatis::rbatis\")::*;`\n\n## Modules[\u00a7](https://docs.rs/rbatis/latest/rbatis/#modules)\n\n[crud](https://docs.rs/rbatis/latest/rbatis/crud/index.html \"mod rbatis::crud\")\n\n\n[crud_traits](https://docs.rs/rbatis/latest/rbatis/crud_traits/index.html \"mod rbatis::crud_traits\")\n\n\n[decode](https://docs.rs/rbatis/latest/rbatis/decode/index.html \"mod rbatis::decode\")\n    Types and traits for decoding values from the database.\n\n[error](https://docs.rs/rbatis/latest/rbatis/error/index.html \"mod rbatis::error\")\n\n\n[executor](https://docs.rs/rbatis/latest/rbatis/executor/index.html \"mod rbatis::executor\")\n\n\n[plugin](https://docs.rs/rbatis/latest/rbatis/plugin/index.html \"mod rbatis::plugin\")\n\n\n[rbatis](https://docs.rs/rbatis/latest/rbatis/rbatis/index.html \"mod rbatis::rbatis\")\n\n\n[utils](https://docs.rs/rbatis/latest/rbatis/utils/index.html \"mod rbatis::utils\")\n\n## Macros[\u00a7](https://docs.rs/rbatis/latest/rbatis/#macros)\n\n[crud](https://docs.rs/rbatis/latest/rbatis/macro.crud.html \"macro rbatis::crud\")\n    PySql: gen select*,update*,insert*,delete* \u2026 methods\n\n[field_key](https://docs.rs/rbatis/latest/rbatis/macro.field_key.html \"macro rbatis::field_key\")\n    Used to simulate enumerations to improve code maintainability. this is return &str data for example:\n\n[field_name](https://docs.rs/rbatis/latest/rbatis/macro.field_name.html \"macro rbatis::field_name\")\n    Used to simulate enumerations to improve code maintainability. this is return &str data for example:\n\n[htmlsql](https://docs.rs/rbatis/latest/rbatis/macro.htmlsql.html \"macro rbatis::htmlsql\")\n    use macro wrapper #[html_sql] for example query rbs::Value:\n\n[htmlsql_select_page](https://docs.rs/rbatis/latest/rbatis/macro.htmlsql_select_page.html \"macro rbatis::htmlsql_select_page\")\n    impl html_sql select page.\n\n[impl_delete](https://docs.rs/rbatis/latest/rbatis/macro.impl_delete.html \"macro rbatis::impl_delete\")\n    PySql: gen sql = DELETE FROM table_name WHERE some_column=some_value;\n\n[impl_insert](https://docs.rs/rbatis/latest/rbatis/macro.impl_insert.html \"macro rbatis::impl_insert\")\n    PySql: gen sql => INSERT INTO table_name (column1,column2,column3,\u2026) VALUES (value1,value2,value3,\u2026);\n\n[impl_select](https://docs.rs/rbatis/latest/rbatis/macro.impl_select.html \"macro rbatis::impl_select\")\n    PySql: gen sql => SELECT (column1,column2,column3,\u2026) FROM table_name (column1,column2,column3,\u2026) *** WHERE ***\n\n[impl_select_page](https://docs.rs/rbatis/latest/rbatis/macro.impl_select_page.html \"macro rbatis::impl_select_page\")\n    pysql impl_select_page\n\n[impl_update](https://docs.rs/rbatis/latest/rbatis/macro.impl_update.html \"macro rbatis::impl_update\")\n    PySql: gen sql = UPDATE table_name SET column1=value1,column2=value2,\u2026 WHERE some_column=some_value;\n\n[impled](https://docs.rs/rbatis/latest/rbatis/macro.impled.html \"macro rbatis::impled\")\n    html_sql/py_sql impled\n\n[make_table](https://docs.rs/rbatis/latest/rbatis/macro.make_table.html \"macro rbatis::make_table\")Deprecated\n\n\n[make_table_field_map](https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_map.html \"macro rbatis::make_table_field_map\")Deprecated\n\n\n[make_table_field_map_btree](https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_map_btree.html \"macro rbatis::make_table_field_map_btree\")Deprecated\n\n\n[make_table_field_vec](https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_vec.html \"macro rbatis::make_table_field_vec\")Deprecated\n\n\n[pysql](https://docs.rs/rbatis/latest/rbatis/macro.pysql.html \"macro rbatis::pysql\")\n    use macro wrapper #[py_sql] for query example:\n\n[pysql_select_page](https://docs.rs/rbatis/latest/rbatis/macro.pysql_select_page.html \"macro rbatis::pysql_select_page\")\n    impl py_sql select page.\n\n[raw_sql](https://docs.rs/rbatis/latest/rbatis/macro.raw_sql.html \"macro rbatis::raw_sql\")\n    use macro wrapper #[sql] for example:\n\n[table](https://docs.rs/rbatis/latest/rbatis/macro.table.html \"macro rbatis::table\")\n    Simplifies table construction by relying on the Default trait\n\n[table_field_btree](https://docs.rs/rbatis/latest/rbatis/macro.table_field_btree.html \"macro rbatis::table_field_btree\")\n    Gets the BtreeMap collection of member attributes of the target Vec for example:\n\n[table_field_map](https://docs.rs/rbatis/latest/rbatis/macro.table_field_map.html \"macro rbatis::table_field_map\")\n    Gets the HashMap collection of member attributes of the target Vec for example:\n\n[table_field_set](https://docs.rs/rbatis/latest/rbatis/macro.table_field_set.html \"macro rbatis::table_field_set\")\n    take the target Vec member attribute Vec collection for example:\n\n[table_field_vec](https://docs.rs/rbatis/latest/rbatis/macro.table_field_vec.html \"macro rbatis::table_field_vec\")\n    take the target Vec member attribute Vec collection for example:\n## Structs[\u00a7](https://docs.rs/rbatis/latest/rbatis/#structs)\n\n[DefaultPool](https://docs.rs/rbatis/latest/rbatis/struct.DefaultPool.html \"struct rbatis::DefaultPool\")\n\n## Attribute Macros[\u00a7](https://docs.rs/rbatis/latest/rbatis/#attributes)\n\n[async_trait](https://docs.rs/rbatis/latest/rbatis/attr.async_trait.html \"attr rbatis::async_trait\")\n\n\n[html_sql](https://docs.rs/rbatis/latest/rbatis/attr.html_sql.html \"attr rbatis::html_sql\")\n    html sql create macro,this macro use RB.py_query and RB.py_exec for example:\n\n[py_sql](https://docs.rs/rbatis/latest/rbatis/attr.py_sql.html \"attr rbatis::py_sql\")\n    py sql create macro,this macro use RB.py_query and RB.py_exec\n\n[snake_name](https://docs.rs/rbatis/latest/rbatis/attr.snake_name.html \"attr rbatis::snake_name\")\n\n\n[sql](https://docs.rs/rbatis/latest/rbatis/attr.sql.html \"attr rbatis::sql\")\n    auto create sql macro,this macro use RB.query_prepare and RB.exec_prepare for example:\n",
        "markdown_with_citations": "[](https://docs.rs/rbatis/latest/rbatis/all.html \"show sidebar\")\n# Crate rbatisCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\n## Re-exports\u00a7\u27e84\u27e9\n\n`pub extern crate dark_std[](https://docs.rs/dark-std/0.2.16/x86_64-unknown-linux-gnu/dark_std/index.html \"mod dark_std\");`\n\n\n`pub extern crate rbatis_codegen[](https://docs.rs/rbatis-codegen/4.6.5/x86_64-unknown-linux-gnu/rbatis_codegen/index.html \"mod rbatis_codegen\");`\n\n\n`pub extern crate rbdc[](https://docs.rs/rbdc/4.6.0/x86_64-unknown-linux-gnu/rbdc/index.html \"mod rbdc\");`\n\n\n`pub use decode[](https://docs.rs/rbatis/latest/rbatis/decode/index.html \"mod rbatis::decode\")::*;`\n\n\n`pub use error[](https://docs.rs/rbatis/latest/rbatis/error/index.html \"mod rbatis::error\")::*;`\n\n\n`pub use plugin[](https://docs.rs/rbatis/latest/rbatis/plugin/index.html \"mod rbatis::plugin\")::*;`\n\n\n`pub use rbatis[](https://docs.rs/rbatis/latest/rbatis/rbatis/index.html \"mod rbatis::rbatis\")::*;`\n\n## Modules\u00a7\u27e85\u27e9\n\ncrud\u27e86\u27e9\n\n\ncrud_traits\u27e87\u27e9\n\n\ndecode\u27e88\u27e9\n    Types and traits for decoding values from the database.\n\nerror\u27e89\u27e9\n\n\nexecutor\u27e810\u27e9\n\n\nplugin\u27e811\u27e9\n\n\nrbatis\u27e812\u27e9\n\n\nutils\u27e813\u27e9\n\n## Macros\u00a7\u27e814\u27e9\n\ncrud\u27e815\u27e9\n    PySql: gen select*,update*,insert*,delete* \u2026 methods\n\nfield_key\u27e816\u27e9\n    Used to simulate enumerations to improve code maintainability. this is return &str data for example:\n\nfield_name\u27e817\u27e9\n    Used to simulate enumerations to improve code maintainability. this is return &str data for example:\n\nhtmlsql\u27e818\u27e9\n    use macro wrapper #[html_sql] for example query rbs::Value:\n\nhtmlsql_select_page\u27e819\u27e9\n    impl html_sql select page.\n\nimpl_delete\u27e820\u27e9\n    PySql: gen sql = DELETE FROM table_name WHERE some_column=some_value;\n\nimpl_insert\u27e821\u27e9\n    PySql: gen sql => INSERT INTO table_name (column1,column2,column3,\u2026) VALUES (value1,value2,value3,\u2026);\n\nimpl_select\u27e822\u27e9\n    PySql: gen sql => SELECT (column1,column2,column3,\u2026) FROM table_name (column1,column2,column3,\u2026) *** WHERE ***\n\nimpl_select_page\u27e823\u27e9\n    pysql impl_select_page\n\nimpl_update\u27e824\u27e9\n    PySql: gen sql = UPDATE table_name SET column1=value1,column2=value2,\u2026 WHERE some_column=some_value;\n\nimpled\u27e825\u27e9\n    html_sql/py_sql impled\n\nmake_table\u27e826\u27e9Deprecated\n\n\nmake_table_field_map\u27e827\u27e9Deprecated\n\n\nmake_table_field_map_btree\u27e828\u27e9Deprecated\n\n\nmake_table_field_vec\u27e829\u27e9Deprecated\n\n\npysql\u27e830\u27e9\n    use macro wrapper #[py_sql] for query example:\n\npysql_select_page\u27e831\u27e9\n    impl py_sql select page.\n\nraw_sql\u27e832\u27e9\n    use macro wrapper #[sql] for example:\n\ntable\u27e833\u27e9\n    Simplifies table construction by relying on the Default trait\n\ntable_field_btree\u27e834\u27e9\n    Gets the BtreeMap collection of member attributes of the target Vec for example:\n\ntable_field_map\u27e835\u27e9\n    Gets the HashMap collection of member attributes of the target Vec for example:\n\ntable_field_set\u27e836\u27e9\n    take the target Vec member attribute Vec collection for example:\n\ntable_field_vec\u27e837\u27e9\n    take the target Vec member attribute Vec collection for example:\n## Structs\u00a7\u27e838\u27e9\n\nDefaultPool\u27e839\u27e9\n\n## Attribute Macros\u00a7\u27e840\u27e9\n\nasync_trait\u27e841\u27e9\n\n\nhtml_sql\u27e842\u27e9\n    html sql create macro,this macro use RB.py_query and RB.py_exec for example:\n\npy_sql\u27e843\u27e9\n    py sql create macro,this macro use RB.py_query and RB.py_exec\n\nsnake_name\u27e844\u27e9\n\n\nsql\u27e845\u27e9\n    auto create sql macro,this macro use RB.query_prepare and RB.exec_prepare for example:\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/rbatis/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/rbatis/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/rbatis/latest/src/rbatis/lib.rs.html#1-28: Source\n\u27e84\u27e9 https://docs.rs/rbatis/latest/rbatis/#reexports: \u00a7\n\u27e85\u27e9 https://docs.rs/rbatis/latest/rbatis/#modules: \u00a7\n\u27e86\u27e9 https://docs.rs/rbatis/latest/rbatis/crud/index.html: mod rbatis::crud - crud\n\u27e87\u27e9 https://docs.rs/rbatis/latest/rbatis/crud_traits/index.html: mod rbatis::crud_traits - crud_traits\n\u27e88\u27e9 https://docs.rs/rbatis/latest/rbatis/decode/index.html: mod rbatis::decode - decode\n\u27e89\u27e9 https://docs.rs/rbatis/latest/rbatis/error/index.html: mod rbatis::error - error\n\u27e810\u27e9 https://docs.rs/rbatis/latest/rbatis/executor/index.html: mod rbatis::executor - executor\n\u27e811\u27e9 https://docs.rs/rbatis/latest/rbatis/plugin/index.html: mod rbatis::plugin - plugin\n\u27e812\u27e9 https://docs.rs/rbatis/latest/rbatis/rbatis/index.html: mod rbatis::rbatis - rbatis\n\u27e813\u27e9 https://docs.rs/rbatis/latest/rbatis/utils/index.html: mod rbatis::utils - utils\n\u27e814\u27e9 https://docs.rs/rbatis/latest/rbatis/#macros: \u00a7\n\u27e815\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.crud.html: macro rbatis::crud - crud\n\u27e816\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.field_key.html: macro rbatis::field_key - field_key\n\u27e817\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.field_name.html: macro rbatis::field_name - field_name\n\u27e818\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.htmlsql.html: macro rbatis::htmlsql - htmlsql\n\u27e819\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.htmlsql_select_page.html: macro rbatis::htmlsql_select_page - htmlsql_select_page\n\u27e820\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impl_delete.html: macro rbatis::impl_delete - impl_delete\n\u27e821\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impl_insert.html: macro rbatis::impl_insert - impl_insert\n\u27e822\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impl_select.html: macro rbatis::impl_select - impl_select\n\u27e823\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impl_select_page.html: macro rbatis::impl_select_page - impl_select_page\n\u27e824\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impl_update.html: macro rbatis::impl_update - impl_update\n\u27e825\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.impled.html: macro rbatis::impled - impled\n\u27e826\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.make_table.html: macro rbatis::make_table - make_table\n\u27e827\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_map.html: macro rbatis::make_table_field_map - make_table_field_map\n\u27e828\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_map_btree.html: macro rbatis::make_table_field_map_btree - make_table_field_map_btree\n\u27e829\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.make_table_field_vec.html: macro rbatis::make_table_field_vec - make_table_field_vec\n\u27e830\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.pysql.html: macro rbatis::pysql - pysql\n\u27e831\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.pysql_select_page.html: macro rbatis::pysql_select_page - pysql_select_page\n\u27e832\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.raw_sql.html: macro rbatis::raw_sql - raw_sql\n\u27e833\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.table.html: macro rbatis::table - table\n\u27e834\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.table_field_btree.html: macro rbatis::table_field_btree - table_field_btree\n\u27e835\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.table_field_map.html: macro rbatis::table_field_map - table_field_map\n\u27e836\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.table_field_set.html: macro rbatis::table_field_set - table_field_set\n\u27e837\u27e9 https://docs.rs/rbatis/latest/rbatis/macro.table_field_vec.html: macro rbatis::table_field_vec - table_field_vec\n\u27e838\u27e9 https://docs.rs/rbatis/latest/rbatis/#structs: \u00a7\n\u27e839\u27e9 https://docs.rs/rbatis/latest/rbatis/struct.DefaultPool.html: struct rbatis::DefaultPool - DefaultPool\n\u27e840\u27e9 https://docs.rs/rbatis/latest/rbatis/#attributes: \u00a7\n\u27e841\u27e9 https://docs.rs/rbatis/latest/rbatis/attr.async_trait.html: attr rbatis::async_trait - async_trait\n\u27e842\u27e9 https://docs.rs/rbatis/latest/rbatis/attr.html_sql.html: attr rbatis::html_sql - html_sql\n\u27e843\u27e9 https://docs.rs/rbatis/latest/rbatis/attr.py_sql.html: attr rbatis::py_sql - py_sql\n\u27e844\u27e9 https://docs.rs/rbatis/latest/rbatis/attr.snake_name.html: attr rbatis::snake_name - snake_name\n\u27e845\u27e9 https://docs.rs/rbatis/latest/rbatis/attr.sql.html: attr rbatis::sql - sql\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `rbatis` crate is an asynchronous ORM framework for Rust, designed to simplify database interactions using dynamic SQL. It supports PySQL and HTMLSQL macros for generating CRUD operations, pagination, and custom queries, and includes utilities for decoding database values, error handling, and plugins. Key features include macros for SQL generation, traits for CRUD operations, and tools for improving code maintainability.",
    "feature_summary": null,
    "use_case": "Database",
    "score": 0.0,
    "factual_counterfactual": "### Pair 1: CRUD Operations  \n\u2705 **Factual:** The `rbatis` crate provides macros like `crud` to automatically generate SQL methods for common operations such as `select`, `insert`, `update`, and `delete`.  \n\u274c **Counterfactual:** The `rbatis` crate requires manual implementation of SQL methods for CRUD operations, as it does not provide macros for automation.  \n\n---\n\n### Pair 2: Database Decoding  \n\u2705 **Factual:** The `decode` module in `rbatis` includes types and traits for decoding values from the database, enabling seamless data mapping.  \n\u274c **Counterfactual:** The `rbatis` crate does not support decoding values from the database and requires developers to write custom decoding logic.  \n\n---\n\n### Pair 3: PySQL and HTMLSQL Support  \n\u2705 **Factual:** The `rbatis` crate supports PySQL and HTMLSQL, allowing developers to use macros like `#[py_sql]` and `#[html_sql]` for writing SQL queries in a more structured and maintainable way.  \n\u274c **Counterfactual:** The `rbatis` crate only supports raw SQL queries and does not provide macros for PySQL or HTMLSQL.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}