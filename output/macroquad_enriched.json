{
    "name": "macroquad",
    "version": "0.4.14",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\n[Settings](https://docs.rs/macroquad/latest/settings.html)\n[Help](https://docs.rs/macroquad/latest/help.html)\nSummary[Source](https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922)\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#supported-platforms)Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### [\u00a7](https://docs.rs/macroquad/latest/macroquad/#features)Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android [build instructions](https://github.com/not-fl3/miniquad/#building-examples)\n\n\n## [\u00a7](https://docs.rs/macroquad/latest/macroquad/#example)Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports[\u00a7](https://docs.rs/macroquad/latest/macroquad/#reexports)\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules[\u00a7](https://docs.rs/macroquad/latest/macroquad/#modules)\n\n[audio](https://docs.rs/macroquad/latest/macroquad/audio/index.html \"mod macroquad::audio\")\n    Loading and playing sounds.\n\n[camera](https://docs.rs/macroquad/latest/macroquad/camera/index.html \"mod macroquad::camera\")\n    2D and 3D camera.\n\n[color](https://docs.rs/macroquad/latest/macroquad/color/index.html \"mod macroquad::color\")\n    Color types and helpers.\n\n[conf](https://docs.rs/macroquad/latest/macroquad/conf/index.html \"mod macroquad::conf\")\n\n\n[experimental](https://docs.rs/macroquad/latest/macroquad/experimental/index.html \"mod macroquad::experimental\")\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\n[file](https://docs.rs/macroquad/latest/macroquad/file/index.html \"mod macroquad::file\")\n    Cross platform file management functions.\n\n[input](https://docs.rs/macroquad/latest/macroquad/input/index.html \"mod macroquad::input\")\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\n[material](https://docs.rs/macroquad/latest/macroquad/material/index.html \"mod macroquad::material\")\n    Custom materials - shaders, uniforms.\n\n[math](https://docs.rs/macroquad/latest/macroquad/math/index.html \"mod macroquad::math\")\n    Math types and helpers.\n\n[models](https://docs.rs/macroquad/latest/macroquad/models/index.html \"mod macroquad::models\")\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\n[prelude](https://docs.rs/macroquad/latest/macroquad/prelude/index.html \"mod macroquad::prelude\")\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\n[rand](https://docs.rs/macroquad/latest/macroquad/rand/index.html \"mod macroquad::rand\")\n    Cross platform random generator.\n\n[shapes](https://docs.rs/macroquad/latest/macroquad/shapes/index.html \"mod macroquad::shapes\")\n    2D shapes rendering.\n\n[telemetry](https://docs.rs/macroquad/latest/macroquad/telemetry/index.html \"mod macroquad::telemetry\")\n\n\n[text](https://docs.rs/macroquad/latest/macroquad/text/index.html \"mod macroquad::text\")\n    Functions to load fonts and draw text.\n\n[texture](https://docs.rs/macroquad/latest/macroquad/texture/index.html \"mod macroquad::texture\")\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\n[time](https://docs.rs/macroquad/latest/macroquad/time/index.html \"mod macroquad::time\")\n    Cross platform system time access and FPS counters.\n\n[ui](https://docs.rs/macroquad/latest/macroquad/ui/index.html \"mod macroquad::ui\")\n    Immediate mode UI.\n\n[window](https://docs.rs/macroquad/latest/macroquad/window/index.html \"mod macroquad::window\")\n    Window and associated to window rendering context related functions.\n## Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#macros)\n\n[color_u8](https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html \"macro macroquad::color_u8\")\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for [this issue](https://github.com/rust-lang/rust/issues/57241) to be resolved.\n## Structs[\u00a7](https://docs.rs/macroquad/latest/macroquad/#structs)\n\n[DroppedFile](https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html \"struct macroquad::DroppedFile\")\n    Information about a dropped file.\n## Enums[\u00a7](https://docs.rs/macroquad/latest/macroquad/#enums)\n\n[Error](https://docs.rs/macroquad/latest/macroquad/enum.Error.html \"enum macroquad::Error\")\n\n## Attribute Macros[\u00a7](https://docs.rs/macroquad/latest/macroquad/#attributes)\n\n[main](https://docs.rs/macroquad/latest/macroquad/attr.main.html \"attr macroquad::main\")\n    Macroquad entry point.\n",
        "markdown_with_citations": "[](https://docs.rs/macroquad/latest/macroquad/all.html \"show sidebar\")\n# Crate macroquadCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\n`macroquad` is a simple and easy to use game library for Rust programming language.\n`macroquad` attempts to avoid any rust-specific programming concepts like lifetimes/borrowing, making it very friendly for rust beginners.\n### \u00a7\u27e84\u27e9Supported platforms\n  * PC: Windows/Linux/MacOS\n  * HTML5\n  * Android\n  * IOS\n\n\n### \u00a7\u27e85\u27e9Features\n  * Same code for all supported platforms, no platform dependent defines required\n  * Efficient 2D rendering with automatic geometry batching\n  * Minimal amount of dependencies: build after `cargo clean` takes only 16s on x230(~6years old laptop)\n  * Immediate mode UI library included\n  * Single command deploy for both WASM and Android build instructions\u27e86\u27e9\n\n\n## \u00a7\u27e87\u27e9Example\n```\nuse macroquad::prelude::*;\n#[macroquad::main(\"BasicShapes\")]\nasync fn main() {\n  loop {\n    clear_background(RED);\n    draw_line(40.0, 40.0, 100.0, 200.0, 15.0, BLUE);\n    draw_rectangle(screen_width() / 2.0 - 60.0, 100.0, 120.0, 60.0, GREEN);\n    draw_circle(screen_width() - 30.0, screen_height() - 30.0, 15.0, YELLOW);\n    draw_text(\"HELLO\", 20.0, 20.0, 20.0, DARKGRAY);\n    next_frame().await\n  }\n}\n```\n\n## Re-exports\u00a7\u27e88\u27e9\n\n`pub use ::log[](https://docs.rs/log/0.4.26/x86_64-unknown-linux-gnu/log/index.html \"mod log\") as logging;`\n\n\n`pub use miniquad[](https://docs.rs/miniquad/0.4.8/x86_64-unknown-linux-gnu/miniquad/index.html \"mod miniquad\");`\n\n## Modules\u00a7\u27e89\u27e9\n\naudio\u27e810\u27e9\n    Loading and playing sounds.\n\ncamera\u27e811\u27e9\n    2D and 3D camera.\n\ncolor\u27e812\u27e9\n    Color types and helpers.\n\nconf\u27e813\u27e9\n\n\nexperimental\u27e814\u27e9\n    The most unstable things in macroquad Some of them will eventually move to other modules, some will move into separate crates and some may just disappear.\n\nfile\u27e815\u27e9\n    Cross platform file management functions.\n\ninput\u27e816\u27e9\n    Cross-platform mouse, keyboard (and gamepads soon) module.\n\nmaterial\u27e817\u27e9\n    Custom materials - shaders, uniforms.\n\nmath\u27e818\u27e9\n    Math types and helpers.\n\nmodels\u27e819\u27e9\n    3D shapes and models, loading 3d models from files, drawing 3D primitives.\n\nprelude\u27e820\u27e9\n    Most common types that can be glob-imported `use macroquad::prelude::*` for convenience.\n\nrand\u27e821\u27e9\n    Cross platform random generator.\n\nshapes\u27e822\u27e9\n    2D shapes rendering.\n\ntelemetry\u27e823\u27e9\n\n\ntext\u27e824\u27e9\n    Functions to load fonts and draw text.\n\ntexture\u27e825\u27e9\n    Loading and rendering textures. Also render textures, per-pixel image manipulations.\n\ntime\u27e826\u27e9\n    Cross platform system time access and FPS counters.\n\nui\u27e827\u27e9\n    Immediate mode UI.\n\nwindow\u27e828\u27e9\n    Window and associated to window rendering context related functions.\n## Macros\u00a7\u27e829\u27e9\n\ncolor_u8\u27e830\u27e9\n    Build a color from 4 components of 0..255 values This is a temporary solution and going to be replaced with const fn, waiting for this issue\u27e831\u27e9 to be resolved.\n## Structs\u00a7\u27e832\u27e9\n\nDroppedFile\u27e833\u27e9\n    Information about a dropped file.\n## Enums\u00a7\u27e834\u27e9\n\nError\u27e835\u27e9\n\n## Attribute Macros\u00a7\u27e836\u27e9\n\nmain\u27e837\u27e9\n    Macroquad entry point.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/macroquad/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/macroquad/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/macroquad/latest/src/macroquad/lib.rs.html#1-922: Source\n\u27e84\u27e9 https://docs.rs/macroquad/latest/macroquad/#supported-platforms: \u00a7\n\u27e85\u27e9 https://docs.rs/macroquad/latest/macroquad/#features: \u00a7\n\u27e86\u27e9 https://github.com/not-fl3/miniquad/#building-examples: build instructions\n\u27e87\u27e9 https://docs.rs/macroquad/latest/macroquad/#example: \u00a7\n\u27e88\u27e9 https://docs.rs/macroquad/latest/macroquad/#reexports: \u00a7\n\u27e89\u27e9 https://docs.rs/macroquad/latest/macroquad/#modules: \u00a7\n\u27e810\u27e9 https://docs.rs/macroquad/latest/macroquad/audio/index.html: mod macroquad::audio - audio\n\u27e811\u27e9 https://docs.rs/macroquad/latest/macroquad/camera/index.html: mod macroquad::camera - camera\n\u27e812\u27e9 https://docs.rs/macroquad/latest/macroquad/color/index.html: mod macroquad::color - color\n\u27e813\u27e9 https://docs.rs/macroquad/latest/macroquad/conf/index.html: mod macroquad::conf - conf\n\u27e814\u27e9 https://docs.rs/macroquad/latest/macroquad/experimental/index.html: mod macroquad::experimental - experimental\n\u27e815\u27e9 https://docs.rs/macroquad/latest/macroquad/file/index.html: mod macroquad::file - file\n\u27e816\u27e9 https://docs.rs/macroquad/latest/macroquad/input/index.html: mod macroquad::input - input\n\u27e817\u27e9 https://docs.rs/macroquad/latest/macroquad/material/index.html: mod macroquad::material - material\n\u27e818\u27e9 https://docs.rs/macroquad/latest/macroquad/math/index.html: mod macroquad::math - math\n\u27e819\u27e9 https://docs.rs/macroquad/latest/macroquad/models/index.html: mod macroquad::models - models\n\u27e820\u27e9 https://docs.rs/macroquad/latest/macroquad/prelude/index.html: mod macroquad::prelude - prelude\n\u27e821\u27e9 https://docs.rs/macroquad/latest/macroquad/rand/index.html: mod macroquad::rand - rand\n\u27e822\u27e9 https://docs.rs/macroquad/latest/macroquad/shapes/index.html: mod macroquad::shapes - shapes\n\u27e823\u27e9 https://docs.rs/macroquad/latest/macroquad/telemetry/index.html: mod macroquad::telemetry - telemetry\n\u27e824\u27e9 https://docs.rs/macroquad/latest/macroquad/text/index.html: mod macroquad::text - text\n\u27e825\u27e9 https://docs.rs/macroquad/latest/macroquad/texture/index.html: mod macroquad::texture - texture\n\u27e826\u27e9 https://docs.rs/macroquad/latest/macroquad/time/index.html: mod macroquad::time - time\n\u27e827\u27e9 https://docs.rs/macroquad/latest/macroquad/ui/index.html: mod macroquad::ui - ui\n\u27e828\u27e9 https://docs.rs/macroquad/latest/macroquad/window/index.html: mod macroquad::window - window\n\u27e829\u27e9 https://docs.rs/macroquad/latest/macroquad/#macros: \u00a7\n\u27e830\u27e9 https://docs.rs/macroquad/latest/macroquad/macro.color_u8.html: macro macroquad::color_u8 - color_u8\n\u27e831\u27e9 https://github.com/rust-lang/rust/issues/57241: this issue\n\u27e832\u27e9 https://docs.rs/macroquad/latest/macroquad/#structs: \u00a7\n\u27e833\u27e9 https://docs.rs/macroquad/latest/macroquad/struct.DroppedFile.html: struct macroquad::DroppedFile - DroppedFile\n\u27e834\u27e9 https://docs.rs/macroquad/latest/macroquad/#enums: \u00a7\n\u27e835\u27e9 https://docs.rs/macroquad/latest/macroquad/enum.Error.html: enum macroquad::Error - Error\n\u27e836\u27e9 https://docs.rs/macroquad/latest/macroquad/#attributes: \u00a7\n\u27e837\u27e9 https://docs.rs/macroquad/latest/macroquad/attr.main.html: attr macroquad::main - main\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `macroquad` crate is a beginner-friendly, cross-platform game development library for Rust, supporting Windows, Linux, macOS, HTML5, Android, and iOS. It features efficient 2D rendering with automatic batching, an immediate mode UI, minimal dependencies for fast builds, and single-command deployment for WASM and Android. Additional capabilities include 3D model handling, input management, audio playback, and texture manipulation.",
    "feature_summary": null,
    "use_case": "Unknown",
    "score": 8.5,
    "factual_counterfactual": "### Pair 1: Supported Platforms  \n\u2705 **Factual:** `macroquad` supports multiple platforms, including PC (Windows, Linux, MacOS), HTML5, Android, and iOS, allowing developers to write cross-platform games with the same codebase.  \n\u274c **Counterfactual:** `macroquad` only supports desktop platforms like Windows, Linux, and MacOS, and does not provide compatibility for mobile or web platforms.\n\n---\n\n### Pair 2: Performance and Dependencies  \n\u2705 **Factual:** `macroquad` has minimal dependencies, enabling fast build times, such as 16 seconds on an older laptop (x230, ~6 years old) after a `cargo clean`.  \n\u274c **Counterfactual:** `macroquad` relies on a large number of dependencies, resulting in slow build times that can exceed several minutes even on modern hardware.\n\n---\n\n### Pair 3: Immediate Mode UI  \n\u2705 **Factual:** `macroquad` includes an immediate mode UI library, making it easy for developers to create user interfaces directly within the game loop without complex state management.  \n\u274c **Counterfactual:** `macroquad` does not provide any built-in UI library, requiring developers to integrate third-party solutions for user interface functionality.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}