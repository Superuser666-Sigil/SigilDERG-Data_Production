{
    "name": "lmdb",
    "version": "0.8.0",
    "description": "ALLOW: Positive community sentiment",
    "repository": "",
    "keywords": [],
    "categories": [],
    "readme": {
        "raw_markdown": "[](https://docs.rs/lmdb/latest/lmdb/all.html \"show sidebar\")\n# Crate lmdbCopy item path\n[Settings](https://docs.rs/lmdb/latest/settings.html)\n[Help](https://docs.rs/lmdb/latest/help.html)\nSummary[Source](https://docs.rs/lmdb/latest/src/lmdb/lib.rs.html#1-123)\nExpand description\nIdiomatic and safe APIs for interacting with the [Lightning Memory-mapped Database (LMDB)](https://symas.com/lmdb).\n## Structs[\u00a7](https://docs.rs/lmdb/latest/lmdb/#structs)\n\n[Database](https://docs.rs/lmdb/latest/lmdb/struct.Database.html \"struct lmdb::Database\")\n    A handle to an individual database in an environment.\n\n[DatabaseFlags](https://docs.rs/lmdb/latest/lmdb/struct.DatabaseFlags.html \"struct lmdb::DatabaseFlags\")\n    Database options.\n\n[Environment](https://docs.rs/lmdb/latest/lmdb/struct.Environment.html \"struct lmdb::Environment\")\n    An LMDB environment.\n\n[EnvironmentBuilder](https://docs.rs/lmdb/latest/lmdb/struct.EnvironmentBuilder.html \"struct lmdb::EnvironmentBuilder\")\n    Options for opening or creating an environment.\n\n[EnvironmentFlags](https://docs.rs/lmdb/latest/lmdb/struct.EnvironmentFlags.html \"struct lmdb::EnvironmentFlags\")\n    Environment options.\n\n[InactiveTransaction](https://docs.rs/lmdb/latest/lmdb/struct.InactiveTransaction.html \"struct lmdb::InactiveTransaction\")\n    An inactive read-only transaction.\n\n[Iter](https://docs.rs/lmdb/latest/lmdb/struct.Iter.html \"struct lmdb::Iter\")\n    An iterator over the values in an LMDB database.\n\n[IterDup](https://docs.rs/lmdb/latest/lmdb/struct.IterDup.html \"struct lmdb::IterDup\")\n    An iterator over the keys and duplicate values in an LMDB database.\n\n[RoCursor](https://docs.rs/lmdb/latest/lmdb/struct.RoCursor.html \"struct lmdb::RoCursor\")\n    A read-only cursor for navigating the items within a database.\n\n[RoTransaction](https://docs.rs/lmdb/latest/lmdb/struct.RoTransaction.html \"struct lmdb::RoTransaction\")\n    An LMDB read-only transaction.\n\n[RwCursor](https://docs.rs/lmdb/latest/lmdb/struct.RwCursor.html \"struct lmdb::RwCursor\")\n    A read-write cursor for navigating items within a database.\n\n[RwTransaction](https://docs.rs/lmdb/latest/lmdb/struct.RwTransaction.html \"struct lmdb::RwTransaction\")\n    An LMDB read-write transaction.\n\n[Stat](https://docs.rs/lmdb/latest/lmdb/struct.Stat.html \"struct lmdb::Stat\")\n    Environment statistics.\n\n[WriteFlags](https://docs.rs/lmdb/latest/lmdb/struct.WriteFlags.html \"struct lmdb::WriteFlags\")\n    Write options.\n## Enums[\u00a7](https://docs.rs/lmdb/latest/lmdb/#enums)\n\n[Error](https://docs.rs/lmdb/latest/lmdb/enum.Error.html \"enum lmdb::Error\")\n    An LMDB error kind.\n## Traits[\u00a7](https://docs.rs/lmdb/latest/lmdb/#traits)\n\n[Cursor](https://docs.rs/lmdb/latest/lmdb/trait.Cursor.html \"trait lmdb::Cursor\")\n    An LMDB cursor.\n\n[Transaction](https://docs.rs/lmdb/latest/lmdb/trait.Transaction.html \"trait lmdb::Transaction\")\n    An LMDB transaction.\n## Type Aliases[\u00a7](https://docs.rs/lmdb/latest/lmdb/#types)\n\n[Result](https://docs.rs/lmdb/latest/lmdb/type.Result.html \"type lmdb::Result\")\n    An LMDB result.\n",
        "markdown_with_citations": "[](https://docs.rs/lmdb/latest/lmdb/all.html \"show sidebar\")\n# Crate lmdbCopy item path\nSettings\u27e81\u27e9\nHelp\u27e82\u27e9\nSummarySource\u27e83\u27e9\nExpand description\nIdiomatic and safe APIs for interacting with the Lightning Memory-mapped Database (LMDB)\u27e84\u27e9.\n## Structs\u00a7\u27e85\u27e9\n\nDatabase\u27e86\u27e9\n    A handle to an individual database in an environment.\n\nDatabaseFlags\u27e87\u27e9\n    Database options.\n\nEnvironment\u27e88\u27e9\n    An LMDB environment.\n\nEnvironmentBuilder\u27e89\u27e9\n    Options for opening or creating an environment.\n\nEnvironmentFlags\u27e810\u27e9\n    Environment options.\n\nInactiveTransaction\u27e811\u27e9\n    An inactive read-only transaction.\n\nIter\u27e812\u27e9\n    An iterator over the values in an LMDB database.\n\nIterDup\u27e813\u27e9\n    An iterator over the keys and duplicate values in an LMDB database.\n\nRoCursor\u27e814\u27e9\n    A read-only cursor for navigating the items within a database.\n\nRoTransaction\u27e815\u27e9\n    An LMDB read-only transaction.\n\nRwCursor\u27e816\u27e9\n    A read-write cursor for navigating items within a database.\n\nRwTransaction\u27e817\u27e9\n    An LMDB read-write transaction.\n\nStat\u27e818\u27e9\n    Environment statistics.\n\nWriteFlags\u27e819\u27e9\n    Write options.\n## Enums\u00a7\u27e820\u27e9\n\nError\u27e821\u27e9\n    An LMDB error kind.\n## Traits\u00a7\u27e822\u27e9\n\nCursor\u27e823\u27e9\n    An LMDB cursor.\n\nTransaction\u27e824\u27e9\n    An LMDB transaction.\n## Type Aliases\u00a7\u27e825\u27e9\n\nResult\u27e826\u27e9\n    An LMDB result.\n",
        "references_markdown": "\n\n## References\n\n\u27e81\u27e9 https://docs.rs/lmdb/latest/settings.html: Settings\n\u27e82\u27e9 https://docs.rs/lmdb/latest/help.html: Help\n\u27e83\u27e9 https://docs.rs/lmdb/latest/src/lmdb/lib.rs.html#1-123: Source\n\u27e84\u27e9 https://symas.com/lmdb: Lightning Memory-mapped Database (LMDB)\n\u27e85\u27e9 https://docs.rs/lmdb/latest/lmdb/#structs: \u00a7\n\u27e86\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.Database.html: struct lmdb::Database - Database\n\u27e87\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.DatabaseFlags.html: struct lmdb::DatabaseFlags - DatabaseFlags\n\u27e88\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.Environment.html: struct lmdb::Environment - Environment\n\u27e89\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.EnvironmentBuilder.html: struct lmdb::EnvironmentBuilder - EnvironmentBuilder\n\u27e810\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.EnvironmentFlags.html: struct lmdb::EnvironmentFlags - EnvironmentFlags\n\u27e811\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.InactiveTransaction.html: struct lmdb::InactiveTransaction - InactiveTransaction\n\u27e812\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.Iter.html: struct lmdb::Iter - Iter\n\u27e813\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.IterDup.html: struct lmdb::IterDup - IterDup\n\u27e814\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.RoCursor.html: struct lmdb::RoCursor - RoCursor\n\u27e815\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.RoTransaction.html: struct lmdb::RoTransaction - RoTransaction\n\u27e816\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.RwCursor.html: struct lmdb::RwCursor - RwCursor\n\u27e817\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.RwTransaction.html: struct lmdb::RwTransaction - RwTransaction\n\u27e818\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.Stat.html: struct lmdb::Stat - Stat\n\u27e819\u27e9 https://docs.rs/lmdb/latest/lmdb/struct.WriteFlags.html: struct lmdb::WriteFlags - WriteFlags\n\u27e820\u27e9 https://docs.rs/lmdb/latest/lmdb/#enums: \u00a7\n\u27e821\u27e9 https://docs.rs/lmdb/latest/lmdb/enum.Error.html: enum lmdb::Error - Error\n\u27e822\u27e9 https://docs.rs/lmdb/latest/lmdb/#traits: \u00a7\n\u27e823\u27e9 https://docs.rs/lmdb/latest/lmdb/trait.Cursor.html: trait lmdb::Cursor - Cursor\n\u27e824\u27e9 https://docs.rs/lmdb/latest/lmdb/trait.Transaction.html: trait lmdb::Transaction - Transaction\n\u27e825\u27e9 https://docs.rs/lmdb/latest/lmdb/#types: \u00a7\n\u27e826\u27e9 https://docs.rs/lmdb/latest/lmdb/type.Result.html: type lmdb::Result - Result\n",
        "fit_markdown": "",
        "fit_html": ""
    },
    "downloads": 0,
    "github_stars": 0,
    "dependencies": [],
    "features": {},
    "code_snippets": [],
    "readme_sections": {},
    "librs_downloads": null,
    "source": "crates.io",
    "enhanced_scraping": {},
    "enhanced_features": [],
    "enhanced_dependencies": [],
    "readme_summary": "The `lmdb` crate provides idiomatic and safe Rust APIs for interacting with the Lightning Memory-mapped Database (LMDB). It includes robust abstractions for managing environments, databases, transactions (read-only and read-write), cursors, and iterators, enabling efficient key-value storage and retrieval. Additionally, it offers configurable options for environments, databases, and write operations, along with error handling and statistics utilities.",
    "feature_summary": null,
    "use_case": "Database",
    "score": 6.0,
    "factual_counterfactual": "### Pair 1: Environment and Database Management\n\u2705 **Factual:** The `lmdb` crate provides an `EnvironmentBuilder` struct, which allows users to configure and create LMDB environments with options such as maximum database size and number of databases.  \n\u274c **Counterfactual:** The `lmdb` crate requires users to manually allocate memory for LMDB environments, as it does not provide any builder or configuration utilities.  \n\n---\n\n### Pair 2: Transaction Handling\n\u2705 **Factual:** The `lmdb` crate supports both read-only (`RoTransaction`) and read-write (`RwTransaction`) transactions, enabling safe and idiomatic access to LMDB databases.  \n\u274c **Counterfactual:** The `lmdb` crate only supports read-write transactions and does not provide support for read-only transactions.  \n\n---\n\n### Pair 3: Iteration Over Database Contents\n\u2705 **Factual:** The `lmdb` crate includes `Iter` and `IterDup` structs for iterating over key-value pairs and duplicate values in an LMDB database, respectively.  \n\u274c **Counterfactual:** The `lmdb` crate does not provide any iterator structs, requiring users to implement custom iteration logic for traversing database contents.",
    "source_analysis": null,
    "user_behavior": null,
    "security": null
}